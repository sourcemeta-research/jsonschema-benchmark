{"tasks": {"setup": "deno run --allow-read --allow-write ./setup.ts", "test": "deno test -A ../../cli/tests/node_compat/test.ts --"}}
{"compilerOptions": {"module": "esnext", "target": "es2017", "strict": true, "skipLibCheck": true}, "exclude": ["npm"]}
{"$schema": "https://raw.githubusercontent.com/denoland/deno/main/cli/schemas/config-file.v1.json", "tasks": {"lint": "deno lint", "deploy": "deno run --allow-read --allow-env --allow-net src/util/deploy.ts", "format": "deno fmt", "fmt": "deno fmt", "start": "deno run --allow-read --allow-env --allow-net src/index.ts"}, "lint": {"include": ["src/"], "rules": {"tags": ["recommended"], "exclude": ["require-await", "no-await-in-sync-fn"]}}, "fmt": {"useTabs": true, "lineWidth": 120, "semiColons": true, "singleQuote": true, "proseWrap": "preserve", "include": ["src/"]}, "compilerOptions": {"alwaysStrict": true, "emitDecoratorMetadata": true, "verbatimModuleSyntax": true, "lib": ["deno.window"], "noFallthroughCasesInSwitch": true, "noImplicitReturns": true, "noUnusedLocals": true, "noUnusedParameters": true, "removeComments": false, "strict": true, "allowUnreachableCode": false, "allowUnusedLabels": false, "exactOptionalPropertyTypes": false, "noImplicitOverride": true}}
{"id": "deno", "defaultPath": "deno", "commandArgs": ["run", "--allow-all"], "name": "Deno", "preamble": " function DM_getPanelFile(i) { return '$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[i]; }\nfunction DM_getPanel(i) { return JSON.parse(Deno.readTextFileSync('$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[i])); }\nfunction DM_setPanel(v) { Deno.writeTextFileSync('$$PANEL_RESULTS_FILE$$', JSON.stringify(v)); }"}
{"name": "${PACKAGE_NAME}", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"fmt": {"lineWidth": 100}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "jsxFactory": "h", "jsxFragmentFactory": "Fragment"}}
{"lint": {"include": ["src/"], "exclude": ["src/resources/create/extensions/revealjs-plugin/_extensions/qstart-filesafename-qend/qstart-filesafename-qend.js", "src/resources/editor/", "src/core/lib/external/", "src/vendor/", "src/resources/vendor/", "src/resources/formats/pdf/pdfjs/", "src/resources/deno_std/", "package/pkg-working/share/extensions/quarto/video/resources/videojs/video.min.js", "package/pkg-working/share/formats/html/anchor/anchor.min.js", "package/pkg-working/share/formats/html/bootstrap/dist/bootstrap.min.js", "package/pkg-working/share/formats/html/clipboard/clipboard.min.js", "package/pkg-working/share/formats/html/fuse/fuse.min.js", "package/pkg-working/share/formats/html/mermaid/mermaid.min.js", "package/pkg-working/share/formats/html/ojs/quarto-ojs-runtime.min.js", "package/pkg-working/share/formats/html/popper/popper.min.js", "package/pkg-working/share/formats/html/tippy/tippy.umd.min.js", "package/pkg-working/share/projects/website/listing/list.min.js", "package/pkg-working/share/projects/website/navigation/headroom.min.js", "package/pkg-working/share/projects/website/search/autocomplete.min.js", "package/pkg-working/share/projects/website/search/fuse.min.js", "src/resources/extensions/quarto/video/resources/videojs/video.min.js", "src/resources/formats/html/anchor/anchor.min.js", "src/resources/formats/html/bootstrap/dist/bootstrap.min.js", "src/resources/formats/html/clipboard/clipboard.min.js", "src/resources/formats/html/fuse/fuse.min.js", "src/resources/formats/html/mermaid/mermaid.min.js", "src/resources/formats/html/ojs/quarto-ojs-runtime.min.js", "src/resources/formats/html/popper/popper.min.js", "src/resources/formats/html/tippy/tippy.umd.min.js", "src/resources/projects/website/listing/list.min.js", "src/resources/projects/website/navigation/headroom.min.js", "src/resources/projects/website/search/autocomplete.min.js", "src/resources/projects/website/search/fuse.min.js", "src/vendor/cdn.skypack.dev/dayjs@1.8.21/dayjs.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-api.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-api.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-gl.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-gl.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-mathjax.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-mathjax.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-tables.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-tables.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-widgets.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-widgets.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/auth/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/bootstrap-tour/build/js/bootstrap-tour.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/bootstrap/dist/js/bootstrap.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/es6-promise/promise.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/jquery-typeahead/dist/jquery.typeahead.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/jquery-ui/dist/jquery-ui.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/jquery/jquery.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/moment/min/locales.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/moment/min/moment-with-locales.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/moment/min/moment.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/react/react-dom.production.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/react/react.production.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/edit/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/notebook/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/terminal/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/tree/js/main.min.js", "tests/docs/extensions/basic/_extensions/quarto-ext/lightbox/resources/js/glightbox.min.js", "tests/docs/extensions/project/_extensions/quarto-ext/lightbox/resources/js/glightbox.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/bootstrap/bootstrap.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/clipboard/clipboard.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-html/anchor.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-html/popper.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-html/tippy.umd.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-nav/headroom.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-search/fuse.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/bootstrap/bootstrap.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/clipboard/clipboard.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-html/anchor.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-html/popper.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-html/tippy.umd.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-nav/headroom.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-search/fuse.min.js", "tests/docs/websites/issue-3686/_extensions/quarto-ext/lightbox/resources/js/glightbox.min.js", "package/pkg-working/share/projects/website/search/autocomplete-preset-algolia.umd.js", "package/pkg-working/share/projects/website/search/autocomplete.umd.js", "src/resources/projects/website/search/autocomplete-preset-algolia.umd.js", "src/resources/projects/website/search/autocomplete.umd.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/marked/lib/marked.umd.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-search/autocomplete.umd.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-search/autocomplete.umd.js", "package/pkg-working/share/formats/revealjs/reveal/dist/reveal.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/highlight/highlight.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/markdown/markdown.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/math/math.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/notes/notes.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/search/search.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/zoom/zoom.esm.js", "src/resources/formats/revealjs/reveal/dist/reveal.esm.js", "src/resources/formats/revealjs/reveal/plugin/highlight/highlight.esm.js", "src/resources/formats/revealjs/reveal/plugin/markdown/markdown.esm.js", "src/resources/formats/revealjs/reveal/plugin/math/math.esm.js", "src/resources/formats/revealjs/reveal/plugin/notes/notes.esm.js", "src/resources/formats/revealjs/reveal/plugin/search/search.esm.js", "src/resources/formats/revealjs/reveal/plugin/zoom/zoom.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-api.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-gl.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-mathjax.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-tables.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-widgets.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh.esm.js", "src/resources/library/dayjs/locale/af.js", "src/resources/library/dayjs/locale/am.js", "src/resources/library/dayjs/locale/ar-dz.js", "src/resources/library/dayjs/locale/ar-iq.js", "src/resources/library/dayjs/locale/ar-kw.js", "src/resources/library/dayjs/locale/ar-ly.js", "src/resources/library/dayjs/locale/ar-ma.js", "src/resources/library/dayjs/locale/ar-sa.js", "src/resources/library/dayjs/locale/ar-tn.js", "src/resources/library/dayjs/locale/ar.js", "src/resources/library/dayjs/locale/az.js", "src/resources/library/dayjs/locale/be.js", "src/resources/library/dayjs/locale/bg.js", "src/resources/library/dayjs/locale/bi.js", "src/resources/library/dayjs/locale/bm.js", "src/resources/library/dayjs/locale/bn-bd.js", "src/resources/library/dayjs/locale/bn.js", "src/resources/library/dayjs/locale/bo.js", "src/resources/library/dayjs/locale/br.js", "src/resources/library/dayjs/locale/bs.js", "src/resources/library/dayjs/locale/ca.js", "src/resources/library/dayjs/locale/cs.js", "src/resources/library/dayjs/locale/cv.js", "src/resources/library/dayjs/locale/cy.js", "src/resources/library/dayjs/locale/da.js", "src/resources/library/dayjs/locale/de-at.js", "src/resources/library/dayjs/locale/de-ch.js", "src/resources/library/dayjs/locale/de.js", "src/resources/library/dayjs/locale/dv.js", "src/resources/library/dayjs/locale/el.js", "src/resources/library/dayjs/locale/en-au.js", "src/resources/library/dayjs/locale/en-ca.js", "src/resources/library/dayjs/locale/en-gb.js", "src/resources/library/dayjs/locale/en-ie.js", "src/resources/library/dayjs/locale/en-il.js", "src/resources/library/dayjs/locale/en-in.js", "src/resources/library/dayjs/locale/en-nz.js", "src/resources/library/dayjs/locale/en-sg.js", "src/resources/library/dayjs/locale/en-tt.js", "src/resources/library/dayjs/locale/en.js", "src/resources/library/dayjs/locale/eo.js", "src/resources/library/dayjs/locale/es-do.js", "src/resources/library/dayjs/locale/es-mx.js", "src/resources/library/dayjs/locale/es-pr.js", "src/resources/library/dayjs/locale/es-us.js", "src/resources/library/dayjs/locale/es.js", "src/resources/library/dayjs/locale/et.js", "src/resources/library/dayjs/locale/eu.js", "src/resources/library/dayjs/locale/fa.js", "src/resources/library/dayjs/locale/fi.js", "src/resources/library/dayjs/locale/fo.js", "src/resources/library/dayjs/locale/fr-ca.js", "src/resources/library/dayjs/locale/fr-ch.js", "src/resources/library/dayjs/locale/fr.js", "src/resources/library/dayjs/locale/fy.js", "src/resources/library/dayjs/locale/ga.js", "src/resources/library/dayjs/locale/gd.js", "src/resources/library/dayjs/locale/gl.js", "src/resources/library/dayjs/locale/gom-latn.js", "src/resources/library/dayjs/locale/gu.js", "src/resources/library/dayjs/locale/he.js", "src/resources/library/dayjs/locale/hi.js", "src/resources/library/dayjs/locale/hr.js", "src/resources/library/dayjs/locale/ht.js", "src/resources/library/dayjs/locale/hu.js", "src/resources/library/dayjs/locale/hy-am.js", "src/resources/library/dayjs/locale/id.js", "src/resources/library/dayjs/locale/is.js", "src/resources/library/dayjs/locale/it-ch.js", "src/resources/library/dayjs/locale/it.js", "src/resources/library/dayjs/locale/ja.js", "src/resources/library/dayjs/locale/jv.js", "src/resources/library/dayjs/locale/ka.js", "src/resources/library/dayjs/locale/kk.js", "src/resources/library/dayjs/locale/km.js", "src/resources/library/dayjs/locale/kn.js", "src/resources/library/dayjs/locale/ko.js", "src/resources/library/dayjs/locale/ku.js", "src/resources/library/dayjs/locale/ky.js", "src/resources/library/dayjs/locale/lb.js", "src/resources/library/dayjs/locale/lo.js", "src/resources/library/dayjs/locale/lt.js", "src/resources/library/dayjs/locale/lv.js", "src/resources/library/dayjs/locale/me.js", "src/resources/library/dayjs/locale/mi.js", "src/resources/library/dayjs/locale/mk.js", "src/resources/library/dayjs/locale/ml.js", "src/resources/library/dayjs/locale/mn.js", "src/resources/library/dayjs/locale/mr.js", "src/resources/library/dayjs/locale/ms-my.js", "src/resources/library/dayjs/locale/ms.js", "src/resources/library/dayjs/locale/mt.js", "src/resources/library/dayjs/locale/my.js", "src/resources/library/dayjs/locale/nb.js", "src/resources/library/dayjs/locale/ne.js", "src/resources/library/dayjs/locale/nl-be.js", "src/resources/library/dayjs/locale/nl.js", "src/resources/library/dayjs/locale/nn.js", "src/resources/library/dayjs/locale/oc-lnc.js", "src/resources/library/dayjs/locale/pa-in.js", "src/resources/library/dayjs/locale/pl.js", "src/resources/library/dayjs/locale/pt-br.js", "src/resources/library/dayjs/locale/pt.js", "src/resources/library/dayjs/locale/rn.js", "src/resources/library/dayjs/locale/ro.js", "src/resources/library/dayjs/locale/ru.js", "src/resources/library/dayjs/locale/rw.js", "src/resources/library/dayjs/locale/sd.js", "src/resources/library/dayjs/locale/se.js", "src/resources/library/dayjs/locale/si.js", "src/resources/library/dayjs/locale/sk.js", "src/resources/library/dayjs/locale/sl.js", "src/resources/library/dayjs/locale/sq.js", "src/resources/library/dayjs/locale/sr-cyrl.js", "src/resources/library/dayjs/locale/sr.js", "src/resources/library/dayjs/locale/ss.js", "src/resources/library/dayjs/locale/sv-fi.js", "src/resources/library/dayjs/locale/sv.js", "src/resources/library/dayjs/locale/sw.js", "src/resources/library/dayjs/locale/ta.js", "src/resources/library/dayjs/locale/te.js", "src/resources/library/dayjs/locale/tet.js", "src/resources/library/dayjs/locale/tg.js", "src/resources/library/dayjs/locale/th.js", "src/resources/library/dayjs/locale/tk.js", "src/resources/library/dayjs/locale/tl-ph.js", "src/resources/library/dayjs/locale/tlh.js", "src/resources/library/dayjs/locale/tr.js", "src/resources/library/dayjs/locale/tzl.js", "src/resources/library/dayjs/locale/tzm-latn.js", "src/resources/library/dayjs/locale/tzm.js", "src/resources/library/dayjs/locale/ug-cn.js", "src/resources/library/dayjs/locale/uk.js", "src/resources/library/dayjs/locale/ur.js", "src/resources/library/dayjs/locale/uz-latn.js", "src/resources/library/dayjs/locale/uz.js", "src/resources/library/dayjs/locale/vi.js", "src/resources/library/dayjs/locale/x-pseudo.js", "src/resources/library/dayjs/locale/yo.js", "src/resources/library/dayjs/locale/zh-cn.js", "src/resources/library/dayjs/locale/zh-hk.js", "src/resources/library/dayjs/locale/zh-tw.js", "src/resources/library/dayjs/locale/zh.js", "src/resources/library/dayjs/plugins/advanced.js", "src/resources/library/dayjs/plugins/constant.js", "src/resources/library/dayjs/plugins/isoweek.js", "src/resources/library/dayjs/plugins/timezone.js", "src/resources/library/dayjs/plugins/utc.js", "src/resources/library/dayjs/plugins/weekofyear.js", "src/resources/library/dayjs/plugins/weekyear.js", "src/resources/formats/html/anchor/anchor.min.js", "src/resources/formats/html/bootstrap/dist/bootstrap.min.js", "src/resources/formats/html/clipboard/clipboard.min.js", "src/resources/formats/html/fuse/fuse.min.js", "src/resources/formats/html/mermaid/mermaid-init.js", "src/resources/formats/html/mermaid/mermaid-postprocess-shim.js", "src/resources/formats/html/mermaid/mermaid.js", "src/resources/formats/html/mermaid/mermaid.min.js", "src/resources/formats/html/ojs/quarto-ojs-runtime.js", "src/resources/formats/html/ojs/quarto-ojs-runtime.min.js", "src/resources/formats/html/popper/popper.min.js", "src/resources/formats/html/quarto.js", "src/resources/formats/html/tabby/js/tabby.js", "src/resources/formats/html/tippy/tippy.umd.min.js", "src/resources/formats/html/zenscroll/zenscroll-min.js", "src/resources/formats/pdf/pdfjs/build/pdf.js", "src/resources/formats/pdf/pdfjs/build/pdf.sandbox.js", "src/resources/formats/pdf/pdfjs/build/pdf.worker.js", "src/resources/formats/pdf/pdfjs/web/debugger.js", "src/resources/formats/pdf/pdfjs/web/viewer.js", "src/resources/formats/revealjs/plugins/chalkboard/plugin.js", "src/resources/formats/revealjs/plugins/line-highlight/line-highlight.js", "src/resources/formats/revealjs/plugins/menu/menu.js", "src/resources/formats/revealjs/plugins/menu/quarto-menu.js", "src/resources/formats/revealjs/plugins/multiplex/multiplex.js", "src/resources/formats/revealjs/plugins/multiplex/socket.io.js", "src/resources/formats/revealjs/plugins/pdfexport/pdfexport.js", "src/resources/formats/revealjs/plugins/support/support.js", "src/resources/formats/revealjs/plugins/tone/tone.js", "src/resources/formats/revealjs/reveal/dist/reveal.esm.js", "src/resources/formats/revealjs/reveal/dist/reveal.js", "src/resources/formats/revealjs/reveal/plugin/highlight/highlight.esm.js", "src/resources/formats/revealjs/reveal/plugin/highlight/highlight.js", "src/resources/formats/revealjs/reveal/plugin/highlight/plugin.js", "src/resources/formats/revealjs/reveal/plugin/markdown/markdown.esm.js", "src/resources/formats/revealjs/reveal/plugin/markdown/markdown.js", "src/resources/formats/revealjs/reveal/plugin/markdown/plugin.js", "src/resources/formats/revealjs/reveal/plugin/math/katex.js", "src/resources/formats/revealjs/reveal/plugin/math/math.esm.js", "src/resources/formats/revealjs/reveal/plugin/math/math.js", "src/resources/formats/revealjs/reveal/plugin/math/mathjax2.js", "src/resources/formats/revealjs/reveal/plugin/math/mathjax3.js", "src/resources/formats/revealjs/reveal/plugin/math/plugin.js", "src/resources/formats/revealjs/reveal/plugin/notes/notes.esm.js", "src/resources/formats/revealjs/reveal/plugin/notes/notes.js", "src/resources/formats/revealjs/reveal/plugin/notes/plugin.js", "src/resources/formats/revealjs/reveal/plugin/search/plugin.js", "src/resources/formats/revealjs/reveal/plugin/search/search.esm.js", "src/resources/formats/revealjs/reveal/plugin/search/search.js", "src/resources/formats/revealjs/reveal/plugin/zoom/plugin.js", "src/resources/formats/revealjs/reveal/plugin/zoom/zoom.esm.js", "src/resources/formats/revealjs/reveal/plugin/zoom/zoom.js", "src/resources/formats/revealjs/tone/tone.js", "src/resources/projects/website/cookie-consent/cookie-consent.js", "src/resources/projects/website/listing/list.min.js", "src/resources/projects/website/listing/quarto-listing.js", "src/resources/projects/website/navigation/headroom.min.js", "src/resources/projects/website/navigation/quarto-nav.js", "src/resources/projects/website/search/autocomplete-preset-algolia.umd.js", "src/resources/projects/website/search/autocomplete.min.js", "src/resources/projects/website/search/autocomplete.umd.js", "src/resources/projects/website/search/fuse.min.js", "src/resources/projects/website/search/quarto-search.js"], "rules": {"exclude": ["require-await", "no-inferrable-types"]}}, "fmt": {"include": ["src/"], "exclude": ["src/resources/create/extensions/revealjs-plugin/_extensions/qstart-filesafename-qend/qstart-filesafename-qend.js", "src/resources/editor/", "src/core/lib/external/", "src/vendor/", "src/resources/vendor/", "src/resources/formats/pdf/pdfjs/", "src/resources/deno_std/", "package/pkg-working/share/extensions/quarto/video/resources/videojs/video.min.js", "package/pkg-working/share/formats/html/anchor/anchor.min.js", "package/pkg-working/share/formats/html/bootstrap/dist/bootstrap.min.js", "package/pkg-working/share/formats/html/clipboard/clipboard.min.js", "package/pkg-working/share/formats/html/fuse/fuse.min.js", "package/pkg-working/share/formats/html/mermaid/mermaid.min.js", "package/pkg-working/share/formats/html/ojs/quarto-ojs-runtime.min.js", "package/pkg-working/share/formats/html/popper/popper.min.js", "package/pkg-working/share/formats/html/tippy/tippy.umd.min.js", "package/pkg-working/share/projects/website/listing/list.min.js", "package/pkg-working/share/projects/website/navigation/headroom.min.js", "package/pkg-working/share/projects/website/search/autocomplete.min.js", "package/pkg-working/share/projects/website/search/fuse.min.js", "src/resources/extensions/quarto/video/resources/videojs/video.min.js", "src/resources/formats/html/anchor/anchor.min.js", "src/resources/formats/html/bootstrap/dist/bootstrap.min.js", "src/resources/formats/html/clipboard/clipboard.min.js", "src/resources/formats/html/fuse/fuse.min.js", "src/resources/formats/html/mermaid/mermaid.min.js", "src/resources/formats/html/ojs/quarto-ojs-runtime.min.js", "src/resources/formats/html/popper/popper.min.js", "src/resources/formats/html/tippy/tippy.umd.min.js", "src/resources/projects/website/listing/list.min.js", "src/resources/projects/website/navigation/headroom.min.js", "src/resources/projects/website/search/autocomplete.min.js", "src/resources/projects/website/search/fuse.min.js", "src/vendor/cdn.skypack.dev/dayjs@1.8.21/dayjs.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-api.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-api.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-gl.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-gl.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-mathjax.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-mathjax.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-tables.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-tables.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-widgets.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-widgets.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh.esm.min.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/auth/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/bootstrap-tour/build/js/bootstrap-tour.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/bootstrap/dist/js/bootstrap.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/es6-promise/promise.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/jquery-typeahead/dist/jquery.typeahead.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/jquery-ui/dist/jquery-ui.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/jquery/jquery.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/moment/min/locales.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/moment/min/moment-with-locales.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/moment/min/moment.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/react/react-dom.production.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/react/react.production.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/edit/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/notebook/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/terminal/js/main.min.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/tree/js/main.min.js", "tests/docs/extensions/basic/_extensions/quarto-ext/lightbox/resources/js/glightbox.min.js", "tests/docs/extensions/project/_extensions/quarto-ext/lightbox/resources/js/glightbox.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/bootstrap/bootstrap.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/clipboard/clipboard.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-html/anchor.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-html/popper.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-html/tippy.umd.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-nav/headroom.min.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-search/fuse.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/bootstrap/bootstrap.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/clipboard/clipboard.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-html/anchor.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-html/popper.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-html/tippy.umd.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-nav/headroom.min.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-search/fuse.min.js", "tests/docs/websites/issue-3686/_extensions/quarto-ext/lightbox/resources/js/glightbox.min.js", "package/pkg-working/share/projects/website/search/autocomplete-preset-algolia.umd.js", "package/pkg-working/share/projects/website/search/autocomplete.umd.js", "src/resources/projects/website/search/autocomplete-preset-algolia.umd.js", "src/resources/projects/website/search/autocomplete.umd.js", "tests/.venv/lib/python3.11/site-packages/nbclassic/static/components/marked/lib/marked.umd.js", "tests/docs/smoke-all/2022/10/14/google-scholar-project/_site/site_libs/quarto-search/autocomplete.umd.js", "tests/docs/smoke-all/2023/01/06/input-relative/test/docs/site_libs/quarto-search/autocomplete.umd.js", "package/pkg-working/share/formats/revealjs/reveal/dist/reveal.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/highlight/highlight.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/markdown/markdown.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/math/math.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/notes/notes.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/search/search.esm.js", "package/pkg-working/share/formats/revealjs/reveal/plugin/zoom/zoom.esm.js", "src/resources/formats/revealjs/reveal/dist/reveal.esm.js", "src/resources/formats/revealjs/reveal/plugin/highlight/highlight.esm.js", "src/resources/formats/revealjs/reveal/plugin/markdown/markdown.esm.js", "src/resources/formats/revealjs/reveal/plugin/math/math.esm.js", "src/resources/formats/revealjs/reveal/plugin/notes/notes.esm.js", "src/resources/formats/revealjs/reveal/plugin/search/search.esm.js", "src/resources/formats/revealjs/reveal/plugin/zoom/zoom.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-api.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-gl.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-mathjax.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-tables.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh-widgets.esm.js", "tests/.venv/lib/python3.11/site-packages/bokeh/server/static/js/bokeh.esm.js", "src/resources/library/dayjs/locale/af.js", "src/resources/library/dayjs/locale/am.js", "src/resources/library/dayjs/locale/ar-dz.js", "src/resources/library/dayjs/locale/ar-iq.js", "src/resources/library/dayjs/locale/ar-kw.js", "src/resources/library/dayjs/locale/ar-ly.js", "src/resources/library/dayjs/locale/ar-ma.js", "src/resources/library/dayjs/locale/ar-sa.js", "src/resources/library/dayjs/locale/ar-tn.js", "src/resources/library/dayjs/locale/ar.js", "src/resources/library/dayjs/locale/az.js", "src/resources/library/dayjs/locale/be.js", "src/resources/library/dayjs/locale/bg.js", "src/resources/library/dayjs/locale/bi.js", "src/resources/library/dayjs/locale/bm.js", "src/resources/library/dayjs/locale/bn-bd.js", "src/resources/library/dayjs/locale/bn.js", "src/resources/library/dayjs/locale/bo.js", "src/resources/library/dayjs/locale/br.js", "src/resources/library/dayjs/locale/bs.js", "src/resources/library/dayjs/locale/ca.js", "src/resources/library/dayjs/locale/cs.js", "src/resources/library/dayjs/locale/cv.js", "src/resources/library/dayjs/locale/cy.js", "src/resources/library/dayjs/locale/da.js", "src/resources/library/dayjs/locale/de-at.js", "src/resources/library/dayjs/locale/de-ch.js", "src/resources/library/dayjs/locale/de.js", "src/resources/library/dayjs/locale/dv.js", "src/resources/library/dayjs/locale/el.js", "src/resources/library/dayjs/locale/en-au.js", "src/resources/library/dayjs/locale/en-ca.js", "src/resources/library/dayjs/locale/en-gb.js", "src/resources/library/dayjs/locale/en-ie.js", "src/resources/library/dayjs/locale/en-il.js", "src/resources/library/dayjs/locale/en-in.js", "src/resources/library/dayjs/locale/en-nz.js", "src/resources/library/dayjs/locale/en-sg.js", "src/resources/library/dayjs/locale/en-tt.js", "src/resources/library/dayjs/locale/en.js", "src/resources/library/dayjs/locale/eo.js", "src/resources/library/dayjs/locale/es-do.js", "src/resources/library/dayjs/locale/es-mx.js", "src/resources/library/dayjs/locale/es-pr.js", "src/resources/library/dayjs/locale/es-us.js", "src/resources/library/dayjs/locale/es.js", "src/resources/library/dayjs/locale/et.js", "src/resources/library/dayjs/locale/eu.js", "src/resources/library/dayjs/locale/fa.js", "src/resources/library/dayjs/locale/fi.js", "src/resources/library/dayjs/locale/fo.js", "src/resources/library/dayjs/locale/fr-ca.js", "src/resources/library/dayjs/locale/fr-ch.js", "src/resources/library/dayjs/locale/fr.js", "src/resources/library/dayjs/locale/fy.js", "src/resources/library/dayjs/locale/ga.js", "src/resources/library/dayjs/locale/gd.js", "src/resources/library/dayjs/locale/gl.js", "src/resources/library/dayjs/locale/gom-latn.js", "src/resources/library/dayjs/locale/gu.js", "src/resources/library/dayjs/locale/he.js", "src/resources/library/dayjs/locale/hi.js", "src/resources/library/dayjs/locale/hr.js", "src/resources/library/dayjs/locale/ht.js", "src/resources/library/dayjs/locale/hu.js", "src/resources/library/dayjs/locale/hy-am.js", "src/resources/library/dayjs/locale/id.js", "src/resources/library/dayjs/locale/is.js", "src/resources/library/dayjs/locale/it-ch.js", "src/resources/library/dayjs/locale/it.js", "src/resources/library/dayjs/locale/ja.js", "src/resources/library/dayjs/locale/jv.js", "src/resources/library/dayjs/locale/ka.js", "src/resources/library/dayjs/locale/kk.js", "src/resources/library/dayjs/locale/km.js", "src/resources/library/dayjs/locale/kn.js", "src/resources/library/dayjs/locale/ko.js", "src/resources/library/dayjs/locale/ku.js", "src/resources/library/dayjs/locale/ky.js", "src/resources/library/dayjs/locale/lb.js", "src/resources/library/dayjs/locale/lo.js", "src/resources/library/dayjs/locale/lt.js", "src/resources/library/dayjs/locale/lv.js", "src/resources/library/dayjs/locale/me.js", "src/resources/library/dayjs/locale/mi.js", "src/resources/library/dayjs/locale/mk.js", "src/resources/library/dayjs/locale/ml.js", "src/resources/library/dayjs/locale/mn.js", "src/resources/library/dayjs/locale/mr.js", "src/resources/library/dayjs/locale/ms-my.js", "src/resources/library/dayjs/locale/ms.js", "src/resources/library/dayjs/locale/mt.js", "src/resources/library/dayjs/locale/my.js", "src/resources/library/dayjs/locale/nb.js", "src/resources/library/dayjs/locale/ne.js", "src/resources/library/dayjs/locale/nl-be.js", "src/resources/library/dayjs/locale/nl.js", "src/resources/library/dayjs/locale/nn.js", "src/resources/library/dayjs/locale/oc-lnc.js", "src/resources/library/dayjs/locale/pa-in.js", "src/resources/library/dayjs/locale/pl.js", "src/resources/library/dayjs/locale/pt-br.js", "src/resources/library/dayjs/locale/pt.js", "src/resources/library/dayjs/locale/rn.js", "src/resources/library/dayjs/locale/ro.js", "src/resources/library/dayjs/locale/ru.js", "src/resources/library/dayjs/locale/rw.js", "src/resources/library/dayjs/locale/sd.js", "src/resources/library/dayjs/locale/se.js", "src/resources/library/dayjs/locale/si.js", "src/resources/library/dayjs/locale/sk.js", "src/resources/library/dayjs/locale/sl.js", "src/resources/library/dayjs/locale/sq.js", "src/resources/library/dayjs/locale/sr-cyrl.js", "src/resources/library/dayjs/locale/sr.js", "src/resources/library/dayjs/locale/ss.js", "src/resources/library/dayjs/locale/sv-fi.js", "src/resources/library/dayjs/locale/sv.js", "src/resources/library/dayjs/locale/sw.js", "src/resources/library/dayjs/locale/ta.js", "src/resources/library/dayjs/locale/te.js", "src/resources/library/dayjs/locale/tet.js", "src/resources/library/dayjs/locale/tg.js", "src/resources/library/dayjs/locale/th.js", "src/resources/library/dayjs/locale/tk.js", "src/resources/library/dayjs/locale/tl-ph.js", "src/resources/library/dayjs/locale/tlh.js", "src/resources/library/dayjs/locale/tr.js", "src/resources/library/dayjs/locale/tzl.js", "src/resources/library/dayjs/locale/tzm-latn.js", "src/resources/library/dayjs/locale/tzm.js", "src/resources/library/dayjs/locale/ug-cn.js", "src/resources/library/dayjs/locale/uk.js", "src/resources/library/dayjs/locale/ur.js", "src/resources/library/dayjs/locale/uz-latn.js", "src/resources/library/dayjs/locale/uz.js", "src/resources/library/dayjs/locale/vi.js", "src/resources/library/dayjs/locale/x-pseudo.js", "src/resources/library/dayjs/locale/yo.js", "src/resources/library/dayjs/locale/zh-cn.js", "src/resources/library/dayjs/locale/zh-hk.js", "src/resources/library/dayjs/locale/zh-tw.js", "src/resources/library/dayjs/locale/zh.js", "src/resources/library/dayjs/plugins/advanced.js", "src/resources/library/dayjs/plugins/constant.js", "src/resources/library/dayjs/plugins/isoweek.js", "src/resources/library/dayjs/plugins/timezone.js", "src/resources/library/dayjs/plugins/utc.js", "src/resources/library/dayjs/plugins/weekofyear.js", "src/resources/library/dayjs/plugins/weekyear.js", "src/resources/formats/html/anchor/anchor.min.js", "src/resources/formats/html/bootstrap/dist/bootstrap.min.js", "src/resources/formats/html/clipboard/clipboard.min.js", "src/resources/formats/html/fuse/fuse.min.js", "src/resources/formats/html/mermaid/mermaid-init.js", "src/resources/formats/html/mermaid/mermaid-postprocess-shim.js", "src/resources/formats/html/mermaid/mermaid.js", "src/resources/formats/html/mermaid/mermaid.min.js", "src/resources/formats/html/ojs/quarto-ojs-runtime.js", "src/resources/formats/html/ojs/quarto-ojs-runtime.min.js", "src/resources/formats/html/popper/popper.min.js", "src/resources/formats/html/quarto.js", "src/resources/formats/html/tabby/js/tabby.js", "src/resources/formats/html/tippy/tippy.umd.min.js", "src/resources/formats/html/zenscroll/zenscroll-min.js", "src/resources/formats/pdf/pdfjs/build/pdf.js", "src/resources/formats/pdf/pdfjs/build/pdf.sandbox.js", "src/resources/formats/pdf/pdfjs/build/pdf.worker.js", "src/resources/formats/pdf/pdfjs/web/debugger.js", "src/resources/formats/pdf/pdfjs/web/viewer.js", "src/resources/formats/revealjs/plugins/chalkboard/plugin.js", "src/resources/formats/revealjs/plugins/line-highlight/line-highlight.js", "src/resources/formats/revealjs/plugins/menu/menu.js", "src/resources/formats/revealjs/plugins/menu/quarto-menu.js", "src/resources/formats/revealjs/plugins/multiplex/multiplex.js", "src/resources/formats/revealjs/plugins/multiplex/socket.io.js", "src/resources/formats/revealjs/plugins/pdfexport/pdfexport.js", "src/resources/formats/revealjs/plugins/support/support.js", "src/resources/formats/revealjs/plugins/tone/tone.js", "src/resources/formats/revealjs/reveal/dist/reveal.esm.js", "src/resources/formats/revealjs/reveal/dist/reveal.js", "src/resources/formats/revealjs/reveal/plugin/highlight/highlight.esm.js", "src/resources/formats/revealjs/reveal/plugin/highlight/highlight.js", "src/resources/formats/revealjs/reveal/plugin/highlight/plugin.js", "src/resources/formats/revealjs/reveal/plugin/markdown/markdown.esm.js", "src/resources/formats/revealjs/reveal/plugin/markdown/markdown.js", "src/resources/formats/revealjs/reveal/plugin/markdown/plugin.js", "src/resources/formats/revealjs/reveal/plugin/math/katex.js", "src/resources/formats/revealjs/reveal/plugin/math/math.esm.js", "src/resources/formats/revealjs/reveal/plugin/math/math.js", "src/resources/formats/revealjs/reveal/plugin/math/mathjax2.js", "src/resources/formats/revealjs/reveal/plugin/math/mathjax3.js", "src/resources/formats/revealjs/reveal/plugin/math/plugin.js", "src/resources/formats/revealjs/reveal/plugin/notes/notes.esm.js", "src/resources/formats/revealjs/reveal/plugin/notes/notes.js", "src/resources/formats/revealjs/reveal/plugin/notes/plugin.js", "src/resources/formats/revealjs/reveal/plugin/search/plugin.js", "src/resources/formats/revealjs/reveal/plugin/search/search.esm.js", "src/resources/formats/revealjs/reveal/plugin/search/search.js", "src/resources/formats/revealjs/reveal/plugin/zoom/plugin.js", "src/resources/formats/revealjs/reveal/plugin/zoom/zoom.esm.js", "src/resources/formats/revealjs/reveal/plugin/zoom/zoom.js", "src/resources/formats/revealjs/tone/tone.js", "src/resources/projects/website/cookie-consent/cookie-consent.js", "src/resources/projects/website/listing/list.min.js", "src/resources/projects/website/listing/quarto-listing.js", "src/resources/projects/website/navigation/headroom.min.js", "src/resources/projects/website/navigation/quarto-nav.js", "src/resources/projects/website/search/autocomplete-preset-algolia.umd.js", "src/resources/projects/website/search/autocomplete.min.js", "src/resources/projects/website/search/autocomplete.umd.js", "src/resources/projects/website/search/fuse.min.js", "src/resources/projects/website/search/quarto-search.js"]}}
{"letters": "GABDENO", "generation_info": {"path": "word_lists/scowl.txt", "min_word_length": 4, "total_letter_count": 7, "min_word_count": 25, "max_word_count": 50, "min_total_score": 60, "max_total_score": 240, "cap_plurals": true, "max_plurals": 3, "cap_gerunds": true, "max_gerunds": 5, "count_pangrams": 1, "manual_puzzle": true}, "total_score": 91, "word_count": 38, "pangram_count": 1, "pangram_list": ["BONDAGE"], "word_list": [{"word": "ADAGE", "score": 2, "pangram": false}, {"word": "AGED", "score": 1, "pangram": false}, {"word": "AGENDA", "score": 3, "pangram": false}, {"word": "BADGE", "score": 2, "pangram": false}, {"word": "BAGGAGE", "score": 4, "pangram": false}, {"word": "BAGGED", "score": 3, "pangram": false}, {"word": "BANDAGE", "score": 4, "pangram": false}, {"word": "BANDAGED", "score": 5, "pangram": false}, {"word": "BANG", "score": 1, "pangram": false}, {"word": "BANGED", "score": 3, "pangram": false}, {"word": "BEGAN", "score": 2, "pangram": false}, {"word": "BEGGED", "score": 3, "pangram": false}, {"word": "BOGGED", "score": 3, "pangram": false}, {"word": "BONDAGE", "score": 4, "pangram": true}, {"word": "DODGE", "score": 2, "pangram": false}, {"word": "DODGED", "score": 3, "pangram": false}, {"word": "DOGGED", "score": 3, "pangram": false}, {"word": "EDGE", "score": 1, "pangram": false}, {"word": "EDGED", "score": 2, "pangram": false}, {"word": "EGGED", "score": 2, "pangram": false}, {"word": "ENGAGE", "score": 3, "pangram": false}, {"word": "ENGAGED", "score": 4, "pangram": false}, {"word": "GABBED", "score": 3, "pangram": false}, {"word": "GAGGED", "score": 3, "pangram": false}, {"word": "GANG", "score": 1, "pangram": false}, {"word": "GANGED", "score": 3, "pangram": false}, {"word": "GEED", "score": 1, "pangram": false}, {"word": "GENE", "score": 1, "pangram": false}, {"word": "GOAD", "score": 1, "pangram": false}, {"word": "GOADED", "score": 3, "pangram": false}, {"word": "GOBBED", "score": 3, "pangram": false}, {"word": "GONE", "score": 1, "pangram": false}, {"word": "GONG", "score": 1, "pangram": false}, {"word": "GONGED", "score": 3, "pangram": false}, {"word": "GONNA", "score": 2, "pangram": false}, {"word": "GOOD", "score": 1, "pangram": false}, {"word": "GOON", "score": 1, "pangram": false}, {"word": "NAGGED", "score": 3, "pangram": false}]}
{"plot": "Using the power of the Imagin and the Rider Pass, Ryotaro Nogami is able to travel to different times through the DenLiner. By traveling through time, he transforms into Kamen Rider Den-O, and fights monsters of all sizes, preventing them from altering the past to affect the present and future.", "genres": "Animation, Fantasy, Sci-Fi", "release_year": "2007\u2013", "roles": {"m": [{"adjectives": ["comedic"], "role": "Deneb from Kamen Rider Den-O, who's a comedic foil/caretaker to his broody partner and master, Yuto Sakurai.", "id": "BattleButler"}, {"adjectives": [], "role": "Kamen Rider Den-O created one out of the series People in Rubber Suits to sing the \"Do It Yourself\" Theme Tune. No, seriously.", "id": "BoyBand"}, {"adjectives": ["arrogant", "white"], "role": "Sieg from Kamen Rider Den-O, an arrogant Imagin who claims that \"the world revolves for [his] sake\" and initially sees the DenLiner crew as his servants. Hana punches some sense into him, though, and he warms up to the others a lot quicker. Bonus points for his predominantly white color scheme.", "id": "PrincelyYoungMan"}, {"adjectives": ["arrogant", "white"], "role": "Sieg from Kamen Rider Den-O, an arrogant Imagin who claims that \"the world revolves for [his] sake\" and initially sees the DenLiner crew as his servants. Hana punches some sense into him, though, and he warms up to the others a lot quicker. Bonus points for his predominantly white color scheme.", "id": "ShelteredAristocrat"}, {"adjectives": [], "role": "Urataros from Kamen Rider Den-O.", "id": "TheCasanova"}], "f": [{"adjectives": [], "role": "Everything's Better with Princesses: a minor character in Ore, Tanjou! that helps Hana infiltrate Gaoh's fortress.", "id": "EverythingsBetterWithPrincesses"}, {"adjectives": ["young", "due"], "role": "Kamen Rider Den-O: Hana may be a young girl due to timetravel weirdness, but her weapon of choice is a bazooka. No weapon is more fitting for a girl who can singlehandedly beat the tar out of a kaijin twice her size.", "id": "SmallGirlBigGun"}, {"adjectives": ["immediate", "Ryo-chan", "special", "surprising", "whole", "fianc\u00e9e", "own", "future", "known", "Ryo-chan", "time-displaced", "fianc\u00e9e"], "role": "Kamen Rider Den-O: Airi Nogami, Ryotaro's older sister, who is pretty, caring, an excellent cook, and unflappable. Upon being told that Ryotaro was being held hostage by an armed robber, her immediate reaction was to go back to preparing coffee. When one of her regulars asked how she could be so calm, she muttered \"That's right\", then went off...to make \"Ryo-chan\" some special hostage snacks. Cue mass Face Fault. The wisdom part comes to play in a rather surprising form: She's been in the loop the whole time. Airi was in on her fianc\u00e9e's plan from the beginning, and allowed her own memories to be altered in order to protect the Junction Point, their future daughter, Hana. She's known from the start that \"Ryo-chan\" was Den-O, and that his friend Yuuto is the time-displaced teenage version of her fianc\u00e9e.", "id": "YamatoNadeshiko"}]}, "imdbid": "tt0997404", "similar": [{"shared": ["TheCasanova", "PrincelyYoungMan", "ShelteredAristocrat"], "shared_count": 3, "id": "KamenRider", "name": "Kamen Rider"}, {"shared": ["EverythingsBetterWithPrincesses", "YamatoNadeshiko"], "shared_count": 2, "id": "Mulan", "name": "Mulan", "poster_url": "Mulan.jpg"}, {"shared": ["BattleButler", "EverythingsBetterWithPrincesses"], "shared_count": 2, "id": "TheIcePirates", "name": "The Ice Pirates", "poster_url": "TheIcePirates.jpg"}, {"shared": ["PrincelyYoungMan", "EverythingsBetterWithPrincesses"], "shared_count": 2, "id": "SnowWhiteAndTheHuntsman", "name": "Snow White & the Huntsman"}, {"shared": ["BattleButler", "TheCasanova"], "shared_count": 2, "id": "RepoTheGeneticOpera", "name": "Repo! The Genetic Opera", "poster_url": "RepoTheGeneticOpera.jpg"}], "id": "KamenRiderDenO", "name": "Kamen Rider Den-O"}
{"lock": false, "imports": {"std/": "https://deno.land/std@0.192.0/", "@trpc/server": "https://esm.sh/@trpc/server@10.32.0", "@trpc/server/": "https://esm.sh/@trpc/server@10.32.0/", "@trpc/client": "https://esm.sh/@trpc/client@10.32.0", "zod": "https://esm.sh/zod@3.21.4"}, "tasks": {"server": "deno run --watch --allow-net --allow-env src/index.ts", "client": "deno run --allow-net --allow-env src/client.ts"}}
{"lint": {"files": {"include": ["src/", "tests-corpus"]}, "report": "compact", "rules": {"tags": ["recommended"], "include": ["camelcase", "default-param-last", "eqeqeq", "explicit-function-return-type", "explicit-module-boundary-types", "no-await-in-loop", "no-const-assign", "no-eval", "no-implicit-declare-namespace-export", "no-non-null-asserted-optional-chain", "no-non-null-assertion", "no-sparse-arrays", "no-throw-literal", "no-top-level-await", "no-undef", "prefer-ascii", "single-var-declarator", "triple-slash-reference"]}}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-read --allow-write --allow-env --allow-net aptos-codegen.ts"}}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.asynciterable"]}}
{"name": "sqlite-xsv", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"imports": {"@opennetwork/http-representation": "https://cdn.skypack.dev/@opennetwork/http-representation", "@virtualstate/astro-renderer": "https://cdn.skypack.dev/@virtualstate/astro-renderer", "@virtualstate/dom": "https://cdn.skypack.dev/@virtualstate/dom", "@virtualstate/examples": "https://cdn.skypack.dev/@virtualstate/examples", "@virtualstate/fringe": "https://cdn.skypack.dev/@virtualstate/fringe", "@virtualstate/kdl": "https://cdn.skypack.dev/@virtualstate/kdl", "@virtualstate/composite-key": "https://cdn.skypack.dev/@virtualstate/composite-key", "@virtualstate/promise": "https://cdn.skypack.dev/@virtualstate/promise", "@virtualstate/focus": "https://cdn.skypack.dev/@virtualstate/focus", "@virtualstate/focus/static-h": "https://cdn.skypack.dev/@virtualstate/focus/static-h", "@virtualstate/hooks": "https://cdn.skypack.dev/@virtualstate/hooks", "@virtualstate/hooks-extended": "https://cdn.skypack.dev/@virtualstate/hooks-extended", "@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union", "@virtualstate/x": "https://cdn.skypack.dev/@virtualstate/x", "@virtualstate/navigation": "./src/navigation.ts", "@virtualstate/navigation/polyfill": "./src/polyfill.ts", "@virtualstate/navigation/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/navigation/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/navigation/event-target": "./src/event-target/sync-event-target.ts", "@virtualstate/navigation-imported": "./src/navigation.ts", "@virtualstate/navigation-imported/polyfill": "./src/polyfill.ts", "@virtualstate/navigation-imported/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/navigation-imported/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/navigation-imported/event-target": "./src/event-target/sync-event-target.ts", "@ungap/structured-clone": "https://cdn.skypack.dev/@ungap/structured-clone", "@ungap/structured-clone/json": "https://cdn.skypack.dev/@ungap/structured-clone/json", "dom-lite": "https://cdn.skypack.dev/dom-lite", "iterable": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "https://cdn.skypack.dev/-/iterable@v5.7.0-CNtyuMJo9f2zFu6CuB1D/dist=es2019,mode=imports/optimized/iterable.js": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "uuid": "./src/util/deno-uuid.ts", "abort-controller": "https://cdn.skypack.dev/abort-controller", "deno:std/uuid/mod": "https://deno.land/std@0.113.0/uuid/mod.ts", "deno:std/uuid/v4": "https://deno.land/std@0.113.0/uuid/v4.ts", "deno:deno_dom/deno-dom-wasm.ts": "https://deno.land/x/deno_dom/deno-dom-wasm.ts", "urlpattern-polyfill": "https://cdn.skypack.dev/urlpattern-polyfill@8.0.2", "./src/tests/examples": "./src/tests/examples/index.ts", "./src/tests/examples/jsx": "./src/tests/examples/jsx.tsx", "./src/tests/examples/fetch": "./src/tests/examples/fetch.ts", "./src/tests/examples/readme-detailed": "./src/tests/examples/readme-detailed.tsx", "./src/tests/navigation.class": "./src/tests/navigation.class.ts", "./src/tests/navigation.imported": "./src/tests/navigation.imported.ts", "./src/tests/navigation.scope": "./src/tests/navigation.scope.ts", "./src/tests/navigation": "./src/tests/navigation.tsx", "./src/tests/node-process": "./src/tests/default-process.ts", "./src/tests/imported": "./src/tests/imported.ts", "./src/tests/config": "./src/tests/config.ts", "./src/tests/util": "./src/tests/util.ts", "./src/navigation": "./src/navigation.ts", "./src/navigation-entry": "./src/navigation-entry.ts", "./src/spec/navigation": "./src/spec/navigation.ts", "./src/navigation-errors": "./src/navigation-errors.ts", "./src/navigation-event-target": "./src/navigation-event-target.ts", "./src/navigation-transition": "./src/navigation-transition.ts", "./src/create-navigation-transition": "./src/create-navigation-transition.ts", "./src/util/deferred": "./src/util/deferred.ts", "./src/util/deno-uuid": "./src/util/deno-uuid.ts", "./src/util/global-uuid": "./src/util/global-uuid.ts", "./src/util/import-uuid": "./src/util/import-uuid.ts", "./src/util/uuid-or-random": "./src/util/uuid-or-random.ts", "./src/util/parse-dom-deno": "./src/util/parse-dom-deno.ts", "./src/util/parse-dom": "./src/util/parse-dom-deno.ts", "./src/index": "./src/index.ts", "./src/util/writable": "./src/util/writable.ts", "./src": "./src/index.ts", "./src/event-target": "./src/event-target/index.ts", "./src/event-target/callback": "./src/event-target/callback.ts", "./src/event-target/context": "./src/event-target/context.ts", "./src/event-target/global": "./src/event-target/global.ts", "./src/event-target/descriptor": "./src/event-target/descriptor.ts", "./src/event-target/event": "./src/event-target/event.ts", "./src/event-target/create-event": "./src/event-target/create-event.ts", "./src/event-target/event-target": "./src/event-target/event-target.ts", "./src/event-target/async-event-target": "./src/event-target/async-event-target.ts", "./src/event-target/sync-event-target": "./src/event-target/sync-event-target.ts", "./src/event-target/event-target-options": "./src/event-target/event-target-options.ts", "./src/event-target/event-target-listeners": "./src/event-target/event-target-listeners.ts", "./src/event-target/index": "./src/event-target/index.ts", "./src/event-target/parallel-event": "./src/event-target/parallel-event.ts", "./src/event-target/respond-event": "./src/event-target/respond-event.ts", "./src/event-target/signal-event": "./src/event-target/signal-event.ts", "./src/event-target/intercept-event": "./src/event-target/intercept-event.ts", "./src/util/import-types": "./src/util/import-types.ts", "./src/polyfill": "./src/polyfill.ts", "./src/get-polyfill": "./src/get-polyfill.ts", "./src/apply-polyfill": "./src/apply-polyfill.ts", "./src/location": "./src/location.ts", "./src/history": "./src/history.ts", "./src/import-abort-controller": "./src/import-abort-controller.ts", "./src/global-abort-controller": "./src/global-abort-controller.ts", "./esnext/util/parse-dom-deno.js": "./src/util/parse-dom-deno.ts", "./esnext/util/parse-dom.js": "./src/util/parse-dom-deno.ts", "./esnext/util/structured-json": "./src/util/structured-json.ts", "./esnext/util/structured-json.js": "./src/util/structured-json.ts", "./src/util/structured-json.js": "./src/util/structured-json.ts", "./src/config": "./src/config.ts", "./src/is": "./src/is.ts", "./src/base-url": "./src/base-url.ts", "./src/defer": "./src/defer.ts", "./src/events": "./src/events/index.ts", "./src/get-navigation": "./src/get-navigation.ts", "./src/global-navigation": "./src/global-navigation.ts", "./src/global-self": "./src/global-self.ts", "./src/global-window": "./src/global-window.ts", "./src/events/navigation-current-entry-change-event": "./src/events/navigation-current-entry-change-event.ts", "./src/events/navigate-event": "./src/events/navigate-event.ts", "cheerio": "./scripts/nop/index.js"}}
{"extends": "./tsconfig.json", "include": ["deno"], "exclude": [], "compilerOptions": {"rootDir": "./deno", "lib": ["es2020", "DOM"], "paths": {"modern-treasury/_shims/*": ["deno/_shims/*"], "modern-treasury": ["deno/index.ts"], "modern-treasury/*": ["deno/*"], "digest-fetch": ["./typings/digest-fetch"]}, "noEmit": true, "declaration": true, "declarationMap": true, "outDir": "deno", "pretty": true, "sourceMap": true}}
{"extends": "./tsconfig.build.json", "compilerOptions": {"outDir": "build/deno/"}, "exclude": ["node_modules", "build/deno/", "dist/", "src/**/*.deno.ts", "src/**/*.deno.tsx"]}
{"tasks": {"build": "deno run --allow-all --unstable './tasks/build.ts'", "dev": "deno run --allow-all --unstable './tasks/dev.ts'"}, "imports": {"std/": "https://deno.land/std@0.174.0/", "wire": "https://deno.land/x/wire@v2.0.0-alpha.2/mod.ts"}}
{"tasks": {"clean": "rm -rf dist dist_client_bundle dist_plug_bundle website_build", "deep-clean-mac": "rm -f deno.lock && rm -rf $HOME/Library/Caches/deno && deno task clean", "install": "deno install -f --unstable -A --importmap import_map.json silverbullet.ts", "check": "find . -name '*.ts*' | xargs deno check", "test": "deno test -A --unstable", "build": "deno run -A build_plugs.ts && deno run -A --unstable build_web.ts", "plugs": "deno run -A build_plugs.ts", "server": "deno run -A --unstable --check silverbullet.ts", "watch-web": "deno run -A --check build_web.ts --watch", "watch-server": "deno run -A --unstable --check --watch silverbullet.ts", "watch-plugs": "deno run -A --check build_plugs.ts -w", "bundle": "deno run -A build_bundle.ts", "generate": "lezer-generator common/markdown_parser/query.grammar -o common/markdown_parser/parse-query.js", "compile": "deno task bundle && deno compile -A --unstable -o silverbullet dist/silverbullet.js", "server:dist:linux-x86_64": "deno task bundle && deno compile -A --unstable --target x86_64-unknown-linux-gnu dist/silverbullet.js -o silverbullet && zip silverbullet-server-linux-x86_64.zip silverbullet", "server:dist:darwin-x86_64": "deno task bundle && deno compile -A --unstable --target x86_64-apple-darwin dist/silverbullet.js -o silverbullet && zip silverbullet-server-darwin-x86_64.zip silverbullet", "server:dist:darwin-aarch64": "deno task bundle && deno task bundle && deno compile -A --unstable --target aarch64-apple-darwin dist/silverbullet.js -o silverbullet && zip silverbullet-server-darwin-aarch64.zip silverbullet", "server:dist:windows-x86_64": "deno task bundle && deno compile -A --unstable --target x86_64-pc-windows-msvc dist/silverbullet.js -o silverbullet.exe && zip silverbullet-server-windows-x86_64.zip silverbullet.exe"}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "jsx": "react-jsx", "jsxImportSource": "https://esm.sh/preact@10.11.1"}, "importMap": "import_map.json", "lint": {"exclude": ["dist", "dist_bundle"], "rules": {"exclude": ["no-explicit-any"]}}, "fmt": {"exclude": ["dist", "dist_bundle", "website", "website_build", "test_space", "README.md"]}}
{"name": "nm_deno", "description": "Deno Native Messaging Host", "path": "", "type": "stdio", "allowed_origins": []}
{"authored": ["ICPR-2008-RiveraCT"], "dblp": "Cede=ntilde=o:Oscar_Dalmau", "name": "Oscar Dalmau Cede\u00f1o"}
{"lock": false, "exclude": ["dist"], "tasks": {"lint": "deno lint && deno fmt --check", "fmt": "deno fmt", "test": "deno test --doc --allow-run=deno --allow-env --allow-read=./  --allow-write=./ --ignore=./CHANGELOG.md --parallel", "check:examples": "deno check examples/**/*.ts", "snapshot": "deno task test -- --update", "coverage": "deno task test --coverage=./dist/coverage/all/result && deno coverage --lcov ./dist/coverage/all/result > ./dist/coverage/all/cov.lcov", "coverage:ansi": "deno task test ansi --coverage=./dist/coverage/ansi/result && deno coverage --lcov ./dist/coverage/ansi/result > ./dist/coverage/ansi/cov.lcov", "coverage:command": "deno task test command --coverage=./dist/coverage/command/result && deno coverage --lcov ./dist/coverage/command/result > ./dist/coverage/command/cov.lcov", "coverage:flags": "deno task test flags --coverage=./dist/coverage/flags/result && deno coverage --lcov ./dist/coverage/flags/result > ./dist/coverage/flags/cov.lcov", "coverage:keycode": "deno task test keycode --coverage=./dist/coverage/keycode/result && deno coverage --lcov ./dist/coverage/keycode/result > ./dist/coverage/keycode/cov.lcov", "coverage:keypress": "deno task test keypress --coverage=./dist/coverage/keypress/result && deno coverage --lcov ./dist/coverage/keypress/result > ./dist/coverage/keypress/cov.lcov", "coverage:prompt": "deno task test prompt --coverage=./dist/coverage/prompt/result && deno coverage --lcov ./dist/coverage/prompt/result > ./dist/coverage/prompt/cov.lcov", "coverage:table": "deno task test table --coverage=./dist/coverage/table/result && deno coverage --lcov ./dist/coverage/table/result > ./dist/coverage/table/cov.lcov", "coverage:testing": "deno task test testing --coverage=./dist/coverage/testing/result && deno coverage --lcov ./dist/coverage/testing/result > ./dist/coverage/testing/cov.lcov", "update": "deno run --allow-read=./ --allow-net --allow-write=./ https://deno.land/x/deno_outdated@0.2.4/cli.ts --ignore README.md CHANGELOG.md CONTRIBUTING.md"}}
{"background": {"scripts": ["js/bg.js"], "persistent": false}, "browser_action": {"default_icon": {"16": "img/16.png", "19": "img/19.png", "20": "img/20.png", "32": "img/32.png", "38": "img/38.png", "40": "img/40.png", "64": "img/64.png"}, "default_title": "__MSG_extTitle__"}, "content_scripts": [{"js": ["js/cs.js"], "matches": ["https://www.hotcleaner.com/cookie-editor/*"]}], "content_security_policy": "default-src 'none';script-src 'self';img-src 'self';style-src 'self';connect-src 'self' https://api64.com https://clients2.google.com;report-uri https://appn.center/apiv1/csp", "default_locale": "en", "description": "__MSG_extDesc__", "icons": {"16": "img/16.png", "24": "img/24.png", "32": "img/32.png", "48": "img/48.png", "64": "img/64.png", "96": "img/96.png", "128": "img/128.png", "192": "img/192.png", "256": "img/256.png"}, "manifest_version": 2, "minimum_chrome_version": "54.0", "name": "__MSG_extName__", "offline_enabled": true, "options_ui": {"open_in_tab": true, "page": "manager.html"}, "permissions": ["cookies", "<all_urls>", "contextMenus", "storage"], "update_url": "http://clients2.google.com/service/update2/crx", "homepage_url": "http://www.hotcleaner.com/cookie-editor/", "version": "2.1.0.0"}
{"tasks": {"start": "deno run --allow-env=GITHUB_TOKEN,NODE_DEBUG --allow-net=api.github.com index.ts"}}
{"plugins": ["@babel/plugin-syntax-typescript", ["./resources/add-extension-to-import-paths", {"extension": "ts"}], "./resources/inline-invariant"]}
{"tasks": {"dev": "deno run --watch src/main.ts"}}
{"tasks": {"example_opengl": "deno run -A --unstable examples/opengl.ts", "example_imgui": "deno run -A --unstable examples/imgui.ts", "example_imgui2": "deno run -A --unstable examples/imgui2.ts", "example_canvas": "deno run -A --unstable examples/canvas.ts", "example_canvas_chart": "deno run -A --unstable examples/canvas-chart.ts", "example_canvas_svg": "deno run -A --unstable examples/canvas-svg.ts", "example_cursor": "deno run -A --unstable examples/cursor.ts", "example_cube": "deno run -A --unstable examples/cube.ts", "example_cube2": "deno run -A --unstable examples/cube2.ts", "example_styles": "deno run -A --unstable examples/styles.ts", "example_events": "deno run -A --unstable examples/events.ts", "example_multi_window": "deno run -A --unstable examples/multi-window.ts", "example_transparent": "deno run -A --unstable examples/transparent.ts", "example_window": "deno run -A --unstable examples/window.ts", "example_capture": "deno run -A --unstable examples/mouse-capture.ts", "example_custom_cursor": "deno run -A --unstable examples/custom-cursor.ts", "example_custom_icon": "deno run -A --unstable examples/custom-icon.ts"}, "lint": {"rules": {"exclude": ["no-unused-vars"]}}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["src", "scripts", "docs", "README.md"]}, "options": {"semiColons": true, "indentWidth": 2, "lineWidth": 80, "proseWrap": "always", "singleQuote": false, "useTabs": false}}, "lint": {"files": {"include": ["src", "scripts"]}}, "test": {"files": {"include": ["src", "scripts"]}}, "tasks": {"test": "deno fmt --check && deno lint && deno test", "coverage": "deno test --coverage=.coverage && deno coverage --exclude=fixtures --exclude=test --exclude=scripts --exclude=src/generated --lcov --output=lcov.info .coverage && deno run --allow-read https://deno.land/x/code_coverage@0.2.0/cli.ts"}, "lock": false}
{"tasks": {"build": "deno run -A build.ts", "clean": "rm -r build"}}
{"tasks": {"build": "deno run -A index.ts"}, "importMap": "import_map.json", "fmt": {"semiColons": false, "singleQuote": true}}
{"compilerOptions": {"allowJs": false, "strict": true}, "tasks": {"test": "deno test --allow-net --allow-read --allow-env --allow-run --allow-write --allow-ffi --unstable", "coverage": "scripts/run-coverage.sh", "typecheck": "deno check --unstable ./src/app.ts", "run": "deno run --unstable -A src/app.ts", "compile": "deno compile --allow-read --allow-write --allow-net --allow-run --allow-env --allow-ffi --unstable --output $INIT_CWD/tea src/app.ts", "install": "deno compile --unstable -Ao $TEA_PREFIX/tea.xyz/v$VERSION/bin/tea src/app.ts && scripts/repair.ts tea.xyz"}, "lint": {"include": ["src/"]}, "tea": {"dependencies": {"deno.land": "^1.33.3"}}, "imports": {"is-what": "https://deno.land/x/is_what@v4.1.15/src/index.ts", "tea": "https://deno.land/x/libtea@v0.10.7/mod.ts", "tea/": "https://deno.land/x/libtea@v0.10.7/src/", "outdent": "https://deno.land/x/outdent@v0.8.0/mod.ts", "cliffy/": "https://deno.land/x/cliffy@v0.25.7/", "deno/": "https://deno.land/std@0.196.0/", "hooks": "./src/hooks/index.ts"}}
{"lint": {"include": ["src", "test/deno"], "exclude": ["dist", "test/node"]}, "fmt": {"include": ["test/deno"], "lineWidth": 100, "useTabs": true}, "tasks": {"test": "deno lint && deno fmt --check && deno test --allow-none test/deno"}}
{"tasks": {"dev": "deno run -A --unstable --watch src/index.ts", "start": "deno run -A --unstable src/index.ts", "test": "deno test --no-check -A", "test:unit": "deno test test/unit --no-check -A", "test:unit:cache": "deno test --no-check -A test/unit/cache", "test:unit:factories": "deno test --no-check -A test/unit/factories", "test:unit:handlers": "deno test --no-check -A test/unit/handlers", "test:unit:repositories": "deno test --no-check -A test/unit/repositories", "test:unit:schemas": "deno test --no-check -A test/unit/schemas", "test:unit:tor": "deno test --no-check -A test/unit/tor", "test:unit:utils": "deno test --no-check -A test/unit/utils", "test:integration": "deno test test/integration --no-check -A", "test:integration:nip01": "deno test test/integration/features/nip-01/nip-01.feature.test.ts --no-check -A", "test:integration:nip09": "deno test test/integration/features/nip-09/nip-09.feature.test.ts --no-check -A", "test:integration:nip16": "deno test test/integration/features/nip-16/nip-16.feature.test.ts --no-check -A", "test:integration:nip28": "deno test test/integration/features/nip-28/nip-28.feature.test.ts --no-check -A", "test:integration:nip33": "deno test test/integration/features/nip-33/nip-33.feature.test.ts --no-check -A", "git-hooks": "deno run --no-check=remote --allow-run=deno,git --allow-read --allow-write=.git-hooks https://deno.land/x/githooked/mod.ts install", "bump": "deno run -A .bump/bump.ts", "cache": "deno cache src/index.ts --reload", "cache:force": "deno cache src/index.ts --reload --lock-write"}, "imports": {"@/": "./src/", "Buffer": "https://deno.land/std@0.177.1/node/buffer.ts", "crypto": "https://deno.land/std@0.177.1/node/crypto.ts", "events": "https://deno.land/std@0.177.1/node/events.ts", "stream": "https://deno.land/std@0.177.1/node/stream.ts", "stream/promises": "https://deno.land/std@0.177.1/node/stream/promises.mjs", "dns": "https://deno.land/std@0.177.1/node/dns.ts", "net": "https://deno.land/std@0.177.1/node/net.ts", "tls": "https://deno.land/std@0.177.1/node/tls.ts", "path": "https://deno.land/std@0.177.1/node/path.ts", "os": "https://deno.land/std@0.177.1/node/os.ts", "fs": "https://deno.land/std@0.177.1/node/fs.ts", "fs/promises": "https://deno.land/std@0.177.1/node/fs/promises.ts", "dotenv": "https://deno.land/x/dotenv@v3.2.0/mod.ts", "ramda": "https://deno.land/x/ramda@v0.27.2/mod.ts", "redis": "https://deno.land/x/redis@v0.29.4/mod.ts", "redis/": "https://deno.land/x/redis@v0.29.4/", "debug": "https://deno.land/x/debuglog@v1.0.0/debug.ts", "jest": "https://deno.land/std@0.180.0/testing/bdd.ts", "oak": "https://deno.land/x/oak@v12.1.0/mod.ts", "secp256k1": "https://deno.land/x/secp256k1@1.7.1/mod.ts", "oak-csp": "https://deno.land/x/oak_csp@1.0.3/mod.ts", "json2yaml": "https://deno.land/x/json2yaml@v1.0.1/mod.ts", "chai": "https://cdn.skypack.dev/chai@4.3.4?dts", "sinon-chai": "https://cdn.skypack.dev/sinon-chai@3.7.0?dts", "sinon": "https://cdn.skypack.dev/sinon@15.0.1?dts", "@cucumber/cucumber": "https://cdn.skypack.dev/@cucumber/cucumber@9.0.0?dts", "joi": "https://cdn.skypack.dev/joi@17.7.0?dts", "rxjs": "https://cdn.skypack.dev/rxjs@7.8.0?dts", "chai-as-promised": "https://cdn.skypack.dev/chai-as-promised@7.1.1?dts", "bson": "npm:bson@5.3.0", "@isaacs/ttlcache": "npm:@isaacs/ttlcache@1.4.0", "mongodb": "npm:mongodb@5.3.0", "mongoose": "npm:mongoose@7.1.1", "mongoose-paginate": "npm:mongoose-paginate-v2@1.7.1", "mongoose-aggregate-paginate": "npm:mongoose-aggregate-paginate-v2@1.0.6", "axios": "npm:axios@1.2.6", "tor-control-ts": "npm:tor-control-ts@1.0.0", "js-yaml": "npm:js-yaml@4.1.0", "bech32": "npm:bech32@2.0.0", "underscore": "npm:underscore@1.13.6", "dayjs": "npm:dayjs@1.11.8"}, "fmt": {"files": {}, "options": {"useTabs": false, "lineWidth": 240, "indentWidth": 4, "semiColons": false, "singleQuote": true, "proseWrap": "always"}}, "lint": {"files": {}, "rules": {"tags": ["recommended"], "include": [], "exclude": ["no-explicit-any", "require-await", "no-extra-semi", "ban-types"]}}}
{"tasks": {"run": "deno run -A --unstable mod.js", "test": "deno lint && deno fmt --check && deno test -A", "cache": "deno cache --lock=deno.lock --lock-write deps.js main.test.js"}, "fmt": {"include": ["./"], "lineWidth": 100, "singleQuote": true, "semiColons": false}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"include": ["README.md", "**/datastores", "**/external_auth", "**/functions", "manifest.ts", "**/triggers", "**/types", "**/views", "**/workflows"]}, "importMap": "import_map.json", "lint": {"include": ["**/datastores", "**/external_auth", "**/functions", "manifest.ts", "**/triggers", "**/types", "**/views", "**/workflows"]}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"name": "sqlite-fastrand", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"tasks": {"test": "deno lint && deno fmt --check && deno test -A", "cache": "deno cache --lock=deno.lock --lock-write deps.ts dev_deps.ts mod.test.ts"}, "fmt": {"include": ["./"], "lineWidth": 100, "singleQuote": true, "semiColons": false}}
{"tasks": {"test": "deno lint && deno fmt --check && deno test --no-check"}, "fmt": {"include": ["./"], "lineWidth": 100, "singleQuote": true, "semiColons": false}, "lock": false}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "lint": {"files": {"exclude": ["lib/_wasm/wasm.js", "lib/_wasm/out/"]}}, "tasks": {"wasmbuild": "deno run --allow-env --allow-run --allow-read --allow-write --allow-net https://deno.land/x/wasmbuild@0.8.5/main.ts --out ./lib/_wasm --project scrypt-wasm --sync"}}
{"lint": {"rules": {"exclude": ["prefer-const"]}}}
{"tasks": {"test": "deno lint && deno fmt --check && deno test -A --no-check", "cache": "deno cache --lock=deno.lock --lock-write deps.js dev_deps.js"}, "fmt": {"files": {"include": ["./"]}, "options": {"lineWidth": 100, "singleQuote": true, "semiColons": false}}}
{"importMap": "./import_map.jsonc", "compilerOptions": {"strict": true}, "tasks": {"compile": "deno compile -A -r --import-map src/import_map.jsonc --config deno.jsonc --output build/server mod.ts", "run": "deno run --allow-net --allow-env --allow-write --allow-read --watch mod.ts"}}
{"lock": false, "tasks": {"test": "deno test --unstable -A --parallel --shuffle --doc --coverage=.coverage", "check": "deno check --unstable $(find . -name '*.ts')", "coverage": "deno coverage --unstable .coverage", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"tasks": {"test": "deno lint && deno fmt --check && deno test -A --no-check", "cache": "deno cache --lock=deno.lock --lock-write deps.ts dev_deps.ts", "harness": "deno run --no-check --no-lock -A --reload ./harness.ts"}, "fmt": {"include": ["./"], "lineWidth": 100, "singleQuote": true, "semiColons": false}}
{"tasks": {"test": "deno test -A"}}
{"tasks": {"build": "deno task generate:openapi && deno task generate:npm-package", "generate:npm-package": "deno run -A scripts/build_npm.ts", "generate:openapi": "npx -y swagger-typescript-api@13.0.2 -p https://swagger.getlago.com/openapi.yaml --union-enums -o ./openapi -n client.ts", "test": "deno test ./tests --parallel"}}
{"tasks": {"test": "deno test --allow-read=. --allow-net=deno.land"}}
{"fmt": {"include": ["./"]}, "lint": {"include": ["./"], "rules": {"tags": ["recommended"]}}}
{"compilerOptions": {"allowJs": true, "allowUnreachableCode": false, "allowUnusedLabels": false, "checkJs": false, "keyofStringsOnly": false, "noFallthroughCasesInSwitch": false, "noImplicitAny": true, "noImplicitReturns": false, "noImplicitThis": true, "noStrictGenericChecks": false, "noUnusedLocals": false, "noUnusedParameters": false, "noUncheckedIndexedAccess": false, "strict": true, "strictBindCallApply": true, "strictFunctionTypes": true, "strictPropertyInitialization": true, "strictNullChecks": true, "suppressExcessPropertyErrors": false, "suppressImplicitAnyIndexErrors": false, "useUnknownInCatchVariables": false}}
{"lint": {"files": {"exclude": ["./ffmpeg.ts"]}}}
{"extends": "./tsconfig.json", "include": ["deno"], "exclude": [], "compilerOptions": {"rootDir": "./deno", "lib": ["es2020", "DOM"], "paths": {"@anthropic-ai/sdk/_shims/*": ["deno/_shims/*"], "@anthropic-ai/sdk": ["deno/index.ts"], "@anthropic-ai/sdk/*": ["deno/*"], "digest-fetch": ["./typings/digest-fetch"]}, "noEmit": true, "declaration": true, "declarationMap": true, "outDir": "deno", "pretty": true, "sourceMap": true}}
{"fmt": {"options": {"indentWidth": 4}}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"importMap": "./supabase/functions/import_map.json", "lock": false, "tasks": {"cli": "deno repl -A --eval-file=./src/init.ts"}}
{"tasks": {"dev": "deno run --allow-net=0.0.0.0:8090 --watch mod.tsx", "test": "deno test --no-check", "fmt": "deno fmt --ignore=README.md"}}
{"imports": {"std/": "https://deno.land/std@0.182.0/", "dax/": "https://deno.land/x/dax@0.31.0/", "fmt/": "https://deno.land/std@0.182.0/fmt/", "promise-utils/": "https://cdn.jsdelivr.net/gh/blend/promise-utils/src/", "deno/": "https://cdn.jsdelivr.net/gh/blend/promise-utils/src/"}, "fmt": {"options": {"semiColons": false, "singleQuote": true}}, "tasks": {"dev": "deno run -A --watch bin/job1.ts", "job1": "deno run -A bin/job1.ts", "update:lockfile": "fd .ts ./bin -tf --threads=1 -X deno cache --import-map=deno.jsonc --unstable --lock=deno.lock --lock-write"}}
{"fmt": {"exclude": ["mocks"]}, "importMap": "./import-map.json", "tasks": {"dev": "deno run --check --unstable --allow-net --allow-hrtime --allow-env --allow-read=. main.ts", "test": "deno test --unstable --allow-net --allow-hrtime --allow-env --allow-read=."}}
{"name": "sqlite-regex", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"name": "medeno", "type": "material", "description": "...", "hardness": 1, "cost": 2.0, "color": "#f89f62", "flammability": 0.41333793379869865, "explosiveness": 0.628148109307207, "radioactivity": 0.7530204008449891, "alwaysUnlocked": false}
{"tasks": {"start": "deno run --allow-env main.ts"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["src", "docs", "README.md"], "exclude": ["src/tests/fixtures"]}, "options": {"semiColons": true, "indentWidth": 2, "lineWidth": 80, "proseWrap": "always", "singleQuote": false, "useTabs": false}}, "lint": {"files": {"include": ["src"], "exclude": ["src/tests/fixtures"]}, "rules": {"exclude": ["no-deprecated-deno-api"]}}, "test": {"files": {"include": ["src"], "exclude": ["src/tests/fixtures"]}}, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-net --allow-write --allow-run src", "coverage": "deno test --allow-read --allow-net --allow-write --allow-run --coverage=.coverage src && deno coverage --exclude=fixtures --exclude=test --lcov --output=lcov.info .coverage && deno run --allow-read https://deno.land/x/code_coverage@0.2.0/cli.ts"}, "lock": false}
{"tasks": {"bind": "deno run -A ./bindings/_tools/generate/mod.ts && deno fmt", "test": "deno test -A --trace-ops", "www": "cd docs && pyro dev"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "https://esm.sh/preact@10.16.0"}}
{"tasks": {"ci": "deno fmt --check && deno lint"}, "fmt": {"files": {"exclude": ["out"]}}}
{"tasks": {"bundle": "mkdir -p dist && deno bundle ./src/mod.ts ./dist/plugins_bundle.ts"}, "importMap": "../../import_map.json"}
{"tasks": {"build": "deno run -A script/build.ts", "start": "deno run -A --unstable mod.ts", "dev": "deno run -A --unstable --watch mod.ts"}}
{"tasks": {"test": "deno test --unstable"}}
{"tasks": {"clean": " rm -rf dist", "npm": "deno run --allow-read --allow-write=./,/Users/qwtel/Library/Caches/deno --allow-net --allow-env=HOME,DENO_AUTH_TOKENS,DENO_DIR --allow-run=git,pnpm scripts/build_npm.ts", "test": "deno task test-sqlite && deno task test-postgres", "test-sqlite": "export DEFAULT_KV_URL=sqlite://database.sqlite && deno test --allow-read --allow-write --allow-env --seed 1 test/index.test.ts", "test-postgres": "export DEFAULT_KV_URL=postgres://deno:node@localhost:5432/test && deno test --allow-net --allow-env --seed 1 --unstable --unsafely-ignore-certificate-errors test/index.test.ts"}}
{"imports": {"npm/": "https://unpkg.com/"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["src", "tests", "docs", "README.md", "scripts", ".github/maintainers_guide.md", ".github/CONTRIBUTING.md"], "exclude": ["src/schema/slack/functions/_scripts/functions.json"]}, "options": {"semiColons": true, "indentWidth": 2, "lineWidth": 80, "proseWrap": "always", "singleQuote": false, "useTabs": false}}, "lint": {"files": {"include": ["src", "tests", "scripts"], "exclude": ["src/schema/slack/functions/_scripts/functions.json", "**/*.md"]}}, "test": {"files": {"include": ["src", "tests"]}}, "tasks": {"test": "deno fmt --check && deno lint && deno bundle src/mod.ts && deno test --allow-read", "coverage": "deno test --allow-read --coverage=.coverage && deno coverage --exclude=fixtures --exclude=test --lcov --output=lcov.info .coverage && deno run --allow-read https://deno.land/x/code_coverage@0.2.0/cli.ts"}, "lock": false}
{"lock": false, "tasks": {"test": "deno test --unstable -A --doc --parallel --shuffle --coverage=.coverage", "check": "deno check --unstable $(find . -name '*.ts')", "coverage": "deno coverage --unstable .coverage", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"lint": {"rules": {"exclude": ["require-await"]}}, "fmt": {"options": {"indentWidth": 4, "lineWidth": 120}}}
{"fmt": {"lineWidth": 120, "exclude": ["results"]}, "tasks": {"raw-bench": "rm results/cache.json && deno task bench", "bench": "deno run --allow-env=DENO_DEPLOYMENT_ID --allow-read=.,./benchmarks/ --allow-write=results --allow-run=deno,oha --allow-net src/mod.ts", "test": "deno test --allow-env=DENO_DEPLOYMENT_ID --allow-read=.,./benchmarks/ --allow-write=tests,benchmarks/file_server/FILE_SERVER_FILES --allow-run=deno,oha --allow-net"}, "lock": false}
{"compilerOptions": {"allowJs": false, "lib": ["deno.window"], "strict": true}, "fmt": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": true, "proseWrap": "preserve"}}
{"lock": false, "tasks": {"demo": "deno run  --allow-net --allow-read --allow-env=NODE_DEBUG --watch --no-check testdata/my_blog.ts --dev", "test": "deno test --no-check=remote --allow-read"}}
{"tasks": {"download-schema-yamls": "pollapo install", "bake-one-schema-yaml": "deno run -A --unstable ./bake.ts --template=./template.yaml --out=./tmp/schema.yaml", "expand-schema": "deno run -A --unstable ./expand.ts --in=./tmp/schema.yaml --out=./tmp/schema.json", "openapi-to-gitbook": "deno run -A --unstable ./openapi-to-gitbook.ts --in=./tmp/schema.json --out=./out", "all": "deno task download-schema-yamls && deno task bake-one-schema-yaml && deno task expand-schema && deno task openapi-to-gitbook"}}
{"scopes": {"https://crux.land/api/get/7GrKMy.ts": {"twind": "https://esm.sh/twind@0.16.16/shim/server", "https://esm.sh/@twind/typography@0.0.2": "https://esm.sh/*@twind/typography@0.0.2"}}}
{"fmt": {"options": {"indentWidth": 2, "lineWidth": 80, "proseWrap": "preserve", "singleQuote": true, "useTabs": false}}}
{"tasks": {"dev": "deno run --watch -A main.ts", "bench": "deno bench --allow-env --allow-net", "test": "deno test --allow-env"}}
{"lock": "deno.lock"}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch --no-clear-screen main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check  main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"test": "deno test"}, "test": {"files": {"exclude": ["src/", "build/"]}}}
{"version": "0.5.0", "name": "deno_dayjs", "tasks": {"dev": "deno run --check --watch example.ts"}}
{"tasks": {"dev": "deno run -A --watch --unstable main.ts"}}
{"tasks": {"dev": "deno run --watch -A main.ts", "run": "deno run -A main.ts"}}
{"imports": {"cross-fetch": "./src/deno/cross-fetch.js", "linkedom": "https://deno.land/x/deno_dom@v0.1.38/deno-dom-wasm.ts", "@mozilla/readability": "https://esm.sh/@mozilla/readability@0.4.4", "sanitize-html": "https://esm.sh/sanitize-html@2.11.0", "bellajs": "https://esm.sh/bellajs@11.1.2"}}
{"compilerOptions": {"allowJs": false, "strict": true}, "lock": false, "tasks": {"typecheck": "deno check --unstable $(find . -name '*'.ts)"}, "tea": {"dependencies": {"deno.land": ">=1.32<1.36.1"}}, "imports": {"is-what": "https://deno.land/x/is_what@v4.1.15/src/index.ts", "outdent": "https://deno.land/x/outdent@v0.8.0/mod.ts", "cliffy/": "https://deno.land/x/cliffy@v0.25.7/", "s3": "https://deno.land/x/s3@0.5.0/mod.ts", "deno/": "https://deno.land/std@0.196.0/", "libtea": "https://deno.land/x/libtea@v0.11.2/mod.ts", "libtea/": "https://deno.land/x/libtea@v0.11.2/src/", "tea": "./lib/tea.ts"}}
{"tasks": {"dev": "deno run -A --no-check --watch=content,src/app.tsx,server.tsx ./dev.ts", "build": "deno run -A ./build.ts", "start": "ULTRA_MODE=production deno run -A --location http://localhost:8000 ./server.js"}, "lock": false, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react"}, "importMap": "./importMap.json"}
{"tasks": {"dev": "deno run -A --no-check --watch ./server.js", "build": "deno run -A ./build.js", "start": "ULTRA_MODE=production deno run -A --no-remote ./server.js"}, "lock": false, "importMap": "./importMap.json"}
{"lock": false, "tasks": {"build-npm": "deno run -A scripts/build_npm.ts $(git describe --tags --always --dirty)", "test": "deno test --unstable -A --parallel --doc", "check": "deno check --unstable $(find . -name '*.ts')", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts' -not -path '*/npm/*')"}}
{"lock": false, "tasks": {"serve": "deno run --unstable -A https://raw.githubusercontent.com/skymethod/denoflare/b9482919cbecd59de6ad862043b720de3df50970/cli/cli.ts serve worker/worker.ts --watch-include ./worker/static --text-binding instance:local --do-namespace-binding backendNamespace:local:BackendDO:storage=webstorage:container=op3-local --secret-binding adminTokens:localadmintoken  --secret-binding previewTokens:localpreviewtoken", "tailwind": "npx tailwindcss --content ./worker/static/home.htm,./worker/static/terms.htm,./worker/static/privacy.htm,./worker/static/header.htm,./worker/static/releases.htm,./worker/static/404.htm,./worker/static/costs.htm,./worker/routes/costs.ts,./worker/static/api_keys.htm,./worker/static/setup.htm,./worker/static/show.htm,./worker/static/download_calculation.htm,./worker/static/stats.htm -i ./worker/static/input.css -o ./worker/static/output.css --watch"}}
{"lock": false, "tasks": {"test": "deno test --unstable -A --doc --parallel --shuffle", "check": "deno check --unstable $(find . -name '*.ts')", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "importMap": "import_map.json", "lint": {"files": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "importMap": "import_map.json", "lint": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"importMap": "import_map.json", "tasks": {"build": "                deno run --lock --allow-write=./out --allow-read=./out,./src         ./main.ts build --profile", "watch": "rm -rf ./out && deno run --lock --allow-write=./out --allow-read=./out,./src --watch ./main.ts watch", "serve": "deno task watch & deno run --allow-net --allow-read https://deno.land/std@0.190.0/http/file_server.ts -- out/res"}}
{"extends": "./tsconfig.json", "compilerOptions": {"lib": ["dom", "deno.ns", "es2019"]}}
{"0.1.0": {"info": {"author": "Dmitriy Sintsov", "author_email": "questpc256@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dmitri-Sintsov/django-deno", "keywords": "django,deno,rollup,runserver,collectstatic", "license": "LGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-deno", "package_url": "https://pypi.org/project/django-deno/", "platform": null, "project_url": "https://pypi.org/project/django-deno/", "project_urls": {"Homepage": "https://github.com/Dmitri-Sintsov/django-deno"}, "release_url": "https://pypi.org/project/django-deno/0.1.0/", "requires_dist": ["Django", "ijson", "jsonschema", "psutil", "requests"], "requires_python": "", "summary": "Deno front-end integration for Django", "version": "0.1.0", "yanked": false, "yanked_reason": null}, "last_serial": 17814420, "urls": [{"comment_text": "", "digests": {"blake2b_256": "d9c13c8fb228fe1c3e8a81037d0a6180443d7689552ac9fda789d6ea16db1e4c", "md5": "7a9004bc8f1c2f79097928b2f426affb", "sha256": "c18dc0b0b74d2daf25d586522466420669130f474e1b0a9a633dfa33d85013d7"}, "downloads": -1, "filename": "django_deno-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7a9004bc8f1c2f79097928b2f426affb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 821613, "upload_time": "2022-03-15T10:23:25", "upload_time_iso_8601": "2022-03-15T10:23:25.858680Z", "url": "https://files.pythonhosted.org/packages/d9/c1/3c8fb228fe1c3e8a81037d0a6180443d7689552ac9fda789d6ea16db1e4c/django_deno-0.1.0-py2.py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "e00db10e087285c0d005a9840637a9f06b953a2319b684e5c6bb505a62535caf", "md5": "faed79fef542cf1c155c1fd313501572", "sha256": "80abdd00ab4ce18a6d165417e2e89d074a088c6a998b10805b2096101f16d735"}, "downloads": -1, "filename": "django-deno-0.1.0.tar.gz", "has_sig": false, "md5_digest": "faed79fef542cf1c155c1fd313501572", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 702614, "upload_time": "2022-03-15T10:23:28", "upload_time_iso_8601": "2022-03-15T10:23:28.096980Z", "url": "https://files.pythonhosted.org/packages/e0/0d/b10e087285c0d005a9840637a9f06b953a2319b684e5c6bb505a62535caf/django-deno-0.1.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}, "0.1.1": {"info": {"author": "Dmitriy Sintsov", "author_email": "questpc256@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dmitri-Sintsov/django-deno", "keywords": "django,deno,rollup,runserver,collectstatic", "license": "LGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-deno", "package_url": "https://pypi.org/project/django-deno/", "platform": null, "project_url": "https://pypi.org/project/django-deno/", "project_urls": {"Homepage": "https://github.com/Dmitri-Sintsov/django-deno"}, "release_url": "https://pypi.org/project/django-deno/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Deno front-end integration for Django", "version": "0.1.1", "yanked": false, "yanked_reason": null}, "last_serial": 17814420, "urls": [{"comment_text": "", "digests": {"blake2b_256": "297faa32d898dacec14b20db0a0a94dd33ae3751b2ea3fd57c05d33f331ce332", "md5": "35e112bd0e46cd4f58f555d46ac27f6a", "sha256": "798e2d06074e4bf6f3d3ea930782c5418d39056817cd7c1f016e8297015c4bba"}, "downloads": -1, "filename": "django_deno-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35e112bd0e46cd4f58f555d46ac27f6a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 821624, "upload_time": "2022-03-23T10:41:22", "upload_time_iso_8601": "2022-03-23T10:41:22.284752Z", "url": "https://files.pythonhosted.org/packages/29/7f/aa32d898dacec14b20db0a0a94dd33ae3751b2ea3fd57c05d33f331ce332/django_deno-0.1.1-py2.py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "0f30ebf77de6ec448c2a8065ad535c03c39586e9a2b6fd9bcaae482378aef7f2", "md5": "d73685b7625657a88a8f84d3a89628b7", "sha256": "90708dad5fd9cd9f64c0f0a4632bbcc2104f48ebb63894a5992029bb995db79b"}, "downloads": -1, "filename": "django-deno-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d73685b7625657a88a8f84d3a89628b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 712046, "upload_time": "2022-03-23T10:36:55", "upload_time_iso_8601": "2022-03-23T10:36:55.697469Z", "url": "https://files.pythonhosted.org/packages/0f/30/ebf77de6ec448c2a8065ad535c03c39586e9a2b6fd9bcaae482378aef7f2/django-deno-0.1.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}, "0.1.2": {"info": {"author": "Dmitriy Sintsov", "author_email": "questpc256@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dmitri-Sintsov/django-deno", "keywords": "django,deno,rollup,runserver,collectstatic", "license": "LGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-deno", "package_url": "https://pypi.org/project/django-deno/", "platform": null, "project_url": "https://pypi.org/project/django-deno/", "project_urls": {"Homepage": "https://github.com/Dmitri-Sintsov/django-deno"}, "release_url": "https://pypi.org/project/django-deno/0.1.2/", "requires_dist": ["Django", "jsonschema", "ijson", "requests", "psutil"], "requires_python": "", "summary": "Deno front-end integration for Django", "version": "0.1.2", "yanked": false, "yanked_reason": null}, "last_serial": 17814420, "urls": [{"comment_text": "", "digests": {"blake2b_256": "22b30481f898083e78d17dabe5bd5743ca0e89f138494f7cbf3513cb73addbdc", "md5": "72a0379a75ad270f1c5763ce24a46500", "sha256": "c511fabec1edca3c025c1718003fd0fc208d9c8e49602f3fee31b117b52896b7"}, "downloads": -1, "filename": "django_deno-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "72a0379a75ad270f1c5763ce24a46500", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 819491, "upload_time": "2022-06-18T10:36:29", "upload_time_iso_8601": "2022-06-18T10:36:29.123258Z", "url": "https://files.pythonhosted.org/packages/22/b3/0481f898083e78d17dabe5bd5743ca0e89f138494f7cbf3513cb73addbdc/django_deno-0.1.2-py2.py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "42e0e8d78536e7eaeedd73c01fb531f1e52f1bb6ffca8f1bce0210a44225d1c6", "md5": "c89eea3b4e16ab85e692d0478784b687", "sha256": "357107a2aef6faa0fc9b843920d06fc14131c650b37f9b176cf281ca170bfdaa"}, "downloads": -1, "filename": "django-deno-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c89eea3b4e16ab85e692d0478784b687", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 712105, "upload_time": "2022-06-18T10:36:31", "upload_time_iso_8601": "2022-06-18T10:36:31.683202Z", "url": "https://files.pythonhosted.org/packages/42/e0/e8d78536e7eaeedd73c01fb531f1e52f1bb6ffca8f1bce0210a44225d1c6/django-deno-0.1.2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}, "0.1.3": {"info": {"author": "Dmitriy Sintsov", "author_email": "questpc256@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dmitri-Sintsov/django-deno", "keywords": "django,deno,rollup,runserver,collectstatic", "license": "LGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-deno", "package_url": "https://pypi.org/project/django-deno/", "platform": null, "project_url": "https://pypi.org/project/django-deno/", "project_urls": {"Homepage": "https://github.com/Dmitri-Sintsov/django-deno"}, "release_url": "https://pypi.org/project/django-deno/0.1.3/", "requires_dist": ["Django", "jsonschema", "ijson", "requests", "psutil"], "requires_python": "", "summary": "Deno front-end integration for Django", "version": "0.1.3", "yanked": false, "yanked_reason": null}, "last_serial": 17814420, "urls": [{"comment_text": "", "digests": {"blake2b_256": "9bd03192c5723bc07ae15c7aed9225139c8e80bdc35065b25fcf82b8758434ca", "md5": "349c28721737916455132da0233566be", "sha256": "5af80fa69808957b9ea9408e0abe116d95c52b1b8b8d5faae57896c1879324f3"}, "downloads": -1, "filename": "django_deno-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "349c28721737916455132da0233566be", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 819388, "upload_time": "2023-04-21T16:48:06", "upload_time_iso_8601": "2023-04-21T16:48:06.004892Z", "url": "https://files.pythonhosted.org/packages/9b/d0/3192c5723bc07ae15c7aed9225139c8e80bdc35065b25fcf82b8758434ca/django_deno-0.1.3-py2.py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}, "0.1.4": {"info": {"author": "Dmitriy Sintsov", "author_email": "questpc256@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dmitri-Sintsov/django-deno", "keywords": "django,deno,rollup,runserver,collectstatic", "license": "LGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "django-deno", "package_url": "https://pypi.org/project/django-deno/", "platform": null, "project_url": "https://pypi.org/project/django-deno/", "project_urls": {"Homepage": "https://github.com/Dmitri-Sintsov/django-deno"}, "release_url": "https://pypi.org/project/django-deno/0.1.4/", "requires_dist": ["Django", "jsonschema", "ijson", "requests", "psutil"], "requires_python": "", "summary": "Deno front-end integration for Django", "version": "0.1.4", "yanked": false, "yanked_reason": null}, "last_serial": 17814420, "urls": [{"comment_text": "", "digests": {"blake2b_256": "88ccb442a1072b512ef0e3fbb5f8deefb70646ba17a9aca96f62feb682c9acc5", "md5": "41035865c0936354fb65f06b995a7377", "sha256": "3de583f3b2b727ab07441c5580c3bb3c5a79f2fc4dc61688b5681b44e77a6ca0"}, "downloads": -1, "filename": "django_deno-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "41035865c0936354fb65f06b995a7377", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 819388, "upload_time": "2023-04-22T12:24:20", "upload_time_iso_8601": "2023-04-22T12:24:20.236294Z", "url": "https://files.pythonhosted.org/packages/88/cc/b442a1072b512ef0e3fbb5f8deefb70646ba17a9aca96f62feb682c9acc5/django_deno-0.1.4-py2.py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"tasks": {"build": "deno run -A --unstable https://raw.githubusercontent.com/denoland/wasmbuild/0e62b100df246567bee43eea227456222b7fc1dd/main.ts && deno task build:compress", "build:local": "deno run -A --unstable ../wasmbuild/main.ts && deno task build:compress", "build:compress": "deno run --allow-read --allow-write compress.ts", "fmt": "deno fmt --ignore=swc_wasm,lib,target --unstable && cargo fmt", "test": "deno test -A --no-check tests/"}}
{"fmt": {"files": {"include": ["browser/browser_client.ts", "browser/index.ts", "client", "deno", "lib", "node/index.ts", "node/node_client.ts", "packets"]}}, "lint": {"files": {"include": ["browser/browser_client.ts", "browser/index.ts", "client", "deno", "lib", "node/node_client.ts", "node/node_client.ts", "packets"]}}, "test": {"files": {"include": ["client", "packets"]}}, "tasks": {"tsc": "deno check deno/mod.ts browser/index.ts node/index.ts", "check": "deno lint && deno task tsc && deno test"}}
{"name": "${PACKAGE_NAME}", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"name": "${PACKAGE_NAME}", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"name": "${PACKAGE_NAME}", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"name": "${PACKAGE_NAME}", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"fmt": {"lineWidth": 100}}
{"fmt": {"lineWidth": 100}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-read --allow-write --allow-env --allow-net aptos-codegen.ts"}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-read --allow-write --allow-env --allow-net aptos-codegen.ts"}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-read --allow-write --allow-env --allow-net aptos-codegen.ts"}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-read --allow-write --allow-env --allow-net aptos-codegen.ts"}}
{"tasks": {"build": "deno run --allow-all --unstable './tasks/build.ts'", "dev": "deno run --allow-all --unstable './tasks/dev.ts'"}, "imports": {"std/": "https://deno.land/std@0.174.0/", "wire": "https://deno.land/x/wire@v2.0.0-alpha.2/mod.ts"}}
{"importMap": "./import_map.jsonc", "compilerOptions": {"strict": true}, "tasks": {"compile": "deno compile -A -r --import-map src/import_map.jsonc --config deno.jsonc --output build/server mod.ts", "run": "deno run --allow-net --allow-env --allow-write --allow-read --watch mod.ts"}}
{"importMap": "./import_map.jsonc", "compilerOptions": {"strict": true}, "tasks": {"compile": "deno compile -A -r --import-map src/import_map.jsonc --config deno.jsonc --output build/server mod.ts", "run": "deno run --allow-net --allow-env --allow-write --allow-read --watch mod.ts"}}
{"lock": false, "tasks": {"test": "deno test --unstable -A --parallel --shuffle --doc --coverage=.coverage", "check": "deno check --unstable $(find . -name '*.ts')", "coverage": "deno coverage --unstable .coverage", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"fmt": {"options": {"indentWidth": 2, "lineWidth": 80, "proseWrap": "preserve", "singleQuote": true, "useTabs": false}}}
{"lock": "deno.lock"}
{"lock": "deno.lock"}
{"lock": "deno.lock"}
{"lock": "deno.lock"}
{"lock": false, "tasks": {"test": "deno test --unstable -A --doc --parallel --shuffle", "check": "deno check --unstable $(find . -name '*.ts')", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "importMap": "import_map.json", "lint": {"files": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "importMap": "import_map.json", "lint": {"files": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "importMap": "import_map.json", "lint": {"files": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "importMap": "import_map.json", "lint": {"files": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "importMap": "import_map.json", "lint": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "importMap": "import_map.json", "lint": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "importMap": "import_map.json", "lint": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"include": ["README.md", "datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "importMap": "import_map.json", "lint": {"include": ["datastores", "external_auth", "functions", "manifest.ts", "triggers", "types", "views", "workflows"]}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}}
{"lock": false, "tasks": {"test": "deno test -A --parallel", "fixture": "deno run -A --watch=static/,routes/ tests/fixture/dev.ts", "www": "deno task --cwd=www start", "screenshot": "deno run -A www/utils/screenshot.ts", "check:types": "deno check **/*.ts && deno check **/*.tsx", "ok": "deno fmt --check && deno lint && deno task check:types && deno task test"}, "importMap": "./.vscode/import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"dev": "deno run -A tools/dev.ts", "test": "deno task test:unit && deno task test:fixture && deno task test:examples", "test:unit": "deno test -A --reload ./test/unit", "test:fixture": "deno run -A --reload ./test/fixture.ts", "test:examples": "deno run -A --reload ./tools/test-examples.ts basic with-csr with-unocss with-wouter", "version-bump:minor": "deno run -A tools/patch.ts --release=minor", "version-bump:patch": "deno run -A tools/patch.ts --release=patch"}, "lock": false, "lint": {"files": {"exclude": [".deno-cache"]}}, "fmt": {"files": {"exclude": [".deno-cache"]}, "options": {"indentWidth": 2, "useTabs": false, "singleQuote": false}}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}, "importMap": "./importMap.dev.json"}
{"compilerOptions": {"allowJs": false, "allowUmdGlobalAccess": false, "allowUnreachableCode": false, "allowUnusedLabels": false, "alwaysStrict": true, "assumeChangesOnlyAffectDirectDependencies": false, "checkJs": false, "disableSizeLimit": false, "generateCpuProfile": "profile.cpuprofile", "jsx": "react", "jsxFactory": "React.createElement", "lib": [], "noFallthroughCasesInSwitch": false, "noImplicitAny": true, "noImplicitReturns": true, "noImplicitThis": true, "noImplicitUseStrict": false, "noStrictGenericChecks": false, "noUnusedLocals": false, "noUnusedParameters": false, "preserveConstEnums": false, "removeComments": false, "resolveJsonModule": true, "strict": true, "strictBindCallApply": true, "strictFunctionTypes": true, "strictNullChecks": true, "strictPropertyInitialization": true, "suppressExcessPropertyErrors": false, "suppressImplicitAnyIndexErrors": false, "useDefineForClassFields": false}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-write main.ts", "test": "deno test --allow-net --allow-read --allow-write"}, "imports": {"std/": "https://deno.land/std@0.79.0/"}, "fmt": {"options": {"lineWidth": 120}}, "lock": false}
{"title": "How To Deno", "story": [{"type": "paragraph", "id": "cd57527eab359496", "text": "Here we learn our way around the deno documentation. When finding something turns out to be difficult, we save a link. When things seem pretty obvious, we rearrange to reflect our new understanding."}, {"type": "paragraph", "id": "8f98b0cf0a585982", "text": "These modules do not have external dependencies and they are reviewed by the Deno core team. The intention is to have a standard set of high quality code that all Deno projects can use fearlessly. [https://deno.land/std/README.md std]"}, {"type": "paragraph", "id": "c5651bdf0d9f84d1", "text": "Run a subprocess, get status, and use pipes. [https://deno.land/std/manual.md#run-subprocess std]"}, {"type": "paragraph", "id": "0e317c0360e20263", "text": "Plunder the file system, exists, etc. [https://deno.land/std/fs/#exists std]"}], "journal": [{"type": "create", "item": {"title": "How To Deno", "story": []}, "date": 1584227906609}, {"item": {"type": "factory", "id": "cd57527eab359496"}, "id": "cd57527eab359496", "type": "add", "date": 1584227908472}, {"type": "edit", "id": "cd57527eab359496", "item": {"type": "paragraph", "id": "cd57527eab359496", "text": "Here we learn our way around the deno documentation. When finding something turns out to be difficult, we save a link. When things seem pretty obvious, we rearrange to reflect our new understanding."}, "date": 1584227985839}, {"type": "add", "id": "c5651bdf0d9f84d1", "item": {"type": "paragraph", "id": "c5651bdf0d9f84d1", "text": "Run a subprocess, get status on completion, and talk to it with pipes. "}, "after": "cd57527eab359496", "date": 1584228047617}, {"type": "edit", "id": "c5651bdf0d9f84d1", "item": {"type": "paragraph", "id": "c5651bdf0d9f84d1", "text": "Run a subprocess, get status, and stream with pipes. [https://deno.land/std/manual.md#run-subprocess std]"}, "date": 1584228103922}, {"type": "edit", "id": "c5651bdf0d9f84d1", "item": {"type": "paragraph", "id": "c5651bdf0d9f84d1", "text": "Run a subprocess, get status, and use pipes. [https://deno.land/std/manual.md#run-subprocess std]"}, "date": 1584228116190}, {"type": "add", "id": "0e317c0360e20263", "item": {"type": "paragraph", "id": "0e317c0360e20263", "text": "Plunder the file system. [https://deno.land/std/fs/ std]"}, "after": "c5651bdf0d9f84d1", "date": 1584285094116}, {"type": "edit", "id": "0e317c0360e20263", "item": {"type": "paragraph", "id": "0e317c0360e20263", "text": "Plunder the file system, exists, etc. [https://deno.land/std/fs/ std]"}, "date": 1584285144055}, {"type": "edit", "id": "0e317c0360e20263", "item": {"type": "paragraph", "id": "0e317c0360e20263", "text": "Plunder the file system, exists, etc. [https://deno.land/std/fs/#exists std]"}, "date": 1584285270848}, {"type": "add", "id": "8f98b0cf0a585982", "item": {"type": "paragraph", "id": "8f98b0cf0a585982", "text": "These modules do not have external dependencies and they are reviewed by the Deno core team. The intention is to have a standard set of high quality code that all Deno projects can use fearlessly."}, "after": "cd57527eab359496", "date": 1584292612335}, {"type": "edit", "id": "8f98b0cf0a585982", "item": {"type": "paragraph", "id": "8f98b0cf0a585982", "text": "These modules do not have external dependencies and they are reviewed by the Deno core team. The intention is to have a standard set of high quality code that all Deno projects can use fearlessly. [https://deno.land/std/README.md std]"}, "date": 1584292628598}]}
{"0.0.1": {"info": {"author": "", "author_email": "Emil Kloeden <emilkloeden@gmail.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aoc-cli-deno", "package_url": "https://pypi.org/project/aoc-cli-deno/", "platform": null, "project_url": "https://pypi.org/project/aoc-cli-deno/", "project_urls": {"Bug Tracker": "https://github.com/emilkloeden/aoc-cli-deno/issues", "Homepage": "https://github.com/emilkloeden/aoc-cli-deno"}, "release_url": "https://pypi.org/project/aoc-cli-deno/0.0.1/", "requires_dist": ["aoc-cli-core (>=0.0.1)"], "requires_python": ">=3.10", "summary": "Advent of Code scaffolding CLI Deno plugin", "version": "0.0.1", "yanked": false, "yanked_reason": null}, "last_serial": 16608169, "urls": [{"comment_text": "", "digests": {"blake2b_256": "85ff21ade54cbbb512e6faef60b486f79594bb2ba9ba9c15a3e75e82b074c97c", "md5": "bfa29a05d01458c6373d99f52805389a", "sha256": "c5693280563369350997b692c95b235e39a74338a78fbfe6764baea29370670e"}, "downloads": -1, "filename": "aoc_cli_deno-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bfa29a05d01458c6373d99f52805389a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 6384, "upload_time": "2023-01-23T07:34:21", "upload_time_iso_8601": "2023-01-23T07:34:21.192955Z", "url": "https://files.pythonhosted.org/packages/85/ff/21ade54cbbb512e6faef60b486f79594bb2ba9ba9c15a3e75e82b074c97c/aoc_cli_deno-0.0.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "8f64e920edb8ff44ff33673a0a5bc6b19461f47c7d505f5b649ea66e1b76354e", "md5": "647ed1c10dedb8aeff0c2d3d14b70076", "sha256": "b83890a6c776d75b41a532733e3a4d02a43a973e14a14a1257fdeec8543e4deb"}, "downloads": -1, "filename": "aoc-cli-deno-0.0.1.tar.gz", "has_sig": false, "md5_digest": "647ed1c10dedb8aeff0c2d3d14b70076", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 4862, "upload_time": "2023-01-23T07:34:22", "upload_time_iso_8601": "2023-01-23T07:34:22.931467Z", "url": "https://files.pythonhosted.org/packages/8f/64/e920edb8ff44ff33673a0a5bc6b19461f47c7d505f5b649ea66e1b76354e/aoc-cli-deno-0.0.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}, "0.0.2": {"info": {"author": "", "author_email": "Emil Kloeden <emilkloeden@gmail.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aoc-cli-deno", "package_url": "https://pypi.org/project/aoc-cli-deno/", "platform": null, "project_url": "https://pypi.org/project/aoc-cli-deno/", "project_urls": {"Bug Tracker": "https://github.com/emilkloeden/aoc-cli-deno/issues", "Homepage": "https://github.com/emilkloeden/aoc-cli-deno"}, "release_url": "https://pypi.org/project/aoc-cli-deno/0.0.2/", "requires_dist": ["aoc-cli-core (==0.0.2)"], "requires_python": ">=3.10", "summary": "Advent of Code scaffolding CLI Deno plugin", "version": "0.0.2", "yanked": false, "yanked_reason": null}, "last_serial": 16608169, "urls": [{"comment_text": "", "digests": {"blake2b_256": "8d90927dd12d5cf202485ef20fd5e7e162751fbbdb4d671ee964a3e354b561c9", "md5": "28ea9d76beaa59d1a43bed1f82840adf", "sha256": "c765cdf0733773ee592618eaf33bc8b0f1e32f64b23fc472d4619c923e829f6a"}, "downloads": -1, "filename": "aoc_cli_deno-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "28ea9d76beaa59d1a43bed1f82840adf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 6399, "upload_time": "2023-01-23T08:07:15", "upload_time_iso_8601": "2023-01-23T08:07:15.013072Z", "url": "https://files.pythonhosted.org/packages/8d/90/927dd12d5cf202485ef20fd5e7e162751fbbdb4d671ee964a3e354b561c9/aoc_cli_deno-0.0.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "ffca733fdd0e01ed3b4ace109e7dcf2da9d0e579a65115543ae3ace796bc8ae3", "md5": "8d21d289ef84165dfa1c7b4275cfd158", "sha256": "21401343c1b612b171b807ba0a79a2e6aa415dacd66a31276f263ab611e526e0"}, "downloads": -1, "filename": "aoc-cli-deno-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8d21d289ef84165dfa1c7b4275cfd158", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 4853, "upload_time": "2023-01-23T08:07:17", "upload_time_iso_8601": "2023-01-23T08:07:17.212060Z", "url": "https://files.pythonhosted.org/packages/ff/ca/733fdd0e01ed3b4ace109e7dcf2da9d0e579a65115543ae3ace796bc8ae3/aoc-cli-deno-0.0.2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}, "0.0.3": {"info": {"author": "", "author_email": "Emil Kloeden <emilkloeden@gmail.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aoc-cli-deno", "package_url": "https://pypi.org/project/aoc-cli-deno/", "platform": null, "project_url": "https://pypi.org/project/aoc-cli-deno/", "project_urls": {"Bug Tracker": "https://github.com/emilkloeden/aoc-cli-deno/issues", "Homepage": "https://github.com/emilkloeden/aoc-cli-deno"}, "release_url": "https://pypi.org/project/aoc-cli-deno/0.0.3/", "requires_dist": ["aoc-cli-core (==0.0.2)"], "requires_python": ">=3.10", "summary": "Advent of Code scaffolding CLI Deno plugin", "version": "0.0.3", "yanked": false, "yanked_reason": null}, "last_serial": 16608169, "urls": [{"comment_text": "", "digests": {"blake2b_256": "a3676efffadd061d1b6e0294a6f163692632a531711f1a2329e236548e38925a", "md5": "9f152c8273de8d5411404a7a6e462360", "sha256": "0f6ebd20dccb0277d361c9fcbcd0633031b5d2d9b0af3e9aa366a40bc07e1122"}, "downloads": -1, "filename": "aoc_cli_deno-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9f152c8273de8d5411404a7a6e462360", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 6395, "upload_time": "2023-01-23T09:08:56", "upload_time_iso_8601": "2023-01-23T09:08:56.293081Z", "url": "https://files.pythonhosted.org/packages/a3/67/6efffadd061d1b6e0294a6f163692632a531711f1a2329e236548e38925a/aoc_cli_deno-0.0.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "a66628645ad8013c7b260b9d290df955eafa2824a56fda24649860cdf861c5cd", "md5": "a9cf73d7cbc4af2277bb9737c361e2a8", "sha256": "3f7aa1ab675f19d7115a0a79c1084e85a47f71b834851f3d3e70aa1ed5347aad"}, "downloads": -1, "filename": "aoc-cli-deno-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a9cf73d7cbc4af2277bb9737c361e2a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 4817, "upload_time": "2023-01-23T09:08:58", "upload_time_iso_8601": "2023-01-23T09:08:58.263737Z", "url": "https://files.pythonhosted.org/packages/a6/66/28645ad8013c7b260b9d290df955eafa2824a56fda24649860cdf861c5cd/aoc-cli-deno-0.0.3.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}, "0.0.4": {"info": {"author": "", "author_email": "Emil Kloeden <emilkloeden@gmail.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aoc-cli-deno", "package_url": "https://pypi.org/project/aoc-cli-deno/", "platform": null, "project_url": "https://pypi.org/project/aoc-cli-deno/", "project_urls": {"Bug Tracker": "https://github.com/emilkloeden/aoc-cli-deno/issues", "Homepage": "https://github.com/emilkloeden/aoc-cli-deno"}, "release_url": "https://pypi.org/project/aoc-cli-deno/0.0.4/", "requires_dist": ["aoc-cli-core (==0.0.2)"], "requires_python": ">=3.10", "summary": "Advent of Code scaffolding CLI Deno plugin", "version": "0.0.4", "yanked": false, "yanked_reason": null}, "last_serial": 16608169, "urls": [{"comment_text": "", "digests": {"blake2b_256": "d7f52ec1440d6fbd05ea61045da1d568f438d715ebd5a555a65eef75c24c4bb1", "md5": "4cb41e765b65cf0049c92da77960ddbd", "sha256": "b97d8f1d3953fd950a70fcf3f13422ea934e5022c76bb49338e443ccdf1b758a"}, "downloads": -1, "filename": "aoc_cli_deno-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4cb41e765b65cf0049c92da77960ddbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 6263, "upload_time": "2023-01-29T12:02:27", "upload_time_iso_8601": "2023-01-29T12:02:27.625048Z", "url": "https://files.pythonhosted.org/packages/d7/f5/2ec1440d6fbd05ea61045da1d568f438d715ebd5a555a65eef75c24c4bb1/aoc_cli_deno-0.0.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "90518ec6659b7f763ab565ab56c5ccb2175114da974c76b08ad7f6fe2288fdd2", "md5": "de2bd6533f6034baaa885f5f52d80a23", "sha256": "36671bc5187729ef7bb0c5fb2ca8fa23ae9dcd5e63685d91784e25230aa7a9be"}, "downloads": -1, "filename": "aoc-cli-deno-0.0.4.tar.gz", "has_sig": false, "md5_digest": "de2bd6533f6034baaa885f5f52d80a23", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 4688, "upload_time": "2023-01-29T12:02:30", "upload_time_iso_8601": "2023-01-29T12:02:30.796948Z", "url": "https://files.pythonhosted.org/packages/90/51/8ec6659b7f763ab565ab56c5ccb2175114da974c76b08ad7f6fe2288fdd2/aoc-cli-deno-0.0.4.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"imports": {"@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union"}}
{"name": "deno", "languageId": "typescript", "command": ["deno", "lsp"], "settings": {"deno": {"enable": true}}}
{"Release": "D07A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "RFF", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"model": "gpt-3.5-turbo-0301", "prompt": [{"role": "user", "content": "You are the author of a personal technical blog about software engineering and computer science subjects."}, {"role": "user", "content": "New topics for blog posts should be based off of the technical skills, experience, and interests presented in the following resume:\n+++\ntitle = \"R\u00e9sum\u00e9\"\ndescription = \"Derek Cuevas' R\u00e9sum\u00e9\"\ndate = \"2023-06-11\"\nor = \"Derek Cuevas\"\n+++\n\n# Derek Cuevas\n\n[GitHub](https://github.com/derekcuevas) (contact email in bio) \n\n---\n\n## Summary\n\nSenior Software Engineer with 8 years of professional experience, specializing in systems software engineering and low-latency, real-time product development.\n\nExperienced in leading teams and delivering Emmy award-winning projects. Passionate about functional programming and building high performance real-time systems. Skilled in a variety of programming languages and technologies with expertise in [Rust](https://www.rust-lang.org/) and [TypeScript](https://www.typescriptlang.org/).\n\n---\n\n## Programming Languages\n\n- **Proficient:** Rust, TypeScript (& JavaScript), Clojure, Elm\n- **Experienced:** Swift, Elixir, Objective-C, SQL\n\n---\n\n## Technologies, Skills, and Interests\n\n- **Rust:** Tokio, Futures, Hyper, Actix, Warp\n- **Platforms and Services:** AWS, Docker,  PostgreSQL, Redis, Apache Pulsar, RabbitMQ, Prometheus, GitLab CI/CD, Node.js, Deno, HTML & CSS\n- **Tooling:** Git, Vim, Bash\n- **Frameworks:** React, React Native, Redux, RxJs, SwiftUI, Phoenix\n- **Protocols:** HTTP, GraphQL, WebSockets, \u00d8MQ, Pub/Sub, JSON, MessagePack, Protobuf, FlatBuffers\n- **Paradigms:** Functional Programming, Real-time Systems\n\n---\n\n## Professional Experience\n\n### Senior Software Engineer II (Lead), Second Spectrum (acquired by Genius Sports)\n(*January 2021 - Current*)\n\n[https://geniussports.com/](https://geniussports.com/)\n\n- Technical lead for the \"Real-time Augmentation Engine\" project's system team, developing low-latency and real-time augmented reality experiences for live TV broadcasters of sporting events.\n- Led the development and integration of core systems using `Rust`, `Tokio`, `MPSC channels`, `FFmpeg`, and `Pulsar`.\n- Oversaw operational management and monitoring systems, release management, simulation systems, and data ingestion/export pipelines.\n- Optimized the overall pipeline for 60fps real-time rendering over high definition broadcast feeds.\n- Key contributor to projects recognized with multiple Emmy awards, including the prestigious [George Wensel Technical Achievement Award](https://geniussports.com/customer-stories/cbs-and-genius-win-sports-emmy-for-romovision/) and Amazon's [Outstanding Interactive Experience](https://www.aboutamazon.com/news/entertainment/thursday-night-football-on-prime-video-wins-sports-emmy-award) at the `Sports Emmys`.\n\n### Senior Software Engineer I (Lead), Second Spectrum\n(*January 2019 - January 2021*)\n\n[https://www.secondspectrum.com/](https://www.secondspectrum.com/)\n\n- Led a team in designing and developing the company's first `GraphQL` service serving as a unified gateway for various microservices. Built upon the `Apollo` server framework leveraging `Node.js`, `TypeScript`, `PostgreSQL`, and `Redis` for caching and pub/sub.\n- Developed a dashboard built with `Three.js` for visualizing 3D player tracking datasets and highlighting data discrepancies.\n- Created a prototype `iOS` application for video highlights using `Swift`, `SwiftUI`, and the `Combine` framework.\n- Mentored interns and fellow engineers, fostering collaboration and knowledge sharing.\n\n### Software Engineer, Second Spectrum\n(*August 2016 - January 2019*)\n\n[https://www.secondspectrum.com/](https://www.secondspectrum.com/)\n\n- Developed the operational and quality assurance management application for the company's optical player tracking system. Stack included `Elixir` (with the `Phoenix` framework), `React`, and heavy use of `WebSockets` to sync and display corrections to operators in near real-time.\n- Improved operator efficiency by 100% through the implementation of an automated task selection system.\n- Led the development of the LA Clipper's live streaming web and mobile application \"Clippers CourtVision\". Stack included `Elm` for the web front-end and `React Native` for the mobile app.\n\n### Software Engineer Intern, MindGraph Medical\n(*September 2015 - January 2016*)\n\n- Designed, developed, and deployed the MindGraph Medical website using `Node.js`, `jQuery`, and `Bootstrap`.\n\n---\n\n## Education\n\n**B.S. Computer Science, San Diego State University, San Diego**\n\n(*Class of 2016*)\n\n- [Advanced Certificate in Web and Mobile Applications Development](https://cs.sdsu.edu/about/)\n\n---\n\n## Personal Projects\n\n- [FYGT](https://github.com/DerekCuevas/derekcuevas.github.io): An experimental blog built with `Hugo`, `Deno`, and `ChatGPT`.\n- [Advent of Code 2022](https://github.com/DerekCuevas/advent-of-code-2022): Solutions to Advent of Code programming problems using functional approaches in `Clojure`.\n- [Interview Cake Algorithms Problem Set](https://github.com/DerekCuevas/interview-cake-clj): Solutions to the interview cake programming problems also by exploring functional approaches in `Clojure`.\n- [Friend List](https://github.com/DerekCuevas/friend-list): A non-trivial programming challenge exploring asynchronous side effects with different programming patterns.\n- [Redux Meta Reducer](https://github.com/DerekCuevas/redux-meta-reducer): A `Redux` higher-order reducer for simplifying the state of fetched data.\n- [Avowal](https://github.com/DerekCuevas/avowal): An asynchronous form validation library for `JavaScript`.\n"}, {"role": "user", "content": "Your previous 60 posts include: \"Advanced Techniques for Implementing the Decorator Design Pattern in Rust\", \"Building Robust and Secure GraphQL Servers with Rust\", \"Advanced Techniques for Working with WebSockets in Rust\", \"Understanding the Principles of Reactive Programming in Java\", \"The Power of Rust's Const Generics\", \"Mastering Rust's Parallel Iterator: A Comprehensive Guide\", \"Exploring Advanced Types in TypeScript: Mapped & Conditional Types\", \"Exploring the Rust Standard Library's `io` Module\", \"Mastering the Decorator Pattern in TypeScript\", \"Mastering Protocol Buffers in Rust\", \"Mastering Rust's Memory Allocation System\", \"Modern Web Development with SwiftNIO\", \"Mastering Rust's Result Type\", \"Building High-Performance Machine Learning Pipelines with Rust\", \"Advanced Techniques for Working with PostgreSQL Arrays\", \"Mastering HTML and CSS Accessibility: A Comprehensive Guide\", \"Mastering Apache Pulsar's Message Retention Policy\", \"Mastering TypeScript's Record Type\", \"Mastering Rust's Async/Await Syntax\", \"Mastering the Decorator Pattern in Rust\", \"The Power of Rust's Multithreading Library: A Comprehensive Guide\", \"Mastering the Svelte Framework: A Comprehensive Guide\", \"Best Practices for Integrating React and TypeScript\", \"Deep Dive into Functional Reactive Programming with RxJS\", \"Understanding Java Memory Model: A Comprehensive Guide\", \"Understanding the Fundamentals of Distributed Systems Programming in Go\", \"Effective Techniques for Building Blazing-Fast Mobile Apps with React Native\", \"Understanding the SOLID Principles of Object-Oriented Design\", \"Advanced Techniques for Scaling Node.js Applications\", \"Implementing the Facade Design Pattern in Swift\", \"Building Efficient Mobile Apps with React Native Flexbox\", \"The Power of the Copy-on-Write Methodology\", \"Writing Correct Web3 Smart Contracts with Solidity's Concerned Oxide (SCOCO) Conventions\", \"Demystifying Rust's 'unwrap()' Method\", \"Mastering Rust's Pattern Matching\", \"The Power of Streams in Java\", \"Mastering C++17 Template Argument Deduction\", \"Mastering the Composite Design Pattern in C\", \"Implementing the Command Design Pattern in Kotlin\", \"Mastering the Observer Design Pattern in Rust\", \"Understanding Scala's Implicits: A Comprehensive Guide\", \"Mastering Terraform's State File\", \"Title:\", \"Mastering the Decorator Design Pattern in TypeScript\", \"Mastering the Decorator Pattern in Java\", \"The Fundamentals of Concurrency in Elixir\", \"Mastering the Singleton Design Pattern in Java\", \"Building a Scalable and Secure Authorization System with Keycloak\", \"A Deep Dive into Rust's Ownership Model\", \"Best Practices for Building a High-Performance Web Application with Node.js\", \"Generating Synthetic Data with Python's Faker Library\", \"Understanding Rust's Unsafe Keyword\", \"How to use Access Control in Go\", \"Building a High-Performance Event Store with Apache Kafka\", \"Building a Highly Scalable Kafka Consumer in Go\", \"Building Type-Safe APIs with TypeScript\", \"Implementing the Flyweight Design Pattern in C\", \"Gaining Insights from Large Datasets Using Delta Lake\", \"Using the Observer Design Pattern in Scala\", \"The Builder Design Pattern in TypeScript\""}, {"role": "user", "content": "Come up with an advanced topic for an expert level reader that is about a particular single feature, fact, pattern, paradigm, convention, theory, framework, library, or best practice."}, {"role": "user", "content": "Write a post about the chosen topic following the instructions given below:"}, {"role": "user", "content": "Your writing style is academic, informative, and focused on detailed technical information."}, {"role": "user", "content": "The topic should not be related to a previous post."}, {"role": "user", "content": "Use computer code snippets (in the relevant programming language) in order to illustrate the information presented."}, {"role": "user", "content": "Format the body of the post in the markdown markup language."}, {"role": "user", "content": "Come up with a title for the post and include it on the first line."}, {"role": "user", "content": "Include one to three tags for the post on the second line formatted as a comma separated list, for example: \"Tags: <tag1>, <tag2>\"."}, {"role": "user", "content": "The post should be multiple sections in length."}, {"role": "user", "content": "Do not include links to images in the post."}, {"role": "user", "content": "Do not include contact information in the post."}, {"role": "user", "content": "Do not add extra whitespace around lists."}], "completion": {"id": "chatcmpl-7YkJauQZAOe0swLkh99k7W36LTGko", "object": "chat.completion", "created": 1688515542, "model": "gpt-3.5-turbo-0301", "choices": [{"index": 0, "message": {"role": "assistant", "content": "Title: Building High-Performance Websites with Deno\n\nTags: Deno, TypeScript, Rust\n\nDeno is a modern JavaScript and TypeScript runtime built using Rust. It is designed to be secure, performant, and maintainable. Deno is built with the latest web technologies and has a focus on server-side development. In this article, we will explore how to build high-performance websites using Deno.\n\n## Installing Deno\n\nBefore we start, let's make sure we have Deno installed on our machine. We can easily do this with the help of `curl` or `powershell`:\n\n```bash\ncurl -fsSL https://deno.land/x/install/install.sh | sh\n\n# or\n\niwr https://deno.land/x/install/install.ps1 -useb | iex\n```\n\nAfter Deno is installed, we can check its version using the following command:\n\n```bash\ndeno --version\n```\n\nThis should print out the current version of Deno that you have installed on your machine.\n\n## Building a Server\n\nLet's start by building a server that will serve our website. First, create an empty file `server.ts` and add the following code:\n\n```typescript\nimport { serve } from \"https://deno.land/std/http/server.ts\";\n\nconst server = serve({ port: 8000 });\n\nfor await (const request of server) {\n  request.respond({ body: \"Hello World\\n\" });\n}\n```\n\nWe are importing the `serve` function from the `http/server` module from the standard library and creating a new server that listens on port `8000`. When a request is made to the server, we respond with a \"Hello World\" message.\n\nTo start the server, run the following command:\n\n```bash\ndeno run --allow-net server.ts\n```\n\nThis will start the server which will respond to all incoming requests on port `8000`.\n\n## Serving Static Files\n\nNow let's serve some static files. We can use the `serveStatic` function from the `https://deno.land/x/serve` module to serve static files from the `public` folder.\n\nCreate a `public` folder in the same directory as the `server.ts` file with an `index.html` file that has some simple HTML:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello World</title>\n  </head>\n  <body>\n    <h1>Hello World</h1>\n    <p>This page was served from Deno.</p>\n  </body>\n</html>\n```\n\nThen add the following code to our `server.ts` file:\n\n```typescript\nimport { serve } from \"https://deno.land/std/http/server.ts\";\nimport { serveStatic } from \"https://deno.land/x/serve/mod.ts\";\n\nconst server = serve({ port: 8000 });\nconst staticServer = serveStatic(\".\", { index: \"index.html\" });\n\nfor await (const request of server) {\n  const result = await staticServer(request);\n  if (result) {\n    request.respond(result);\n  }\n}\n```\n\nThe `serveStatic` function is used to create a static file server that will serve files from the current directory. We are providing an `index` option with the value of `\"index.html\"`, which specifies that when a directory is requested, `index.html` should be served.\n\n## Adding TypeScript to Deno\n\nDeno comes with first-class support for TypeScript. You can use TypeScript in your Deno projects by simply using `.ts` files instead of `.js` files. To use TypeScript with Deno, you don't need any additional setup.\n\nLet's add a simple TypeScript file `main.ts` that uses a third-party package `lodash`:\n\n```typescript\nimport * as _ from \"https://deno.land/x/lodash/mod.ts\";\n\nconst numbers = [1, 2, 3, 4, 5];\nconst evens = _.filter(numbers, (n) => n % 2 === 0);\n\nconsole.log(evens);\n```\n\nWe are using the `filter` method from `lodash` to get all even numbers from an array of numbers.\n\nTo run this file, use the following command:\n\n```bash\ndeno run --allow-net main.ts\n```\n\nDeno will automatically download the `lodash` package and cache it. If you run the same command again, it will use the cached version.\n\n## Conclusion\n\nIn this article, we explored how to build high-performance websites using Deno. We learned how to create a server and serve static files using Deno's standard library. We also learned how to use TypeScript with Deno and how to use third-party packages. Deno's focus on security, performance, and maintainability makes it an excellent choice for building powerful and scalable web applications."}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 2183, "completion_tokens": 991, "total_tokens": 3174}}}
{"slug": "daily-D2Qj8QPd", "word": "denodada", "words": ["ado", "an\u00e3", "ano", "n\u00e3o", "noa", "ode", "aedo", "an\u00e3o", "dada", "dado", "dano", "de\u00e3o", "dedo", "dona", "nada", "nado", "onda", "onde", "aonde", "ded\u00e3o", "doada", "donde", "adendo", "dedada", "dedado", "ondeada", "denodada"], "definitions": {"adendo": "Ap\u00eandice.", "dano": "Estrago, danifica\u00e7\u00e3o.", "dedada": "Toque com o dedo.", "dedo": "Cada uma das partes articuladas em que terminam os p\u00e9s e as m\u00e3os.", "dona": "Mulher casada; esposa.", "nada": "Coisa nenhuma.", "onda": "Pegar (?): surfar.", "onde": "Em qual lugar?.", "dado": "Objeto que geralmente tem 6 lados.", "aedo": "Cantor ambulante, trovador.", "an\u00e3": "Mulher de estatura muito abaixo do normal.", "ano": "(?) bissexto, tem 366 dias.", "n\u00e3o": "Expressa nega\u00e7\u00e3o.", "ode": "Composi\u00e7\u00e3o po\u00e9tica do g\u00eanero l\u00edrico.", "ado": "O leite fresco, recentemente ordenhado.", "an\u00e3o": "Homem de estatura muito abaixo do normal.", "noa": "Hora can\u00f4nica do of\u00edcio divino entre a sexta e as v\u00e9speras (correspondente \u00e0s tr\u00eas horas da tarde).", "donde": "De onde, de qual lugar.", "nado": "Ato de nadar.", "ded\u00e3o": "Dedo grande do p\u00e9."}}
{"tasks": {"initialize": "deno task githooked && deno task dmm", "update": "deno task dmm && deno cache --no-check=remote --reload ./deps.ts", "githooked": "deno cache --reload https://deno.land/x/githooked/mod.ts && deno run --no-check=remote --allow-run=deno,git --allow-read --allow-write=.git-hooks https://deno.land/x/githooked/mod.ts install", "dmm": "deno run --no-check=remote --allow-net='cdn.deno.land,api.deno.land,x.nest.land,raw.githubusercontent.com,github.com,api.github.com' --allow-read='deps.ts' --allow-write='deps.ts' https://deno.land/x/dmm/mod.ts update", "enforce-cq": "deno task build && deno task lint && deno task fmt && deno task test && deno task coverage", "build": "bash scripts/build.sh", "dnt": "bash scripts/dnt.sh", "lint": "deno lint --ignore=build-for-npm", "fmt": "deno fmt --check --ignore=build-for-npm", "test": "rm -rf coverage && deno test --ignore=build-for-npm --coverage=./coverage/base/ --no-check -A", "coverage": "deno coverage --unstable ./coverage/base/ --lcov --output=./coverage/lcov_output"}, "compilerOptions": {"lib": ["dom.asynciterable", "deno.worker", "deno.ns", "deno.unstable"], "allowUnreachableCode": false, "allowUnusedLabels": false, "alwaysStrict": true, "exactOptionalPropertyTypes": true, "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitOverride": true, "noImplicitReturns": true, "noImplicitThis": true, "noStrictGenericChecks": false, "noPropertyAccessFromIndexSignature": true, "noUncheckedIndexedAccess": true, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true, "strictBindCallApply": true, "strictFunctionTypes": true, "strictNullChecks": true, "strictPropertyInitialization": true, "useUnknownInCatchVariables": true, "allowJs": false, "checkJs": false, "suppressExcessPropertyErrors": false, "suppressImplicitAnyIndexErrors": false}, "lint": {"rules": {"tags": ["recommended"], "include": ["ban-untagged-todo", "camelcase", "default-param-last", "eqeqeq", "explicit-function-return-type", "explicit-module-boundary-types", "no-await-in-loop", "no-const-assign", "no-eval", "no-undef", "prefer-ascii"]}}, "fmt": {"useTabs": false, "lineWidth": 255, "indentWidth": 2, "singleQuote": true, "proseWrap": "always"}}
{"title": "Izgubljeno i prona\u0111eno", "creator": "k_hrkac (KO)", "slug": "izgubljeno-i-pronadeno", "tags": ["FER", "Op\u0107enito"], "posts": {"99571": {"poster": "k_hrkac (KO)", "content": "[Izgubljeno] Pro\u0161li tjedan su mi se zagubile bijele be\u017ei\u010dne slu\u0161alice, vjerojatno u B3, ako ih je mo\u017eda netko vidio, uzeo ili ostavio negdje. To su mi jedine slu\u0161alice koje mogu mi se na laptop spojit po\u0161to mi ne radi audio jack, a sutra mi je ispit online.", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": ["Amali (Amajli)", "Filemon", "iv2 (bubbles)", "steker"]}}, "99640": {"poster": "Sulejman", "content": "[Prona\u0111eno] Prije desetak dana sam na\u0161ao U-lock u dvori\u0161tu di se ve\u017eu bicikli pa sam ga ostavio kod za\u0161titara na glavnom ulazu.", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "101208": {"poster": "Anonimity (BoJack)", "content": "izgubljene dioptrijske naocale. Ubijte me", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": ["Amali (Amajli)", "Elbakyan (interlo)", "Emma63194", "Filemon", "InCogNiTo124", "KitKat (H(x))", "Mioch", "NekocBraca", "Svarog (Veles)", "Theanko (Mirko \u017dmirko)", "Tinx (pingvin)", "__builtin_popcount (std::popcount)", "aperture", "bb8 (zaza)", "djeno", "feel_d_boot (iNut)", "gladiator", "iLabaviUmeDaZabavi (prvi do boga)", "markoo321 (Grinch)", "miss_anthropocene (neunist.iva)", "sheriffHorsey", "spampers (majmunska boginja)", "wajdo", "weedovnjak"]}}, "120973": {"poster": "peaceko", "content": "[Prona\u0111eno] Prona\u0111en nov\u010danik na Savici, kolega se zove Ante Petrovi\u0107. Nema fejs pa ga ne nalazim, ako se prepozna ili netko od njegovih prijatelja vidi ovaj post, neka mu ka\u017ee da se javi na +385 98 1385 968", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "121244": {"poster": "peaceko", "content": "@peaceko#120973 UPDATE: Rije\u0161eno", "votes": {"upvoters": ["InCogNiTo124", "[deleted]", "feel_d_boot (iNut)", "jadzia-dax (Jadzia Dax)", "jocelyn", "thelonewanderer (Du \u00e4r inte min chef!)"], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "131626": {"poster": "krokodil", "content": "U ponedjeljak u B4 sam prona\u0161ao crnu bocu, odnio sam ju na porti.", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "150508": {"poster": "Fast-and-Fourierous", "content": "[Prona\u0111eno] Prona\u0111en prsten u \u017eenskom wc-u pokraj menze. Vlasnica neka se javi s opisom prstena.", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "150583": {"poster": "Fast-and-Fourierous", "content": "@Fast-and-Fourierous#150508 Rije\u0161eno", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "192893": {"poster": "nnn (dinoo)", "content": "Torba s laptopom (crna kozna) je pustena na nekom tramvaju na vukovarskoj, ako netko na\u0111e ima nagradu, laptop je asus", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": ["1vq", "Anonimity (BoJack)", "Filemon", "Hrvoje (Hrvoje45)", "NekocBraca", "Red_Baron", "Svarog (Veles)", "Vishnjevac", "feel_d_boot (iNut)", "jadzia-dax (Jadzia Dax)", "matt (Matt)", "netflix (seximan)", "sphera", "turunturu (Cement)", "wutangfan (HugoStiglitz)"]}}, "194498": {"poster": "deus_vult", "content": "Izgubljena nevinost   u wc-u pored A 102...MOLIM  biv\u0161u djevoj\u010dicu (sada djevojka) da od doma donese krpu i po\u010disti krv za sobom...pod je dovoljno sklizav i bez dodatne krvi....", "votes": {"upvoters": [], "downvoters": ["Kushim", "Vamonos (Idemo)"]}, "reactions": {"haha": ["BigZ1", "Filemon", "Lyras", "Nocna_smjena", "Svarog (Veles)", "Wayk", "iLabaviUmeDaZabavi (prvi do boga)", "kix7 (Fish99)", "markoo321 (Grinch)", "turunturu (Cement)"], "wtf": ["AVRFreak", "Ferkonja (Ferkonja         \u202eajnokreF )", "Ollie", "Red_Baron", "Vamonos (Idemo)", "Vishnjevac", "amnael", "ink", "ivicato", "mAcaLukas (mAca Lukas)", "micho (M\u0335\u0351\u0340\u035d\u0329\u0327i\u0336\u0302\u0309\u034d\u0107\u0334\u033e\u0301\u0300\u031do\u0336\u0342\u033d\u033a\u031f\u0323)", "spampers (majmunska boginja)", "spenadla", "steker", "wesley"], "tuga": []}}, "194520": {"poster": "renren", "content": "@deus_vult#194498 Ocito ne toliko sklizak ko tvoj glatki mozak kad si napisao ovo lol", "votes": {"upvoters": ["Kushim", "Vamonos (Idemo)", "chuuya (temari)"], "downvoters": ["brol (Mason Mount me)"]}, "reactions": {"haha": ["BigZ1", "BreadCat", "Filemon", "GranAutismo", "Lyras", "Mioch", "Red_Baron", "Skenk", "Svarog (Veles)", "Vishnjevac", "__builtin_popcount (std::popcount)", "amnael", "in1", "ivicato", "miss_anthropocene (neunist.iva)", "ruza0001 (rozy)", "steker", "tekamolo", "wutangfan (HugoStiglitz)"], "wtf": [], "tuga": []}}, "194525": {"poster": "iLabaviUmeDaZabavi (prvi do boga)", "content": "@renren#194520 we've found the guilty, ladies and gentlemen", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": ["AVRFreak", "BigZ1", "Filemon", "GranAutismo", "Gussy (huba buba)", "Svarog (Veles)", "turunturu (Cement)"], "wtf": [], "tuga": []}}, "194532": {"poster": "renren", "content": "@iLabaviUmeDaZabavi#194525 Nah nego losi vicevi imaju vlastitu podtemu", "votes": {"upvoters": ["Kushim", "chuuya (temari)"], "downvoters": []}, "reactions": {"haha": ["micho (M\u0335\u0351\u0340\u035d\u0329\u0327i\u0336\u0302\u0309\u034d\u0107\u0334\u033e\u0301\u0300\u031do\u0336\u0342\u033d\u033a\u031f\u0323)"], "wtf": [], "tuga": []}}, "194566": {"poster": "deus_vult", "content": "@renren#194532  kao \u0161to probijanje vrata ovnom ima mjesto i vrijeme ..a ne da ja zbog tebe moram  na faks nosit klizaljke i \u0161titnike za laktove i koljena, ak o\u0107u pi\u0161at", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": ["AVRFreak", "Svarog (Veles)", "iLabaviUmeDaZabavi (prvi do boga)"], "wtf": [], "tuga": []}}, "194593": {"poster": "renren", "content": "@deus_vult#194566 Bruh samo sam rekla da ti je izrazavanje u originalnoj objavi glupo, ne trazim diskusiju o zivotnim problemima, lp", "votes": {"upvoters": ["Filemon", "Mioch", "Red_Baron", "Svarog (Veles)", "[deleted]", "chuuya (temari)", "menace_master", "steker"], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "194915": {"poster": "nnn (dinoo)", "content": "@nnn#192893 Ina\u010de nije moj laptop al evo da napi\u0161em, neka cura ga je ostavila voza\u010du i lik si je odnio doma,\n\nZet: 'nitko nam nije ni\u0161 javio, ne\u0107emo mi nikog ispitivati'\n\nTako da ako nekome ostavljate ne\u0161to izgubljeno, pazite kome dajete, u starim tramvajima nema kamera tako da je bolja opcija bila uzet doma i nazvati zet ili policiju", "votes": {"upvoters": ["Amali (Amajli)", "__builtin_popcount (std::popcount)", "micho (M\u0335\u0351\u0340\u035d\u0329\u0327i\u0336\u0302\u0309\u034d\u0107\u0334\u033e\u0301\u0300\u031do\u0336\u0342\u033d\u033a\u031f\u0323)"], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": ["Amon", "Filemon", "Hrvoje (Hrvoje45)", "MarokMarsci (Collapse Enjoyer)", "Mioch", "__builtin_popcount (std::popcount)", "thelonewanderer (Du \u00e4r inte min chef!)", "turunturu (Cement)"]}}, "244185": {"poster": "[deleted]", "content": "Prenosim: nekome je ostao punjac u A302. Do 20h ce biti netko tamo.", "votes": {"upvoters": ["thelonewanderer (Du \u00e4r inte min chef!)"], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "250822": {"poster": "feudalac", "content": "Izgubljena smeda/be\u017e biljeznica u aleji laptopa", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "251910": {"poster": "Red_Baron", "content": "U A210 prona\u0111ena 2 mi\u0161a. Vlasnici neka se jave s opisom/oznakom modela i bojom.", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "255044": {"poster": "[deleted]", "content": "jel itko na\u0161ao ju\u010der punja\u010d od laptopa u predvorju pokraj kopiraone?", "votes": {"upvoters": [], "downvoters": ["atp0lar (\u202e \ud83c\udff3\ufe0f\u200d\u26a7\ufe0f\u200d\u20e0 \ud83c\udff3\ufe0f\u200d\ud83c\udf08\u20e0 \ud83c\uddee\ud83c\uddf1\u20e0at\u206dp\u2069\u206b0\u206elar)"]}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "255051": {"poster": "macaklin", "content": "u A101 pro\u0161li tjedan prona\u0111ena zelena puntarica (tehni\u010dka olovka ili kako vi to ve\u0107 krivo zovete), valjda ju vlasnik jo\u0161 tra\u017ei, pa nek mi se javi", "votes": {"upvoters": [], "downvoters": ["BreadCat", "Svudec", "Vedo", "pitroid"]}, "reactions": {"haha": [], "wtf": ["AVRFreak"], "tuga": []}}, "261946": {"poster": "Mirko_", "content": "Je li netko vidio/sucajno uzeo be\u017e torbu ostavljenu u ksetu sinoc na after MI partiju?", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "262703": {"poster": "Vishnjevac", "content": "Jel netko na\u0161ao crnu rukavicu danas ispred glavnog ulaza/na prolazu od glavnog ulaza prema D zgradi izmedu 13:00-13:05?\n\nAko jeste pliz samo odnesite na portu ili u DM", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "262732": {"poster": "[deleted]", "content": "@\"Vishnjevac\"#p262703 ostavio u dm-u kod miramarske na kasi, lp", "votes": {"upvoters": ["Asura (Asura)", "Jeff", "[deleted]"], "downvoters": []}, "reactions": {"haha": ["1vq", "Asura (Asura)", "GranAutismo", "Jeff", "Omnitron ((-_-) )", "jarza"], "wtf": [], "tuga": []}}, "264292": {"poster": "st53366 (estera)", "content": "pro\u0161li cetvrtak  predve\u010der su mi u zenskom wcu kod B1 ili D1 ostala 3 zlatna prstena (bizuterija), ako je netko nasao neka se javi pliz :)", "votes": {"upvoters": [], "downvoters": ["st53366 (estera)"]}, "reactions": {"haha": [], "wtf": [], "tuga": ["jadzia-dax (Jadzia Dax)"]}}, "273399": {"poster": "elbarto", "content": "Nisam prona\u0161ao temu izgubljeno/na\u0111eno. Ako netko poznaje kolegicu, recite joj da \u0107e iksica biti na porti\n\n![](assets/2022-01-25/00005.jpg)", "votes": {"upvoters": ["feel_d_boot (iNut)"], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "273438": {"poster": "InCogNiTo124", "content": "> @\"elbarto\"#p273399 prona\u0161ao temu izgubljeno/na\u0111eno\n\nMeta", "votes": {"upvoters": ["Emma63194", "miss_anthropocene (neunist.iva)"], "downvoters": []}, "reactions": {"haha": ["Amon", "Emma63194", "Hrvoje (Hrvoje45)", "Lyras", "Zogen", "bodilyfluids (Dragi prijatelj strojnog u\u010denja)", "jadzia-dax (Jadzia Dax)", "mAcaLukas (mAca Lukas)", "miss_anthropocene (neunist.iva)", "turunturu (Cement)"], "wtf": [], "tuga": []}}, "283892": {"poster": "Lusy (MGJ)", "content": "Danas u B4 prona\u0111ena bijela Apple Pencil, ostavila sam je u referadi", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "284217": {"poster": "bartolbk", "content": "@\"MGJ\"#p283892 hvala ti", "votes": {"upvoters": ["Lusy (MGJ)"], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "284814": {"poster": "spejs", "content": "Pita kolega munlajt iduce: \"je li jucer navecer netko uzeo sa stola kod skriptarnice bijeli punjac za mobitel (usb c type)\"", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "300802": {"poster": "sheriffHorsey", "content": "Jel netko prona\u0161ao sivi logitech mi\u0161 u A209 ili na 3. katu d zgrade?", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}, "302335": {"poster": "shoshakis (teshna)", "content": "Izgubljen crni mi\u0161 (Razer Orochi v2) u A102, utorak 09.00 tijekom IS kpz-a.", "votes": {"upvoters": [], "downvoters": []}, "reactions": {"haha": [], "wtf": [], "tuga": []}}}}
{"extends": "./tsconfig.json", "include": ["deno"], "exclude": [], "compilerOptions": {"rootDir": "./deno", "lib": ["es2020", "DOM"], "paths": {"multion/_shims/*": ["deno/_shims/*"], "multion": ["deno/index.ts"], "multion/*": ["deno/*"], "digest-fetch": ["./typings/digest-fetch"]}, "noEmit": true, "declaration": true, "declarationMap": true, "outDir": "deno", "pretty": true, "sourceMap": true}}
{"area_comune": "{\"type\": \"Polygon\", \"coordinates\": [[[11.42674203208362, 44.950083525538574], [11.426163354354555, 44.94879204706702], [11.424673350119997, 44.943805138724784], [11.423929700881533, 44.93789316763095], [11.424000295901397, 44.93655938876497], [11.424972660801943, 44.93226280892198], [11.425555356423276, 44.93105317414962], [11.426351595301497, 44.93010004249257], [11.427494802447951, 44.929562623416274], [11.429373425682746, 44.92904554836805], [11.431093016257028, 44.92895492875069], [11.432556973063068, 44.929112776947136], [11.452614218054887, 44.933130483381426], [11.45629914488289, 44.93418548714854], [11.45965202209486, 44.93494595993007], [11.464226597711484, 44.935713874137356], [11.466483750322737, 44.924576144091844], [11.470474472820886, 44.91690925964824], [11.486728190804628, 44.91598672855507], [11.491760348781105, 44.91308803924794], [11.487962753945853, 44.89774388189027], [11.490129866634934, 44.89689544426079], [11.489709102549025, 44.89393396555078], [11.485427715078817, 44.87821077892596], [11.487588164579389, 44.86822997862736], [11.488761269924249, 44.86521573900325], [11.489485333913972, 44.8641197016481], [11.490074490865746, 44.86224343337187], [11.488675673622904, 44.86121170841127], [11.488049333059848, 44.860984052888014], [11.483998649065896, 44.8619617361542], [11.475463944817353, 44.864514702368936], [11.467531605659152, 44.86666691873837], [11.463675485373379, 44.86679522637893], [11.45564903754815, 44.866188351672676], [11.446851297522354, 44.85970109235013], [11.442348769680727, 44.85107694312866], [11.444366711636896, 44.83904750547226], [11.43751302529324, 44.83733965784028], [11.432285474110037, 44.837586224830666], [11.430790704174488, 44.83784311840323], [11.427526633796546, 44.83873176589639], [11.422826595411207, 44.840397990446576], [11.421287196817618, 44.84078174001098], [11.419440554499111, 44.84109996858893], [11.417304517452886, 44.84115422391054], [11.415826421410626, 44.84090644999663], [11.409359137677002, 44.83815349968327], [11.404925582159962, 44.83488993246875], [11.401920222190286, 44.83365587735351], [11.389831406090966, 44.83200685123117], [11.387073600669648, 44.831233012838794], [11.385199066032284, 44.831309588296236], [11.382740763683895, 44.831637644543854], [11.377224707499623, 44.833454421299116], [11.376239167942593, 44.83485091307179], [11.375261271161166, 44.83537538764336], [11.372531774096679, 44.83635936996444], [11.368481907190752, 44.837253659689964], [11.366411696506121, 44.837306000617446], [11.368501962196826, 44.84079106219963], [11.368592057376947, 44.84267962364952], [11.356345788229188, 44.86151330748727], [11.34791897262632, 44.86899661974487], [11.341128644899014, 44.872594274017025], [11.326057334298051, 44.875505163476134], [11.311713241595998, 44.88146975707051], [11.30648249406348, 44.88331297558169], [11.294201915267886, 44.88552289946934], [11.293468411345357, 44.8855466356182], [11.287085121239055, 44.88836631445029], [11.286149938602616, 44.88903320630376], [11.284466303765678, 44.890966328457445], [11.283825038352816, 44.891402251390275], [11.269686149728205, 44.89652123503342], [11.250297927724883, 44.90052101133626], [11.248436226209822, 44.89985554312944], [11.245382604649073, 44.89825052553554], [11.23474353423248, 44.90597573104658], [11.236627772288264, 44.90948560686609], [11.243283642151795, 44.91678161489869], [11.254862807194064, 44.92453369357998], [11.25651205941186, 44.92620246653118], [11.26043375897462, 44.933101379257884], [11.246205680020312, 44.95143857631194], [11.256656828257046, 44.94675553643385], [11.261750189616217, 44.94543107855743], [11.263189054484908, 44.945266906372], [11.266693166990754, 44.94399017674062], [11.270584044490901, 44.94119704063857], [11.271300800265417, 44.93940596102757], [11.272257162042978, 44.93832265312628], [11.279766179195061, 44.949414144868896], [11.284352129316414, 44.95661084703373], [11.293268811074496, 44.957683312120125], [11.296804350280366, 44.95763923125894], [11.301583514420189, 44.962358973165564], [11.306061857424686, 44.9621245642974], [11.311420869054109, 44.95855135932519], [11.312456917549992, 44.95820681757662], [11.329319188598507, 44.96069811035832], [11.337611439334205, 44.956352669973725], [11.357155462134566, 44.95008051496646], [11.358121019986966, 44.9501325814346], [11.359338679623566, 44.950458492247165], [11.360044424185897, 44.95090328675724], [11.361700291014628, 44.95394741280305], [11.362763763865717, 44.955465799299944], [11.372857085328533, 44.957667845357605], [11.378192691041221, 44.95792588367459], [11.399192702454755, 44.95482732640406], [11.399937826234787, 44.9539683662538], [11.408821088492324, 44.950037002824075], [11.42631345803872, 44.952104706510376], [11.42674203208362, 44.950083525538574]]]}", "comune": "bondeno", "buffer_1": "{\"type\": \"Polygon\", \"coordinates\": [[[11.429556944136708, 44.95885666118641], [11.430742714862484, 44.95862127632527], [11.431890705815443, 44.958305292997075], [11.432990077239243, 44.95791169513341], [11.434030449100279, 44.95744419949897], [11.435001999181184, 44.95690722054857], [11.43589555587444, 44.95630582869228], [11.436702684797034, 44.9556457023651], [11.437415768407002, 44.9549330743562], [11.438028077870216, 44.95417467290716], [11.438533836500342, 44.95337765813777], [11.43892827417595, 44.95254955440198], [11.439207672225303, 44.95169817921479], [11.439369398360364, 44.95083156942274], [11.43941193133663, 44.94995790531656], [11.43923889394168, 44.94120361056648], [11.461641546642602, 44.9445224089492], [11.462848982179864, 44.94465835846933], [11.464069249050013, 44.94471101808617], [11.465290980746136, 44.944679897404015], [11.466502797129008, 44.944565286418985], [11.46769341057785, 44.94436825280977], [11.468851731272169, 44.944090631974646], [11.4699669706174, 44.943735009908664], [11.471028741844908, 44.943304699081196], [11.472027156844065, 44.94280370754066], [11.472952918320061, 44.942236701535734], [11.473797406415937, 44.94160896200355], [11.474552758990088, 44.940926335332534], [11.475211944800996, 44.940195178860684], [11.475768828918381, 44.93942230161953], [11.476218229753691, 44.93861490087772], [11.476555967182339, 44.93778049507761], [11.48103414492534, 44.92429469558161], [11.494864201887163, 44.92181136111656], [11.496029180380855, 44.92155918011401], [11.49715466643496, 44.92122865507719], [11.498230248932414, 44.920822843800956], [11.499245979019236, 44.920345500470624], [11.500192462206485, 44.91980104088771], [11.501060945312577, 44.91919450157181], [11.501843397439433, 44.91853149311958], [11.502532584232368, 44.91781814825448], [11.50312213473718, 44.91706106505014], [11.503606600237651, 44.91626724585507], [11.503981504532204, 44.91544403248539], [11.504243385188794, 44.91459903828734], [11.504389825401628, 44.91374007769921], [11.504419476161075, 44.9128750939655], [11.502722483040994, 44.86203092022978], [11.502628704502651, 44.86113016115753], [11.502408429391977, 44.86024062659126], [11.502063882885588, 44.859371279243184], [11.50159854185038, 44.858530878037804], [11.50101709960805, 44.85772788989979], [11.500325418472125, 44.85697040449689], [11.499530470542531, 44.856266052794766], [11.498640267359619, 44.855621930241405], [11.497663779130168, 44.85504452535216], [11.496610844341003, 44.854539654411326], [11.495492070670904, 44.85411240294532], [11.494318728197221, 44.8537670745536], [11.493102635969406, 44.85350714761001], [11.491856043086868, 44.85333524026806], [11.490591505472487, 44.85325308412078], [11.489321759575294, 44.85326150677844], [11.488059594265989, 44.8533604235392], [11.463230091122181, 44.85620671190259], [11.449057502852822, 44.833666796567016], [11.448480020612795, 44.83285961584895], [11.447791439200438, 44.832097831262125], [11.446998738132477, 44.83138915977201], [11.446109950786209, 44.8307407800529], [11.44513408295264, 44.83015925983277], [11.444081021584926, 44.82965048943007], [11.442961434666717, 44.82921962215185], [11.441786663212925, 44.82887102215421], [11.440568606493406, 44.82860822029026], [11.439319601636873, 44.82843387838982], [11.438052298827941, 44.82834976233091], [11.43677953335353, 44.82835672417404], [11.43551419578604, 44.828454693539165], [11.434269101608985, 44.82864267831219], [11.41733244020893, 44.831839835971884], [11.380523646837489, 44.82476776692968], [11.379332352241347, 44.82458201335233], [11.378121457635986, 44.82447879065836], [11.37690222328342, 44.82445905883799], [11.375685986919715, 44.82452300149083], [11.3744840584714, 44.824670024116855], [11.37330761502756, 44.824898759632994], [11.372167597037588, 44.825207081064725], [11.371074606693544, 44.825592121295514], [11.370038809436345, 44.826050299691865], [11.369069839496886, 44.82657735535795], [11.368176710346543, 44.8271683867127], [11.367367730887253, 44.8278178970235], [11.3666504281591, 44.82851984547527], [11.33259827508252, 44.86543761805854], [11.229638558775038, 44.89774092659376], [11.228539295380127, 44.898131451933864], [11.227498464582464, 44.89859587866937], [11.226525870952951, 44.89912983269573], [11.225630677119051, 44.899728284925175], [11.224821317479769, 44.90038559860099], [11.224105418743076, 44.90109558233599], [11.223489728034194, 44.90185154837795], [11.222980049253303, 44.902646375555655], [11.22258118828499, 44.90347257631521], [11.222296907579592, 44.904322367216864], [11.222129890539561, 44.90518774223045], [11.222081716052509, 44.90606054814015], [11.222152843417827, 44.90693256134913], [11.222342607816255, 44.90779556536128], [11.222649226372763, 44.908641428209755], [11.223069814763118, 44.909462179102476], [11.223600414214982, 44.91025008356154], [11.22423602865562, 44.91099771634705], [11.245606616906478, 44.93356883457207], [11.2351083214108, 44.94709438585437], [11.23455460894047, 44.94790006012719], [11.2341165212777, 44.948740860831094], [11.233798411313874, 44.94960844364862], [11.233603441712983, 44.95049419808105], [11.233533553314556, 44.9513893328782], [11.233589445646798, 44.952284963277535], [11.233770569752235, 44.953172199187364], [11.234075133406181, 44.9540422334394], [11.234500118685371, 44.95488642923378], [11.235041311721117, 44.95569640590795], [11.235693344349682, 44.956464122176065], [11.236449747253392, 44.957181956010785], [11.237303014070704, 44.957842780371735], [11.238244675842921, 44.95844003402627], [11.239265385061032, 44.958967786756226], [11.24035500847898, 44.9594207983003], [11.241502727770856, 44.95979457044385], [11.242697147029867, 44.96008539173586], [11.243926406037378, 44.960290374386936], [11.245178298171492, 44.96040748297903], [11.24644039177751, 44.9604355547009], [11.247700153787143, 44.96037431090648], [11.24894507435055, 44.96022435988127], [11.250162791234908, 44.95998719078894], [11.251341212745697, 44.95966515885898], [11.25246863794199, 44.95926146196377], [11.25353387294475, 44.95878010881907], [11.267227191846562, 44.951887029641846], [11.272880652643748, 44.96043620829916], [11.273468643735804, 44.96122175330053], [11.274163027332708, 44.96196223579023], [11.2749570191349, 44.96265041697438], [11.27584286026075, 44.96327956911606], [11.27681189303781, 44.96384354136477], [11.277854645622156, 44.964336819948485], [11.278960924618582, 44.96475458213714], [11.29619427614257, 44.9705034763576], [11.2972777795184, 44.97082224159483], [11.298398159292603, 44.971068543873294], [11.299545820119407, 44.971240273782485], [11.30071093270326, 44.97133596058972], [11.30188351809467, 44.97135478485053], [11.30305353327579, 44.97129658543363], [11.304210957297807, 44.971161860899635], [11.30534587722706, 44.97095176522185], [11.355910718411334, 44.95978061275591], [11.372300674515696, 44.96589252378563], [11.373461955472747, 44.966273658351106], [11.374671455250512, 44.9665697308794], [11.375916846096276, 44.966777723650125], [11.377185433960062, 44.9668955167122], [11.378464288051502, 44.96692190951688], [11.379740372824996, 44.96685663316695], [11.381000681038635, 44.966700353156035], [11.429556944136708, 44.95885666118641]]]}", "buffer_3": "{\"type\": \"Polygon\", \"coordinates\": [[[11.259130661385708, 44.97679696503531], [11.261725778914213, 44.978307523158875], [11.264854519523901, 44.97978773128581], [11.268174040726093, 44.9810413474411], [11.285411326217092, 44.986791779073904], [11.288662636250672, 44.987748332856896], [11.292024701136912, 44.98848744010387], [11.295468703184074, 44.98900276572249], [11.298965119630779, 44.98928989286169], [11.302483976727906, 44.98934636090303], [11.305995107759548, 44.989171686613744], [11.309468412745314, 44.98876736827756], [11.312874117550972, 44.988136872767925], [11.353420171194276, 44.97918074824714], [11.36051184185988, 44.981824962387535], [11.363996488849544, 44.98296867140093], [11.367625954886666, 44.98385712942114], [11.371363217385086, 44.98448127349547], [11.37517014984391, 44.98483473701902], [11.37900791232499, 44.984913914909484], [11.382837349346831, 44.98471800049476], [11.386619391052038, 44.98424899373093], [11.435189506723052, 44.97640263197853], [11.4387477881305, 44.97569624560419], [11.442192590416882, 44.97474800357286], [11.445491363049705, 44.97356686869725], [11.448612941122237, 44.97216400414587], [11.45152784056909, 44.97055266752771], [11.45420853720226, 44.968748085149606], [11.456629726906112, 44.966767307655736], [11.458768564520598, 44.96462904843669], [11.460436546978245, 44.962562110346774], [11.463754585692344, 44.96270526977982], [11.46742092142538, 44.96261185403329], [11.471057467529747, 44.962267891518756], [11.474630320340383, 44.96167659009349], [11.478106172739992, 44.96084346341785], [11.481452625838207, 44.95977627930795], [11.484638492003988, 44.95848498700233], [11.487634086378185, 44.95698162403478], [11.49041150410968, 44.95528020359931], [11.492944880702055, 44.95339658347636], [11.49521063302684, 44.95134831776398], [11.497187678752057, 44.94915449281674], [11.49885763214854, 44.94683554894423], [11.500204974469176, 44.94441308955082], [11.501217197344715, 44.94190967951427], [11.502175912036792, 44.93901931660628], [11.504570754494326, 44.93850086517399], [11.507947995380807, 44.9375089887453], [11.51117535222226, 44.93629120818458], [11.51422295596577, 44.93485879886236], [11.517062607895642, 44.93322502220059], [11.519668041022278, 44.93140500245995], [11.522015163283426, 44.92941558627269], [11.524082280297684, 44.927275186243214], [11.52585029561178, 44.9250036100849], [11.527302886603572, 44.92262187689565], [11.52842665443976, 44.920152022291774], [11.529211246738157, 44.91761689422047], [11.529649451846183, 44.91503994135471], [11.529737263917681, 44.91244499603904], [11.528018001830945, 44.86160169398453], [11.52773549823496, 44.85889950461785], [11.527073570769275, 44.856231068697795], [11.526038939246531, 44.85362326760238], [11.524642074109623, 44.85110236840842], [11.522897089127191, 44.8486937596459], [11.520821597650135, 44.84642169601992], [11.518436533938445, 44.844309054650125], [11.515765941406109, 44.84237710525811], [11.512836729950006, 44.840645296589614], [11.50967840482337, 44.839131061193996], [11.506322769784266, 44.83784964049737], [11.502803607491426, 44.836813931902846], [11.499156340332869, 44.83603435943137], [11.495417675055016, 44.835518769182436], [11.491625234710334, 44.835272350647976], [11.487817181558986, 44.835297584657745], [11.484031834643691, 44.83559421847073], [11.478384494163546, 44.83624204627181], [11.47214193323869, 44.82631766006909], [11.470408817424117, 44.82389647182118], [11.468342614067025, 44.821611509849475], [11.465964280223982, 44.819485909217434], [11.463297925301449, 44.81754118922891], [11.460370566344693, 44.81579703613804], [11.457211854300013, 44.814271104442525], [11.453853774022932, 44.81297883874199], [11.450330321053519, 44.811933317937054], [11.44667715839883, 44.81114512331951], [11.4429312567497, 44.810622231865686], [11.439130521713787, 44.81036993579365], [11.435313411767654, 44.81039078918398], [11.431518550717044, 44.81068458219496], [11.427784338505731, 44.81124834312998], [11.417388449621214, 44.81321101895962], [11.387118703019338, 44.807394198767874], [11.383545866669271, 44.80683708382093], [11.379914296115095, 44.80652748705951], [11.376257730857047, 44.80646828581261], [11.372610141909215, 44.806660031094886], [11.36900541751125, 44.80710094247144], [11.365477049582925, 44.807786924494145], [11.362057823774759, 44.80871160456174], [11.358779515937615, 44.80986639186038], [11.355672597780258, 44.81124055684867], [11.352765954405752, 44.812821330564304], [11.350086616316604, 44.81459402284726], [11.347659508354523, 44.816542158400644], [11.345507217895026, 44.81864762944599], [11.315543911655398, 44.8511222380856], [11.219433092505897, 44.881270513699675], [11.216135966743211, 44.88244175257729], [11.213013945342885, 44.88383465859798], [11.210096424302076, 44.885436123497605], [11.20741088171254, 44.887231074928], [11.204982619275428, 44.88920261784047], [11.202834523972545, 44.891332193029896], [11.200986852136907, 44.89359975136955], [11.199457037967582, 44.895983942118576], [11.198259528316292, 44.898462313550425], [11.197405645337682, 44.901011524032036], [11.196903478343291, 44.903607561582646], [11.196757805933109, 44.906225969857125], [11.19697004920019, 44.90884207843461], [11.197538256515724, 44.91143123524816], [11.19845712010648, 44.91396903896595], [11.199718024336628, 44.91643156913084], [11.201309125304101, 44.91879561188116], [11.203215461061346, 44.921038879113645], [11.215951387103228, 44.9344979797081], [11.212918542612801, 44.938402660267364], [11.211256652117832, 44.94081936929687], [11.209941470220464, 44.94334151808646], [11.208986091940586, 44.94594408372224], [11.20840004675403, 44.94860124195867], [11.208189202161622, 44.951286623219495], [11.208355703449275, 44.95397357414824], [11.208897950316029, 44.95663542211949], [11.209810610684293, 44.959245740087695], [11.211084671637456, 44.96177860914049], [11.212707527058088, 44.96420887614095], [11.214663101169329, 44.96651240388671], [11.21693200681635, 44.968666311283435], [11.219491736967978, 44.97064920112496], [11.222316887574994, 44.972441373193156], [11.22537940959488, 44.97402502053364], [11.228648887686939, 44.97538440692987], [11.23209284280038, 44.97650602378526], [11.235677055624622, 44.977378724828796], [11.239365907648907, 44.97799383728201], [11.243122736390072, 44.978345248362984], [11.24691020119549, 44.97842946625183], [11.250690655914719, 44.97824565490095], [11.254426524659678, 44.97779564233831], [11.258080676840336, 44.977083902381544], [11.259130661385708, 44.97679696503531]]]}", "buffer_5": "{\"type\": \"Polygon\", \"coordinates\": [[[11.186803833266392, 44.935957512931786], [11.185770778275591, 44.93793696195653], [11.184176735083811, 44.942274265966724], [11.183198099933504, 44.94670268712294], [11.18284472689195, 44.951178283142774], [11.183120269246594, 44.95565663337676], [11.184022137472573, 44.96009327959151], [11.185541519172427, 44.964444167531404], [11.187663461018612, 44.96866608486603], [11.190367012105218, 44.97271709115004], [11.193625427488191, 44.976556935486904], [11.19740643007031, 44.98014745769696], [11.201672528375116, 44.98345296894254], [11.206381387160677, 44.986440607959054], [11.211486247256465, 44.989080669276426], [11.21693639047246, 44.99134690009192], [11.222677644935766, 44.9932167627666], [11.22865292576343, 44.99467166026366], [11.234802805586963, 44.9956971222212], [11.241066109110074, 44.99628294975327], [11.247380525611073, 44.996423317495065], [11.253683233099185, 44.99611683184641], [11.254057085887158, 44.99607180603761], [11.257381184850324, 44.997327171426626], [11.274622405809632, 45.00307914211953], [11.280042589729339, 45.00467382903035], [11.285647574905996, 45.005906008879855], [11.291389279012144, 45.00676511171004], [11.297218439212294, 45.00724376832109], [11.303085037631831, 45.00733787385849], [11.308938733508333, 45.00704662320006], [11.314729298189356, 45.00637251783185], [11.320407049113603, 45.00532134415402], [11.351107675393994, 44.99854114010026], [11.354525689294928, 44.99966296823665], [11.36057641157956, 45.00114413281588], [11.36680700047827, 45.00218464958433], [11.37315383777095, 45.00277389624326], [11.379552110789483, 45.00290585857301], [11.385936478819476, 45.00257919214831], [11.392241745046084, 45.001797236034086], [11.44082572458054, 44.99394820167616], [11.446757810184067, 44.992770504328384], [11.452500530477709, 44.99118961370782], [11.45799958240312, 44.98922048624661], [11.46320298308333, 44.98688174873527], [11.468061563408947, 44.984195520982034], [11.472529434188532, 44.98118720534021], [11.473807704934389, 44.980141210311274], [11.47561516999369, 44.979970203720455], [11.481571613480012, 44.97898436666409], [11.487366185646101, 44.97759538146699], [11.492944833082586, 44.97581621091783], [11.49825553082068, 44.973663456847646], [11.503248769884003, 44.9711572041789], [11.507878020619819, 44.96832083236417], [11.512100167407425, 44.96518079602895], [11.515875910641242, 44.96176637692384], [11.519170132226037, 44.95810940956061], [11.521952221197576, 44.954243983151976], [11.523123325264754, 44.95213689526282], [11.524127532346695, 44.95175791098271], [11.529207560697342, 44.9493699293971], [11.533940650351685, 44.9466463046853], [11.538283010655498, 44.94361226849635], [11.542194489328958, 44.940295923323944], [11.545638943670252, 44.93672798092278], [11.548584573750345, 44.93294147664571], [11.551004214556828, 44.92897146240482], [11.552875584457569, 44.92485468115385], [11.554181487789009, 44.92062922595248], [11.554909969824648, 44.91633418680866], [11.55505442284104, 44.91200928859768], [11.553312893731185, 44.861166868090855], [11.552840108215863, 44.856663366419845], [11.551735059842699, 44.85221625363065], [11.55000902201751, 44.84787032070259], [11.547679511757272, 44.843669329894034], [11.544770108196992, 44.83965557498819], [11.541310210773384, 44.83586945665352], [11.537334739689625, 44.83234907713534], [11.53288378180968, 44.82912985829048], [11.528002185637812, 44.82624418673463], [11.522739109506054, 44.82372108959441], [11.517147527516494, 44.82158594404808], [11.511283698163785, 44.81986022349979], [11.505206600894503, 44.818561282870334], [11.498977346142189, 44.817702185101226], [11.494089109511583, 44.817384563171935], [11.492330689215807, 44.81492925106362], [11.488886253580786, 44.81112163417232], [11.484921981097227, 44.80757965606107], [11.480478069417249, 44.8043391543958], [11.4755995462831, 44.80143291142307], [11.470335813336499, 44.79889032392688], [11.46474014681149, 44.79673710742771], [11.458869160117905, 44.79499503753839], [11.452782233662893, 44.79368173102031], [11.446540917547917, 44.79281046869038], [11.440208313017248, 44.792390061917146], [11.433848438719979, 44.79242476401551], [11.427525587980506, 44.792914227411686], [11.421303683351404, 44.793853507001494], [11.417444677475133, 44.7945821471038], [11.393710000166456, 44.79002028528716], [11.387757017211072, 44.789092003015064], [11.381706253384195, 44.78857612708423], [11.37561387251558, 44.788477448657865], [11.369536422785723, 44.78879688645657], [11.363530315503935, 44.789531478185665], [11.357651305084573, 44.79067440774119], [11.351953974883045, 44.7922150679544], [11.346491233507752, 44.79413915831579], [11.341313826142041, 44.79642881680437], [11.336469865291345, 44.79906278464072], [11.332004385215662, 44.80201660248295], [11.327958924116647, 44.80526283629869], [11.3243711379228, 44.80877133087387], [11.298498043903264, 44.8368041038384], [11.209233599875033, 44.8647990301179], [11.203739497350547, 44.86675053353488], [11.198536913567962, 44.86907142043888], [11.193674812310698, 44.871739867087], [11.189198974019186, 44.87473077770973], [11.185151565603764, 44.8780160192221], [11.181570743336712, 44.8815646845153], [11.178490292556726, 44.885343381914566], [11.175939307608669, 44.88931654814164], [11.173941915097787, 44.89344678189502], [11.172517043162658, 44.897695194961436], [11.171678239067221, 44.90202177759888], [11.171433536982073, 44.90638577478737], [11.171785377371735, 44.91074606983006], [11.172730578931642, 44.91506157170578], [11.17426036352959, 44.91929160252576], [11.176360434106263, 44.92339628143374], [11.179011104982305, 44.92733690130875], [11.182187483510862, 44.93107629468654], [11.186803833266392, 44.935957512931786]]]}", "centroid": "{\"type\": \"Point\", \"coordinates\": [11.370930305451804, 44.90376010297204]}", "Benzina": {"1": [{"idImpianto": "53358", "price": 1.917, "ultima_rilevazione": "29/08/2023 20:00:18", "Gestore": "A.F. PETROLI S.P.A.", "Indirizzo": "PIRONI 110 44012", "Comune": "BONDENO", "Bandiera": "AF Petroli", "geometry": {"type": "Point", "coordinates": [11.4164444804, 44.8881047875]}}, {"idImpianto": "55639", "price": 1.929, "ultima_rilevazione": "28/08/2023 18:56:32", "Gestore": "HADI SERVICE S.A.S. DI ARIF HASNAIN E C.", "Indirizzo": "Via Virgiliana 153  44012", "Comune": "BONDENO", "Bandiera": "Itala Petroli", "geometry": {"type": "Point", "coordinates": [11.2866077714, 44.9471852731]}}, {"idImpianto": "25931", "price": 1.964, "ultima_rilevazione": "01/09/2023 05:14:09", "Gestore": "GESTIONI INNOVATIVE ITALIA S.R.L.", "Indirizzo": "VIA VIRGILIANA (S.S. 496) KM42   44012", "Comune": "BONDENO", "Bandiera": "Agip Eni", "geometry": {"type": "Point", "coordinates": [11.4174878597, 44.8812412237]}}, {"idImpianto": "14803", "price": 1.949, "ultima_rilevazione": "29/08/2023 18:28:05", "Gestore": "ZERBINATI MASSIMO & C. S.A.S.", "Indirizzo": "PER ZERBINATE, 28 44012", "Comune": "BONDENO", "Bandiera": "Reno Gas Energy", "geometry": {"type": "Point", "coordinates": [11.4047420025, 44.9004269682]}}, {"idImpianto": "4580", "price": 1.919, "ultima_rilevazione": "28/08/2023 17:33:15", "Gestore": "ROBGAS COMMERCIALE S.R.L.", "Indirizzo": "496 Virgiliana, Km. 51, bondeno - 44012", "Comune": "BONDENO", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.43412292, 44.8768618438]}}, {"idImpianto": "16894", "price": 1.929, "ultima_rilevazione": "01/09/2023 08:03:45", "Gestore": "NEGRI MARIA LUISA", "Indirizzo": "Via provinciale, Scortichino 141 44017", "Comune": "BONDENO", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.3315751834, 44.8823868659]}}, {"idImpianto": "56389", "price": 1.939, "ultima_rilevazione": "01/09/2023 07:12:04", "Gestore": "ESSO FINALE EMILIA VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)", "Indirizzo": "VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)  41034", "Comune": "FINALE EMILIA", "Bandiera": "Esso", "geometry": {"type": "Point", "coordinates": [11.30337, 44.89424]}}], "3": [{"idImpianto": "15674", "price": 1.929, "ultima_rilevazione": "31/08/2023 08:36:27", "Gestore": "GIROTTI GIANFRANCESCO", "Indirizzo": "CENTO 57/A 44049", "Comune": "VIGARANO MAINARDA", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.5024231313, 44.8407564674]}}, {"idImpianto": "21970", "price": 1.949, "ultima_rilevazione": "31/08/2023 23:02:49", "Gestore": "FRAZZOLI MARIA & MEOTTI MARIA COSTANZA S.N.C.", "Indirizzo": "Statale 255 di San Matteo della Decima, Km. 54, dir. ferrara - 44049", "Comune": "VIGARANO MAINARDA", "Bandiera": "Repsol", "geometry": {"type": "Point", "coordinates": [11.4969687202, 44.8397774744]}}, {"idImpianto": "14445", "price": 1.949, "ultima_rilevazione": "28/08/2023 17:11:58", "Gestore": "MASSARI MARCO", "Indirizzo": "VIA ARGINE VALLE 67/B 46022", "Comune": "FELONICA", "Bandiera": "Loro", "geometry": {"type": "Point", "coordinates": [11.3492425132, 44.971696064]}}, {"idImpianto": "51689", "price": 1.949, "ultima_rilevazione": "29/08/2023 15:04:49", "Gestore": "LA GHISI CARBURANTI S.R.L.", "Indirizzo": "VIA PER FERRARA 85/A 41034", "Comune": "FINALE EMILIA", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.3399875164, 44.8311483244]}}, {"idImpianto": "36916", "price": 1.746, "ultima_rilevazione": "08/05/2023 15:26:55", "Gestore": "TACCHINI TIZIANO", "Indirizzo": "VIA ERIDANIA 1920 45036", "Comune": "FICAROLO", "Bandiera": "Retitalia", "geometry": {"type": "Point", "coordinates": [11.4422218502, 44.9601688852]}}, {"idImpianto": "20401", "price": 1.939, "ultima_rilevazione": "30/08/2023 08:47:22", "Gestore": "GURATTI ALESSIA", "Indirizzo": "via Provinciale 77/c 45030", "Comune": "GAIBA", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.4764292712, 44.9487939339]}}, {"idImpianto": "26315", "price": 1.94, "ultima_rilevazione": "28/08/2023 10:43:19", "Gestore": "EUGAS S.R.L.", "Indirizzo": "D. ALIGHIERI 149 45030", "Comune": "SALARA", "Bandiera": "Eugas", "geometry": {"type": "Point", "coordinates": [11.4210873842, 44.9739247336]}}], "5": [{"idImpianto": "50806", "price": 1.989, "ultima_rilevazione": "29/08/2023 00:02:17", "Gestore": "ANTONIONI ALEX", "Indirizzo": "VIA BONDENESE 87/1 44041", "Comune": "CENTO", "Bandiera": "Noaloil", "geometry": {"type": "Point", "coordinates": [11.3399264216, 44.8055014788]}}, {"idImpianto": "56891", "price": 1.939, "ultima_rilevazione": "28/08/2023 10:28:01", "Gestore": "M5 ENTERPRISE S.A.S. DI SAFDAR MUDASSAR & C.", "Indirizzo": "CENTO 59 44124", "Comune": "FERRARA", "Bandiera": "Itala Petroli", "geometry": {"type": "Point", "coordinates": [11.5314033903, 44.8470097313]}}, {"idImpianto": "15670", "price": 1.939, "ultima_rilevazione": "31/08/2023 08:36:11", "Gestore": "GIROTTI GIANFRANCESCO", "Indirizzo": "CORSO ITALIA 662 44043", "Comune": "TERRE DEL RENO", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.4309399455, 44.8092427434]}}, {"idImpianto": "32725", "price": 1.999, "ultima_rilevazione": "31/08/2023 09:05:15", "Gestore": "IP SERVICES S.R.L.", "Indirizzo": " SS 255 KM. 48,870  44047", "Comune": "TERRE DEL RENO", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.3824777841, 44.7934904828]}}, {"idImpianto": "11717", "price": 1.984, "ultima_rilevazione": "30/08/2023 07:36:13", "Gestore": "SERVIZI & GESTIONI ITALIA S.R.L.", "Indirizzo": "VIA CURIEL - S.P.FERRARESE 2 46028", "Comune": "SERMIDE E FELONICA", "Bandiera": "Q8", "geometry": {"type": "Point", "coordinates": [11.2881825864, 45.0056420546]}}, {"idImpianto": "34777", "price": 1.939, "ultima_rilevazione": "28/08/2023 11:41:07", "Gestore": "GRAZI PETROLI S.R.L.", "Indirizzo": "VIA FERRARA 6/D 41034", "Comune": "FINALE EMILIA", "Bandiera": "Grazi Petroli", "geometry": {"type": "Point", "coordinates": [11.3067179918, 44.8332718787]}}, {"idImpianto": "38910", "price": 1.929, "ultima_rilevazione": "31/08/2023 12:30:19", "Gestore": "T.D.M. S.R.L.", "Indirizzo": "ERIDANIA 47 45030", "Comune": "CALTO", "Bandiera": "Tamoil", "geometry": {"type": "Point", "coordinates": [11.3576813042, 44.9977182201]}}]}, "Gasolio": {"1": [{"idImpianto": "53358", "price": 1.827, "ultima_rilevazione": "29/08/2023 20:00:18", "Gestore": "A.F. PETROLI S.P.A.", "Indirizzo": "PIRONI 110 44012", "Comune": "BONDENO", "Bandiera": "AF Petroli", "geometry": {"type": "Point", "coordinates": [11.4164444804, 44.8881047875]}}, {"idImpianto": "55639", "price": 1.819, "ultima_rilevazione": "28/08/2023 18:56:32", "Gestore": "HADI SERVICE S.A.S. DI ARIF HASNAIN E C.", "Indirizzo": "Via Virgiliana 153  44012", "Comune": "BONDENO", "Bandiera": "Itala Petroli", "geometry": {"type": "Point", "coordinates": [11.2866077714, 44.9471852731]}}, {"idImpianto": "25931", "price": 1.854, "ultima_rilevazione": "01/09/2023 05:14:09", "Gestore": "GESTIONI INNOVATIVE ITALIA S.R.L.", "Indirizzo": "VIA VIRGILIANA (S.S. 496) KM42   44012", "Comune": "BONDENO", "Bandiera": "Agip Eni", "geometry": {"type": "Point", "coordinates": [11.4174878597, 44.8812412237]}}, {"idImpianto": "14803", "price": 1.864, "ultima_rilevazione": "29/08/2023 18:28:05", "Gestore": "ZERBINATI MASSIMO & C. S.A.S.", "Indirizzo": "PER ZERBINATE, 28 44012", "Comune": "BONDENO", "Bandiera": "Reno Gas Energy", "geometry": {"type": "Point", "coordinates": [11.4047420025, 44.9004269682]}}, {"idImpianto": "4580", "price": 1.829, "ultima_rilevazione": "28/08/2023 17:33:15", "Gestore": "ROBGAS COMMERCIALE S.R.L.", "Indirizzo": "496 Virgiliana, Km. 51, bondeno - 44012", "Comune": "BONDENO", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.43412292, 44.8768618438]}}, {"idImpianto": "16894", "price": 1.839, "ultima_rilevazione": "01/09/2023 08:03:45", "Gestore": "NEGRI MARIA LUISA", "Indirizzo": "Via provinciale, Scortichino 141 44017", "Comune": "BONDENO", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.3315751834, 44.8823868659]}}, {"idImpianto": "56389", "price": 1.859, "ultima_rilevazione": "01/09/2023 07:12:04", "Gestore": "ESSO FINALE EMILIA VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)", "Indirizzo": "VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)  41034", "Comune": "FINALE EMILIA", "Bandiera": "Esso", "geometry": {"type": "Point", "coordinates": [11.30337, 44.89424]}}], "3": [{"idImpianto": "15674", "price": 1.839, "ultima_rilevazione": "31/08/2023 08:36:27", "Gestore": "GIROTTI GIANFRANCESCO", "Indirizzo": "CENTO 57/A 44049", "Comune": "VIGARANO MAINARDA", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.5024231313, 44.8407564674]}}, {"idImpianto": "21970", "price": 1.869, "ultima_rilevazione": "31/08/2023 23:02:49", "Gestore": "FRAZZOLI MARIA & MEOTTI MARIA COSTANZA S.N.C.", "Indirizzo": "Statale 255 di San Matteo della Decima, Km. 54, dir. ferrara - 44049", "Comune": "VIGARANO MAINARDA", "Bandiera": "Repsol", "geometry": {"type": "Point", "coordinates": [11.4969687202, 44.8397774744]}}, {"idImpianto": "14445", "price": 1.879, "ultima_rilevazione": "28/08/2023 17:11:58", "Gestore": "MASSARI MARCO", "Indirizzo": "VIA ARGINE VALLE 67/B 46022", "Comune": "FELONICA", "Bandiera": "Loro", "geometry": {"type": "Point", "coordinates": [11.3492425132, 44.971696064]}}, {"idImpianto": "51689", "price": 1.819, "ultima_rilevazione": "29/08/2023 15:04:49", "Gestore": "LA GHISI CARBURANTI S.R.L.", "Indirizzo": "VIA PER FERRARA 85/A 41034", "Comune": "FINALE EMILIA", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.3399875164, 44.8311483244]}}, {"idImpianto": "36916", "price": 1.606, "ultima_rilevazione": "08/05/2023 15:26:55", "Gestore": "TACCHINI TIZIANO", "Indirizzo": "VIA ERIDANIA 1920 45036", "Comune": "FICAROLO", "Bandiera": "Retitalia", "geometry": {"type": "Point", "coordinates": [11.4422218502, 44.9601688852]}}, {"idImpianto": "20401", "price": 1.829, "ultima_rilevazione": "30/08/2023 08:47:22", "Gestore": "GURATTI ALESSIA", "Indirizzo": "via Provinciale 77/c 45030", "Comune": "GAIBA", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.4764292712, 44.9487939339]}}, {"idImpianto": "26315", "price": 1.84, "ultima_rilevazione": "28/08/2023 10:43:19", "Gestore": "EUGAS S.R.L.", "Indirizzo": "D. ALIGHIERI 149 45030", "Comune": "SALARA", "Bandiera": "Eugas", "geometry": {"type": "Point", "coordinates": [11.4210873842, 44.9739247336]}}], "5": [{"idImpianto": "50806", "price": 1.899, "ultima_rilevazione": "29/08/2023 00:02:17", "Gestore": "ANTONIONI ALEX", "Indirizzo": "VIA BONDENESE 87/1 44041", "Comune": "CENTO", "Bandiera": "Noaloil", "geometry": {"type": "Point", "coordinates": [11.3399264216, 44.8055014788]}}, {"idImpianto": "56891", "price": 1.819, "ultima_rilevazione": "28/08/2023 10:28:01", "Gestore": "M5 ENTERPRISE S.A.S. DI SAFDAR MUDASSAR & C.", "Indirizzo": "CENTO 59 44124", "Comune": "FERRARA", "Bandiera": "Itala Petroli", "geometry": {"type": "Point", "coordinates": [11.5314033903, 44.8470097313]}}, {"idImpianto": "15670", "price": 1.849, "ultima_rilevazione": "31/08/2023 08:36:11", "Gestore": "GIROTTI GIANFRANCESCO", "Indirizzo": "CORSO ITALIA 662 44043", "Comune": "TERRE DEL RENO", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.4309399455, 44.8092427434]}}, {"idImpianto": "32725", "price": 1.899, "ultima_rilevazione": "31/08/2023 09:05:15", "Gestore": "IP SERVICES S.R.L.", "Indirizzo": " SS 255 KM. 48,870  44047", "Comune": "TERRE DEL RENO", "Bandiera": "Api-Ip", "geometry": {"type": "Point", "coordinates": [11.3824777841, 44.7934904828]}}, {"idImpianto": "11717", "price": 1.889, "ultima_rilevazione": "30/08/2023 07:36:13", "Gestore": "SERVIZI & GESTIONI ITALIA S.R.L.", "Indirizzo": "VIA CURIEL - S.P.FERRARESE 2 46028", "Comune": "SERMIDE E FELONICA", "Bandiera": "Q8", "geometry": {"type": "Point", "coordinates": [11.2881825864, 45.0056420546]}}, {"idImpianto": "34777", "price": 1.849, "ultima_rilevazione": "28/08/2023 11:41:07", "Gestore": "GRAZI PETROLI S.R.L.", "Indirizzo": "VIA FERRARA 6/D 41034", "Comune": "FINALE EMILIA", "Bandiera": "Grazi Petroli", "geometry": {"type": "Point", "coordinates": [11.3067179918, 44.8332718787]}}, {"idImpianto": "38910", "price": 1.859, "ultima_rilevazione": "31/08/2023 12:30:19", "Gestore": "T.D.M. S.R.L.", "Indirizzo": "ERIDANIA 47 45030", "Comune": "CALTO", "Bandiera": "Tamoil", "geometry": {"type": "Point", "coordinates": [11.3576813042, 44.9977182201]}}]}, "GPL": {"1": [{"idImpianto": "14803", "price": 0.669, "ultima_rilevazione": "29/08/2023 18:28:05", "Gestore": "ZERBINATI MASSIMO & C. S.A.S.", "Indirizzo": "PER ZERBINATE, 28 44012", "Comune": "BONDENO", "Bandiera": "Reno Gas Energy", "geometry": {"type": "Point", "coordinates": [11.4047420025, 44.9004269682]}}, {"idImpianto": "4580", "price": 0.639, "ultima_rilevazione": "28/08/2023 17:33:15", "Gestore": "ROBGAS COMMERCIALE S.R.L.", "Indirizzo": "496 Virgiliana, Km. 51, bondeno - 44012", "Comune": "BONDENO", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.43412292, 44.8768618438]}}, {"idImpianto": "56389", "price": 0.659, "ultima_rilevazione": "01/09/2023 07:12:04", "Gestore": "ESSO FINALE EMILIA VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)", "Indirizzo": "VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)  41034", "Comune": "FINALE EMILIA", "Bandiera": "Esso", "geometry": {"type": "Point", "coordinates": [11.30337, 44.89424]}}], "3": [{"idImpianto": "14445", "price": 0.699, "ultima_rilevazione": "28/08/2023 17:11:58", "Gestore": "MASSARI MARCO", "Indirizzo": "VIA ARGINE VALLE 67/B 46022", "Comune": "FELONICA", "Bandiera": "Loro", "geometry": {"type": "Point", "coordinates": [11.3492425132, 44.971696064]}}, {"idImpianto": "51689", "price": 0.679, "ultima_rilevazione": "29/08/2023 15:04:49", "Gestore": "LA GHISI CARBURANTI S.R.L.", "Indirizzo": "VIA PER FERRARA 85/A 41034", "Comune": "FINALE EMILIA", "Bandiera": "Pompe Bianche", "geometry": {"type": "Point", "coordinates": [11.3399875164, 44.8311483244]}}, {"idImpianto": "26315", "price": 0.657, "ultima_rilevazione": "28/08/2023 10:43:19", "Gestore": "EUGAS S.R.L.", "Indirizzo": "D. ALIGHIERI 149 45030", "Comune": "SALARA", "Bandiera": "Eugas", "geometry": {"type": "Point", "coordinates": [11.4210873842, 44.9739247336]}}], "5": [{"idImpianto": "56891", "price": 0.652, "ultima_rilevazione": "28/08/2023 10:28:01", "Gestore": "M5 ENTERPRISE S.A.S. DI SAFDAR MUDASSAR & C.", "Indirizzo": "CENTO 59 44124", "Comune": "FERRARA", "Bandiera": "Itala Petroli", "geometry": {"type": "Point", "coordinates": [11.5314033903, 44.8470097313]}}]}, "Diesel High Quality": {"1": [{"idImpianto": "25931", "price": 1.954, "ultima_rilevazione": "01/09/2023 05:14:09", "Gestore": "GESTIONI INNOVATIVE ITALIA S.R.L.", "Indirizzo": "VIA VIRGILIANA (S.S. 496) KM42   44012", "Comune": "BONDENO", "Bandiera": "Agip Eni", "geometry": {"type": "Point", "coordinates": [11.4174878597, 44.8812412237]}}, {"idImpianto": "14803", "price": 1.949, "ultima_rilevazione": "29/08/2023 18:28:05", "Gestore": "ZERBINATI MASSIMO & C. S.A.S.", "Indirizzo": "PER ZERBINATE, 28 44012", "Comune": "BONDENO", "Bandiera": "Reno Gas Energy", "geometry": {"type": "Point", "coordinates": [11.4047420025, 44.9004269682]}}, {"idImpianto": "56389", "price": 1.959, "ultima_rilevazione": "01/09/2023 07:12:04", "Gestore": "ESSO FINALE EMILIA VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)", "Indirizzo": "VIA PER CENTO N. 2/C (SP 10 DI FINALE KM 3+119.5 LATO SX)  41034", "Comune": "FINALE EMILIA", "Bandiera": "Esso", "geometry": {"type": "Point", "coordinates": [11.30337, 44.89424]}}], "3": [{"idImpianto": "26315", "price": 2.049, "ultima_rilevazione": "28/08/2023 10:43:19", "Gestore": "EUGAS S.R.L.", "Indirizzo": "D. ALIGHIERI 149 45030", "Comune": "SALARA", "Bandiera": "Eugas", "geometry": {"type": "Point", "coordinates": [11.4210873842, 44.9739247336]}}], "5": [{"idImpianto": "11717", "price": 2.189, "ultima_rilevazione": "30/08/2023 07:36:13", "Gestore": "SERVIZI & GESTIONI ITALIA S.R.L.", "Indirizzo": "VIA CURIEL - S.P.FERRARESE 2 46028", "Comune": "SERMIDE E FELONICA", "Bandiera": "Q8", "geometry": {"type": "Point", "coordinates": [11.2881825864, 45.0056420546]}}, {"idImpianto": "11717", "price": 2.284, "ultima_rilevazione": "30/08/2023 07:36:13", "Gestore": "SERVIZI & GESTIONI ITALIA S.R.L.", "Indirizzo": "VIA CURIEL - S.P.FERRARESE 2 46028", "Comune": "SERMIDE E FELONICA", "Bandiera": "Q8", "geometry": {"type": "Point", "coordinates": [11.2881825864, 45.0056420546]}}]}, "NaN": {"1": [], "3": [], "5": []}, "null": {"1": [], "3": [], "5": []}, "Metano": {"1": [{"idImpianto": "14803", "price": 1.299, "ultima_rilevazione": "29/08/2023 18:28:05", "Gestore": "ZERBINATI MASSIMO & C. S.A.S.", "Indirizzo": "PER ZERBINATE, 28 44012", "Comune": "BONDENO", "Bandiera": "Reno Gas Energy", "geometry": {"type": "Point", "coordinates": [11.4047420025, 44.9004269682]}}], "3": [], "5": []}, "Benzina High quality": {"1": [], "3": [{"idImpianto": "26315", "price": 2.099, "ultima_rilevazione": "28/08/2023 10:43:19", "Gestore": "EUGAS S.R.L.", "Indirizzo": "D. ALIGHIERI 149 45030", "Comune": "SALARA", "Bandiera": "Eugas", "geometry": {"type": "Point", "coordinates": [11.4210873842, 44.9739247336]}}], "5": [{"idImpianto": "50806", "price": 2.669, "ultima_rilevazione": "29/08/2023 00:02:17", "Gestore": "ANTONIONI ALEX", "Indirizzo": "VIA BONDENESE 87/1 44041", "Comune": "CENTO", "Bandiera": "Noaloil", "geometry": {"type": "Point", "coordinates": [11.3399264216, 44.8055014788]}}]}}
{"importMap": "./import_map.json"}
{"importMap": "./import_map.json", "tasks": {"run": "deno run -A ./mod.ts", "compile": "deno compile -A ./mod.ts"}, "fmt": {"options": {"lineWidth": 120, "indentWidth": 2, "singleQuote": false, "useTabs": false}, "files": {"exclude": ["./lock.json"]}}}
{"imports": {"montag": "npm:montag"}}
{"compilerOptions": {"lib": ["deno.ns", "deno.unstable", "dom", "dom.iterable", "dom.asynciterable"]}, "fmt": {"files": {"exclude": ["static"]}}, "tasks": {"dev": "deno run --allow-read=. --allow-net --allow-env --allow-hrtime main.ts", "test": "deno test --allow-read=. --allow-net --allow-env --allow-hrtime"}}
{"tasks": {"install": "deno run -Ar install.ts .", "dev": "cd www && pyro dev", "test:deno_json": "cd tests/end_to_end/deno_json && pyro build && cd ../../..", "test:json_config": "cd tests/end_to_end/json_config && pyro build && cd ../../..", "test:unocss": "cd tests/end_to_end/unocss && pyro build && cd ../../..", "test:production": "cd www && pyro build && cd ..", "test": "deno task test:production && deno task test:json_config && deno task test:deno_json && deno task test:unocss"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "https://esm.sh/preact@10.17.1"}}
{"imports": {"isomorphic.js": "./node_modules/isomorphic.js/node.mjs", "lib0/performance": "./performance.node.js", "lib0/crypto/aes-gcm": "./crypto/aes-gcm.js", "lib0/crypto/rsa-oaep": "./crypto/rsa-oaep.js", "lib0/crypto/ecdsa": "./crypto/ecdsa.js", "lib0/crypto/jwt": "./crypto/jwt.js", "lib0/webcrypto": "./webcrypto.deno.js"}}
{"lint": {"files": {"include": ["./"], "exclude": []}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["./"], "exclude": []}}, "tasks": {"start": "deno run ./index.js"}}
{"lock": false, "fmt": {"indentWidth": 4, "proseWrap": "preserve", "exclude": ["./node_modules/", "./out/", "./package-lock.json"]}, "lint": {"exclude": ["./node_modules/", "./out/", "./package-lock.json"]}}
{"fmt": {"exclude": ["npm/", "README.md"], "lineWidth": 100, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}
{"tasks": {"test": "deno test --allow-run --allow-net --allow-read", "testm": "deno run --allow-run --allow-net ./src/tests/utils.ts", "dev": "deno run --allow-run --allow-net ./cli.ts", "release": "deno run -A https://deno.land/x/release_up@0.7.0/cli.ts --regex \"(?<=@)(.*)(?=/cli)\" --github --versionFile --changelog"}, "fmt": {"files": {"exclude": ["CHANGELOG.md"]}}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable"]}, "importMap": "importMap.json"}
{"fmt": {"files": {"exclude": ["dist", "node_modules"]}, "options": {"lineWidth": 100}}, "lint": {"files": {"exclude": ["dist", "node_modules"]}}, "tasks": {"build": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write _build.ts", "compile": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write _compile.ts", "lock": "! rm deno.lock && deno cache *.ts **/*.ts", "run": "deno task run:deno", "run:deno": "deno run --allow-run cli/main.ts", "run:node": "deno task build && node dist/cli.js", "test": "deno fmt --check & deno lint & deno task unit", "udd": "udd *.ts **/*.ts --dry-run", "unit": "deno test core"}}
{"title": "gas-gpt-starter", "description": "gas-gpt-starter is a starter kit to use GPT-3 in Google Apps Script.", "tasks": {"login": "deno run -A npm:@google/clasp@2.4.2 login", "open": "deno run -A npm:@google/clasp@2.4.2 open", "push": "deno run --allow-env --allow-net --allow-read --allow-sys --allow-write npm:@google/clasp@2.4.2 push -f", "clean": "deno run --allow-write _tasks/clean.ts", "build": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write _tasks/build.ts", "deploy": "deno task build && deno task push"}, "lint": {"files": {"include": ["src", "_tasks"]}}, "fmt": {"files": {"include": ["src", "_tasks"]}}, "test": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}}, "compilerOptions": {"types": ["https://raw.githubusercontent.com/Kazuki-tam/deno-gas-types/main/types/index.d.ts"]}}
{"tasks": {"build:npm": "deno run -A ./scripts/build_npm.ts"}, "exclude": ["npm"]}
{"Release": "D96A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFF", "Max": 9}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "LOC", "Min": 0, "Max": 9}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTA", "Min": 0, "Max": 9}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}]}, {"Id": "CNT"}, {"Id": "UNT"}]}
{"tasks": {"npm": "deno run -A scripts/build_npm.ts"}, "exclude": ["npm"]}
{"tasks": {"build": "deno run --allow-read=devices --allow-write=devices.json,ids.json,mod.ts --allow-run=deno --quiet --no-check build.ts", "watch": "deno run --allow-read=devices --allow-write=devices.json,ids.json,mod.ts --allow-run=deno --quiet --no-check build.ts --watch", "bump": "deno run --allow-all --quiet https://deno.land/x/udd@0.7.2/main.ts build.ts"}, "fig": {"build": {"description": "Generate `devices.json` and `mod.ts`", "icon": "\ud83d\udee0"}, "watch": {"description": "Watch for changes and regenerate", "icon": "\ud83d\udc40"}, "bump": {"description": "Bump dependency versions", "icon": "\ud83d\udc04"}}}
{"tasks": {"demo": "deno run --watch --allow-hrtime ./examples/demo.ts"}, "fmt": {"options": {"lineWidth": 120}}, "lock": false}
{"fmt": {"files": {"exclude": ["target/"]}}}
{"lint": {"files": {"exclude": ["npm/", "dev/", "examples/", "dev.ts"]}}, "fmt": {"files": {"exclude": ["npm/", "dev/"]}}, "tasks": {"build": "deno run -A ./scripts/clean_up.ts && tsc --noImplicitUseStrict -d index.ts --outdir npm && deno run -A ./scripts/build.ts"}}
{"imports": {"lume/": "https://deno.land/x/lume@v1.18.4/"}, "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s", "changelog": "deno run --allow-read --allow-write https://deno.land/x/changelog@v2.1.0/bin.ts"}, "lint": {"exclude": ["./_site", "./_bin"], "rules": {"tags": ["recommended"]}}, "fmt": {"exclude": ["./_site", "./_bin"]}}
{"tasks": {"dev": "TEPI_NOT_EXIT=1 deno run -A --watch ./src/cli.ts", "debug": "TEPI_NOT_EXIT=1 deno run --inspect-brk -A ./src/cli.ts ", "test": "NO_LOG=1 deno test -A", "test-debug": "deno test -A --filter='code 0'", "test-watch": "FORCE_COLOR=1 deno test -A --watch test", "test-docker": "docker compose up  --exit-code-from test --no-log-prefix --abort-on-container-exit test ", "local": "HOST=http://localhost HOST_HTTPBIN=http://localhost:81 deno task test-watch", "install": "deno install -fA --name tepi ./src/cli.ts", "install:x": "deno install --reload  -Af -n tepi https://tepi.deno.dev/src/cli.ts", "help": " deno run -A --watch ./src/cli.ts --help", "udd": "deno run -A --reload https://deno.land/x/udd/main.ts --test='deno task test --fail-fast'  'src/**/*.ts' 'test/**/*.ts'", "dnt": "deno run -A https://deno.land/x/dnt_prompt/main.ts", "version": "deno run -A https://deno.land/x/version/index.ts", "version:set": "deno task version patch && echo \"export const VERSION='$(cat VERSION)'\" > src/version.ts && git add src/version.ts && git commit -m 'chore: version $(cat VERSION)'", "readme": "cat docs/started.md > README.md && cat docs/usage.md >> README.md && cat docs/syntax.md >> README.md  && deno task readme:copy && git add README.md vscode-extension/README.md && git commit -m 'docs: update README.md' || true", "readme:copy": "cp README.md vscode-extension/README.md", "release": "deno task vhs && deno task readme && deno task version:set && git push --tags origin main && deno task publish-image", "publish-image": "export IMAGE_NAME=jupegarnica/tepi && export IMAGE_TAG=$(deno task version get) && docker build -t $IMAGE_NAME:$IMAGE_TAG . && docker push $IMAGE_NAME:$IMAGE_TAG && docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest && docker push $IMAGE_NAME:latest", "vhs": "bash -c 'cd vhs && vhs < demo.tape && git add ./demo.gif && git commit -m vhs' "}}
{"tasks": {"start": "deno run -A mod.ts", "release": "deno run --allow-read --allow-write --allow-env --allow-run https://deno.land/x/easy_std@v0.5.0/scripts/release.ts", "install": "deno install --allow-read --allow-env --allow-run --allow-write --unstable -rfn n mod.ts"}, "fmt": {"semiColons": false}, "lock": true}
{"tasks": {"check": "deno fmt && deno lint && deno test"}}
{"lock": false, "tasks": {"test": "deno test --no-lock --unstable -A --doc --parallel --shuffle", "check": "deno check --no-lock --unstable $(find . -name '*.ts')", "upgrade": "deno run --no-lock -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "types": ["https://deno.land/x/aleph@1.0.0-beta.18/types.d.ts"], "jsx": "react-jsx", "jsxImportSource": "https://esm.sh/react@18.2.0"}, "importMap": "import_map.json", "tasks": {"dev": "deno run -A server.ts --dev"}}
{"tasks": {"watch:front": "deno task build:front --watch", "implement": "deno run --allow-read=. --allow-write=. --allow-run .pita/tasks/implement.ts", "test:front": "deno test -A", "test:back": "echo 'not implemented'", "test:fpga": "echo 'not implemented'", "build:front": "deno bundle ./frontend/app.tsx ./www/assets/app.js", "build:back": "echo 'not implemented'", "build:fpga": "echo 'not implemented'", "bench:front": "deno bench -A", "bench:back": "echo 'not implemented'", "bench:fpga": "echo 'not implemented'", "mock:front": "deno run -A .pita/tasks/mocks/frontend/serve.ts & deno run -A .pita/tasks/mocks/frontend/ws.ts", "mock:back": "echo 'not implemented'", "mock:fpga": "echo 'not implemented'"}, "fmt": {"useTabs": true, "singleQuote": true, "semiColons": false, "indentWidth": 4, "exclude": ["./backend"]}, "importMap": "./import_map.json", "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable", "esnext"], "jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"test": "deno test --lock=lock.json --allow-read=src/testdata src/title-sort.test.ts", "write_unsorted": "deno run --lock=lock.json --allow-read=.meta/data --allow-write=src/testdata .meta/transform.ts --write unsorted"}}
{"tasks": {"start": "deno run -A mod.ts", "release": "deno run --allow-read --allow-write --allow-env --allow-run https://deno.land/x/easy_std@v0.4.3/scripts/release.ts", "install": "deno install --allow-run --allow-read --allow-env --unstable -rfn g ./mod.ts"}}
{"compilerOptions": {"allowJs": false, "lib": ["deno.ns"], "strict": true}, "lint": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}}}
{"tasks": {"dev": "deno run -A embedder.ts dev --task start", "start": "deno run --allow-net=0.0.0.0:8000 --watch server.ts", "compile": "deno compile server.ts", "build-embeds": "deno run -A embedder.ts build"}}
{"tasks": {"dev": "deno run --watch main.ts", "deploy": "fly deploy"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/,README.md dev.ts", "reload": "deno run -A --watch=static/,routes/,README.md --reload dev.ts", "run": "DENO_DEPLOYMENT_ID=$(git rev-parse --short HEAD) deno run -A main.ts", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "fmt": {"semiColons": false, "exclude": ["_fresh", "static/", "utils/form-validation.io/"]}, "lock": false, "imports": {"@/": "./", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "$std/": "https://deno.land/std@0.198.0/", "gfm": "https://deno.land/x/gfm@0.1.22/mod.ts", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "redis": "https://deno.land/x/redis@v0.29.1/mod.ts", "fresh_marionette": "https://deno.land/x/fresh_marionette@v2.0.1/mod.js", "envalid": "https://deno.land/x/envalid@0.1.2/mod.ts", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}}
{"lint": {"exclude": ["node_modules", "dist", "packages/sham-weakref/dist", "packages/sham-weakref/node_modules", "packages/shim-crypto/dist", "packages/shim-crypto/node_modules", "packages/shim-deno/dist", "packages/shim-deno/node_modules", "packages/shim-deno/src/deno/stable/lib.deno.d.ts", "packages/shim-deno/src/deno/unstable/lib.deno.unstable.d.ts", "packages/shim-deno/lib", "packages/shim-deno/third_party", "packages/shim-deno-test/dist", "packages/shim-deno-test/node_modules", "packages/shim-prompts/dist", "packages/shim-prompts/node_modules", "packages/shim-timers/dist", "packages/shim-timers/node_modules"], "rules": {"exclude": ["no-explicit-any"]}}, "fmt": {"exclude": ["node_modules", "dist", "packages/sham-weakref/dist", "packages/sham-weakref/node_modules", "packages/shim-crypto/dist", "packages/shim-crypto/node_modules", "packages/shim-deno/dist", "packages/shim-deno/node_modules", "packages/shim-deno/src/deno/stable/lib.deno.d.ts", "packages/shim-deno/src/deno/unstable/lib.deno.unstable.d.ts", "packages/shim-deno/lib", "packages/shim-deno/third_party", "packages/shim-deno-test/dist", "packages/shim-deno-test/node_modules", "packages/shim-prompts/dist", "packages/shim-prompts/node_modules", "packages/shim-timers/dist", "packages/shim-timers/node_modules"]}}
{"tasks": {"dev": "deno run -A --watch main.ts", "deploy": "deployctl deploy main.ts"}}
{"tasks": {"dev": "deno run --watch main.ts", "cache": "deno cache deps.ts", "run": "deno run --allow-run --allow-env --allow-read main.ts", "compile": "deno compile --allow-run --allow-env --allow-read --output ./build/git-multi-repo main.ts"}}
{"lint": {"include": ["scripts"]}, "fmt": {"include": ["scripts"], "options": {"useTabs": false, "lineWidth": 500, "indentWidth": 4, "singleQuote": true, "proseWrap": "preserve"}}, "tasks": {"d": "deno run -A scripts/deploy.ts", "t": "deno test -A scripts/test.ts", "w": "deno run -A scripts/watch.ts"}}
{"tasks": {"start": "deno task build && deno task start:deno", "start:deno": "cd \"./Builds/Server_Default Web Server/\" && deno run -A ./main.ts", "build": "deno task build:gweb && deno task build:deno && deno task build:importmap", "build:gweb": "deno task build:gweb:client && deno task build:gweb:server", "build:gweb:client": "\"c:/Program Files/National Instruments/G Web Development Software/gwebcli.exe\" build-application -p ../Deno/Deno.gwebproject -t \"Default Web Server\" -n Client.gcomp", "build:gweb:server": "\"c:/Program Files/National Instruments/G Web Development Software/gwebcli.exe\" build-application -p ../Deno/Deno.gwebproject -t \"Default Web Server\" -n Server.gcomp", "build:deno": "deno run -A \"./Builds/Server_Default Web Server/Deno/Support/src/make-main.ts\"", "build:importmap": "cp ./import_map.json \"./Builds/Server_Default Web Server/import_map.json\"", "publish": "deno task build && deno task publish:deployctl", "publish:deployctl": "cd ./Builds/ && deployctl deploy --import-map=\"./Server_Default Web Server/import_map.json\" \"./Server_Default Web Server/main.ts\""}, "importMap": "./import_map.json"}
{"importMap": "./importMap.json", "tasks": {"start": "deno run --watch --allow-net src/server.ts"}}
{"tasks": {"check": "deno run --allow-run bin/task.ts check", "format": "deno run --allow-run bin/task.ts format", "test": "deno run --allow-run bin/task.ts test", "watch": "watchexec --ignore=.git --ignore=build --no-shell --postpone --watch-when-idle -- deno task test"}}
{"name": "deno_proxy", "version": "1.4.1", "tasks": {"serve": "deno run  -A mod.ts --isCacheNoVersion --logLevel DEBUG", "dev": "deno run -A example/mod.ts", "map": "deno run --allow-read --allow-write ./cli/mod.ts --baseUrl http://localhost:80 --oldPath example/import_map.json --newPath example/import_map_proxy.json --ignoreOrigins /baidu.com/,/xunlei.cn/ ", "cache": "deno cache --importmap example/import_map_proxy.json  example/mod.ts", "test": "deno test", "build": "deno bundle --unstable mod.ts mod.js"}}
{"tasks": {"deno": "deno run -A", "test": "deno test --allow-env --allow-read --allow-run"}}
{"lock": "./deno.lock", "tasks": {"lint": "deno lint", "fmt": "deno fmt", "udd": "deno run -r --allow-read=. --allow-write=. --allow-net https://deno.land/x/udd/main.ts deps.ts && deno task lock", "lock": "deno cache --lock=deno.lock --lock-write deps.ts", "all": "deno task udd && deno task lint && deno task fmt", "start": "deno run -A main.ts", "ngrok": "ngrok http 8080"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "test": "deno test -A --unstable test"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"dev": "deno run --watch main.ts"}, "imports": {"std/": "https://deno.land/std@0.177.0/"}}
{"$id": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "$schema": "http://json-schema.org/draft-07/schema", "description": "A JSON representation of a Deno configuration file.", "required": [], "title": "Deno configuration file Schema", "type": "object", "properties": {"compilerOptions": {"type": "object", "description": "Instructs the TypeScript compiler how to compile .ts files.", "properties": {"allowJs": {"description": "Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files.", "type": "boolean", "default": true, "markdownDescription": "Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowJs"}, "allowUnreachableCode": {"description": "Disable error reporting for unreachable code.", "type": "boolean", "default": false, "markdownDescription": "Disable error reporting for unreachable code.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowUnreachableCode"}, "allowUnusedLabels": {"description": "Disable error reporting for unused labels.", "type": "boolean", "default": false, "markdownDescription": "Disable error reporting for unused labels.\n\nSee more: https://www.typescriptlang.org/tsconfig#allowUnusedLabels"}, "checkJs": {"description": "Enable error reporting in type-checked JavaScript files.", "type": "boolean", "default": false, "markdownDescription": "Enable error reporting in type-checked JavaScript files.\n\nSee more: https://www.typescriptlang.org/tsconfig#checkJs"}, "experimentalDecorators": {"description": "Enable experimental support for TC39 stage 2 draft decorators.", "type": "boolean", "default": true, "markdownDescription": "Enable experimental support for TC39 stage 2 draft decorators.\n\nSee more: https://www.typescriptlang.org/tsconfig#experimentalDecorators"}, "jsx": {"description": "Specify what JSX code is generated.", "default": "react", "enum": ["preserve", "react", "react-jsx", "react-jsxdev", "react-native"]}, "jsxFactory": {"description": "Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'", "type": "string", "default": "React.createElement", "markdownDescription": "Specify the JSX factory function used when targeting React JSX emit, e.g. 'React.createElement' or 'h'\n\nSee more: https://www.typescriptlang.org/tsconfig#jsxFactory"}, "jsxFragmentFactory": {"description": "Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.", "type": "string", "default": "React.Fragment", "markdownDescription": "Specify the JSX Fragment reference used for fragments when targeting React JSX emit e.g. 'React.Fragment' or 'Fragment'.\n\nSee more: https://www.typescriptlang.org/tsconfig#jsxFragmentFactory"}, "jsxImportSource": {"description": "Specify module specifier used to import the JSX factory functions when using jsx: 'react-jsx*'.", "type": "string", "default": "react", "markdownDescription": "Specify module specifier used to import the JSX factory functions when using jsx: `react-jsx*`.\n\nSee more: https://www.typescriptlang.org/tsconfig/#jsxImportSource"}, "keyofStringsOnly": {"description": "Make keyof only return strings instead of string, numbers or symbols. Legacy option.", "type": "boolean", "default": false, "markdownDescription": "Make keyof only return strings instead of string, numbers or symbols. Legacy option.\n\nSee more: https://www.typescriptlang.org/tsconfig#keyofStringsOnly"}, "lib": {"description": "Specify a set of bundled library declaration files that describe the target runtime environment.", "type": "array", "uniqueItems": true, "default": ["deno.window"], "items": {"type": "string"}, "markdownDescription": "Specify a set of bundled library declaration files that describe the target runtime environment.\n\nSee more: https://www.typescriptlang.org/tsconfig#lib"}, "noFallthroughCasesInSwitch": {"description": "Enable error reporting for fallthrough cases in switch statements.", "type": "boolean", "default": false, "markdownDescription": "Enable error reporting for fallthrough cases in switch statements.\n\nSee more: https://www.typescriptlang.org/tsconfig#noFallthroughCasesInSwitch"}, "noImplicitAny": {"description": "Enable error reporting for expressions and declarations with an implied `any` type..", "type": "boolean", "default": true, "markdownDescription": "Enable error reporting for expressions and declarations with an implied `any` type..\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitAny"}, "noImplicitOverride": {"description": "Ensure overriding members in derived classes are marked with an override modifier.", "type": "boolean", "default": false, "markdownDescription": "Ensure overriding members in derived classes are marked with an override modifier.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitOverride"}, "noImplicitReturns": {"description": "Enable error reporting for codepaths that do not explicitly return in a function.", "type": "boolean", "default": false, "markdownDescription": "Enable error reporting for codepaths that do not explicitly return in a function.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitReturns"}, "noImplicitThis": {"description": "Enable error reporting when `this` is given the type `any`.", "type": "boolean", "default": true, "markdownDescription": "Enable error reporting when `this` is given the type `any`.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitThis"}, "noImplicitUseStrict": {"description": "Disable adding 'use strict' directives in emitted JavaScript files.", "type": "boolean", "default": true, "markdownDescription": "Disable adding 'use strict' directives in emitted JavaScript files.\n\nSee more: https://www.typescriptlang.org/tsconfig#noImplicitUseStrict"}, "noStrictGenericChecks": {"description": "Disable strict checking of generic signatures in function types.", "type": "boolean", "default": false, "markdownDescription": "Disable strict checking of generic signatures in function types.\n\nSee more: https://www.typescriptlang.org/tsconfig#noStrictGenericChecks"}, "noUnusedLocals": {"description": "Enable error reporting when a local variables aren't read.", "type": "boolean", "default": false, "markdownDescription": "Enable error reporting when a local variables aren't read.\n\nSee more: https://www.typescriptlang.org/tsconfig#noUnusedLocals"}, "noUnusedParameters": {"description": "Raise an error when a function parameter isn't read", "type": "boolean", "default": false, "markdownDescription": "Raise an error when a function parameter isn't read\n\nSee more: https://www.typescriptlang.org/tsconfig#noUnusedParameters"}, "noUncheckedIndexedAccess": {"description": "Add `undefined` to a type when accessed using an index.", "type": "boolean", "default": false, "markdownDescription": "Add `undefined` to a type when accessed using an index.\n\nSee more: https://www.typescriptlang.org/tsconfig#noUncheckedIndexedAccess"}, "strict": {"description": "Enable all strict type checking options.", "type": "boolean", "default": true, "markdownDescription": "Enable all strict type checking options.\n\nSee more: https://www.typescriptlang.org/tsconfig#strict"}, "strictBindCallApply": {"description": "Check that the arguments for `bind`, `call`, and `apply` methods match the original function.", "type": "boolean", "default": true, "markdownDescription": "Check that the arguments for `bind`, `call`, and `apply` methods match the original function.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictBindCallApply"}, "strictFunctionTypes": {"description": "When assigning functions, check to ensure parameters and the return values are subtype-compatible.", "type": "boolean", "default": true, "markdownDescription": "When assigning functions, check to ensure parameters and the return values are subtype-compatible.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictFunctionTypes"}, "strictPropertyInitialization": {"description": "Check for class properties that are declared but not set in the constructor.", "type": "boolean", "default": true, "markdownDescription": "Check for class properties that are declared but not set in the constructor.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictPropertyInitialization"}, "strictNullChecks": {"description": "When type checking, take into account `null` and `undefined`.", "type": "boolean", "default": true, "markdownDescription": "When type checking, take into account `null` and `undefined`.\n\nSee more: https://www.typescriptlang.org/tsconfig#strictNullChecks"}, "suppressExcessPropertyErrors": {"description": "Disable reporting of excess property errors during the creation of object literals.", "type": "boolean", "default": false, "markdownDescription": "Disable reporting of excess property errors during the creation of object literals.\n\nSee more: https://www.typescriptlang.org/tsconfig#suppressExcessPropertyErrors"}, "suppressImplicitAnyIndexErrors": {"description": "Suppress `noImplicitAny` errors when indexing objects that lack index signatures.", "type": "boolean", "default": false, "markdownDescription": "Suppress `noImplicitAny` errors when indexing objects that lack index signatures.\n\nSee more: https://www.typescriptlang.org/tsconfig#suppressImplicitAnyIndexErrors"}}}, "importMap": {"description": "The location of an import map to be used when resolving modules. If an import map is explicitly specified, it will override this value.", "type": "string"}, "lint": {"description": "Configuration for linter", "type": "object", "properties": {"files": {"type": "object", "properties": {"include": {"type": "array", "description": "List of files or directories that will be linted.", "items": {"type": "string"}}, "exclude": {"type": "array", "description": "List of files or directories that will not be linted.", "items": {"type": "string"}}}}, "rules": {"type": "object", "properties": {"tags": {"type": "array", "description": "List of tag names that will be run. Empty list disables all tags and will only use rules from `include`.", "items": {"type": "string"}, "minItems": 0, "uniqueItems": true}, "exclude": {"type": "array", "description": "List of rule names that will be excluded from configured tag sets. If the same rule is in `include` it be run.", "items": {"type": "string"}, "minItems": 0, "uniqueItems": true}, "include": {"type": "array", "description": "List of rule names that will be run. Even if the same rule is in `exclude` it will be run.", "items": {"type": "string"}, "minItems": 0, "uniqueItems": true}}}}}, "fmt": {"description": "Configuration for formatter", "type": "object", "properties": {"files": {"type": "object", "properties": {"include": {"type": "array", "description": "List of files or directories that will be formatted.", "items": {"type": "string"}}, "exclude": {"type": "array", "description": "List of files or directories that will not be formatted.", "items": {"type": "string"}}}}, "options": {"type": "object", "properties": {"useTabs": {"description": "Whether to use tabs (true) or spaces (false) for indentation.", "type": "boolean", "default": false}, "lineWidth": {"description": "The width of a line the printer will try to stay under. Note that the printer may exceed this width in certain cases.", "type": "number", "default": 80}, "indentWidth": {"description": "The number of characters for an indent.", "type": "number", "default": 2}, "singleQuote": {"type": "boolean", "description": "Whether to use single quote (true) or double quote (false) for quotation.", "default": false}, "proseWrap": {"description": "Define how prose should be wrapped in Markdown files.", "default": "always", "enum": ["always", "never", "preserve"]}}}}}, "tasks": {"description": "Configuration for deno task", "type": "object", "patternProperties": {"^[A-Za-z][A-Za-z0-9_\\-:]*$": {"type": "string", "description": "Command to execute for this task name."}}, "additionalProperties": false}}}
{"lint-staged": {"*": "deno lint && deno fmt", "deno.jsonc": "deno task setup-hooks"}, "tasks": {"run": "deno run --allow-env --allow-read --allow-net", "dev": "deno task run --watch main.ts", "main": "deno task run main.ts", "start": "deno task run --watch server.ts", "test": "deno test --allow-env --allow-read --allow-net --allow-none", "cov": "deno task test --coverage=cov_profile; deno coverage cov_profile", "lint": "deno lint --ignore=cov_profile", "fmt": "deno fmt --ignore=cov_profile", "check": "deno check ./**/*.ts", "ci": "deno task check && deno task lint && deno task fmt --check && deno task test", "deps": "deno run --allow-read --allow-write --allow-net --allow-run https://deno.land/x/udd@0.8.2/main.ts --test='deno task test' deno.jsonc ./**.*.ts", "setup-hooks": "deno run --allow-read --allow-run https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/setup-hooks.ts", "pre-commit": "deno task doc && deno run --allow-read --allow-env --allow-run --allow-write https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/lint-staged.ts", "pre-push": "deno task ci", "doc": "deno task markdown && deno task vimdoc", "markdown": "deno run --allow-net --allow-read --allow-write https://pax.deno.dev/Omochice/podeno/cli.ts markdown --in ./pod/chronicle.pod --out ./README.md", "vimdoc": "deno run --allow-net --allow-read --allow-write https://pax.deno.dev/Omochice/podeno/cli.ts vimdoc --in ./pod/chronicle.pod --out ./doc/chronicle.txt"}, "fmt": {"useTabs": false, "lineWidth": 100, "indentWidth": 2, "singleQuote": false, "include": ["denops"]}, "lint": {"include": ["denops"]}, "lock": false}
{"tasks": {"dev": "deno run --allow-net --watch main.ts"}}
{"importMap": "import_map.json", "fmt": {"files": {"exclude": ["README.md"]}, "options": {"lineWidth": 100}}}
{"tasks": {"dev": "deno task vite", "build": "deno task vite build", "preview": "deno task vite preview", "serve": "deno run --allow-net --allow-read https://deno.land/std@0.157.0/http/file_server.ts build", "vite": "deno run -A --node-modules-dir npm:vite"}}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "deno run --watch src/main.ts", "check": "deno check src/*", "lint": "deno lint src/*", "fmt": "deno fmt src/*"}, "fmt": {"useTabs": false, "lineWidth": 80, "indentWidth": 4, "semiColons": true, "singleQuote": false, "proseWrap": "preserve", "include": ["src/"]}}
{"tasks": {"dev": "deno run --allow-env --allow-read --allow-net ./src/main.ts"}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "lint": {"include": ["*.ts"], "exclude": []}, "fmt": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "semiColons": false, "singleQuote": true, "proseWrap": "preserve", "include": ["*.ts"]}, "lock": false, "nodeModulesDir": true, "tasks": {"start": "deno run --allow-read --allow-env --allow-net index.ts"}, "imports": {"http": "https://deno.land/std@0.198.0/http/server.ts", "dotenv": "https://deno.land/std/dotenv/mod.ts"}}
{"importMap": ".vscode/import_map.json", "tasks": {"fmt:fix": "deno fmt library/ tests/ www/ docs/", "fmt:check": "deno fmt --check library/ tests/ www/ docs/", "lint": "deno lint library/ tests/ www/ docs/", "test": "deno test -A ./tests", "dnt": "deno run -A --importmap ./scripts/dnt_import_map.json ./scripts/dnt.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "lock": false}
{"tasks": {"dev": "deno run -A --watch src/main.ts", "test": "deno test -A"}, "importMap": "./import_map.json"}
{"name": "sqlite-fastrand", "version": "0.2.1", "github": "https://github.com/asg017/sqlite-fastrand", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"fmt": {"semiColons": false, "singleQuote": true, "exclude": ["./changelog.md"]}, "tasks": {"build:types": "cd ./out && npx -p typescript tsc --target esnext --module es2020 --declaration --emitDeclarationOnly --outDir types --newLine lf mod.ts", "build:esm": "cd ./out && deno run -A https://deno.land/x/esbuild@v0.18.11/mod.js mod.ts --bundle --minify --allow-overwrite --format=esm --outfile=mod.mjs", "build:cjs": "cd ./out && deno run -A https://deno.land/x/esbuild@v0.18.11/mod.js mod.ts --bundle --minify --allow-overwrite --format=cjs --outfile=mod.cjs", "build": "deno run -A .github/preBuild.ts && deno task build:types && deno task build:cjs && deno task build:esm"}, "lock": false}
{"compilerOptions": {"checkJs": true}}
{"tasks": {"start": "deno run -A --watch main.tsx"}}
{"lint": {"rules": {"exclude": ["require-await"]}}, "fmt": {"options": {"indentWidth": 4, "lineWidth": 120}}, "importMap": "../../neolace-app/backend/import_map.json"}
{"lint-staged": {"*": "deno lint && deno fmt", "deno.jsonc": "deno task setup-hooks"}, "tasks": {"run": "deno run --allow-env --allow-read --allow-net", "dev": "deno task run --watch main.ts", "main": "deno task run main.ts", "start": "deno task run --watch server.ts", "test": "deno test --allow-env --allow-read --allow-net --allow-none", "cov": "deno task test --coverage=cov_profile; deno coverage cov_profile", "lint": "deno lint --ignore=cov_profile", "fmt": "deno fmt --ignore=cov_profile", "check": "deno check ./**/*.ts", "ci": "deno task check && deno task lint && deno task fmt --check && deno task test", "deps": "deno run --allow-read --allow-write --allow-net --allow-run https://deno.land/x/udd@0.8.2/main.ts --test='deno task test' deno.jsonc ./**.*.ts", "setup-hooks": "deno run --allow-read --allow-run https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/setup-hooks.ts", "pre-commit": "deno task doc && deno run --allow-read --allow-env --allow-run --allow-write https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/lint-staged.ts", "pre-push": "deno task ci", "doc": "deno task markdown && deno task vimdoc", "markdown": "deno run --allow-net --allow-read --allow-write https://pax.deno.dev/Omochice/podeno/cli.ts markdown --in ./pod/autodate.pod --out ./README.md", "vimdoc": "deno run --allow-net --allow-read --allow-write https://pax.deno.dev/Omochice/podeno/cli.ts vimdoc --in ./pod/autodate.pod --out ./doc/autodate.txt"}, "fmt": {"useTabs": false, "lineWidth": 100, "indentWidth": 2, "singleQuote": false, "include": ["denops"]}, "lint": {"include": ["denops"]}, "lock": false}
{"fmt": {"options": {"singleQuote": true, "semiColons": false, "indentWidth": 4, "useTabs": false}, "files": {"include": ["index.ts"]}}}
{"tasks": {"dev": "deno run --allow-env --allow-read --allow-write --unstable synthesize-speech.ts"}}
{"tasks": {"dev": "deno run --watch main.ts"}, "imports": {"std/": "https://deno.land/std@0.178.0/"}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "esnext"]}}
{"tasks": {"dev": "deno run --watch --allow-read --allow-env --allow-net main.ts", "deploy": ""}, "imports": {"express": "npm:express@^4.18"}}
{"compilerOptions": {"types": ["https://deno.land/x/deploy@0.4.0/types/deploy.ns.d.ts", "https://deno.land/x/deploy@0.4.0/types/deploy.window.d.ts", "https://deno.land/x/deploy@0.4.0/types/deploy.fetchevent.d.ts"]}, "fmt": {"options": {"singleQuote": true, "useTabs": false, "indentWidth": 2, "lineWidth": 100}}}
{"tasks": {"start": "deno run --allow-read --allow-net --allow-env src/index.ts", "check": "deno check src/*.ts", "dev:commands": "deno run --allow-read --allow-net --allow-env src/deploy-commands.ts", "lint": "deno lint src/*", "format": "deno fmt src/* deno.jsonc"}, "fmt": {"indentWidth": 4, "semiColons": true, "lineWidth": 80, "include": ["src/"]}, "lint": {"rules": {"exclude": ["no-inferrable-types", "no-explicit-any"]}}}
{"imports": {"std/": "https://deno.land/std@0.184.0/", "docopt": "https://deno.land/x/docopt@v1.0.7/mod.ts"}}
{"lock": false, "fmt": {"proseWrap": "preserve", "exclude": ["./out/"]}, "lint": {"exclude": ["./out/"]}, "tasks": {"example": "cd examples && deno run --allow-net --allow-read deno.ts", "test": "deno test --allow-read --allow-run --allow-write", "dnt": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write scripts/dnt.ts"}, "test": {"exclude": ["./out/"]}}
{"tasks": {"dev": "deno run -A --watch=static/,routes/ dev.ts", "start": "deno run -A dev.ts"}, "importMap": "./import_map.json"}
{"importMap": "import_map.json", "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "dom.extras", "deno.ns", "deno.unstable"], "types": ["./types.d.ts"], "jsx": "react", "jsxFactory": "h", "jsxFragmentFactory": "Fragment", "jsxImportSource": "preact"}, "fmt": {"files": {"exclude": ["static", "./{.vscode,.devcontainer,.gitpod.yml,.git*,.env*}", "README.md"]}}, "lint": {"rules": {"exclude": ["no-explicit-any", "import-prefix-missing", "no-bad-types", "no-empty-interface", "ban-types", "ban-ts-comment"]}}, "tasks": {"dev": "deno run -A --unstable --watch=. main.tsx", "preview": "deno run --allow-net --allow-env main.tsx", "test": "deno test -A --unstable"}}
{"name": "sqlite-path", "version": "0.2.1", "github": "https://github.com/asg017/sqlite-path", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"lint": {"files": {"exclude": ["dist/"]}}}
{"tasks": {"test": "deno test --importmap import_maps.json", "check": "deno check --importmap import_maps.json src/mod.ts", "run": "deno run --allow-write --allow-read --importmap import_maps.json src/mod.ts", "run:watch": "deno run --watch --allow-read --allow-write --importmap import_maps.json src/mod.ts"}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-net --allow-read --allow-env start.ts", "serverless": "deno run --allow-net --allow-read --allow-env serverless.ts"}}
{"tasks": {"dev": "deno run --watch --allow-all index.ts"}}
{"lint": {"files": {"exclude": ["./vendor", "./tmp"]}}, "fmt": {"files": {"exclude": ["./vendor", "./tmp"]}}, "importMap": "./import_map.json"}
{"tasks": {"dev": "TZ=UTC deno run --allow-net --allow-read --allow-env --watch --no-check main.jsx --dev", "serve": "TZ=UTC deno run --allow-net --allow-read --allow-env --no-check main.jsx"}}
{"tasks": {"dev": "cargo watch -x run", "run": "cargo run", "install": "cargo install -f --path ."}}
{"tasks": {"start": "deno run -A --watch=public/ index.ts"}}
{"importMap": "paths.json", "tasks": {"cache": "deno cache src/**/*.ts", "start": "deno run --allow-all --unstable src/main.ts", "start:watch": "denon run --allow-all --unstable src/main.ts"}}
{"lock": false, "tasks": {"init:stripe": "deno run --allow-read --allow-env --allow-net tools/init_stripe.ts", "db:dump": "deno run --allow-read --allow-env --unstable tools/dump_kv.ts", "db:seed": "deno run --allow-read --allow-env --allow-net --unstable tools/seed_submissions.ts", "db:migrate": "deno run --allow-read --allow-env --allow-net --unstable tasks/db_migrate.ts", "db:reset": "deno run --allow-read --allow-env --unstable tools/reset_kv.ts", "start": "deno run --unstable -A --watch=static/,routes/ dev.ts", "test": "KV_PATH=:memory: deno test -A --unstable --parallel --coverage=./cov --doc", "check:license": "deno run --allow-read --allow-write tools/check_license.ts", "check:types": "deno check **/*.ts && deno check **/*.tsx", "ok": "deno fmt --check && deno lint && deno task check:license --check && deno task check:types && deno task test", "cov": "deno coverage ./cov/ --lcov --exclude='test.ts' > cov.lcov", "update": "deno run -A -r https://fresh.deno.dev/update .", "build": "deno run -A --unstable dev.ts build", "preview": "deno run -A --unstable main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"@/": "./", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "$gfm": "https://deno.land/x/gfm@0.2.4/mod.ts", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind-preset-tailwind/": "https://esm.sh/@twind/preset-tailwind@1.1.4/", "twind-preset-ext": "https://esm.sh/@twind/preset-ext@1.0.7/", "std/": "https://raw.githubusercontent.com/lino-levan/deno_std/feat-ulid/", "stripe": "./stripe.ts", "feed": "https://esm.sh/feed@4.2.2", "kv_oauth": "https://deno.land/x/deno_kv_oauth@v0.6.1/mod.ts", "tabler_icons_tsx/": "https://deno.land/x/tabler_icons_tsx@0.0.4/tsx/", "@twind/core": "https://esm.sh/@twind/core@1.1.3", "fresh_charts/": "https://deno.land/x/fresh_charts@0.3.1/"}, "exclude": ["cov/", "_fresh/"], "lint": {"rules": {"tags": ["fresh", "recommended"]}}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"tasks": {"genmod": "deno run ./tools/generate.js > mod.ts && deno fmt mod.ts", "tests": "deno run ./tools/generatetests.js > test.ts && deno fmt test.ts && deno test ./test.ts"}}
{"tasks": {"start": "deno run -A --watch=static/,src/,types/ main.ts"}}
{"importMap": "./import_map.json", "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "lint": {"rules": {"include": ["eqeqeq"], "tags": ["recommended"]}, "files": {"exclude": ["scripts/", "_site"]}}, "fmt": {"options": {"indentWidth": 2, "singleQuote": true, "semiColons": false, "useTabs": false}, "files": {"exclude": [".md"]}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "start:prod": "deno run -A app/main.ts", "esm:add": "deno run -A https://esm.sh/v115 add", "esm:update": "deno run -A https://esm.sh/v115 update", "esm:remove": "deno run -A https://esm.sh/v115 remove", "nessie:local": "deno run -A --unstable https://deno.land/x/nessie/cli.ts -c ./nessie.config.ts", "nessie:test": "deno run -A --unstable https://deno.land/x/nessie/cli.ts -c ./nessie.test.config.ts", "nessie:prod": "deno run -A --unstable https://deno.land/x/nessie/cli.ts -c ./nessie.prod.config.ts", "proxy-db:prod": "fly proxy -a poll-blue-db 6432:5432", "psql:prod": "PGPASSWORD=$(cat .prod.env | grep PG_PASSWORD= | sed 's/.*=//') psql --port 6432 --username postgres --host localhost postgres", "psql:local": "psql --port 5432 --username postgres --host localhost postgres"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"dev": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"imports": {"lodash.round": "https://esm.sh/lodash.round@4.0.4", "sha1/": "https://deno.land/x/sha1@v1.0.3/", "std/": "https://deno.land/std@0.188.0/"}, "tasks": {"run": "deno run --allow-read=./config.json,./map.json --allow-write=./config.json,./map.json --allow-net", "check_in": "deno run --allow-read=./config.json --allow-write=./config.json --allow-net main.ts c", "login": "deno run --allow-read=./config.json --allow-write=./config.json --allow-net main.ts l"}, "fmt": {"indentWidth": 4, "exclude": ["config.json"]}}
{"tasks": {"dev": "deno run --allow-all --allow-env --watch ./src/main.ts"}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-env ./bot.ts", "dev": "deno run --watch --allow-net --allow-read --allow-env ./bot.ts", "lint": "deno lint", "fmt": "deno fmt"}}
{"tasks": {"dev": "deno run --watch src/main.ts"}, "imports": {"cliffy/keypress": "https://deno.land/x/cliffy@v0.25.7/keypress/mod.ts", "cliffy/table": "https://raw.githubusercontent.com/FukeKazki/deno-cliffy/main/table/mod.ts", "hiragana-parser": "https://packages.obake.land/hiragana-parser/index.min.js", "outdent": "https://deno.land/x/outdent@v0.8.0/mod.ts"}}
{"tasks": {"dev": "deno run --watch --allow-net --allow-read --allow-env main.ts"}}
{"tasks": {"start": "deno run --allow-run main.ts"}}
{"imports": {"@util/": "./util/", "@core/": "./core/", "@serde/": "./redstone_serde/", "@payloads/": "./types/payloads/", "@payloads/server/": "./types/payloads/server_bound/", "@payloads/client/": "./types/payloads/client_bound/", "@/": "./"}, "fmt": {"options": {"lineWidth": 100}}}
{"tasks": {"netsaur:iris": "deno run -A --unstable netsaur/classification/iris/main.ts", "netsaur:spam": "deno run -A --unstable netsaur/classification/spam/main.ts", "netsaur:linreg": "deno run -A --unstable netsaur/regression/linear/main.ts", "lala:iris": "deno run -A --unstable classylala/classification/iris/main.ts", "lala:spam": "deno run -A --unstable classylala/classification/spam/main.ts", "lala:linreg_simple": "deno run -A --unstable classylala/regression/linear/1d_ols.ts", "lala:linreg_gd": "deno run -A --unstable classylala/regression/linear/2d_gd.ts", "lala:linreg_ols": "deno run -A --unstable classylala/regression/linear/2d_ols.ts"}}
{"lock": false, "fmt": {"lineWidth": 100}, "tasks": {"pre-commit": "deno task fmt && deno task check && deno task test", "test": "deno test -A", "check": "deno check **/*.ts && deno fmt --check **/*.ts && deno lint && luacheck lua/*", "fmt": "deno fmt **/*.ts && stylua lua/*"}}
{"compilerOptions": {"useUnknownInCatchVariables": true}, "exclude": ["dist"], "tasks": {"lint": "deno fmt --check && deno lint && deno check --all main.ts && deno check --all scripts/build.tsx && deno check --all scripts/generate_import_map.ts", "static:lint": "cd static && deno check main.tsx && deno check --all sw.ts"}}
{"tasks": {"generate-links": "deno run --allow-read --allow-net --allow-write generate-links-list.js", "mirror": "deno run --allow-read --allow-net --allow-write mirror-wikipedia-swadesh.js", "scrape": "deno run --allow-read --allow-net --allow-write scrape-swadesh.js"}}
{"compilerOptions": {"lib": ["deno.window", "deno.unstable"]}, "lint": {"rules": {"tags": ["recommended"], "include": ["explicit-function-return-type"]}}, "fmt": {"options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2}}, "tasks": {"codegen": "cd ./tools && deno run --allow-run --allow-read --allow-write ./codegen.ts", "codegen-scraper": "cd ./tools && deno run --allow-read --allow-write --allow-run ./codegen-scraper.ts > ../tmp/codegen-scraper.out"}}
{"fmt": {"files": {"include": ["lib/", "eaas-client.js", "eaas.js", "webcomponent.js"]}, "options": {"indentWidth": 4}}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "importMap": "./import_map.json", "tasks": {"deploy": "cd backend/ && supabase functions deploy viewer-polls-example-handler --no-verify-jwt"}, "fmt": {"options": {"lineWidth": 140}}}
{"tasks": {"cache-deps": "deno cache third_party_dependencies/deps.ts && deno cache third_party_dependencies/test_deps.ts", "start": "deno run --allow-read --allow-write src/app/run.ts", "start-watch": "deno run --allow-read --allow-run src/build_tools/watcher.ts 'deno task start'", "check-all": "deno lint && deno check src/app/run.ts && deno test --allow-read --allow-write --cached-only --fail-fast && deno task check-smoke", "check-all-watch": "deno run --allow-read --allow-run src/build_tools/watcher.ts 'deno task check-all'", "check-smoke": "deno test --allow-read --allow-write --allow-run --cached-only --fail-fast src/app/_run_test.smoke.ts", "make-binary": "deno compile --allow-read --allow-write --output=virtual_machine ./src/app/run.ts"}, "importMap": "import_map.json"}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.2.0/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.1.0", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3"}}
{"fmt": {"options": {"lineWidth": 120}}, "tasks": {"dev": "deno run --allow-net --allow-read --watch src/main.ts", "start": "deno run --allow-net --allow-read src/main.ts", "gen": "deno run --allow-all ./scripts/gen.ts"}}
{"tasks": {"dev": "denon run --allow-net --allow-read server.ts", "start": "deno run --allow-net --allow-read server.ts", "random": "deno run --allow-net --allow-read ./data/randomagent.ts"}}
{"compilerOptions": {"lib": ["deno.window"], "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitReturns": true, "noImplicitThis": true, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true, "strictFunctionTypes": true, "strictPropertyInitialization": true, "strictNullChecks": true}, "lint": {"files": {"include": ["./"], "exclude": []}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["require-await"]}}, "fmt": {"files": {"include": ["./"], "exclude": []}, "options": {"useTabs": true, "lineWidth": 100, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}}
{"tasks": {"serve": "deno run --allow-net serve.ts"}}
{"tasks": {"test": "deno test -A --no-check  tests/"}, "compilerOptions": {"strict": true}}
{"lint": {"rules": {"include": ["ban-untagged-todo", "camelcase", "default-param-last", "eqeqeq", "explicit-function-return-type", "explicit-module-boundary-types", "no-const-assign", "prefer-ascii"]}}, "fmt": {"options": {"singleQuote": true, "lineWidth": 120}}}
{"tasks": {"test": "deno test --unstable --allow-read --allow-ffi --allow-env=LIBCLANG_PATH", "build": "deno run --allow-write=lib/include --allow-read=vips-dev-8.14,build/functions.txt build/generator.ts", "regen": "deno run --unstable -A clang/build/build.ts", "genLibClang": "deno run -A --unstable generateLibClang.ts", "genLibVips": "deno run -A --unstable generateLibVips.ts"}}
{"lint": {"files": {"exclude": ["node_modules", "CHANGELOG.md"]}}, "fmt": {"files": {"exclude": ["node_modules", "CHANGELOG.md"]}}}
{"compilerOptions": {"noImplicitOverride": true, "useUnknownInCatchVariables": true}, "nodeModulesDir": true}
{"compilerOptions": {"noImplicitOverride": true, "useUnknownInCatchVariables": true}, "importMap": "import_map.json"}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "fmt": "deno fmt --ignore=db", "updatedb": "deno run --allow-net --allow-write --allow-read --allow-env=YOUTUBE_API_KEY ./scripts/daily-update.ts"}, "importMap": "./import_map.json"}
{"tasks": {"stop": "pm2 stop aynrandbot", "start": "DENO_DEPLOYMENT_ID=\"$(git rev-parse HEAD)\" pm2 start --interpreter='deno' --interpreter-args='run --allow-sys --allow-net --allow-read --allow-env --allow-run --allow-write' --name aynrandbot dev.ts && pm2 logs aynrandbot", "logs": "pm2 logs aynrandbot", "reload": "pm2 reload aynrandbot && pm2 logs aynrandbot", "delete": "pm2 delete aynrandbot", "check": "deno check main.ts dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update .", "run": "deno run --allow-net --allow-sys --allow-read --allow-env --allow-run --allow-write dev.ts", "watch": "deno run --watch --allow-sys --allow-net --allow-read --allow-env --allow-run --allow-write dev.ts", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "bcrypt": "https://deno.land/x/bcrypt@v0.4.1/mod.ts", "croner": "https://deno.land/x/croner@7.0.1/dist/croner.js", "dayjs/": "https://deno.land/x/deno_dayjs@v0.5.0/", "duplicatedFilesCleaner": "https://deno.land/x/duplicated_files_cleaner_incognito@1.2/mod.ts", "escape_html": "https://deno.land/x/escape_html@1.0.0/mod.ts", "fresh-session/": "https://deno.land/x/fresh_session@0.2.2/", "grammy/": "https://deno.land/x/grammy@v1.18.1/", "lodash": "https://deno.land/x/deno_ts_lodash@0.0.1/mod.ts", "mongo": "https://deno.land/x/mongo@v0.32.0/mod.ts", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "react-icons/ai": "https://cdn.jsdelivr.net/gh/urielch/react-icons-ai@1.0.9/mod.ts", "react-icons/bs": "https://cdn.jsdelivr.net/gh/urielch/react-icons-bs@1.0.9/mod.ts", "react-icons/fi": "https://cdn.jsdelivr.net/gh/urielch/react-icons-fi@1.0.9/mod.ts", "shuffle": "https://deno.land/x/shuffle@v1.0.1/mod.ts", "sleep": "https://deno.land/x/sleep@v1.2.1/mod.ts", "std/": "https://deno.land/std@0.200.0/", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "web_bson": "https://deno.land/x/web_bson@v0.3.0/mod.js"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "fmt": {"exclude": ["_fresh"]}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable"], "jsx": "react-jsx", "jsxImportSource": "https://esm.sh/react@17.0.2"}}
{"tasks": {"script": "deno run --allow-net --allow-read --allow-env script.ts"}, "compilerOptions": {"strict": true}}
{"Release": "D03A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable", "esnext"], "jsx": "react-jsx", "jsxImportSource": "preact"}, "fmt": {"options": {"singleQuote": true, "proseWrap": "preserve", "semiColons": false}}, "lint": {"files": {"exclude": ["dist"]}}, "tasks": {"start": "(cd sandbox && deno run -A --watch=static/,routes/ dev.ts)"}, "imports": {"civility": "./", "$std/": "https://deno.land/std@0.138.0/", "preact": "https://esm.sh/preact@10.9.0?dev", "preact/": "https://esm.sh/preact@10.9.0/", "@dom": "./utilities/test_dom.ts", "deno-dom": "https://deno.land/x/deno_dom@v0.1.32-alpha/deno-dom-wasm.ts", "@testing-library/preact": "https://esm.sh/@testing-library/preact@3.2.2/pure?dev"}}
{"tasks": {"dev": "deno run --allow-net=:8000 --allow-read --watch ./deploy/mod.tsx", "build": "deno run --allow-net --allow-write --allow-read ./mod.ts"}}
{"compilerOptions": {"strict": true}, "fmt": {"exclude": ["README.md", "src/ui/AccordionElement.min.js"], "singleQuote": true, "useTabs": false, "indentWidth": 2, "proseWrap": "preserve"}, "lint": {"exclude": ["src/ts/Deno.d.ts", "src/test/uiTests.js", "generated", "src/ui/AccordionElement.min.js"]}, "tasks": {"test": "deno fmt; deno test --allow-net", "ui-test": "rm -f config-test.json; deno fmt; deno run --allow-read --allow-write ./src/ts/GenerateUICode.ts --test; deno run --allow-read --allow-write --allow-net ./src/ts/MockServer.ts --load-ui --config ./config-test.json", "run": "deno task generate-ui; deno run --allow-read --allow-write --allow-net ./src/ts/MockServer.ts --load-ui", "generate-ui": "deno fmt; deno run --allow-read --allow-write ./src/ts/GenerateUICode.ts", "install": "deno task generate-ui; deno install --allow-read --allow-write --allow-net --force ./src/ts/MockServer.ts", "install-unsafe": "deno task generate-ui; deno install --unsafely-ignore-certificate-errors --allow-read --allow-write --allow-net --force ./src/ts/MockServer.ts", "check": "deno fmt; deno lint", "types": "deno types > ./src/ts/Deno.d.ts"}}
{"tasks": {"dev": "deno run -A --watch --no-check main.ts", "manifest": "fresh manifest"}}
{"tasks": {"run": "deno run --allow-all ./src/main.ts"}, "importMap": "./import_map.json"}
{"compilerOptions": {"noUnusedLocals": true, "noUnusedParameters": true}, "tasks": {"build": "deno run --allow-env --allow-read --allow-write --allow-net scripts/build.ts", "dev": "deno run --allow-read --allow-net --watch main.ts", "start": "deno run --allow-read --allow-net main.ts"}, "fmt": {"options": {"semiColons": false, "singleQuote": true}}}
{"lint": {"files": {"exclude": ["workers-site/"]}}, "fmt": {"files": {"exclude": ["node_modules/", "public/", "example", "workers-site/", "d/", "assets-by-site", "assets-by-site-src", "current/", "dev-current/", "dev-archive/", "archive/", "s3/", "zip/"]}}, "test": {"files": {"exclude": ["s3", "node_modules/", "public/", "example", "workers-site/", "assets-by-site", "assets-by-site-src", "current/", "dev-current/", "dev-archive/", "archive/"]}}}
{"tasks": {"server": "mode=dev deno run -A --watch --unstable --import-map=import_map.json --no-check server.ts", "start": "mode=prod deno run -A --unstable --import-map=import_map.json --no-check server.ts", "seeds": "deno run -A --import-map=import_map.json --no-check commands/seeds/init.ts"}}
{"importMap": "import_map.json", "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s", "validate": "deno run --allow-env --allow-read=src/_data/reports --allow-write=lib lib/validate.ts"}, "lock": false}
{"tasks": {"build:fixture": "deno run --allow-read --allow-net --allow-write --no-check --import-map=importMap.json buildFixture.ts", "bundle": "deno bundle --import-map=importMap.json mdxToHTML.tsx index.bundle.ts", "test": "deno test --allow-read  --allow-net --import-map=importMap.json mdxToHTML.test.ts"}}
{"tasks": {"dev": "deno run --watch --allow-env --allow-read --allow-net ./src/server.ts", "test": "NODE_ENV=test DB_URL=postgres://postgres:123456@localhost:5432/todo_app_db deno test --allow-env --allow-read --allow-net", "test:coverage": "NODE_ENV=test DB_URL=postgres://postgres:123456@localhost:5432/todo_app_db deno test --allow-env --allow-read --allow-net --coverage=coverage && deno coverage coverage --lcov --output=coverage.lcov && genhtml -o coverage/html coverage.lcov", "migration": "deno run --allow-env --allow-read --allow-net ./src/migrate-to-latest.ts", "esm:add": "deno run -A https://esm.sh/v111 add", "esm:update": "deno run -A https://esm.sh/v111 update", "esm:remove": "deno run -A https://esm.sh/v111 remove"}, "fmt": {"files": {"include": ["db/", "src/", "test/", "setup-tests.ts"]}, "options": {"useTabs": false, "lineWidth": 160, "indentWidth": 4, "singleQuote": true, "proseWrap": "preserve"}}, "importMap": "import_map.json"}
{"importMap": "import_map.json", "tasks": {"lume": "deno eval \"import 'lume/task.ts'\" --", "build": "deno task lume", "serve": "deno task lume -s"}}
{"compilerOptions": {"allowJs": false, "allowUnreachableCode": false, "allowUnusedLabels": false, "checkJs": false, "experimentalDecorators": true, "lib": ["deno.window"], "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitReturns": true, "noImplicitThis": true, "noImplicitUseStrict": false, "noStrictGenericChecks": true, "noUncheckedIndexedAccess": false, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true}, "lint": {"files": {"include": ["src/"], "exclude": []}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": []}}, "fmt": {"files": {"include": ["src/"], "exclude": []}, "options": {"indentWidth": 2, "lineWidth": 120, "proseWrap": "preserve", "singleQuote": true, "useTabs": false}}}
{"tasks": {"fetch": "deno run -A scripts/fetch-databases.ts", "format": "deno fmt", "fetch-data": "deno run -A scripts/fetch-databases.ts && deno fmt -q ./src/providers && deno lint"}, "fmt": {"options": {"indentWidth": 2, "lineWidth": 100, "singleQuote": false, "useTabs": false, "proseWrap": "preserve"}, "files": {"exclude": []}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ --unstable dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update .", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "fmt": {"exclude": ["_fresh"]}}
{"tasks": {"main": "deno run --allow-net --allow-read --allow-env main.ts"}, "fmt": {"options": {"lineWidth": 120, "singleQuote": false, "semiColons": true, "indentWidth": 2}}}
{"tasks": {"build": "deno run --unstable -A https://deno.land/x/wasmbuild@0.8.5/main.ts", "test": "deno test --allow-read=./lib,./src/fixtures"}}
{"tasks": {"start": "deno run ./mod.ts", "test": "deno test"}, "importMap": "./import_map.json"}
{"tasks": {"start": "deno run -A --watch=static/,routes/ main.ts"}, "importMap": "./import_map.json"}
{"importMap": "server/imports.json"}
{"fmt": {"semiColons": false}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window", "deno.unstable"], "strict": true}, "lint": {"include": ["*.ts", "lib/"], "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"include": ["*.ts", "lib/"], "useTabs": false, "lineWidth": 80, "indentWidth": 4, "semiColons": true, "singleQuote": true, "proseWrap": "preserve"}}
{"fmt": {"proseWrap": "never"}, "lint": {"rules": {"include": ["explicit-function-return-type"]}}, "lock": false, "tasks": {"test-readme": "deno run -A md/script/evalCodeBlocks.ts ./readme.md https://deno.land/x/handy .", "release-notes": "deno run -A ./git/script/makeReleaseNotes.ts -cg --types=feat,fix"}}
{"tasks": {"test": "deno test --allow-net --allow-env", "test:cov": "deno test -A --coverage=coverage && deno coverage ./coverage --lcov --output=coverage.lcov", "cache": "deno cache ./deps.ts", "build:npm": "deno run -A ./scripts/build_npm.ts"}, "fmt": {"files": {"exclude": ["./npm", "./coverage", "*.md"]}}, "lint": {"files": {"exclude": ["./npm", "./coverage", "*.md"]}}}
{"tasks": {"serve": "deno run --allow-net --allow-env --allow-read server.ts", "dev": "deno run --watch --allow-net --allow-env --allow-read server.ts", "bundle": "deno run --allow-net --allow-read --allow-env --allow-run bundle.ts"}, "importMap": "import_map.json"}
{"lint": {"files": {"include": ["./"]}, "rules": {"exclude": ["no-namespace", "no-explicit-any"]}}, "fmt": {"options": {"useTabs": true, "lineWidth": 70, "singleQuote": true}}, "tasks": {"fix": "deno fmt && deno lint", "npm": "deno run -A ./dnt.ts", "husky": "deno run -A npm:husky", "prepare": "deno task husky install"}, "test": {"files": {"include": ["./test.ts"]}}}
{"tasks": {"start": "deno run -A --unstable --watch=static/,routes/ dev.ts", "test": "deno test --watch --import-map=import_map.test.json", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"\ud83d\udee0\ufe0f/": "./utils/", "\ud83c\udfdd\ufe0f/": "./islands/", "\ud83e\uddf1/": "./components/", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "$std/": "https://deno.land/std@0.175.0/"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "fmt": {"exclude": ["_fresh"]}}
{"importMap": "./importmap.dev.json", "compilerOptions": {"module": "esnext", "target": "es2022", "noImplicitOverride": true, "removeComments": true, "preserveConstEnums": true, "esModuleInterop": true, "experimentalDecorators": true, "emitDecoratorMetadata": true, "jsx": "react-jsx", "jsxImportSource": "uix", "lib": ["deno.window", "dom"]}, "tasks": {"expose-uix": "deno run -Aq --reload https://dev.cdn.unyt.org/uix/server/standalone-file-server.ts -w --port 4200", "run-test-app": "cd test-app && deno run -Aq ../run.ts -rw --import-map http://localhost:4200/importmap.uixdev.json --port 4201", "generate-api-docs": "deno run -Aqr --import-map importmap.dev.json https://dev.cdn.unyt.org/doc-generator/run.ts --import-map importmap.dev.json --base ./ -m ./uix.ts --out ./docs/api"}}
{"tasks": {"test": "deno test --allow-net --allow-env --allow-read", "test:cov": "deno test -A --coverage=coverage && deno coverage ./coverage --lcov --output=coverage.lcov", "cache": "deno cache ./deps.ts", "start": "deno run -A ./main.ts", "dev": "deno run -A --watch ./main.ts", "test:client": "deno run -A --watch ./tests/test_client.ts"}, "fmt": {"files": {"exclude": ["*.md", "LICENSE"]}}, "lint": {"files": {"exclude": ["*.md", "LICENSE"]}}, "importMap": "import_map.json"}
{"importMap": "./import_map.json", "tasks": {"start": "deno run -A --watch=static/,routes/ --unstable dev.ts", "bench": "deno bench bench.ts", "build:css": "deno run --allow-env --allow-read --allow-write build.css.ts", "fmt": "deno fmt", "esm:add": "deno run -A https://esm.sh/v124 add", "esm:update": "deno run -A https://esm.sh/v124 update", "esm:remove": "deno run -A https://esm.sh/v124 remove"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"scrape": "deno run --allow-env --allow-net --allow-read --allow-write src/scrape.ts", "parse": "deno run --allow-sys --allow-env --allow-net --allow-read --allow-write src/parse.ts"}, "imports": {"$std/": "https://deno.land/std@0.184.0/"}}
{"tasks": {"sqlite3": "deno run -A --unstable ./src/sqlite3-driver/sqlite3.ts", "update-sqlite3": "deno run -A --unstable ./src/sqlite3-driver/update-sqlite3.ts", "delete-sqlite3": "deno run -A --unstable ./src/sqlite3-driver/delete-sqlite3.ts", "sqlite": "deno run -A --unstable ./src/deno-sqlite/sqlite.ts", "prepared-sqlite": "deno run -A --unstable ./src/deno-sqlite/prepared-sqlite.ts", "delete-sqlite": "deno run -A --unstable ./src/deno-sqlite/delete-sqlite.ts", "update-sqlite": "deno run -A --unstable ./src/deno-sqlite/update-sqlite.ts"}, "importMap": "./import_map.json"}
{"lint-staged": {"*": "deno task lint && deno task fmt", "deno.jsonc": "deno task setup-hooks"}, "tasks": {"run": "deno run --allow-env --allow-read --allow-net", "dev": "deno task run --watch main.ts", "main": "deno task run main.ts", "start": "deno task run --watch server.ts", "test": "deno test --allow-env --allow-read --allow-net --allow-none", "cov": "deno task test --coverage=cov_profile; deno coverage cov_profile", "lint": "deno lint --ignore=cov_profile", "fmt": "deno fmt --ignore=cov_profile", "check": "deno check .config/nvim/**/*.ts", "ci": "deno task check && deno task lint && deno task fmt --check", "deps": "deno run --allow-read --allow-write --allow-net --allow-run https://deno.land/x/udd@0.8.2/main.ts --test='deno task test' deno.jsonc ./**/*.ts", "setup-hooks": "deno run --allow-read --allow-run https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/setup-hooks.ts", "pre-commit": "deno run --allow-read --allow-env --allow-run --allow-write https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/lint-staged.ts", "pre-push": "deno task ci"}, "fmt": {"useTabs": false, "lineWidth": 100, "indentWidth": 2, "singleQuote": false, "include": [".config/nvim"]}, "lint": {"include": [".config/nvim"]}, "lock": false}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "@googlemaps/js-api-loader": "https://cdn.skypack.dev/@googlemaps/js-api-loader@1.16.2?dts", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"build": "pandoc -f markdown -t html --css metadata-view-docs.css --template=template.html -o metadata-view-docs.html metadata-view-docs.md"}}
{"importMap": "./import_map.json", "tasks": {"deno-redis": "deno bench --allow-env --allow-net tests/deno_redis_retrieval_bench.ts", "deno-postgres": "deno bench --allow-env --allow-net tests/deno_postgres_retrieval_bench.ts", "deno-node-redis": "deno bench --allow-env --allow-net tests/node_redis_retrieval_bench.ts", "deno-node-postgres": "deno bench --allow-env --allow-net tests/node_postgres_retrieval_bench.ts"}}
{"tasks": {"start": "fresh manifest --watch & deno run -A --watch --no-check main.ts"}, "importMap": "./import_map.json"}
{"tasks": {"develop:proctor": "deno run --watch --check --unstable --allow-run=pgrep,lsof,ps proctor.ts"}}
{"tasks": {"lint": "deno lint", "fmt": "deno fmt", "test": "deno test", "dev": "deno run  --allow-all --watch mod.ts", "build": "mkdir -p build && deno bundle mod.ts ./build/mod.js", "start": "deno run --allow-all ./build/mod.js"}}
{"compilerOptions": {"noCheck": true}, "importMap": "./import_map.json"}
{"importMap": "../../import_map.json", "fmt": {"options": {"singleQuote": true}}}
{"tasks": {"keygen": "deno run keygen.ts"}, "fmt": {"options": {"lineWidth": 100, "singleQuote": true}}}
{"browsers": {"deno": {"name": "Deno", "type": "server", "accepts_flags": true, "accepts_webextensions": false, "releases": {"1.0": {"release_date": "2020-05-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.0.0", "status": "retired", "engine": "V8", "engine_version": "8.4"}, "1.1": {"release_date": "2020-06-12", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.1.0", "status": "retired", "engine": "V8", "engine_version": "8.4"}, "1.2": {"release_date": "2020-07-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.2.0", "status": "retired", "engine": "V8", "engine_version": "8.5"}, "1.3": {"release_date": "2020-08-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.3.0", "status": "retired", "engine": "V8", "engine_version": "8.6"}, "1.4": {"release_date": "2020-09-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.4.0", "status": "retired", "engine": "V8", "engine_version": "8.7"}, "1.5": {"release_date": "2020-10-27", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.5.0", "status": "retired", "engine": "V8", "engine_version": "8.7"}, "1.6": {"release_date": "2020-12-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.6.0", "status": "retired", "engine": "V8", "engine_version": "8.8"}, "1.7": {"release_date": "2021-01-19", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.7.0", "status": "retired", "engine": "V8", "engine_version": "8.9"}, "1.8": {"release_date": "2021-03-02", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.8.0", "status": "retired", "engine": "V8", "engine_version": "9.0"}, "1.9": {"release_date": "2021-04-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.9.0", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.10": {"release_date": "2021-05-11", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.10.1", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.11": {"release_date": "2021-06-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.11.0", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.12": {"release_date": "2021-07-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.12.0", "status": "retired", "engine": "V8", "engine_version": "9.2"}, "1.13": {"release_date": "2021-08-10", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.13.0", "status": "retired", "engine": "V8", "engine_version": "9.3"}, "1.14": {"release_date": "2021-09-14", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.14.0", "status": "retired", "engine": "V8", "engine_version": "9.4"}, "1.15": {"release_date": "2021-10-12", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.15.0", "status": "retired", "engine": "V8", "engine_version": "9.5"}, "1.16": {"release_date": "2021-11-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.16.0", "status": "retired", "engine": "V8", "engine_version": "9.7"}, "1.17": {"release_date": "2021-12-16", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.17.0", "status": "retired", "engine": "V8", "engine_version": "9.7"}, "1.18": {"release_date": "2022-01-20", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.18.0", "status": "retired", "engine": "V8", "engine_version": "9.8"}, "1.19": {"release_date": "2022-02-17", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.19.0", "status": "retired", "engine": "V8", "engine_version": "9.9"}, "1.20": {"release_date": "2022-03-17", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.20.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.21": {"release_date": "2022-04-21", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.21.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.22": {"release_date": "2022-05-18", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.22.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.23": {"release_date": "2022-06-15", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.23.0", "status": "retired", "engine": "V8", "engine_version": "10.4"}, "1.24": {"release_date": "2022-07-20", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.24.0", "status": "retired", "engine": "V8", "engine_version": "10.4"}, "1.25": {"release_date": "2022-08-25", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.25.0", "status": "retired", "engine": "V8", "engine_version": "10.6"}, "1.26": {"release_date": "2022-09-29", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.26.0", "status": "retired", "engine": "V8", "engine_version": "10.7"}, "1.27": {"release_date": "2022-10-27", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.27.0", "status": "current", "engine": "V8", "engine_version": "10.8"}}}}}
{"tasks": {"bundle": "deno bundle --watch src/main.ts -- src/build/main.js", "start": "deno task bundle & cd src && python -m http.server"}, "compilerOptions": {"lib": ["esnext", "dom"]}}
{"tasks": {"preview": "deno run -A npm:zenn-cli@latest preview", "article": "deno run -A npm:zenn-cli@latest new:article"}}
{"compilerOptions": {"noImplicitOverride": true}, "tasks": {"run": "deno run -A --unstable --watch server.ts", "cacheLib": "deno cache --reload --lock-write ./lib/deps.ts", "cacheSrv": "deno cache --reload --lock-write ./srv/deps.ts"}}
{"compilerOptions": {"strict": true}, "lint": {"files": {"include": ["cli.ts"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"]}}, "fmt": {"files": {"include": ["cli.ts"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 4, "singleQuote": true, "proseWrap": "preserve"}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update ."}, "fmt": {"singleQuote": true, "indentWidth": 2, "lineWidth": 120}, "compilerOptions": {"types": ["./types/index.d.ts"], "jsx": "react-jsx", "jsxImportSource": "preact"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "$std/": "https://deno.land/std@0.193.0/"}}
{"compilerOptions": {"lib": ["deno.ns", "dom"]}, "fmt": {"options": {"lineWidth": 120}}, "tasks": {"fetch": "curl -fsSL 'https://docs.google.com/spreadsheets/d/e/2PACX-1vRBoeg48bPARq3UWdHuGsaKxN5Q-L4KIJWHDsAu5JnT9mpGQNS6LhmkhbJPgSAQK2fkVjcPhqFywq5p/pub?output=csv' > data.csv && sed -i -e '1,2d' data.csv", "minifyjs": "deno bundle index.ts > dist/index.js && deno run --allow-env --allow-read --allow-run 'npm:esbuild@0.15.17' --bundle --minify --format=esm dist/index.js --outfile=dist/index.min.js && rm dist/index.js", "gen-html": "deno run --check --allow-read --allow-write mod.tsx", "build": "mkdir -p dist && deno task gen-html && cp styles.css dist/styles.css && deno task minifyjs", "clean": "rm -r dist"}}
{"tasks": {"start": "deno run -A --watch=static/,static/api/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run --unstable -A --watch=static/,routes/ dev.ts"}, "compilerOptions": {"lib": ["deno.window", "deno.unstable"], "jsx": "react-jsx", "jsxImportSource": "preact"}, "fmt": {}, "imports": {"#/": "./", "~/": "./packages/", "fmt/": "https://deno.land/std@0.184.0/", "$fresh/": "https://deno.land/x/fresh@1.2.0/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.1.0", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3"}}
{"kind": "Template", "apiVersion": "v1", "metadata": {"name": "deno-example", "annotations": {"openshift.io/display-name": "Deno", "description": "An example Deno application.", "tags": "quickstart,deno", "iconClass": "icon-redhat", "openshift.io/long-description": "This template defines resources needed to develop a Deno application, including a build configuration and application deployment configuration.  It does not include a database.", "openshift.io/provider-display-name": "Red Hat, Inc.", "openshift.io/documentation-url": "https://github.com/KamiQuasi/deno-ex", "openshift.io/support-url": "https://access.redhat.com", "template.openshift.io/bindable": "false"}}, "message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/sclorg/nodejs-ex/blob/master/README.md.", "labels": {"template": "nodejs-example", "app": "nodejs-example"}, "objects": [{"kind": "Service", "apiVersion": "v1", "metadata": {"name": "${NAME}", "annotations": {"description": "Exposes and load balances the application pods"}}, "spec": {"ports": [{"name": "web", "port": 8080, "targetPort": 8080}], "selector": {"name": "${NAME}"}}}, {"kind": "Route", "apiVersion": "v1", "metadata": {"name": "${NAME}"}, "spec": {"host": "${APPLICATION_DOMAIN}", "to": {"kind": "Service", "name": "${NAME}"}}}, {"kind": "ImageStream", "apiVersion": "v1", "metadata": {"name": "${NAME}", "annotations": {"description": "Keeps track of changes in the application image"}}}, {"kind": "BuildConfig", "apiVersion": "v1", "metadata": {"name": "${NAME}", "annotations": {"description": "Defines how to build the application", "template.alpha.openshift.io/wait-for-ready": "true"}}, "spec": {"source": {"type": "Git", "git": {"uri": "${SOURCE_REPOSITORY_URL}", "ref": "${SOURCE_REPOSITORY_REF}"}, "contextDir": "${CONTEXT_DIR}"}, "strategy": {"type": "Source", "sourceStrategy": {"from": {"kind": "ImageStreamTag", "namespace": "${NAMESPACE}", "name": "nodejs:${NODEJS_VERSION}"}, "env": [{"name": "NPM_MIRROR", "value": "${NPM_MIRROR}"}]}}, "output": {"to": {"kind": "ImageStreamTag", "name": "${NAME}:latest"}}, "triggers": [{"type": "ImageChange"}, {"type": "ConfigChange"}, {"type": "GitHub", "github": {"secret": "${GITHUB_WEBHOOK_SECRET}"}}, {"type": "Generic", "generic": {"secret": "${GENERIC_WEBHOOK_SECRET}"}}], "postCommit": {"script": "npm test"}}}, {"kind": "DeploymentConfig", "apiVersion": "v1", "metadata": {"name": "${NAME}", "annotations": {"description": "Defines how to deploy the application server", "template.alpha.openshift.io/wait-for-ready": "true"}}, "spec": {"strategy": {"type": "Rolling"}, "triggers": [{"type": "ImageChange", "imageChangeParams": {"automatic": true, "containerNames": ["nodejs-example"], "from": {"kind": "ImageStreamTag", "name": "${NAME}:latest"}}}, {"type": "ConfigChange"}], "replicas": 1, "selector": {"name": "${NAME}"}, "template": {"metadata": {"name": "${NAME}", "labels": {"name": "${NAME}"}}, "spec": {"containers": [{"name": "nodejs-example", "image": " ", "ports": [{"containerPort": 8080}], "readinessProbe": {"timeoutSeconds": 3, "initialDelaySeconds": 3, "httpGet": {"path": "/", "port": 8080}}, "livenessProbe": {"timeoutSeconds": 3, "initialDelaySeconds": 30, "httpGet": {"path": "/", "port": 8080}}, "resources": {"limits": {"memory": "${MEMORY_LIMIT}"}}, "env": []}]}}}}], "parameters": [{"name": "NAME", "displayName": "Name", "description": "The name assigned to all of the frontend objects defined in this template.", "required": true, "value": "nodejs-example"}, {"name": "NAMESPACE", "displayName": "Namespace", "description": "The OpenShift Namespace where the ImageStream resides.", "required": true, "value": "openshift"}, {"name": "NODEJS_VERSION", "displayName": "Version of NodeJS Image", "description": "Version of NodeJS image to be used (10, 12, or latest).", "value": "12", "required": true}, {"name": "MEMORY_LIMIT", "displayName": "Memory Limit", "description": "Maximum amount of memory the container can use.", "required": true, "value": "512Mi"}, {"name": "SOURCE_REPOSITORY_URL", "displayName": "Git Repository URL", "description": "The URL of the repository with your application source code.", "required": true, "value": "https://github.com/sclorg/nodejs-ex.git"}, {"name": "SOURCE_REPOSITORY_REF", "displayName": "Git Reference", "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."}, {"name": "CONTEXT_DIR", "displayName": "Context Directory", "description": "Set this to the relative path to your project if it is not in the root of your repository."}, {"name": "APPLICATION_DOMAIN", "displayName": "Application Hostname", "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.", "value": ""}, {"name": "GITHUB_WEBHOOK_SECRET", "displayName": "GitHub Webhook Secret", "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.", "generate": "expression", "from": "[a-zA-Z0-9]{40}"}, {"name": "GENERIC_WEBHOOK_SECRET", "displayName": "Generic Webhook Secret", "description": "A secret string used to configure the Generic webhook.", "generate": "expression", "from": "[a-zA-Z0-9]{40}"}, {"name": "NPM_MIRROR", "displayName": "Custom NPM Mirror URL", "description": "The custom NPM mirror URL", "value": ""}]}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "esm:remove": "deno run -A https://esm.sh/v106 remove"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "lib": ["deno.window", "dom"]}}
{"tasks": {"screenshot": "deno run -A ./screenshot.ts", "pixelmatch": "deno run -A ./pixelmatch.ts"}}
{"tasks": {"build": "pandoc -f markdown -t html --css spell-word-docs.css --template=template.html -o spell-word-docs.html spell-word-docs.md"}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["lib/"], "exclude": ["lib/**/dist.js"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["lib/"], "exclude": ["lib/**/dist.js"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}}
{"tasks": {"test": "deno test -A --allow-env --allow-net --config deno.json --unstable --import-map import_map.json  --trace-ops __tests__", "test:watch": "deno test -A --allow-env --allow-net --watch --config deno.json --unstable --import-map import_map.json  --trace-ops __tests__"}}
{"importMap": "importmap.dev.json", "compilerOptions": {"module": "ES2022", "target": "ES2022", "noImplicitOverride": true, "removeComments": true, "preserveConstEnums": true, "esModuleInterop": true, "experimentalDecorators": true, "emitDecoratorMetadata": true, "useDefineForClassFields": true, "lib": ["deno.window", "dom"]}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "fmt": {"exclude": ["_fresh"]}}
{"tasks": {"compile:linux": "deno compile --target=x86_64-unknown-linux-gnu --lock=deno.lock --output bin/linux_x86_64/pixelblaze --allow-write --allow-read ./src/main.ts", "compile:win": "deno compile --target=x86_64-pc-windows-msvc --lock=deno.lock --output bin/windows_x86_64/pixelblaze --allow-write --allow-read ./src/main.ts", "compile:mac_x86_64": "deno compile --target=x86_64-apple-darwin --lock=deno.lock --output bin/mac_x86_64/pixelblaze --allow-write --allow-read ./src/main.ts", "compile:mac_arm64": "deno compile --target=aarch64-apple-darwin --lock=deno.lock --output bin/mac_arm_64/pixelblaze --allow-write --allow-read ./src/main.ts", "compile": "deno task compile:linux && deno task compile:win && deno task compile:mac_x86_64 && deno task compile:mac_arm64", "run": "deno run --allow-read --allow-write ./src/main.ts", "watch": "deno run --watch --allow-read --allow-write ./src/main.ts"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "migrate": "deno run -A tasks/migrate.ts", "seed": "deno run -A tasks/seed.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-write main.ts", "test": "deno test --allow-net --allow-read --allow-write"}, "imports": {"std/": "https://deno.land/std@0.79.0/"}, "fmt": {"options": {"lineWidth": 120}}, "lock": false}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-write main.ts", "test": "deno test --allow-net --allow-read --allow-write"}, "imports": {"std/": "https://deno.land/std@0.79.0/"}, "fmt": {"options": {"lineWidth": 120}}, "lock": false}
{"name": "deno", "languageId": "typescript", "command": ["deno", "lsp"], "settings": {"deno": {"enable": true}}}
{"name": "deno", "languageId": "typescript", "command": ["deno", "lsp"], "settings": {"deno": {"enable": true}}}
{"name": "deno", "languageId": "typescript", "command": ["deno", "lsp"], "settings": {"deno": {"enable": true}}}
{"name": "deno", "languageId": "typescript", "command": ["deno", "lsp"], "settings": {"deno": {"enable": true}}}
{"Release": "D07A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "RFF", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"Release": "D07A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "RFF", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"Release": "D07A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "RFF", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"Release": "D07A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "RFF", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"importMap": "./import_map.json"}
{"importMap": "./import_map.json"}
{"importMap": "./import_map.json"}
{"importMap": "./import_map.json"}
{"compilerOptions": {"lib": ["deno.ns", "deno.unstable", "dom", "dom.iterable", "dom.asynciterable"]}, "fmt": {"files": {"exclude": ["static"]}}, "tasks": {"dev": "deno run --allow-read=. --allow-net --allow-env --allow-hrtime main.ts", "test": "deno test --allow-read=. --allow-net --allow-env --allow-hrtime"}}
{"lock": false, "fmt": {"indentWidth": 4, "proseWrap": "preserve", "exclude": ["./node_modules/", "./out/", "./package-lock.json"]}, "lint": {"exclude": ["./node_modules/", "./out/", "./package-lock.json"]}}
{"fmt": {"exclude": ["npm/", "README.md"], "lineWidth": 100, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}
{"fmt": {"exclude": ["npm/", "README.md"], "lineWidth": 100, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}
{"fmt": {"files": {"exclude": ["dist", "node_modules"]}, "options": {"lineWidth": 100}}, "lint": {"files": {"exclude": ["dist", "node_modules"]}}, "tasks": {"build": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write _build.ts", "compile": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write _compile.ts", "lock": "! rm deno.lock && deno cache *.ts **/*.ts", "run": "deno task run:deno", "run:deno": "deno run --allow-run cli/main.ts", "run:node": "deno task build && node dist/cli.js", "test": "deno fmt --check & deno lint & deno task unit", "udd": "udd *.ts **/*.ts --dry-run", "unit": "deno test core"}}
{"Release": "D96A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFF", "Max": 9}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "LOC", "Min": 0, "Max": 9}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTA", "Min": 0, "Max": 9}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}]}, {"Id": "CNT"}, {"Id": "UNT"}]}
{"Release": "D96A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFF", "Max": 9}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "LOC", "Min": 0, "Max": 9}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTA", "Min": 0, "Max": 9}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}]}, {"Id": "CNT"}, {"Id": "UNT"}]}
{"tasks": {"dev": "deno run -A --watch main.ts", "deploy": "deployctl deploy main.ts"}}
{"tasks": {"dev": "deno run --allow-net --watch main.ts"}}
{"tasks": {"dev": "deno run --allow-net --watch main.ts"}}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"404": "Not Found"}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"start": "deno run -A --watch main.tsx"}}
{"tasks": {"dev": "deno run -A --watch=static/,routes/ dev.ts", "start": "deno run -A dev.ts"}, "importMap": "./import_map.json"}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-net --allow-read --allow-env start.ts", "serverless": "deno run --allow-net --allow-read --allow-env serverless.ts"}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-net --allow-read --allow-env start.ts", "serverless": "deno run --allow-net --allow-read --allow-env serverless.ts"}}
{"tasks": {"start": "deno run -A --watch=public/ index.ts"}}
{"tasks": {"dev": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"compilerOptions": {"lib": ["deno.window"], "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitReturns": true, "noImplicitThis": true, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true, "strictFunctionTypes": true, "strictPropertyInitialization": true, "strictNullChecks": true}, "lint": {"files": {"include": ["./"], "exclude": []}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["require-await"]}}, "fmt": {"files": {"include": ["./"], "exclude": []}, "options": {"useTabs": true, "lineWidth": 100, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}}
{"compilerOptions": {"lib": ["deno.window"], "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitReturns": true, "noImplicitThis": true, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true, "strictFunctionTypes": true, "strictPropertyInitialization": true, "strictNullChecks": true}, "lint": {"files": {"include": ["./"], "exclude": []}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["require-await"]}}, "fmt": {"files": {"include": ["./"], "exclude": []}, "options": {"useTabs": true, "lineWidth": 100, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}}
{"compilerOptions": {"lib": ["deno.window"], "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitReturns": true, "noImplicitThis": true, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true, "strictFunctionTypes": true, "strictPropertyInitialization": true, "strictNullChecks": true}, "lint": {"files": {"include": ["./"], "exclude": []}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["require-await"]}}, "fmt": {"files": {"include": ["./"], "exclude": []}, "options": {"useTabs": true, "lineWidth": 100, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}}
{"Release": "D03A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"Release": "D03A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "LOCLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "LOC"}, {"Id": "DTM", "Min": 0, "Max": 9}]}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}, {"Id": "DGSLoop1", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}, {"Id": "DGSLoop2", "Min": 0, "Max": 99, "Loop": [{"Id": "DGS"}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "MEA", "Min": 0, "Max": 9}, {"Id": "CTALoop3", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "TMPLoop2", "Min": 0, "Max": 9, "Loop": [{"Id": "TMP"}, {"Id": "RNG", "Min": 0}]}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"tasks": {"run": "deno run --allow-all ./src/main.ts"}, "importMap": "./import_map.json"}
{"tasks": {"run": "deno run --allow-all ./src/main.ts"}, "importMap": "./import_map.json"}
{"tasks": {"run": "deno run --allow-all ./src/main.ts"}, "importMap": "./import_map.json"}
{"importMap": "import_map.json", "tasks": {"lume": "deno eval \"import 'lume/task.ts'\" --", "build": "deno task lume", "serve": "deno task lume -s"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ main.ts"}, "importMap": "./import_map.json"}
{"browsers": {"deno": {"name": "Deno", "type": "server", "accepts_flags": true, "accepts_webextensions": false, "releases": {"1.0": {"release_date": "2020-05-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.0.0", "status": "retired", "engine": "V8", "engine_version": "8.4"}, "1.1": {"release_date": "2020-06-12", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.1.0", "status": "retired", "engine": "V8", "engine_version": "8.4"}, "1.2": {"release_date": "2020-07-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.2.0", "status": "retired", "engine": "V8", "engine_version": "8.5"}, "1.3": {"release_date": "2020-08-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.3.0", "status": "retired", "engine": "V8", "engine_version": "8.6"}, "1.4": {"release_date": "2020-09-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.4.0", "status": "retired", "engine": "V8", "engine_version": "8.7"}, "1.5": {"release_date": "2020-10-27", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.5.0", "status": "retired", "engine": "V8", "engine_version": "8.7"}, "1.6": {"release_date": "2020-12-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.6.0", "status": "retired", "engine": "V8", "engine_version": "8.8"}, "1.7": {"release_date": "2021-01-19", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.7.0", "status": "retired", "engine": "V8", "engine_version": "8.9"}, "1.8": {"release_date": "2021-03-02", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.8.0", "status": "retired", "engine": "V8", "engine_version": "9.0"}, "1.9": {"release_date": "2021-04-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.9.0", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.10": {"release_date": "2021-05-11", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.10.1", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.11": {"release_date": "2021-06-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.11.0", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.12": {"release_date": "2021-07-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.12.0", "status": "retired", "engine": "V8", "engine_version": "9.2"}, "1.13": {"release_date": "2021-08-10", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.13.0", "status": "retired", "engine": "V8", "engine_version": "9.3"}, "1.14": {"release_date": "2021-09-14", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.14.0", "status": "retired", "engine": "V8", "engine_version": "9.4"}, "1.15": {"release_date": "2021-10-12", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.15.0", "status": "retired", "engine": "V8", "engine_version": "9.5"}, "1.16": {"release_date": "2021-11-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.16.0", "status": "retired", "engine": "V8", "engine_version": "9.7"}, "1.17": {"release_date": "2021-12-16", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.17.0", "status": "retired", "engine": "V8", "engine_version": "9.7"}, "1.18": {"release_date": "2022-01-20", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.18.0", "status": "retired", "engine": "V8", "engine_version": "9.8"}, "1.19": {"release_date": "2022-02-17", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.19.0", "status": "retired", "engine": "V8", "engine_version": "9.9"}, "1.20": {"release_date": "2022-03-17", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.20.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.21": {"release_date": "2022-04-21", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.21.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.22": {"release_date": "2022-05-18", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.22.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.23": {"release_date": "2022-06-15", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.23.0", "status": "retired", "engine": "V8", "engine_version": "10.4"}, "1.24": {"release_date": "2022-07-20", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.24.0", "status": "retired", "engine": "V8", "engine_version": "10.4"}, "1.25": {"release_date": "2022-08-25", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.25.0", "status": "retired", "engine": "V8", "engine_version": "10.6"}, "1.26": {"release_date": "2022-09-29", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.26.0", "status": "retired", "engine": "V8", "engine_version": "10.7"}, "1.27": {"release_date": "2022-10-27", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.27.0", "status": "current", "engine": "V8", "engine_version": "10.8"}}}}}
{"compilerOptions": {"noImplicitOverride": true}, "tasks": {"run": "deno run -A --unstable --watch server.ts", "cacheLib": "deno cache --reload --lock-write ./lib/deps.ts", "cacheSrv": "deno cache --reload --lock-write ./srv/deps.ts"}}
{"compilerOptions": {"noImplicitOverride": true}, "tasks": {"run": "deno run -A --unstable --watch server.ts", "cacheLib": "deno cache --reload --lock-write ./lib/deps.ts", "cacheSrv": "deno cache --reload --lock-write ./srv/deps.ts"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "fmt": {"exclude": ["_fresh"]}}
{"importMap": "test/appmap.json"}
{"extends": "./tsconfig.json", "include": ["deno"], "exclude": [], "compilerOptions": {"rootDir": "./deno", "lib": ["es2020", "DOM"], "paths": {"openai/_shims/*": ["deno/_shims/*"], "openai": ["deno/index.ts"], "openai/*": ["deno/*"], "digest-fetch": ["./typings/digest-fetch"]}, "noEmit": true, "declaration": true, "declarationMap": true, "outDir": "deno", "pretty": true, "sourceMap": true}}
{"tasks": {"check": "deno cache --check=all mod.ts", "dev": "deno fmt && deno lint && deno task check", "backport": "deno run --no-prompt --allow-read=. --allow-write=. https://deno.land/x/deno2node@v1.7.2/src/cli.ts tsconfig.json", "clean": "git clean -fX '*.d.ts'"}, "fmt": {"proseWrap": "preserve"}, "lint": {"exclude": ["api.d.ts", "inline.d.ts", "manage.d.ts", "markup.d.ts", "message.d.ts", "methods.d.ts", "mod.d.ts", "passport.d.ts", "payment.d.ts", "settings.d.ts", "update.d.ts"], "rules": {"exclude": ["no-empty-interface"]}}}
{"commandArgs": ["run", "--allow-all"], "defaultPath": "deno", "id": "deno", "name": "Deno", "preamble": "\nfunction DM_getPanelFile(i) {\n  return '$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[i];\n}\n\nfunction DM_getPanel(i) {\n  return JSON.parse(Deno.readTextFileSync('$$RESULTS_FILE$$'+$$JSON_ID_MAP$$[i]));\n}\n\nfunction DM_setPanel(v) {\n  Deno.writeTextFileSync('$$PANEL_RESULTS_FILE$$', JSON.stringify(v));\n}"}
{"authored": ["ECIR-2014-Barron-CedenoPCR", "SIGIR-2010-Barron-Cedeno", "ECIR-2009-Barron-CedenoR"], "dblp": "Barr=oacute=n-Cede=ntilde=o:Alberto", "name": "Alberto Barr\u00f3n-Cede\u00f1o"}
{"lock": false, "tasks": {"remove_unused_rmrk_locks": "deno run --allow-net remove_unused_rmrk_locks.ts", "try_withdraw_stake_pools": "deno run --allow-net try_withdraw_stake_pools.ts", "try_withdraw_vaults": "deno run --allow-net try_withdraw_vaults.ts", "try_reclaim_pool_workers": "deno run --allow-net try_reclaim_pool_workers.ts"}}
{"stats": [{"H": "Videos", "C": "9"}, {"H": "Ragas", "C": "1"}, {"H": "Artists", "C": "6"}, {"H": "Types", "C": "1"}, {"H": "Duration", "C": "1 H"}, {"H": "Views", "C": "9 K"}], "info": [{"H": "Type", "V": "Krithi", "P": "k.Rti"}, {"H": "Composer", "V": "Koteeswara Iyer", "P": "kOTIsvara ayyar"}, {"H": "Raga", "V": "Shulini", "P": "sUlini"}, {"H": "Tala", "V": "Adi", "P": "Adi"}, {"H": "Tala name", "V": "Chatusra Jaati Triputa Tala", "P": "chatuSra jAti tripuTa tALA"}, {"H": "Tala angas", "V": "Laghu-1, Dhruta-2", "P": "laghu-1, d.RtA-2"}, {"H": "Tala count", "V": "4 + 2 + 2 = 8", "P": "4 + 2 + 2 = 8"}, {"H": "Language", "V": "Tamil", "P": "Tamil"}], "title": {"H": "Paramukham Adeno", "V": "parAmukham adEnO", "I": "music-note-beamed"}, "lyricstext": [{"L": "English", "text": [{"M": "pallavi", "T": "parAmukham adEnO enmEl guruparA idu taru mandAnO en mEl"}, {"M": "anupallavi", "T": "OrAumukha unaiyE alador-Adaravum ilayE enmEl"}, {"M": "caraNam", "T": "abhAra vara karuNAkara kapAlakara triSUlini supAla <br/> sura paripAlini sudhA kavi kunjaradAsan enmEl"}]}, {"L": "Tamil", "text": [{"M": "\u0baa\u0bb2\u0bcd\u0bb2\u0bb5\u0bbf", "T": "\u0baa\u0bb0\u0bbe\u0bae\u0bc1\u0b95\u0bae\u0bcd \u0b85\u0ba4\u0bc7\u0ba9\u0bcb \u0b8e\u0ba9\u0bcd\u0bae\u0bc7\u0bb2\u0bcd \u0b95\u0bc1\u0bb0\u0bc1\u0baa\u0bb0\u0bbe \u0b87\u0ba4\u0bc1 \u0ba4\u0bb0\u0bc1 \u0bae\u0ba8\u0bcd\u0ba4\u0bbe\u0ba9\u0bcb \u0b8e\u0ba9\u0bcd \u0bae\u0bc7\u0bb2\u0bcd"}, {"M": "\u0b85\u0ba9\u0bc1\u0baa\u0bb2\u0bcd\u0bb2\u0bb5\u0bbf", "T": "\u0b93\u0bb0\u0bbe\u0b89\u0bae\u0bc1\u0b95 \u0b89\u0ba9\u0bc8\u0baf\u0bc7 \u0b85\u0bb2\u0ba4\u0bca\u0bb0\u0bcd-\u0b86\u0ba4\u0bb0\u0bb5\u0bc1\u0bae\u0bcd \u0b87\u0bb2\u0baf\u0bc7 \u0b8e\u0ba9\u0bcd\u0bae\u0bc7\u0bb2\u0bcd"}, {"M": "\u0b9a\u0bb0\u0ba3\u0bae\u0bcd", "T": "\u0b85\u0baa\u0bbe\u0bb0 \u0bb5\u0bb0 \u0b95\u0bb0\u0bc1\u0ba3\u0bbe\u0b95\u0bb0 \u0b95\u0baa\u0bbe\u0bb2\u0b95\u0bb0 \u0ba4\u0bcd\u0bb0\u0bbf\u0b9a\u0bc2\u0bb2\u0bbf\u0ba9\u0bbf \u0b9a\u0bc1\u0baa\u0bbe\u0bb2 <br/> \u0b9a\u0bc1\u0bb0 \u0baa\u0bb0\u0bbf\u0baa\u0bbe\u0bb2\u0bbf\u0ba9\u0bbf \u0b9a\u0bc1\u0ba4\u0bbe \u0b95\u0bb5\u0bbf \u0b95\u0bc1\u0b9e\u0bcd\u0b9a\u0bb0\u0ba4\u0bbe\u0b9a\u0ba9\u0bcd \u0b8e\u0ba9\u0bcd\u0bae\u0bc7\u0bb2\u0bcd"}]}, {"L": "Telugu", "text": [{"M": "\u0c2a\u0c32\u0c4d\u0c32\u0c35\u0c3f", "T": "\u0c2a\u0c30\u0c3e\u0c2e\u0c41\u0c16\u0c2e\u0c4d \u0c05\u0c26\u0c47\u0c28\u0c4b \u0c0e\u0c28\u0c4d\u0c2e\u0c47\u0c32\u0c4d \u0c17\u0c41\u0c30\u0c41\u0c2a\u0c30\u0c3e \u0c07\u0c26\u0c41 \u0c24\u0c30\u0c41 \u0c2e\u0c28\u0c4d\u0c26\u0c3e\u0c28\u0c4b \u0c0e\u0c28\u0c4d \u0c2e\u0c47\u0c32\u0c4d"}, {"M": "\u0c05\u0c28\u0c41\u0c2a\u0c32\u0c4d\u0c32\u0c35\u0c3f", "T": "\u0c13\u0c30\u0c3e\u0c09\u0c2e\u0c41\u0c16 \u0c09\u0c28\u0c48\u0c2f\u0c47 \u0c05\u0c32\u0c26\u0c4a\u0c30\u0c4d-\u0c06\u0c26\u0c30\u0c35\u0c41\u0c2e\u0c4d \u0c07\u0c32\u0c2f\u0c47 \u0c0e\u0c28\u0c4d\u0c2e\u0c47\u0c32\u0c4d"}, {"M": "\u0c1a\u0c30\u0c23\u0c2e\u0c4d", "T": "\u0c05\u0c2d\u0c3e\u0c30 \u0c35\u0c30 \u0c15\u0c30\u0c41\u0c23\u0c3e\u0c15\u0c30 \u0c15\u0c2a\u0c3e\u0c32\u0c15\u0c30 \u0c24\u0c4d\u0c30\u0c3f\u0c36\u0c42\u0c32\u0c3f\u0c28\u0c3f \u0c38\u0c41\u0c2a\u0c3e\u0c32 <br/> \u0c38\u0c41\u0c30 \u0c2a\u0c30\u0c3f\u0c2a\u0c3e\u0c32\u0c3f\u0c28\u0c3f \u0c38\u0c41\u0c27\u0c3e \u0c15\u0c35\u0c3f \u0c15\u0c41\u0c1e\u0c4d\u0c1c\u0c30\u0c26\u0c3e\u0c38\u0c28\u0c4d \u0c0e\u0c28\u0c4d\u0c2e\u0c47\u0c32\u0c4d"}]}, {"L": "Kannada", "text": [{"M": "\u0caa\u0cb2\u0ccd\u0cb2\u0cb5\u0cbf", "T": "\u0caa\u0cb0\u0cbe\u0cae\u0cc1\u0c96\u0cae\u0ccd \u0c85\u0ca6\u0cc7\u0ca8\u0ccb \u0c8e\u0ca8\u0ccd\u0cae\u0cc7\u0cb2\u0ccd \u0c97\u0cc1\u0cb0\u0cc1\u0caa\u0cb0\u0cbe \u0c87\u0ca6\u0cc1 \u0ca4\u0cb0\u0cc1 \u0cae\u0ca8\u0ccd\u0ca6\u0cbe\u0ca8\u0ccb \u0c8e\u0ca8\u0ccd \u0cae\u0cc7\u0cb2\u0ccd"}, {"M": "\u0c85\u0ca8\u0cc1\u0caa\u0cb2\u0ccd\u0cb2\u0cb5\u0cbf", "T": "\u0c93\u0cb0\u0cbe\u0c89\u0cae\u0cc1\u0c96 \u0c89\u0ca8\u0cc8\u0caf\u0cc7 \u0c85\u0cb2\u0ca6\u0cca\u0cb0\u0ccd-\u0c86\u0ca6\u0cb0\u0cb5\u0cc1\u0cae\u0ccd \u0c87\u0cb2\u0caf\u0cc7 \u0c8e\u0ca8\u0ccd\u0cae\u0cc7\u0cb2\u0ccd"}, {"M": "\u0c9a\u0cb0\u0ca3\u0cae\u0ccd", "T": "\u0c85\u0cad\u0cbe\u0cb0 \u0cb5\u0cb0 \u0c95\u0cb0\u0cc1\u0ca3\u0cbe\u0c95\u0cb0 \u0c95\u0caa\u0cbe\u0cb2\u0c95\u0cb0 \u0ca4\u0ccd\u0cb0\u0cbf\u0cb6\u0cc2\u0cb2\u0cbf\u0ca8\u0cbf \u0cb8\u0cc1\u0caa\u0cbe\u0cb2 <br/> \u0cb8\u0cc1\u0cb0 \u0caa\u0cb0\u0cbf\u0caa\u0cbe\u0cb2\u0cbf\u0ca8\u0cbf \u0cb8\u0cc1\u0ca7\u0cbe \u0c95\u0cb5\u0cbf \u0c95\u0cc1\u0c9e\u0ccd\u0c9c\u0cb0\u0ca6\u0cbe\u0cb8\u0ca8\u0ccd \u0c8e\u0ca8\u0ccd\u0cae\u0cc7\u0cb2\u0ccd"}]}, {"L": "Malayalam", "text": [{"M": "\u0d2a\u0d32\u0d4d\u0d32\u0d35\u0d3f", "T": "\u0d2a\u0d30\u0d3e\u0d2e\u0d41\u0d16\u0d2e\u0d4d \u0d05\u0d26\u0d47\u0d28\u0d4b \u0d0e\u0d28\u0d4d\u0d2e\u0d47\u0d32\u0d4d \u0d17\u0d41\u0d30\u0d41\u0d2a\u0d30\u0d3e \u0d07\u0d26\u0d41 \u0d24\u0d30\u0d41 \u0d2e\u0d28\u0d4d\u0d26\u0d3e\u0d28\u0d4b \u0d0e\u0d28\u0d4d \u0d2e\u0d47\u0d32\u0d4d"}, {"M": "\u0d05\u0d28\u0d41\u0d2a\u0d32\u0d4d\u0d32\u0d35\u0d3f", "T": "\u0d13\u0d30\u0d3e\u0d09\u0d2e\u0d41\u0d16 \u0d09\u0d28\u0d48\u0d2f\u0d47 \u0d05\u0d32\u0d26\u0d4a\u0d30\u0d4d-\u0d06\u0d26\u0d30\u0d35\u0d41\u0d2e\u0d4d \u0d07\u0d32\u0d2f\u0d47 \u0d0e\u0d28\u0d4d\u0d2e\u0d47\u0d32\u0d4d"}, {"M": "\u0d1a\u0d30\u0d23\u0d2e\u0d4d", "T": "\u0d05\u0d2d\u0d3e\u0d30 \u0d35\u0d30 \u0d15\u0d30\u0d41\u0d23\u0d3e\u0d15\u0d30 \u0d15\u0d2a\u0d3e\u0d32\u0d15\u0d30 \u0d24\u0d4d\u0d30\u0d3f\u0d36\u0d42\u0d32\u0d3f\u0d28\u0d3f \u0d38\u0d41\u0d2a\u0d3e\u0d32 <br/> \u0d38\u0d41\u0d30 \u0d2a\u0d30\u0d3f\u0d2a\u0d3e\u0d32\u0d3f\u0d28\u0d3f \u0d38\u0d41\u0d27\u0d3e \u0d15\u0d35\u0d3f \u0d15\u0d41\u0d1e\u0d4d\u0d1c\u0d30\u0d26\u0d3e\u0d38\u0d28\u0d4d \u0d0e\u0d28\u0d4d\u0d2e\u0d47\u0d32\u0d4d"}]}, {"L": "Sanskrit", "text": [{"M": "\u092a\u0932\u094d\u0932\u0935\u093f", "T": "\u092a\u0930\u093e\u092e\u0941\u0916\u092e\u094d \u0905\u0926\u0947\u0928\u094b \u090f\u0928\u094d\u092e\u0947\u0932\u094d \u0917\u0941\u0930\u0941\u092a\u0930\u093e \u0907\u0926\u0941 \u0924\u0930\u0941 \u092e\u0928\u094d\u0926\u093e\u0928\u094b \u090f\u0928\u094d \u092e\u0947\u0932\u094d"}, {"M": "\u0905\u0928\u0941\u092a\u0932\u094d\u0932\u0935\u093f", "T": "\u0913\u0930\u093e\u0909\u092e\u0941\u0916 \u0909\u0928\u0948\u092f\u0947 \u0905\u0932\u0926\u094b\u0930\u094d-\u0906\u0926\u0930\u0935\u0941\u092e\u094d \u0907\u0932\u092f\u0947 \u090f\u0928\u094d\u092e\u0947\u0932\u094d"}, {"M": "\u091a\u0930\u0923\u092e\u094d", "T": "\u0905\u092d\u093e\u0930 \u0935\u0930 \u0915\u0930\u0941\u0923\u093e\u0915\u0930 \u0915\u092a\u093e\u0932\u0915\u0930 \u0924\u094d\u0930\u093f\u0936\u0942\u0932\u093f\u0928\u093f \u0938\u0941\u092a\u093e\u0932 <br/> \u0938\u0941\u0930 \u092a\u0930\u093f\u092a\u093e\u0932\u093f\u0928\u093f \u0938\u0941\u0927\u093e \u0915\u0935\u093f \u0915\u0941\u091e\u094d\u091c\u0930\u0926\u093e\u0938\u0928\u094d \u090f\u0928\u094d\u092e\u0947\u0932\u094d"}]}], "L": "l", "lyricsref": [{"links": [{"N": "karnatik.com", "L": "https://karnatik.com/c1791.shtml"}]}], "videos": [{"folder": [{"A": 290, "songs": [{"C": 19, "D": "5:13", "I": "ZelQUrlYNNY", "J": "h", "R": 294, "S": 1881, "T": 0, "V": "1,197"}]}, {"A": 142, "songs": [{"C": 19, "D": "6:11", "I": "_eEya4RcikA", "J": "m", "R": 294, "S": 1881, "T": 0, "V": "253"}]}, {"A": 71, "songs": [{"C": 19, "D": "7:05", "I": "h2uPXUR2JmQ", "J": "m", "R": 294, "S": 1881, "T": 0, "V": "1,157"}, {"C": 19, "D": "7:05", "I": "TOtIRcfmRak", "J": "m", "R": 294, "S": 1881, "T": 0, "V": "125"}]}, {"A": 12, "songs": [{"C": 19, "D": "4:43", "I": "fPRk1uGwmZ0", "J": "m", "R": 294, "S": 1881, "T": 0, "V": "3,607"}, {"C": 19, "D": "42:20", "I": "yEXK7B9L4SM", "J": "m", "R": 294, "S": 1881, "T": 0, "V": "480"}]}, {"A": 505, "songs": [{"C": 19, "D": "5:25", "I": "jNubB-4kbq8", "J": "m", "R": 294, "S": 1881, "T": 0, "V": "107"}]}, {"A": 114, "songs": [{"C": 19, "D": "5:53", "I": "YYa6cdbL0LI", "J": "h", "R": 294, "S": 1881, "T": 0, "V": "954"}, {"C": 19, "D": "6:00", "I": "gj7ZVnFxB-Y", "J": "m", "R": 294, "S": 1881, "T": 0, "V": "251"}]}]}]}
{"imports": {"@opennetwork/http-representation": "https://cdn.skypack.dev/@opennetwork/http-representation", "@virtualstate/astro-renderer": "https://cdn.skypack.dev/@virtualstate/astro-renderer", "@virtualstate/dom": "https://cdn.skypack.dev/@virtualstate/dom", "@virtualstate/examples": "https://cdn.skypack.dev/@virtualstate/examples", "@virtualstate/fringe": "https://cdn.skypack.dev/@virtualstate/fringe", "@virtualstate/hooks": "https://cdn.skypack.dev/@virtualstate/hooks", "@virtualstate/hooks-extended": "https://cdn.skypack.dev/@virtualstate/hooks-extended", "@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union", "@virtualstate/x": "https://cdn.skypack.dev/@virtualstate/x", "@virtualstate/kdl": "https://cdn.skypack.dev/@virtualstate/kdl", "@virtualstate/promise": "https://cdn.skypack.dev/@virtualstate/promise", "@virtualstate/promise/the-thing": "https://cdn.skypack.dev/@virtualstate/promise/the-thing", "@virtualstate/focus": "https://cdn.skypack.dev/@virtualstate/focus", "@virtualstate/app-history": "./src/app-history.ts", "@virtualstate/app-history/polyfill": "./src/polyfill.ts", "@virtualstate/app-history/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history/event-target": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported": "./src/app-history.ts", "@virtualstate/app-history-imported/polyfill": "./src/polyfill.ts", "@virtualstate/app-history-imported/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history-imported/event-target": "./src/event-target/sync-event-target.ts", "dom-lite": "https://cdn.skypack.dev/dom-lite", "iterable": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "https://cdn.skypack.dev/-/iterable@v5.7.0-CNtyuMJo9f2zFu6CuB1D/dist=es2019,mode=imports/optimized/iterable.js": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "uuid": "./src/util/deno-uuid.ts", "whatwg-url": "https://cdn.skypack.dev/whatwg-url", "change-case": "https://cdn.skypack.dev/change-case", "abort-controller": "https://cdn.skypack.dev/abort-controller", "deno:std/uuid/mod": "https://deno.land/std@0.113.0/uuid/mod.ts", "deno:std/uuid/v4": "https://deno.land/std@0.113.0/uuid/v4.ts", "deno:deno_dom/deno-dom-wasm.ts": "https://deno.land/x/deno_dom/deno-dom-wasm.ts", "urlpattern-polyfill": "https://cdn.skypack.dev/urlpattern-polyfill", "./src/tests/examples": "./src/tests/examples/index.ts", "./src/tests/examples/jsx": "./src/tests/examples/jsx.tsx", "./src/tests/examples/fetch": "./src/tests/examples/fetch.ts", "./src/tests/examples/readme-detailed": "./src/tests/examples/readme-detailed.tsx", "./src/tests/app-history.class": "./src/tests/app-history.class.ts", "./src/tests/app-history.imported": "./src/tests/app-history.imported.ts", "./src/tests/app-history.scope": "./src/tests/app-history.scope.ts", "./src/tests/app-history": "./src/tests/app-history.tsx", "./src/tests/node-process": "./src/tests/default-process.ts", "./src/tests/imported": "./src/tests/imported.ts", "./src/tests/config": "./src/tests/config.ts", "./src/tests/util": "./src/tests/util.ts", "./src/app-history": "./src/app-history.ts", "./src/app-history-entry": "./src/app-history-entry.ts", "./src/spec/app-history": "./src/spec/app-history.ts", "./src/app-history-errors": "./src/app-history-errors.ts", "./src/app-history-event-target": "./src/app-history-event-target.ts", "./src/app-history-transition": "./src/app-history-transition.ts", "./src/create-app-history-transition": "./src/create-app-history-transition.ts", "./src/util/deferred": "./src/util/deferred.ts", "./src/util/deno-uuid": "./src/util/deno-uuid.ts", "./src/util/uuid-or-random": "./src/util/uuid-or-random.ts", "./src/util/parse-dom-deno": "./src/util/parse-dom-deno.ts", "./src/util/parse-dom": "./src/util/parse-dom-deno.ts", "./src/index": "./src/index.ts", "./src/util/writable": "./src/util/writable.ts", "./src": "./src/index.ts", "./src/event-target": "./src/event-target/index.ts", "./src/event-target/callback": "./src/event-target/callback.ts", "./src/event-target/context": "./src/event-target/context.ts", "./src/event-target/global": "./src/event-target/global.ts", "./src/event-target/descriptor": "./src/event-target/descriptor.ts", "./src/event-target/event": "./src/event-target/event.ts", "./src/event-target/create-event": "./src/event-target/create-event.ts", "./src/event-target/event-target": "./src/event-target/event-target.ts", "./src/event-target/async-event-target": "./src/event-target/async-event-target.ts", "./src/event-target/sync-event-target": "./src/event-target/sync-event-target.ts", "./src/event-target/event-target-options": "./src/event-target/event-target-options.ts", "./src/event-target/event-target-listeners": "./src/event-target/event-target-listeners.ts", "./src/event-target/index": "./src/event-target/index.ts", "./src/event-target/parallel-event": "./src/event-target/parallel-event.ts", "./src/event-target/respond-event": "./src/event-target/respond-event.ts", "./src/event-target/signal-event": "./src/event-target/signal-event.ts", "./src/event-target/transition-event": "./src/event-target/transition-event.ts", "./src/util/import-types": "./src/util/import-types.ts", "./src/polyfill": "./src/polyfill.ts", "./src/location": "./src/location.ts", "./src/history": "./src/history.ts", "./esnext/util/parse-dom-deno.js": "./esnext/util/parse-dom-deno.ts", "./esnext/util/parse-dom.js": "./esnext/util/parse-dom-deno.ts", "@virtualstate/ore": "./esnext/index.js", "cheerio": "./scripts/nop/index.js"}}
{"id": 262098081, "node_id": "MDEwOlJlcG9zaXRvcnkyNjIwOTgwODE=", "name": "vscode_deno", "full_name": "denoland/vscode_deno", "private": false, "owner": {"login": "denoland", "id": 42048915, "node_id": "MDEyOk9yZ2FuaXphdGlvbjQyMDQ4OTE1", "avatar_url": "https://avatars.githubusercontent.com/u/42048915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denoland", "html_url": "https://github.com/denoland", "followers_url": "https://api.github.com/users/denoland/followers", "following_url": "https://api.github.com/users/denoland/following{/other_user}", "gists_url": "https://api.github.com/users/denoland/gists{/gist_id}", "starred_url": "https://api.github.com/users/denoland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denoland/subscriptions", "organizations_url": "https://api.github.com/users/denoland/orgs", "repos_url": "https://api.github.com/users/denoland/repos", "events_url": "https://api.github.com/users/denoland/events{/privacy}", "received_events_url": "https://api.github.com/users/denoland/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/denoland/vscode_deno", "description": "Visual Studio Code plugin for Deno", "fork": false, "url": "https://api.github.com/repos/denoland/vscode_deno", "forks_url": "https://api.github.com/repos/denoland/vscode_deno/forks", "keys_url": "https://api.github.com/repos/denoland/vscode_deno/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/denoland/vscode_deno/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/denoland/vscode_deno/teams", "hooks_url": "https://api.github.com/repos/denoland/vscode_deno/hooks", "issue_events_url": "https://api.github.com/repos/denoland/vscode_deno/issues/events{/number}", "events_url": "https://api.github.com/repos/denoland/vscode_deno/events", "assignees_url": "https://api.github.com/repos/denoland/vscode_deno/assignees{/user}", "branches_url": "https://api.github.com/repos/denoland/vscode_deno/branches{/branch}", "tags_url": "https://api.github.com/repos/denoland/vscode_deno/tags", "blobs_url": "https://api.github.com/repos/denoland/vscode_deno/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/denoland/vscode_deno/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/denoland/vscode_deno/git/refs{/sha}", "trees_url": "https://api.github.com/repos/denoland/vscode_deno/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/denoland/vscode_deno/statuses/{sha}", "languages_url": "https://api.github.com/repos/denoland/vscode_deno/languages", "stargazers_url": "https://api.github.com/repos/denoland/vscode_deno/stargazers", "contributors_url": "https://api.github.com/repos/denoland/vscode_deno/contributors", "subscribers_url": "https://api.github.com/repos/denoland/vscode_deno/subscribers", "subscription_url": "https://api.github.com/repos/denoland/vscode_deno/subscription", "commits_url": "https://api.github.com/repos/denoland/vscode_deno/commits{/sha}", "git_commits_url": "https://api.github.com/repos/denoland/vscode_deno/git/commits{/sha}", "comments_url": "https://api.github.com/repos/denoland/vscode_deno/comments{/number}", "issue_comment_url": "https://api.github.com/repos/denoland/vscode_deno/issues/comments{/number}", "contents_url": "https://api.github.com/repos/denoland/vscode_deno/contents/{+path}", "compare_url": "https://api.github.com/repos/denoland/vscode_deno/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/denoland/vscode_deno/merges", "archive_url": "https://api.github.com/repos/denoland/vscode_deno/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/denoland/vscode_deno/downloads", "issues_url": "https://api.github.com/repos/denoland/vscode_deno/issues{/number}", "pulls_url": "https://api.github.com/repos/denoland/vscode_deno/pulls{/number}", "milestones_url": "https://api.github.com/repos/denoland/vscode_deno/milestones{/number}", "notifications_url": "https://api.github.com/repos/denoland/vscode_deno/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/denoland/vscode_deno/labels{/name}", "releases_url": "https://api.github.com/repos/denoland/vscode_deno/releases{/id}", "deployments_url": "https://api.github.com/repos/denoland/vscode_deno/deployments", "created_at": "2020-05-07T16:10:02Z", "updated_at": "2023-08-30T11:52:21Z", "pushed_at": "2023-08-31T17:53:06Z", "git_url": "git://github.com/denoland/vscode_deno.git", "ssh_url": "git@github.com:denoland/vscode_deno.git", "clone_url": "https://github.com/denoland/vscode_deno.git", "svn_url": "https://github.com/denoland/vscode_deno", "homepage": "https://marketplace.visualstudio.com/items?itemName=denoland.vscode-deno", "size": 24896, "stargazers_count": 1422, "watchers_count": 1422, "language": "TypeScript", "has_issues": true, "has_projects": false, "has_downloads": true, "has_wiki": false, "has_pages": false, "has_discussions": true, "forks_count": 136, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 90, "license": {"key": "mit", "name": "MIT License", "spdx_id": "MIT", "url": "https://api.github.com/licenses/mit", "node_id": "MDc6TGljZW5zZTEz"}, "allow_forking": true, "is_template": false, "web_commit_signoff_required": false, "topics": [], "visibility": "public", "forks": 136, "open_issues": 90, "watchers": 1422, "default_branch": "main", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": false}, "_index": 1935}
{"compilerOptions": {"strict": true, "useUnknownInCatchVariables": true, "noImplicitOverride": true}, "imports": {"https://deno.land/std@$STD_VERSION/": "./"}, "tasks": {"test": "deno test --doc --unstable --allow-all --parallel --coverage=./cov", "test:browser": "git grep --name-only \"This module is browser compatible.\" | grep -v deno.json | grep -v .github/workflows | grep -v _tools | xargs deno check --config browser-compat.tsconfig.json", "fmt:licence-headers": "deno run --allow-read --allow-write ./_tools/check_licence.ts", "lint:deprecations": "deno run --allow-read --allow-net ./_tools/check_deprecation.ts", "lint:doc-imports": "deno run --allow-env --allow-read ./_tools/check_doc_imports.ts", "lint:circular": "deno run --allow-env --allow-read --allow-net=deno.land ./_tools/check_circular_submodule_dependencies.ts", "lint": "deno lint && deno task fmt:licence-headers --check && deno task lint:deprecations && deno task lint:doc-imports && deno task lint:circular", "typos": "typos -c ./.github/workflows/typos.toml", "build:crypto": "deno task --cwd crypto/_wasm wasmbuild", "wasmbuild": "deno run --unstable -A https://deno.land/x/wasmbuild@0.10.3/main.ts --js-ext mjs --sync"}, "exclude": [".git", "crypto/_wasm/target", "cov", "jsonc/testdata", "front_matter/testdata", "wasi/testdata"]}
{"Release": "D97A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "LOC", "Min": 0, "Max": 9}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"fmt": {"files": {"exclude": ["."]}}}
{"name": "atom-ide-deno", "repository": {"type": "git", "url": "https://github.com/ayame113/atom-ide-deno"}, "downloads": 1406, "stargazers_count": 3, "releases": {"latest": "1.26.0"}, "versions": {"1.26.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.26.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "activationHooks": ["language-typescript:grammar-used", "language-javascript:grammar-used", "language-json:grammar-used", "language-gfm:grammar-used"], "package-deps": ["atom-ide-base"], "scripts": {"check": "tsc --noEmit -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules", "test.lint": "deno lint --ignore=./node_modules", "test": "atom --test spec"}, "dependencies": {"atom-ide-markdown-service": "^2.1.0", "atom-languageclient": "^1.16.1", "atom-package-deps": "^8.0.0", "atom-ts-transpiler": "^1.5.3", "typescript": "^4.7.3"}, "devDependencies": {"@types/atom": "^1.40.11", "@types/node": "^17.0.41", "atom-select-list": "^0.8.1", "deno-bin": "^1.22.2", "vscode-languageserver-protocol": "^3.17.1"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}, "call-hierarchy": {"versions": {"0.1.0": "provideCallHierarchy"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.26.0/tarball"}}, "1.24.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.24.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "activationHooks": ["language-typescript:grammar-used", "language-javascript:grammar-used", "language-json:grammar-used", "language-gfm:grammar-used"], "package-deps": ["atom-ide-base"], "scripts": {"check": "tsc --noEmit -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules", "test.lint": "deno lint --ignore=./node_modules", "test": "atom --test spec"}, "dependencies": {"atom-ide-markdown-service": "^2.1.0", "atom-languageclient": "^1.16.1", "atom-package-deps": "^8.0.0", "atom-ts-transpiler": "^1.5.3", "typescript": "^4.7.3"}, "devDependencies": {"@types/atom": "^1.40.11", "@types/node": "^17.0.41", "atom-select-list": "^0.8.1", "deno-bin": "^1.22.2", "vscode-languageserver-protocol": "^3.17.1"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}, "call-hierarchy": {"versions": {"0.1.0": "provideCallHierarchy"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.24.0/tarball"}}, "1.13.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.13.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "activationHooks": ["language-typescript:grammar-used", "language-javascript:grammar-used", "language-json:grammar-used", "language-gfm:grammar-used"], "package-deps": ["atom-ide-base"], "scripts": {"check": "tsc --noEmit -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules", "test.lint": "deno lint --ignore=./node_modules", "test": "atom --test spec"}, "dependencies": {"atom-ide-markdown-service": "^2.1.0", "atom-languageclient": "^1.16.1", "atom-package-deps": "^7.2.3", "atom-ts-transpiler": "^1.5.3", "typescript": "^4.4.0-beta"}, "devDependencies": {"@types/atom": "^1.40.11", "@types/node": "^14.17.7", "atom-select-list": "^0.8.1", "deno-bin": "^1.11.5", "vscode-languageserver-protocol": "^3.16.0"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}, "call-hierarchy": {"versions": {"0.1.0": "provideCallHierarchy"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.13.0/tarball"}}, "1.12.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.12.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "activationHooks": ["language-typescript:grammar-used", "language-javascript:grammar-used", "language-json:grammar-used", "language-gfm:grammar-used"], "package-deps": ["atom-ide-base"], "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules --unstable", "test.lint": "deno lint --ignore=./node_modules --unstable | echo -e $(cat)", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.14.1", "atom-package-deps": "^7.2.3", "atom-ts-transpiler": "^1.5.3", "typescript": "~4.3.4"}, "devDependencies": {"deno-bin": "^1.10.1", "@types/atom": "1.40.10", "@types/node": "^14.14.37", "atom-select-list": "^0.8.0", "vscode-languageserver-protocol": "^3.16.0"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}, "call-hierarchy": {"versions": {"0.1.0": "provideCallHierarchy"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.12.0/tarball"}}, "1.10.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.10.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "activationHooks": ["language-typescript:grammar-used", "language-javascript:grammar-used", "language-json:grammar-used", "language-gfm:grammar-used"], "package-deps": ["atom-ide-base"], "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules --unstable", "test.lint": "deno lint --ignore=./node_modules --unstable | echo -e $(cat)", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.14.0", "atom-package-deps": "^7.2.3", "atom-ts-transpiler": "^1.5.3", "typescript": "~4.3.4"}, "devDependencies": {"deno-bin": "^1.10.1", "@types/atom": "1.40.10", "@types/node": "^14.14.37", "atom-select-list": "^0.8.0", "vscode-languageserver-protocol": "^3.16.0"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}, "call-hierarchy": {"versions": {"0.0.0": "provideCallHierarchy"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.10.0/tarball"}}, "1.8.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.8.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules --unstable", "test.lint": "deno lint --ignore=./node_modules --unstable | echo -e $(cat)", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.8.3", "atom-ts-transpiler": "^1.5.3", "deno-bin": "^1.10.1", "typescript": "^4.2.4"}, "devDependencies": {"@types/atom": "1.40.10", "@types/node": "^14.14.37", "atom-select-list": "^0.8.0", "vscode-languageserver-protocol": "^3.16.0"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.8.0/tarball"}}, "1.7.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.7.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules --unstable", "test.lint": "deno lint --ignore=./node_modules --unstable | echo -e $(cat)", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.8.3", "atom-ts-transpiler": "^1.5.3", "typescript": "^4.2.4"}, "devDependencies": {"@types/atom": "1.40.10", "@types/node": "^14.14.37", "atom-select-list": "^0.8.0", "deno-bin": "github:ayame113/deno-bin", "vscode-languageserver-protocol": "^3.16.0"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.7.0/tarball"}}, "1.6.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.6.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules --unstable", "test.lint": "deno lint --ignore=./node_modules --unstable | echo -e $(cat)", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.8.3", "atom-ts-transpiler": "^1.5.3", "typescript": "^4.2.4"}, "devDependencies": {"@types/atom": "1.40.10", "@types/node": "^14.14.37", "atom-select-list": "^0.8.0", "deno-bin": "github:ayame113/deno-bin", "vscode-languageserver-protocol": "^3.16.0"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.6.0/tarball"}}, "1.5.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.5.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules --unstable", "test.lint": "deno lint --ignore=./node_modules --unstable | echo -e $(cat)", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.8.0", "atom-ts-transpiler": "^1.5.3", "typescript": "^4.2.4"}, "devDependencies": {"@types/atom": "1.40.10", "@types/node": "^14.14.37", "deno-bin": "github:ayame113/deno-bin", "vscode-languageserver-protocol": "^3.16.0"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.5.0/tarball"}}, "1.4.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.4.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "prettier --write .", "test.format": "prettier . --check", "lint": "eslint . --fix", "test.lint": "eslint .", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.8.0", "atom-ts-transpiler": "^1.5.3", "vscode-languageserver-protocol": "^3.16.0", "@types/atom": "1.40.10", "@types/node": "^14.14.37", "@typescript-eslint/eslint-plugin": "^4.22.0", "@typescript-eslint/parser": "^4.22.0", "eslint": "7.23.0", "eslint-config-atomic": "^1.12.5", "typescript": "^4.2.4"}, "devDependencies": {}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.4.0/tarball"}}, "1.3.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.3.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "scripts": {"check": "tsc --noEmit  -p ./lib/tsconfig.json", "format": "prettier --write .", "test.format": "prettier . --check", "lint": "eslint . --fix", "test.lint": "eslint .", "test": "atom --test spec"}, "dependencies": {"atom-languageclient": "^1.8.0", "atom-ts-transpiler": "^1.5.3"}, "devDependencies": {"vscode-languageserver-protocol": "^3.16.0", "@types/atom": "1.40.10", "@types/node": "^14.14.37", "@typescript-eslint/eslint-plugin": "^4.22.0", "@typescript-eslint/parser": "^4.22.0", "eslint": "7.23.0", "eslint-config-atomic": "^1.12.5", "typescript": "^4.2.4"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.3.0/tarball"}}, "1.2.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.2.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "dependencies": {"atom-languageclient": "^1.8.0"}, "configSchema": {"lspFlags": {"title": "lsp flags", "description": "This setting is based on [vscode extention](https://github.com/denoland/vscode_deno)", "type": "object", "order": 1, "properties": {"enable": {"title": "Enables language server", "type": "boolean", "default": true, "order": 2}, "lint": {"title": "Enables lint", "type": "boolean", "default": true, "order": 3}, "unstable": {"title": "Enables unstable", "type": "boolean", "default": false, "order": 4}, "importMap": {"title": "Path to import-map", "description": "Relative path from the project root (ex. `./import-map.json`)", "type": "string", "default": "", "order": 5}, "config": {"title": "Path to tsconfig", "description": "Relative path from the project root (ex. `./tsconfig.json`)", "type": "string", "default": "", "order": 6}, "codeLens": {"title": "code lens", "type": "object", "order": 7, "properties": {"implementations": {"title": "Enables implementations", "type": "boolean", "default": true, "order": 8}, "references": {"title": "Enables references", "type": "boolean", "default": true, "order": 9}, "referencesAllFunctions": {"title": "Enables references all functions", "type": "boolean", "default": true, "order": 10}}}, "suggest": {"title": "suggest", "type": "object", "order": 11, "properties": {"autoImports": {"title": "Enables auto imports", "type": "boolean", "default": true, "order": 12}, "completeFunctionCalls": {"title": "Enables complete function calls", "type": "boolean", "default": true, "order": 13}, "names": {"title": "Enables names", "type": "boolean", "default": true, "order": 14}, "paths": {"title": "Enables paths", "type": "boolean", "default": true, "order": 15}, "imports": {"title": "imports", "type": "object", "order": 16, "properties": {"hosts": {"title": "List of hosts", "description": "Controls which hosts are enabled for import suggestions. See [vscode's document](https://github.com/denoland/vscode_deno/blob/main/docs/ImportCompletions.md)", "type": "array", "default": ["https://deno.land/", "https://x.nest.land/", "https://envoy.now.sh/"], "order": 17, "items": {"type": "string"}}}}}}}}, "path": {"title": "Deno path", "description": "Path to the deno executable.\uff08ex. `/usr/bin/deno`, `C:\\Program Files\\deno\\deno.exe`\uff09", "type": "string", "default": "", "order": 10}}, "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.2.0/tarball"}}, "1.1.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.1.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "dependencies": {"atom-languageclient": "^1.0.7"}, "configSchema": {"lspFlags": {"title": "lsp flags", "description": "This setting is based on [vscode extention](https://github.com/denoland/vscode_deno)", "type": "object", "order": 1, "properties": {"enable": {"title": "Enables language server", "type": "boolean", "default": true, "order": 2}, "lint": {"title": "Enables lint", "type": "boolean", "default": true, "order": 3}, "unstable": {"title": "Enables unstable", "type": "boolean", "default": false, "order": 4}, "importMap": {"title": "Path to import-map", "description": "Relative path from the project root (ex. `./import-map.json`)", "type": "string", "default": "", "order": 5}, "config": {"title": "Path to tsconfig", "description": "Relative path from the project root (ex. `./tsconfig.json`)", "type": "string", "default": "", "order": 6}, "codeLens": {"title": "code lens", "type": "object", "order": 7, "properties": {"implementations": {"title": "Enables implementations", "type": "boolean", "default": true, "order": 8}, "references": {"title": "Enables references", "type": "boolean", "default": true, "order": 9}, "referencesAllFunctions": {"title": "Enables references all functions", "type": "boolean", "default": true, "order": 10}}}, "suggest": {"title": "suggest", "type": "object", "order": 11, "properties": {"autoImports": {"title": "Enables auto imports", "type": "boolean", "default": true, "order": 12}, "completeFunctionCalls": {"title": "Enables complete function calls", "type": "boolean", "default": true, "order": 13}, "names": {"title": "Enables names", "type": "boolean", "default": true, "order": 14}, "paths": {"title": "Enables paths", "type": "boolean", "default": true, "order": 15}, "imports": {"title": "imports", "type": "object", "order": 16, "properties": {"hosts": {"title": "List of hosts", "description": "Controls which hosts are enabled for import suggestions. See [vscode's document](https://github.com/denoland/vscode_deno/blob/main/docs/ImportCompletions.md)", "type": "array", "default": ["https://deno.land/"], "order": 17, "items": {"type": "string"}}}}}}}}, "path": {"title": "Deno path", "description": "Path to the deno executable.\uff08ex. `/usr/bin/deno`, `C:\\Program Files\\deno\\deno.exe`\uff09", "type": "string", "default": "", "order": 10}}, "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.1.0/tarball"}}, "1.0.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.0.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "dependencies": {"atom-languageclient": "^1.0.7"}, "configSchema": {"lspFlags": {"title": "lsp flags", "description": "This setting is based on [vscode extention](https://github.com/denoland/vscode_deno)", "type": "object", "order": 1, "properties": {"enable": {"title": "Enables language server", "type": "boolean", "default": true, "order": 2}, "codeLens": {"type": "object", "order": 3, "properties": {"implementations": {"title": "Enables code lens implementations", "type": "boolean", "default": true, "order": 4}, "references": {"title": "Enables code lens references", "type": "boolean", "default": true, "order": 5}}}, "lint": {"title": "Enables lint", "type": "boolean", "default": true, "order": 6}, "importMap": {"title": "Path to import-map", "description": "Relative path from the project root (ex. `./import-map/json`)", "type": "string", "default": "", "order": 7}, "config": {"title": "Path to tsconfig", "description": "Relative path from the project root (ex. `./tsconfig.json`)", "type": "string", "default": "", "order": 8}, "unstable": {"title": "Enables unstable", "type": "boolean", "default": false, "order": 9}}}, "path": {"title": "Deno path", "description": "Path to the deno executable.\uff08ex. `/usr/bin/deno`, `C:\\Program Files\\deno\\deno.exe`\uff09", "type": "string", "default": "", "order": 10}}, "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/1.0.0/tarball"}}, "0.1.2": {"name": "atom-ide-deno", "main": "./lib/main", "version": "0.1.2", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "dependencies": {"atom-languageclient": "^1.0.7"}, "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/0.1.2/tarball"}}, "0.1.1": {"name": "atom-ide-deno", "main": "./lib/main", "version": "0.1.1", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "dependencies": {"atom-languageclient": "^1.0.7"}, "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/0.1.1/tarball"}}, "0.1.0": {"name": "atom-ide-deno", "main": "./lib/main", "version": "0.1.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "dependencies": {"atom-languageclient": "^1.0.7"}, "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "code-format.range": {"versions": {"0.1.0": "provideCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}}, "dist": {"tarball": "https://www.atom.io/api/packages/atom-ide-deno/versions/0.1.0/tarball"}}}, "readme": "Translations:\n[English (en)](https://github.com/ayame113/atom-ide-deno/blob/main/README.md)\n[\u65e5\u672c\u8a9e (ja)](https://github.com/ayame113/atom-ide-deno/blob/main/README_ja.md)\n\n# atom-ide-deno\n\n[![CI](https://github.com/ayame113/atom-ide-deno/actions/workflows/CI.yml/badge.svg)](https://github.com/ayame113/atom-ide-deno/actions/workflows/CI.yml)\n[![Dependency Status](https://david-dm.org/ayame113/atom-ide-deno.svg)](https://david-dm.org/ayame113/atom-ide-deno)\n[![apm](https://img.shields.io/apm/dm/atom-ide-deno.svg)](https://atom.io/packages/atom-ide-deno)\n[![apm](https://img.shields.io/apm/v/atom-ide-deno.svg)](https://atom.io/packages/atom-ide-deno)\n\nJavascript and TypeScript language support for Atom-IDE, powered by the deno\nlanguage server.\n\nThis is a package produced by the community (not the deno team).\n\n![screen shot](https://raw.githubusercontent.com/ayame113/atom-ide-deno/main/screenshot/1.png)\n\n## How to use\n\n1. install [deno](https://deno.land/) 1.6 or higher\n2. install this package\n3. install [atom-ide-base](https://atom.io/packages/atom-ide-base) package\n\n> \u26a0\ufe0f `atom-ide-ui` package has moved to `atom-ide-base` package.\n\n> \u26a0\ufe0f The `atom-ide-javascript` package is for Node.js. It has nothing to do with\n> this extension.\n\nPlease see [here](./docs/) to complete setting.\n\nPlease see [here](https://atom-community.io/) for atom-IDE.\n\n## Installation\n\nSettings > Install > search `atom-ide-deno` > install button\n\nor run the following from the command line,\n\n```\napm install atom-ide-deno\n```\n\n## function\n\nOnly features available in both the\n[atom-languageclient implementation list](https://github.com/atom-community/atom-languageclient#capabilities)\nand the\n[deno implementation list](https://github.com/denoland/deno/issues/8643#issue-758171107)\nare available.\n\n## settings\n\nThe configuration of the settings is similar to\n[vscode_deno](https://github.com/denoland/vscode_deno).\n\n- Auto config for Deno and Node.js:\n  - You can freely combine the runtime (Deno or Node.js), linter (deno_lint or\n    eslint), and formatter (deno_fmt or prettier). Please note that this rewrite\n    your settings. This is disabled by default.\n    ![auto config](https://raw.githubusercontent.com/ayame113/atom-ide-deno/main/screenshot/auto_config.png)\n- lsp flags\n  - Enables language server: Whether to turn on Language Server\n  - Enables code lens implementations: Code lens settings (currently not\n    supported by Atom)\n  - Enables code lens references: Code lens settings (currently not supported by\n    Atom)\n  - Enables lint: Whether to enable lint\n  - Path to import-map: File path to import-map (relative path is resolved based\n    on the project folder)\n  - Path to tsconfig: File path to tsconfig (relative path is resolved based on\n    the project folder)\n  - Enables unstable: Whether to use unstable APIs for code type checking\n  - Deno path: Path to the Deno executable\n\n## tips\n\n### How to write tsconfig.json to enable dom in lsp\n\n```\n{\n  \"compilerOptions\": {\n    \"allowJs\": true,\n    \"esModuleInterop\": true,\n    \"experimentalDecorators\": true,\n    \"inlineSourceMap\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"react\",\n    \"lib\": [\"deno.window\", \"dom\", \"esnext\"],\n    \"module\": \"esnext\",\n    \"strict\": true,\n    \"target\": \"esnext\",\n    \"useDefineForClassFields\": true\n  }\n}\n```\n\n### How to write an importMap that matches the root to the project folder (place it directly under the project folder)\n\n```\n{\n\t\"imports\": {\n\t\t\"/\": \"./\",\n\t\t\"./\": \"./\"\n\t}\n}\n```\n\n### Use different settings for each project\n\nPlease use external packages such as\n[project-config](https://atom.io/packages/project-config) and\n[atomic-management](https://atom.io/packages/atomic-management).\n\n### Debug mode\n\nOpen the console with `ctrl-shift-i` and enter the following command.\n\n```\natom.packages.activePackages['atom-ide-deno'].mainModule.isDebug = true\n```\n\n> \u26a0\ufe0f After editing the importMap or tsconfig, either manually restart the editor\n> or edit the options and restart the LSP.\n\n## Contribution\n\nFeel free to contribute. Feel free to contact us if you would like to take over\nthe development of this package.\n\n## License\n\nIt is an MIT license.\n", "metadata": {"name": "atom-ide-deno", "main": "./lib/main", "version": "1.26.0", "description": "JavaScript and TypeScript language support with deno for Atom-IDE", "keywords": ["deno", "JavaScript", "TypeScript", "language server", "IDE"], "repository": "https://github.com/ayame113/atom-ide-deno", "license": "MIT", "engines": {"atom": ">=1.0.0 <2.0.0"}, "activationHooks": ["language-typescript:grammar-used", "language-javascript:grammar-used", "language-json:grammar-used", "language-gfm:grammar-used"], "package-deps": ["atom-ide-base"], "scripts": {"check": "tsc --noEmit -p ./lib/tsconfig.json", "format": "deno fmt --ignore=./node_modules", "test.format": "deno fmt --ignore=./node_modules --check", "lint": "deno lint --ignore=./node_modules", "test.lint": "deno lint --ignore=./node_modules", "test": "atom --test spec"}, "dependencies": {"atom-ide-markdown-service": "^2.1.0", "atom-languageclient": "^1.16.1", "atom-package-deps": "^8.0.0", "atom-ts-transpiler": "^1.5.3", "typescript": "^4.7.3"}, "devDependencies": {"@types/atom": "^1.40.11", "@types/node": "^17.0.41", "atom-select-list": "^0.8.1", "deno-bin": "^1.22.2", "vscode-languageserver-protocol": "^3.17.1"}, "atomTranspilers": [{"transpiler": "atom-ts-transpiler", "glob": "{!(node_modules)/**/,}*.ts?(x)"}], "consumedServices": {"linter-indie": {"versions": {"2.0.0": "consumeLinterV2"}}, "datatip": {"versions": {"0.1.0": "consumeDatatip"}}, "consumedServices": {"console": {"versions": {"0.1.0": "consumeConsole"}}}, "signature-help": {"versions": {"0.1.0": "consumeSignatureHelp"}}, "atom-ide-busy-signal": {"versions": {"0.1.0": "consumeBusySignal"}}, "status-bar": {"versions": {"^1.0.0": "consumeStatusBar"}}}, "providedServices": {"autocomplete.provider": {"versions": {"2.0.0": "provideAutocomplete"}}, "definitions": {"versions": {"0.1.0": "provideDefinitions"}}, "outline-view": {"versions": {"0.1.0": "provideOutlines"}}, "find-references": {"versions": {"0.1.0": "provideFindReferences"}}, "__code-format.range": {"versions": {"0.1.0": "provideRangeCodeFormat"}}, "__code-format.file": {"versions": {"0.1.0": "provideFileCodeFormat"}}, "__code-format.onType": {"versions": {"0.1.0": "provideOnTypeCodeFormat"}}, "__code-format.onSave": {"versions": {"0.1.0": "provideOnSaveCodeFormat"}}, "code-highlight": {"versions": {"0.1.0": "provideCodeHighlight"}}, "code-actions": {"versions": {"0.1.0": "provideCodeActions"}}, "nuclide-refactor": {"__comment": "I don't think there are any packages that use this feature anymore ...", "versions": {"0.0.0": "provideRefactor"}}, "debugger.provider": {"description": "deno debugger", "versions": {"0.0.0": "createDebuggerProvider"}}, "call-hierarchy": {"versions": {"0.1.0": "provideCallHierarchy"}}}}}
{"extends": "./tsconfig.json", "include": ["deno"], "exclude": [], "compilerOptions": {"rootDir": "./deno", "lib": ["es2020", "DOM"], "paths": {"increase/_shims/*": ["deno/_shims/*"], "increase": ["deno/index.ts"], "increase/*": ["deno/*"], "digest-fetch": ["./typings/digest-fetch"]}, "noEmit": true, "declaration": true, "declarationMap": true, "outDir": "deno", "pretty": true, "sourceMap": true}}
{"out": ["/share/vscode/extensions/denoland.vscode-deno/CHANGELOG.md", "/share/vscode/extensions/denoland.vscode-deno/LICENSE.txt", "/share/vscode/extensions/denoland.vscode-deno/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/.bin/mkdirp", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/.bin/rimraf", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/.bin/semver", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/.package-lock.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@tootallnate/once/dist/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@tootallnate/once/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@types/semver/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@types/semver/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@types/semver/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@types/vscode/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@types/vscode/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/@types/vscode/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/agent-base/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/agent-base/dist/src/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/agent-base/dist/src/promisify.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/agent-base/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/balanced-match/LICENSE.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/balanced-match/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/balanced-match/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/balanced-match/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/big-integer/BigInteger.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/big-integer/BigInteger.min.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/big-integer/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/big-integer/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/big-integer/bower.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/big-integer/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/.npmignore", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/README.markdown", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/example/buf.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/example/parse.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/example/stream.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/lib/vars.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/perf/loop.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/perf/small.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/bu.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/deferred.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/dots.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/eof.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/flush.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/from_buffer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/get_buffer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/immediate.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/interval.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/into_buffer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/into_stream.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/loop.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/loop_scan.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/lu.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/negbs.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/negls.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/nested.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/not_enough_buf.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/not_enough_parse.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/parse.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/peek.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/pipe.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/posbs.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/posls.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/scan.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/scan_buf.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/scan_buf_null.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/skip.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/binary/test/split.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/changelog.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/browser/bluebird.core.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/browser/bluebird.core.min.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/browser/bluebird.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/browser/bluebird.min.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/any.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/assert.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/async.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/bind.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/bluebird.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/call_get.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/cancel.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/catch_filter.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/context.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/debuggability.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/direct_resolve.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/each.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/errors.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/es5.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/filter.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/finally.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/generators.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/join.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/map.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/method.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/nodeback.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/nodeify.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/promise.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/promise_array.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/promisify.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/props.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/queue.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/race.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/reduce.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/schedule.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/settle.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/some.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/synchronous_inspection.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/thenables.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/timers.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/using.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/js/release/util.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/bluebird/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/brace-expansion/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/brace-expansion/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/brace-expansion/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/brace-expansion/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffer-indexof-polyfill/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffer-indexof-polyfill/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffer-indexof-polyfill/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffer-indexof-polyfill/init-buffer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffer-indexof-polyfill/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffer-indexof-polyfill/test/indexof.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffers/README.markdown", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffers/examples/slice.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffers/examples/splice.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffers/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffers/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/buffers/test/buffers.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/chainsaw/.npmignore", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/chainsaw/README.markdown", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/chainsaw/examples/add_do.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/chainsaw/examples/prompt.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/chainsaw/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/chainsaw/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/chainsaw/test/chainsaw.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/concat-map/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/concat-map/README.markdown", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/concat-map/example/map.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/concat-map/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/concat-map/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/concat-map/test/map.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/core-util-is/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/core-util-is/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/core-util-is/lib/util.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/core-util-is/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/debug/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/debug/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/debug/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/debug/src/browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/debug/src/common.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/debug/src/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/debug/src/node.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/duplexer2/LICENSE.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/duplexer2/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/duplexer2/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/duplexer2/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fs.realpath/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fs.realpath/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fs.realpath/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fs.realpath/old.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fs.realpath/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/examples/filter-pipe.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/examples/pipe.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/examples/reader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/examples/symlink-write.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/fstream.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/abstract.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/collect.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/dir-reader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/dir-writer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/file-reader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/file-writer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/get-type.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/link-reader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/link-writer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/proxy-reader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/proxy-writer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/reader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/socket-reader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/lib/writer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/node_modules/.bin/rimraf", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/node_modules/rimraf/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/node_modules/rimraf/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/node_modules/rimraf/bin.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/node_modules/rimraf/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/node_modules/rimraf/rimraf.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/fstream/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/glob/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/glob/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/glob/changelog.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/glob/common.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/glob/glob.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/glob/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/glob/sync.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/graceful-fs/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/graceful-fs/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/graceful-fs/clone.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/graceful-fs/graceful-fs.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/graceful-fs/legacy-streams.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/graceful-fs/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/graceful-fs/polyfills.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/http-proxy-agent/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/http-proxy-agent/dist/agent.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/http-proxy-agent/dist/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/http-proxy-agent/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/https-proxy-agent/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/https-proxy-agent/dist/agent.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/https-proxy-agent/dist/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/https-proxy-agent/dist/parse-proxy-response.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/https-proxy-agent/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inflight/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inflight/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inflight/inflight.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inflight/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inherits/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inherits/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inherits/inherits.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inherits/inherits_browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/inherits/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/isarray/.npmignore", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/isarray/Makefile", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/isarray/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/isarray/component.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/isarray/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/isarray/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/isarray/test.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/listenercount/.npmignore", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/listenercount/LICENSE.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/listenercount/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/listenercount/circle.yml", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/listenercount/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/listenercount/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/listenercount/test/test.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/lru-cache/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/lru-cache/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/lru-cache/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/lru-cache/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimatch/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimatch/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimatch/minimatch.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimatch/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/example/parse.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/readme.markdown", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/all_bool.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/bool.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/dash.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/default_bool.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/dotted.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/kv_short.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/long.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/num.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/parse.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/parse_modified.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/proto.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/short.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/stop_early.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/unknown.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/minimist/test/whitespace.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/mkdirp/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/mkdirp/bin/cmd.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/mkdirp/bin/usage.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/mkdirp/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/mkdirp/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/mkdirp/readme.markdown", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/ms/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/ms/license.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/ms/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/ms/readme.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/once/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/once/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/once/once.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/once/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/path-is-absolute/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/path-is-absolute/license", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/path-is-absolute/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/path-is-absolute/readme.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/process-nextick-args/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/process-nextick-args/license.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/process-nextick-args/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/process-nextick-args/readme.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/GOVERNANCE.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/doc/wg-meetings/2015-01-30.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/duplex-browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/duplex.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/_stream_duplex.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/_stream_passthrough.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/_stream_readable.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/_stream_transform.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/_stream_writable.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/internal/streams/BufferList.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/internal/streams/destroy.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/internal/streams/stream-browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/lib/internal/streams/stream.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/passthrough.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/readable-browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/readable.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/transform.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/writable-browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/readable-stream/writable.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/rimraf/CHANGELOG.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/rimraf/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/rimraf/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/rimraf/bin.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/rimraf/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/rimraf/rimraf.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/safe-buffer/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/safe-buffer/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/safe-buffer/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/safe-buffer/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/CHANGELOG.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/bin/semver.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/classes/comparator.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/classes/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/classes/range.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/classes/semver.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/clean.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/cmp.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/coerce.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/compare-build.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/compare-loose.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/compare.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/diff.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/eq.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/gt.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/gte.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/inc.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/lt.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/lte.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/major.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/minor.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/neq.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/parse.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/patch.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/prerelease.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/rcompare.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/rsort.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/satisfies.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/sort.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/functions/valid.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/internal/constants.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/internal/debug.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/internal/identifiers.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/internal/parse-options.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/internal/re.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/preload.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/range.bnf", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/gtr.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/intersects.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/ltr.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/max-satisfying.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/min-satisfying.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/min-version.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/outside.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/simplify.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/subset.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/to-comparators.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/semver/ranges/valid.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/setimmediate/LICENSE.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/setimmediate/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/setimmediate/setImmediate.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/string_decoder/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/string_decoder/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/string_decoder/lib/string_decoder.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/string_decoder/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/.npmignore", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/README.markdown", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/examples/json.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/examples/leaves.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/examples/negative.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/examples/stringify.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/circular.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/date.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/equal.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/instance.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/interface.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/json.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/leaves.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/mutability.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/negative.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/obj.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/stop.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/stringify.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/traverse/test/super_deep.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/.circleci/config.yml", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/Buffer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/BufferStream.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/Decrypt.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/NoopStream.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/Open/directory.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/Open/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/Open/unzip.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/PullStream.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/extract.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/parse.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/parseDateTime.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/parseExtraField.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/lib/parseOne.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/unzipper/unzip.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/util-deprecate/History.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/util-deprecate/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/util-deprecate/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/util-deprecate/browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/util-deprecate/node.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/util-deprecate/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/License.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/browser/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/browser/ril.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/api.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/cancellation.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/connection.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/disposable.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/encoding.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/events.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/is.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/linkedMap.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/messageBuffer.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/messageReader.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/messageWriter.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/messages.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/ral.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/common/semaphore.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/node/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/lib/node/ril.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/node.cmd", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/node.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-jsonrpc/thirdpartynotices.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/License.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/browser/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/api.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/callHierarchy.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/client.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/codeConverter.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/colorProvider.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/commonClient.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/configuration.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/declaration.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/fileOperations.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/foldingRange.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/implementation.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/linkedEditingRange.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/progress.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/progressPart.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/protocolCallHierarchyItem.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/protocolCodeAction.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/protocolCodeLens.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/protocolCompletionItem.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/protocolConverter.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/protocolDiagnostic.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/protocolDocumentLink.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/selectionRange.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/semanticTokens.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/typeDefinition.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/utils/async.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/utils/is.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/utils/uuid.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/common/workspaceFolders.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/node/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/node/processes.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/lib/node/terminateProcess.sh", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/node.cmd", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/node.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageclient/thirdpartynotices.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/License.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/browser.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/browser/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/api.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/connection.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/messages.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.callHierarchy.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.colorProvider.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.configuration.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.declaration.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.fileOperations.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.foldingRange.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.implementation.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.linkedEditingRange.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.moniker.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.selectionRange.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.showDocument.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.typeDefinition.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/protocol.workspaceFolders.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/common/utils/is.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/lib/node/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/node.cmd", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/node.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-protocol/thirdpartynotices.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-types/License.txt", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-types/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-types/lib/esm/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-types/lib/umd/main.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-languageserver-types/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/CHANGELOG.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/out/del.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/out/download.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/out/index.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/out/request.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/out/runTest.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/out/util.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/vscode-test/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/wrappy/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/wrappy/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/wrappy/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/wrappy/wrappy.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/yallist/LICENSE", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/yallist/README.md", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/yallist/iterator.js", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/yallist/package.json", "/share/vscode/extensions/denoland.vscode-deno/client/node_modules/yallist/yallist.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/commands.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/constants.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/content_provider.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/debug_config_provider.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/extension.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/initialize_project.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/lsp_extensions.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/multi_step_input.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/notification_handlers.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/server_info.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/status_bar.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/tasks.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/ts_api.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/util.js", "/share/vscode/extensions/denoland.vscode-deno/client/out/welcome.js", "/share/vscode/extensions/denoland.vscode-deno/client/package.json", "/share/vscode/extensions/denoland.vscode-deno/deno.png", "/share/vscode/extensions/denoland.vscode-deno/docs/ImportCompletions.md", "/share/vscode/extensions/denoland.vscode-deno/docs/tasks.md", "/share/vscode/extensions/denoland.vscode-deno/docs/testing.md", "/share/vscode/extensions/denoland.vscode-deno/docs/workspaceFolders.md", "/share/vscode/extensions/denoland.vscode-deno/media/welcome.css", "/share/vscode/extensions/denoland.vscode-deno/media/welcome.js", "/share/vscode/extensions/denoland.vscode-deno/node_modules/typescript-deno-plugin/README.md", "/share/vscode/extensions/denoland.vscode-deno/node_modules/typescript-deno-plugin/out/index.js", "/share/vscode/extensions/denoland.vscode-deno/node_modules/typescript-deno-plugin/package.json", "/share/vscode/extensions/denoland.vscode-deno/package.json", "/share/vscode/extensions/denoland.vscode-deno/schemas/deno-import-intellisense.schema.json", "/share/vscode/extensions/denoland.vscode-deno/schemas/import_map.schema.json", "/share/vscode/extensions/denoland.vscode-deno/screenshots/basic_usage.gif", "/share/vscode/extensions/denoland.vscode-deno/screenshots/deno_test_code_lens.png", "/share/vscode/extensions/denoland.vscode-deno/screenshots/workspace_folder_config.png"]}
{"query": "classes 'luogo'", "nextPageQuery": null, "totalCount": 2, "searchHits": [{"metadata": {"id": 1624, "remoteId": "286a999ca41afee1d6556c9a0eddcb74", "classIdentifier": "luogo", "class": "http://www.comune.aldeno.tn.it/api/opendata/v2/classes/luogo", "ownerId": 1426, "ownerName": {"ita-IT": "Stefania Perini"}, "mainNodeId": 1192, "sectionIdentifier": "standard", "stateIdentifiers": ["ez_lock.not_locked", "albotelematico.visibile"], "published": "2014-04-09T15:16:29+02:00", "modified": "2014-04-09T15:16:29+02:00", "languages": ["ita-IT"], "name": {"ita-IT": "Mercato"}, "parentNodes": [614], "link": "http://www.comune.aldeno.tn.it/api/opendata/v2/content/read/1624"}, "data": {"ita-IT": {"title": "Mercato", "abstract": "<p>Al centro del paese, nella piazza adiacente la chiesa parrocchiale di San Modesto (1776), ogni luned\u00ec mattina, dalle ore 8.00 alle ore 13.00, si svolge un piccolo ma pittoresco mercato.</p>", "descrizione": "", "tipo_luogo": [], "geo": {"latitude": 0, "longitude": 0, "address": ""}, "image": {"filename": "mercato.jpg", "url": "/var/aldeno/storage/images/territorio/luoghi-e-punti-di-interesse/cosa-puoi-visitare2/mercato/14937-1-ita-IT/Mercato.jpg", "alt": "Fotografia mercato", "mime_type": "image/jpeg", "width": "450", "height": "280"}, "comune": [], "tags": [], "fonte": null, "indirizzo": null, "url": null, "email": null, "telefono": null}}}, {"metadata": {"id": 2060, "remoteId": "9fcd30af29159607ee20f0f5a2522788", "classIdentifier": "luogo", "class": "http://www.comune.aldeno.tn.it/api/opendata/v2/classes/luogo", "ownerId": 1426, "ownerName": {"ita-IT": "Stefania Perini"}, "mainNodeId": 1624, "sectionIdentifier": "standard", "stateIdentifiers": ["ez_lock.not_locked", "albotelematico.visibile"], "published": "2014-04-16T16:48:34+02:00", "modified": "2014-06-06T12:10:42+02:00", "languages": ["ita-IT"], "name": {"ita-IT": "Strada del vino e dei sapori del Trentino"}, "parentNodes": [614], "link": "http://www.comune.aldeno.tn.it/api/opendata/v2/content/read/2060"}, "data": {"ita-IT": {"title": "Strada del vino e dei sapori del Trentino", "abstract": "<p>La Strada del vino e dei sapori del Trentino \u00e8 un percorso ideale, una raccolta di prodotti di eccellenza, un mondo di piaceri per il palato. Paesaggi assai diversi si susseguono cos\u00ec come i prodotti da scoprire, che spaziano dal vino ai formaggi, dai salumi alle trote, dalla frutta agli ortaggi, passando per l'olio.</p>", "descrizione": "<p>Per consultare la brochure <a href=\"http://issuu.com/stradavinotrentino/docs/libretto_vino_bassa\" target=\"_blank\">clicca qu\u00ec <i class=\"fa fa-external-link\"></i> </a></p><p>Per vedere la mappa del trentino centrale <a href=\"http://issuu.com/stradavinotrentino/docs/mappa_def_tn_centrale\" target=\"_blank\">clicca qu\u00ec <i class=\"fa fa-external-link\"></i> </a></p><p>Per visitare il sito <a href=\"/Comune/Comunicazione/Link-utili/Strada-del-vino\" target=\"_self\">clicca qu\u00ec</a></p>", "tipo_luogo": [{"id": 830, "remoteId": "5ee044adf48a808876a155480b1db120", "classIdentifier": "tipo_luogo", "class": "http://www.comune.aldeno.tn.it/api/opendata/v2/classes/tipo_luogo", "languages": ["ita-IT"], "name": {"ita-IT": "Sentieri e itinerari"}, "link": "http://www.comune.aldeno.tn.it/api/opendata/v2/content/read/830", "mainNodeId": "707"}], "geo": {"latitude": 45.980671, "longitude": 11.091379, "address": "aldeno"}, "image": {"filename": "strada_vino.jpg", "url": "/var/aldeno/storage/images/territorio/luoghi-e-punti-di-interesse/cosa-puoi-visitare2/strada-del-vino-e-dei-sapori-del-trentino/17816-1-ita-IT/Strada-del-vino-e-dei-sapori-del-Trentino.jpg", "alt": "logo", "mime_type": "image/jpeg", "width": "280", "height": "236"}, "comune": [], "tags": [], "fonte": null, "indirizzo": null, "url": null, "email": null, "telefono": null}}}], "facets": []}
{"tasks": {"test": "deno lint && deno fmt --check && deno test --no-check", "cache": "deno cache --lock=deno.lock --lock-write mod.test.ts"}, "fmt": {"include": ["./"], "lineWidth": 100, "singleQuote": true, "semiColons": false}}
{"htmls": ["<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"1\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:33%;\" data-marpit-advanced-background=\"background\" data-marpit-advanced-background-split=\"right\"><div data-marpit-advanced-background-container=\"true\" data-marpit-advanced-background-direction=\"horizontal\"><figure style=\"background-image:url(&quot;https://brandeps.com/icon-download/D/Deno-icon-vector-02.svg&quot;);background-size:auto 200px;\"></figure></div></section></foreignObject><foreignObject width=\"67%\" height=\"720\"><section id=\"1\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"1\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:33%;\" data-marpit-advanced-background=\"content\" data-marpit-advanced-background-split=\"right\">\n<h1 id=\"deno-%E3%81%AE%E7%B4%B9%E4%BB%8B\">Deno \u306e\u7d39\u4ecb</h1>\n\n<h2 id=\"refined-server-side-javascript-runtime\">refined server-side JavaScript runtime</h2>\n</section>\n</foreignObject><foreignObject width=\"1280\" height=\"720\" data-marpit-advanced-background=\"pseudo\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"1\" data-marpit-pagination-total=\"21\" style=\"\" data-marpit-advanced-background=\"pseudo\" data-marpit-advanced-background-split=\"right\"></section></foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"2\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"2\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<p>\u6700\u8fd1\u4f5c\u308a\u76f4\u3057\u305f\u3053\u306e HomePage \u306f\u4ee5\u4e0b\u306e\u6280\u8853\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002<br />\n<br /></p>\n<p>Agenda</p>\n<ul>\n<li>Deno \u306b\u3064\u3044\u3066</li>\n<li>Deno Deploy \u306b\u3064\u3044\u3066</li>\n<li>Fresh (Web framework) \u306b\u3064\u3044\u3066</li>\n</ul>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"3\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"3\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h1 id=\"deno-%E3%81%A8%E3%81%AF\">Deno \u3068\u306f</h1>\n<p>Node.js \u306e\u4f5c\u8005\u304c\u4f5c\u3063\u305f\u65b0\u3057\u3044 JavaScript Runtime</p>\n<ul>\n<li>\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 TypeScript \u304c\u4f7f\u3048\u308b</li>\n<li>\u30d6\u30e9\u30a6\u30b6\u3068\u3088\u308a\u4e92\u63db\u6027\u306e\u3042\u308b API</li>\n</ul>\n<p><a href=\"https://deno.com/runtime\">https://deno.com/runtime</a></p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"4\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"4\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h2 id=\"first-class-typescrpt-support\">First-class Typescrpt support</h2>\n<pre is=\"marp-pre\" data-auto-scaling=\"downscale-only\"><code class=\"language-sh\">deno run main.ts\n</code></pre>\n<h2 id=\"safe-by-default\">Safe by default</h2>\n<pre is=\"marp-pre\" data-auto-scaling=\"downscale-only\"><code class=\"language-sh\"><span class=\"hljs-comment\"># NG</span>\ndeno run readYourFiles.ts\n<span class=\"hljs-comment\"># OK</span>\ndeno run --allow-read readYourFiles.ts\n</code></pre>\n<h2 id=\"no-pacakgejson\">No pacakge.json</h2>\n<pre is=\"marp-pre\" data-auto-scaling=\"downscale-only\"><code class=\"language-typescript\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> preact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;https://esm.sh/preact@10.10.6&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { useCallback, useEffect } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;https://esm.sh/preact@10.10.6/hooks&quot;</span>;\n</code></pre>\n<p>(importMap.json \u3067\u5927\u898f\u6a21\u30a2\u30d7\u30ea\u5411\u3051\u306e\u4f9d\u5b58\u7ba1\u7406\u3082\u53ef\u80fd)</p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"5\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"5\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h1 id=\"why-deno\">Why Deno?</h1>\n<p>Node.js \u306f JavaScript \u306e\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5b9f\u884c\u74b0\u5883\u3068\u3057\u3066\u751f\u307e\u308c\u305f\u304c \u73fe\u5728\u306e JS<br />\n\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u306b\u305d\u3050\u308f\u306a\u3044\u90e8\u5206\u304c\u5b58\u5728\u3059\u308b</p>\n<ul>\n<li>commonJS</li>\n<li>Promise \u306e\u975e\u30b5\u30dd\u30fc\u30c8</li>\n<li>Brower Runtime \u3068\u4e92\u63db\u6027\u306e\u306a\u3044 API</li>\n</ul>\n<br />\n<p>JavaScript \u3067\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u304c\u66f8\u3051\u308b\u3068\u601d\u3063\u305f\u3089\u3001\u5fae\u5999\u306b\u9055\u3046\u65b9\u8a00\u3092\u66f8\u3044\u3066\u3044\u308b\u611f\u899a...<br />\n(\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u306a\u3069\u3067\u5bfe\u5fdc\u53ef\u80fd\u306a\u90e8\u5206\u3082\u3042\u308b\u304c\u3001\u4e8b\u524d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084 build<br />\n\u6642\u9593\u304c\u5897\u3048\u958b\u767a\u4f53\u9a13\u306b\u5f71\u97ff\u3059\u308b)</p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"6\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"6\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<p>Deno \u3092\u4f7f\u3048\u3070...</p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"7\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"7\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<p>Deno \u3092\u4f7f\u3048\u3070...</p>\n<ul>\n<li>ESModule \u304c\u6a19\u6e96</li>\n<li>\u6700\u65b0\u306e TypeScript(EcmaScript)\u4ed5\u69d8\u306b\u6e96\u62e0</li>\n<li>\u30d3\u30eb\u30c8\u30a4\u30f3\u958b\u767a\u30c4\u30fc\u30eb (linter, transpiler, formatter, task runner)</li>\n<li><a href=\"https://deno.land/manual@v1.32.4/runtime/web_platform_apis\">\u30d6\u30e9\u30a6\u30b6\u4e92\u63db\u306e API</a>\n<ul>\n<li>fetch \u3068\u304b</li>\n<li>\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u7279\u6709\u306e\u6a5f\u80fd\u306f <code>Deno</code> \u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u306b\u96c6\u7d04 (FileSystem \u306a\u3069)<br />\n\u3000\u3053\u308c\u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3059\u308c\u3070\u30d5\u30ed\u30f3\u30c8\u3068\u5171\u901a\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b</li>\n</ul>\n</li>\n</ul>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"8\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"8\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<p>\u3067\u3082\u3001Node.js\u3067\u66f8\u304b\u308c\u305f\u3053\u308c\u307e\u3067\u306e\u30b3\u30fc\u30c9\u8cc7\u7523\u306f\u4f7f\u3048\u306a\u3044\u3063\u3066\u3053\u3068...\uff1f</p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"9\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"9\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h2 id=\"node-polyfill-%E5%AF%BE%E5%BF%9C\">Node Polyfill \u5bfe\u5fdc</h2>\n<ul>\n<li>Node.js \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b</li>\n</ul>\n<p>\u3053\u306e\u30b5\u30a4\u30c8\u3067\u3082\u3001Markdown\u30b9\u30e9\u30a4\u30c9\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306b npm \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u307e\u3059\uff01</p>\n<pre is=\"marp-pre\" data-auto-scaling=\"downscale-only\"><code class=\"language-ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Marp</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;@marp-team/marp-core&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> marp = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Marp</span>();\n<span class=\"hljs-keyword\">const</span> { html, css } = marp.<span class=\"hljs-title function_\">render</span>(post.<span class=\"hljs-property\">content</span>, {\n  <span class=\"hljs-attr\">htmlAsArray</span>: <span class=\"hljs-literal\">true</span>,\n});\n\n</code></pre>\n<blockquote>\n<p>\u4f53\u611f\u3001Node.js\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3044\u3051\u308b<br />\n\u30d5\u30ed\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u305d\u306e\u307e\u307e\u3060\u3068\u7121\u7406\u306a\u78ba\u7387\u304c\u9ad8\u3044...(React Component\u3068\u304b)</p>\n</blockquote>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"10\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:33%;\" data-marpit-advanced-background=\"background\" data-marpit-advanced-background-split=\"right\"><div data-marpit-advanced-background-container=\"true\" data-marpit-advanced-background-direction=\"horizontal\"><figure style=\"background-image:url(&quot;https://brandeps.com/icon-download/D/Deno-icon-vector-02.svg&quot;);background-size:auto 200px;\"></figure></div></section></foreignObject><foreignObject width=\"67%\" height=\"720\"><section id=\"10\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"10\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:33%;\" data-marpit-advanced-background=\"content\" data-marpit-advanced-background-split=\"right\">\n<h1 id=\"deno-deploy-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">Deno Deploy \u306b\u3064\u3044\u3066</h1>\n</section>\n</foreignObject><foreignObject width=\"1280\" height=\"720\" data-marpit-advanced-background=\"pseudo\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"10\" data-marpit-pagination-total=\"21\" style=\"\" data-marpit-advanced-background=\"pseudo\" data-marpit-advanced-background-split=\"right\"></section></foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"11\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"11\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h2 id=\"deno-deploy-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6-1\">Deno Deploy \u306b\u3064\u3044\u3066</h2>\n<h3 id=\"%E9%80%9F%E3%81%84\">\u901f\u3044\uff01</h3>\n<ul>\n<li>Serverless Deno Edge Function\n<ul>\n<li>\u4e16\u754c\u5404\u5730\u306e\u30a8\u30c3\u30b8\u30b5\u30fc\u30d0\u30fc\u3067\u5b9f\u884c\u3055\u308c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u304c\u6700\u5c0f\u9650</li>\n</ul>\n</li>\n<li>Github \u9023\u643a</li>\n</ul>\n<p><a href=\"https://deno.com/deploy\">https://deno.com/deploy</a></p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"12\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"12\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h2 id=\"deno-deploy-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6-2\">Deno Deploy \u306b\u3064\u3044\u3066</h2>\n<h3 id=\"%E5%AE%89%E3%81%84\">\u5b89\u3044\uff01</h3>\n<ul>\n<li>0$\u30d7\u30e9\u30f3\u306e\u5185\u5bb9\n<ul>\n<li>\u7121\u6599\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\n<ul>\n<li>\u72ec\u81ea\u30c9\u30e1\u30a4\u30f3\u3082\u8a2d\u5b9a\u53ef</li>\n</ul>\n</li>\n<li>\u81ea\u52d5 HTTPS \u5316</li>\n<li>10 \u4e07 \u30ea\u30af\u30a8\u30b9\u30c8/\u65e5</li>\n<li>100 GiB outboud /\u6708</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://deno.com/deploy/pricing\">https://deno.com/deploy/pricing</a></p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"13\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"13\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h2 id=\"deno-deploy-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6-3\">Deno Deploy \u306b\u3064\u3044\u3066</h2>\n<h3 id=\"%E5%A4%9A%E6%A9%9F%E8%83%BD\">\u591a\u6a5f\u80fd\uff01</h3>\n<ul>\n<li>\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u306e\u30db\u30b9\u30c6\u30a3\u30f3\u30b0</li>\n<li>Deno.readFile API \u306e\u30b5\u30dd\u30fc\u30c8</li>\n</ul>\n<p>\u3053\u306e\u30d6\u30ed\u30b0\u3067\u3082\u3001Markdown \u30d5\u30a1\u30a4\u30eb\u3092 SSR \u3057\u3066\u8868\u793a\u3059\u308b\u306e\u306b Deno.readFile() API<br />\n\u3092\u4f7f\u7528\u3057\u3066\u307e\u3059\uff01</p>\n<pre is=\"marp-pre\" data-auto-scaling=\"downscale-only\"><code class=\"language-ts\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getPost</span>(<span class=\"hljs-params\">slug: <span class=\"hljs-built_in\">string</span></span>): <span class=\"hljs-title class_\">Promise</span>&lt;<span class=\"hljs-title class_\">Post</span>&gt; {\n  <span class=\"hljs-keyword\">const</span> text = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title class_\">Deno</span>.<span class=\"hljs-title function_\">readTextFile</span>(path.<span class=\"hljs-title function_\">join</span>(postsDir, <span class=\"hljs-string\">`<span class=\"hljs-subst\">${slug}</span>.md`</span>));\n  <span class=\"hljs-keyword\">const</span> { attrs, body } = front_matter.<span class=\"hljs-title function_\">extract</span>(text);\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">PostSchema</span>.<span class=\"hljs-title function_\">parse</span>({\n    ...(attrs <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">Post</span>),\n    <span class=\"hljs-attr\">slug</span>: slug,\n    <span class=\"hljs-attr\">content</span>: body,\n  });\n}\n</code></pre>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"14\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"14\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h2 id=\"deno-deploy-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6-4\">Deno Deploy \u306b\u3064\u3044\u3066</h2>\n<h3 id=\"%E5%A4%9A%E6%A9%9F%E8%83%BD-1\">\u591a\u6a5f\u80fd\uff01</h3>\n<p>\u4f7f\u3063\u305f\u3053\u3068\u306a\u3044\u3051\u3069\u3001\u3053\u3093\u306a\u6a5f\u80fd\u3082</p>\n<ul>\n<li><a href=\"https://deno.com/deploy/docs/runtime-broadcast-channel#example\">BroadcastChannel</a>\n<ul>\n<li>\u7570\u306a\u308b\u30bf\u30d6\u9593\u3067\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0 = \u30c1\u30e3\u30c3\u30c8\u304c\u4f5c\u308c\u308b</li>\n</ul>\n</li>\n<li><a href=\"https://deno.com/deploy/docs/runtime-sockets\">Sockets API</a>\n<ul>\n<li>TCP, TLS connection \u306b\u3088\u308a RDB \u304c\u4f7f\u7528\u53ef\u80fd(postgreSQL, MongoDB, etc)</li>\n</ul>\n</li>\n<li><a href=\"https://deno.com/deploy/docs/deployctl\">deployctl</a>\n<ul>\n<li>CLI\u304b\u3089 Deno Deploy</li>\n</ul>\n</li>\n</ul>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"15\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"15\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<p>\u305f\u3060\u3057...</p>\n<p><code>npm:~</code> \u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fnpm module\u3092\u542b\u3093\u3067\u3044\u308b\u3068 <code>deno bundle ...</code> \u304c\u4f7f\u3048\u306a\u3044</p>\n<p><code>deno compile</code> \u3067\u306f\u4f7f\u3048\u306a\u3044\u3060\u3051\u3067 <code>deno run</code> \u3067\u306f\u4f7f\u3048\u308b</p>\n<p><a href=\"https://deno.land/manual@v1.32.4/node/npm_specifiers#npm-specifiers\">https://deno.land/manual@v1.32.4/node/npm_specifiers#npm-specifiers</a></p>\n<p>= Deno Deploy \u306b\u30c7\u30d7\u30ed\u30a4\u51fa\u6765\u306a\u3044</p>\n<p>2023\u5e74Q1 \u306b\u5bfe\u5fdc\u3059\u308b\u4e88\u5b9a\u3089\u3057\u3044\u3068\u5642</p>\n<p><a href=\"https://github.com/GJZwiers/sentry_deno/issues/14\">https://github.com/GJZwiers/sentry_deno/issues/14</a></p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"16\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:33%;\" data-marpit-advanced-background=\"background\" data-marpit-advanced-background-split=\"right\"><div data-marpit-advanced-background-container=\"true\" data-marpit-advanced-background-direction=\"horizontal\"><figure style=\"background-image:url(&quot;https://camo.githubusercontent.com/4e0efa262c9df8dc1a327535f87a53a57a68b6073677dc17806acf10e26c4956/68747470733a2f2f66726573682e64656e6f2e6465762f6c6f676f2e737667&quot;);background-size:auto 200px;\"></figure></div></section></foreignObject><foreignObject width=\"67%\" height=\"720\"><section id=\"16\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"16\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:33%;\" data-marpit-advanced-background=\"content\" data-marpit-advanced-background-split=\"right\">\n<h1 id=\"fresh-%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">Fresh \u306b\u3064\u3044\u3066</h1>\n<h2 id=\"web-framework-for-preact-ssr\">Web framework for Preact SSR</h2>\n</section>\n</foreignObject><foreignObject width=\"1280\" height=\"720\" data-marpit-advanced-background=\"pseudo\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"16\" data-marpit-pagination-total=\"21\" style=\"\" data-marpit-advanced-background=\"pseudo\" data-marpit-advanced-background-split=\"right\"></section></foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"17\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:50%;\" data-marpit-advanced-background=\"background\" data-marpit-advanced-background-split=\"right\"><div data-marpit-advanced-background-container=\"true\" data-marpit-advanced-background-direction=\"horizontal\"><figure style=\"background-image:url(&quot;https://raw.githubusercontent.com/preactjs/preact/8b0bcc927995c188eca83cba30fbc83491cc0b2f/logo.svg?sanitize=true&quot;);background-size:auto 100px;\"></figure></div></section></foreignObject><foreignObject width=\"50%\" height=\"720\"><section id=\"17\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"17\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:50%;\" data-marpit-advanced-background=\"content\" data-marpit-advanced-background-split=\"right\">\n<h2 id=\"fresh\">Fresh</h2>\n<ul>\n<li>preact</li>\n<li>FileSystem based routing</li>\n<li>API routes</li>\n<li>Island Architecture</li>\n</ul>\n\n<p>preact\u3092\u4f7f\u3063\u3066\u308b\u4ee5\u5916\u306f\u4ed6\u306eSSR/SSG\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u4f3c\u305f\u3088\u3046\u306a\u6a5f\u80fd\u6027</p>\n</section>\n</foreignObject><foreignObject width=\"1280\" height=\"720\" data-marpit-advanced-background=\"pseudo\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"17\" data-marpit-pagination-total=\"21\" style=\"\" data-marpit-advanced-background=\"pseudo\" data-marpit-advanced-background-split=\"right\"></section></foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"18\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"18\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h1 id=\"island-architecture\">Island Architecture</h1>\n<p>fresh \u306e\u4ed6\u306b\u306f <a href=\"https://docs.astro.build/en/concepts/islands/\">astro</a> \u3068\u3044\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3082\u63a1\u7528\u3057\u3066\u3044\u308b\u3002</p>\n<ul>\n<li>SSR/SSG \u3092\u3059\u308b\u3068 zero JS \u306e HTML \u304c\u914d\u4fe1\u3055\u308c\u30da\u30fc\u30b8\u8aad\u307f\u8fbc\u307f\u304c\u65e9\u304f\u306a\u308b</li>\n<li>\u3060\u304c\u3001\u90e8\u5206\u7684\u306bJS\u3067\u52d5\u4f5c\u3059\u308b\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3082\u4f7f\u3044\u305f\u3044</li>\n<li>\u305d\u3053\u3067\u3001\u30da\u30fc\u30b8\u306e\u4e00\u90e8\u5206\u306e\u307f\u3092hydration\u3059\u308b\n<ul>\n<li>=&gt; \u90e8\u5206\u7684\u306b\u52d5\u7684\u306b\u3057\u3064\u3064\u6b8b\u308a\u306f\u9759\u7684\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u307e\u307e\u306a\u306e\u3067\u3001\u30da\u30fc\u30b8\u30ed\u30fc\u30c9\u901f\u5ea6\u306e\u4f4e\u4e0b\u3092\u6291\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b(\u3089\u3057\u3044)</li>\n</ul>\n</li>\n</ul>\n<p>\u203b hydration = \u9759\u7684\u306aHTML\u30da\u30fc\u30b8\u3092JS\u3092\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u3053\u3068\u3067\u52d5\u7684\u306b\u3059\u308b\u3053\u3068(<a href=\"https://en.wikipedia.org/wiki/Hydration_(web_development)\">wikipedia</a>)</p>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"19\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:50%;\" data-marpit-advanced-background=\"background\" data-marpit-advanced-background-split=\"right\"><div data-marpit-advanced-background-container=\"true\" data-marpit-advanced-background-direction=\"horizontal\"><figure style=\"background-image:url(&quot;https://i.gyazo.com/ce7cc97aa51e364af277fb24d04514db.png&quot;);background-size:contain;\"></figure></div></section></foreignObject><foreignObject width=\"50%\" height=\"720\"><section id=\"19\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"19\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;--marpit-advanced-background-split:50%;\" data-marpit-advanced-background=\"content\" data-marpit-advanced-background-split=\"right\">\n<p>\u3053\u306e\u30b5\u30a4\u30c8\u306b\u4f8b\u3048\u308b\u3068...</p>\n<ul>\n<li>\u8d64\u3044\u90e8\u5206\n<ul>\n<li>JS\u304chydrate\u3055\u308c\u305f\u52d5\u7684\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3</li>\n</ul>\n</li>\n<li>\u9752\u3044\u90e8\u5206\n<ul>\n<li>\u9ad8\u901f\u306b\u30ed\u30fc\u30c9\u3055\u308c\u308b\u9759\u7684HTML(zero JS)</li>\n</ul>\n</li>\n</ul>\n<p>\u9752\u3044\u90e8\u5206\u304c\u6d77\u3001\u8d64\u3044\u90e8\u5206\u304c\u5cf6(island)</p>\n</section>\n</foreignObject><foreignObject width=\"1280\" height=\"720\" data-marpit-advanced-background=\"pseudo\"><section data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"19\" data-marpit-pagination-total=\"21\" style=\"\" data-marpit-advanced-background=\"pseudo\" data-marpit-advanced-background-split=\"right\"></section></foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"20\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"20\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h1 id=\"%E7%B5%82%E3%82%8F%E3%82%8A\">\u7d42\u308f\u308a</h1>\n</section>\n</foreignObject></svg>", "<svg data-marpit-svg=\"\" viewBox=\"0 0 1280 720\"><foreignObject width=\"1280\" height=\"720\"><section id=\"21\" data-class=\"lead\" data-paginate=\"true\" data-theme=\"default\" class=\"lead\" data-marpit-pagination=\"21\" data-marpit-pagination-total=\"21\" style=\"--class:lead;--paginate:true;--theme:default;\">\n<h1 id=\"appendix\">Appendix</h1>\n<p>importMap.json \u3067\u4f9d\u5b58\u95a2\u4fc2\u306e\u7ba1\u7406\u30fb\u30a8\u30a4\u30ea\u30a2\u30b9\u8a2d\u5b9a\u3082\u53ef\u80fd<br />\n(\u5927\u898f\u6a21\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5411\u3051)</p>\n<pre is=\"marp-pre\" data-auto-scaling=\"downscale-only\"><code class=\"language-json\"><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;imports&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;$fresh/&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://deno.land/x/fresh@1.1.0/&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;preact&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://esm.sh/preact@10.10.6&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;preact/&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://esm.sh/preact@10.10.6/&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;preact-render-to-string&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://esm.sh/*preact-render-to-string@5.2.3/&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@preact/signals&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://esm.sh/*@preact/signals@1.0.3&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;@preact/signals-core&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://esm.sh/*@preact/signals-core@1.0.1&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;twind&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://esm.sh/twind@0.16.17&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;twind/&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://esm.sh/twind@0.16.17/&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;$std/&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;https://deno.land/std@0.160.0/&quot;</span><span class=\"hljs-punctuation\">,</span>\n    ...\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n</section>\n<script>!function(){\"use strict\";const t={h1:{proto:()=>HTMLHeadingElement,attrs:{role:\"heading\",\"aria-level\":\"1\"},style:\"display: block; font-size: 2em; margin-block-start: 0.67em; margin-block-end: 0.67em; margin-inline-start: 0px; margin-inline-end: 0px; font-weight: bold;\"},h2:{proto:()=>HTMLHeadingElement,attrs:{role:\"heading\",\"aria-level\":\"2\"},style:\"display: block; font-size: 1.5em; margin-block-start: 0.83em; margin-block-end: 0.83em; margin-inline-start: 0px; margin-inline-end: 0px; font-weight: bold;\"},h3:{proto:()=>HTMLHeadingElement,attrs:{role:\"heading\",\"aria-level\":\"3\"},style:\"display: block; font-size: 1.17em; margin-block-start: 1em; margin-block-end: 1em; margin-inline-start: 0px; margin-inline-end: 0px; font-weight: bold;\"},h4:{proto:()=>HTMLHeadingElement,attrs:{role:\"heading\",\"aria-level\":\"4\"},style:\"display: block; margin-block-start: 1.33em; margin-block-end: 1.33em; margin-inline-start: 0px; margin-inline-end: 0px; font-weight: bold;\"},h5:{proto:()=>HTMLHeadingElement,attrs:{role:\"heading\",\"aria-level\":\"5\"},style:\"display: block; font-size: 0.83em; margin-block-start: 1.67em; margin-block-end: 1.67em; margin-inline-start: 0px; margin-inline-end: 0px; font-weight: bold;\"},h6:{proto:()=>HTMLHeadingElement,attrs:{role:\"heading\",\"aria-level\":\"6\"},style:\"display: block; font-size: 0.67em; margin-block-start: 2.33em; margin-block-end: 2.33em; margin-inline-start: 0px; margin-inline-end: 0px; font-weight: bold;\"},span:{proto:()=>HTMLSpanElement},pre:{proto:()=>HTMLElement,style:\"display: block; font-family: monospace; white-space: pre; margin: 1em 0; --marp-auto-scaling-white-space: pre;\"}},e=\"data-marp-auto-scaling-wrapper\",i=\"data-marp-auto-scaling-svg\",n=\"data-marp-auto-scaling-container\";class s extends HTMLElement{constructor(){super(),this.svgPreserveAspectRatio=\"xMinYMid meet\";const t=t=>([e])=>{const{width:i,height:n}=e.contentRect;this[t]={width:i,height:n},this.updateSVGRect()};this.attachShadow({mode:\"open\"}),this.containerObserver=new ResizeObserver(t(\"containerSize\")),this.wrapperObserver=new ResizeObserver(((...e)=>{t(\"wrapperSize\")(...e),this.flushSvgDisplay()}))}static get observedAttributes(){return[\"data-downscale-only\"]}connectedCallback(){var t,s,o,r,a;this.shadowRoot.innerHTML=`\\n<style>\\n  svg[${i}] { display: block; width: 100%; height: auto; vertical-align: top; }\\n  span[${n}] { display: table; white-space: var(--marp-auto-scaling-white-space, nowrap); width: max-content; }\\n</style>\\n<div ${e}>\\n  <svg part=\"svg\" ${i}>\\n    <foreignObject><span ${n}><slot></slot></span></foreignObject>\\n  </svg>\\n</div>\\n    `.split(/\\n\\s*/).join(\"\"),this.wrapper=null!==(t=this.shadowRoot.querySelector(`div[${e}]`))&&void 0!==t?t:void 0;const l=this.svg;this.svg=null!==(o=null===(s=this.wrapper)||void 0===s?void 0:s.querySelector(`svg[${i}]`))&&void 0!==o?o:void 0,this.svg!==l&&(this.svgComputedStyle=this.svg?window.getComputedStyle(this.svg):void 0),this.container=null!==(a=null===(r=this.svg)||void 0===r?void 0:r.querySelector(`span[${n}]`))&&void 0!==a?a:void 0,this.observe()}disconnectedCallback(){this.svg=void 0,this.svgComputedStyle=void 0,this.wrapper=void 0,this.container=void 0,this.observe()}attributeChangedCallback(){this.observe()}flushSvgDisplay(){const{svg:t}=this;t&&(t.style.display=\"inline\",requestAnimationFrame((()=>{t.style.display=\"\"})))}observe(){this.containerObserver.disconnect(),this.wrapperObserver.disconnect(),this.wrapper&&this.wrapperObserver.observe(this.wrapper),this.container&&this.containerObserver.observe(this.container),this.svgComputedStyle&&this.observeSVGStyle(this.svgComputedStyle)}observeSVGStyle(t){const e=()=>{const i=(()=>{const e=t.getPropertyValue(\"--preserve-aspect-ratio\");if(e)return e.trim();return`x${(({textAlign:t,direction:e})=>{if(t.endsWith(\"left\"))return\"Min\";if(t.endsWith(\"right\"))return\"Max\";if(\"start\"===t||\"end\"===t){let i=\"rtl\"===e;return\"end\"===t&&(i=!i),i?\"Max\":\"Min\"}return\"Mid\"})(t)}YMid meet`})();i!==this.svgPreserveAspectRatio&&(this.svgPreserveAspectRatio=i,this.updateSVGRect()),t===this.svgComputedStyle&&requestAnimationFrame(e)};e()}updateSVGRect(){var t,e,i,n,s,o,r;let a=Math.ceil(null!==(e=null===(t=this.containerSize)||void 0===t?void 0:t.width)&&void 0!==e?e:0);const l=Math.ceil(null!==(n=null===(i=this.containerSize)||void 0===i?void 0:i.height)&&void 0!==n?n:0);void 0!==this.dataset.downscaleOnly&&(a=Math.max(a,null!==(o=null===(s=this.wrapperSize)||void 0===s?void 0:s.width)&&void 0!==o?o:0));const c=null===(r=this.svg)||void 0===r?void 0:r.querySelector(\":scope > foreignObject\");if(null==c||c.setAttribute(\"width\",`${a}`),null==c||c.setAttribute(\"height\",`${l}`),this.svg&&(this.svg.setAttribute(\"viewBox\",`0 0 ${a} ${l}`),this.svg.setAttribute(\"preserveAspectRatio\",this.svgPreserveAspectRatio),this.svg.style.height=a<=0||l<=0?\"0\":\"\"),this.container){const t=this.svgPreserveAspectRatio.toLowerCase();this.container.style.marginLeft=t.startsWith(\"xmid\")||t.startsWith(\"xmax\")?\"auto\":\"0\",this.container.style.marginRight=t.startsWith(\"xmi\")?\"auto\":\"0\"}}}const o=(t,{attrs:e={},style:i})=>class extends t{constructor(...t){super(...t);for(const[t,i]of Object.entries(e))this.hasAttribute(t)||this.setAttribute(t,i);this.attachShadow({mode:\"open\"})}static get observedAttributes(){return[\"data-auto-scaling\"]}connectedCallback(){this._update()}attributeChangedCallback(){this._update()}_update(){const t=i?`<style>:host { ${i} }</style>`:\"\";let e=\"<slot></slot>\";const{autoScaling:n}=this.dataset;if(void 0!==n){e=`<marp-auto-scaling exportparts=\"svg:auto-scaling\" ${\"downscale-only\"===n?\"data-downscale-only\":\"\"}>${e}</marp-auto-scaling>`}this.shadowRoot.innerHTML=t+e}};let r;const a=Symbol();let l;const c=\"marpitSVGPolyfill:setZoomFactor,\",d=Symbol(),g=Symbol();const h=()=>{const t=\"Apple Computer, Inc.\"===navigator.vendor,e=t?[u]:[],i={then:e=>(t?(async()=>{if(void 0===l){const t=document.createElement(\"canvas\");t.width=10,t.height=10;const e=t.getContext(\"2d\"),i=new Image(10,10),n=new Promise((t=>{i.addEventListener(\"load\",(()=>t()))}));i.crossOrigin=\"anonymous\",i.src=\"data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2210%22%20height%3D%2210%22%20viewBox%3D%220%200%201%201%22%3E%3CforeignObject%20width%3D%221%22%20height%3D%221%22%20requiredExtensions%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%3E%3Cdiv%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%22%20style%3D%22width%3A%201px%3B%20height%3A%201px%3B%20background%3A%20red%3B%20position%3A%20relative%22%3E%3C%2Fdiv%3E%3C%2FforeignObject%3E%3C%2Fsvg%3E\",await n,e.drawImage(i,0,0),l=e.getImageData(5,5,1,1).data[3]<128}return l})().then((t=>{null==e||e(t?[u]:[])})):null==e||e([]),i)};return Object.assign(e,i)};let p,m;function u(t){const e=\"object\"==typeof t&&t.target||document,i=\"object\"==typeof t?t.zoom:t;window[g]||(Object.defineProperty(window,g,{configurable:!0,value:!0}),document.body.style.zoom=1.0001,document.body.offsetHeight,document.body.style.zoom=1,window.addEventListener(\"message\",(({data:t,origin:e})=>{if(e===window.origin)try{if(t&&\"string\"==typeof t&&t.startsWith(c)){const[,e]=t.split(\",\"),i=Number.parseFloat(e);Number.isNaN(i)||(m=i)}}catch(t){console.error(t)}})));let n=!1;Array.from(e.querySelectorAll(\"svg[data-marpit-svg]\"),(t=>{var e,s,o,r;t.style.transform||(t.style.transform=\"translateZ(0)\");const a=i||m||t.currentScale||1;p!==a&&(p=a,n=a);const l=t.getBoundingClientRect(),{length:c}=t.children;for(let i=0;i<c;i+=1){const n=t.children[i];if(n.getScreenCTM){const t=n.getScreenCTM();if(t){const i=null!==(s=null===(e=n.x)||void 0===e?void 0:e.baseVal.value)&&void 0!==s?s:0,c=null!==(r=null===(o=n.y)||void 0===o?void 0:o.baseVal.value)&&void 0!==r?r:0,d=n.children.length;for(let e=0;e<d;e+=1){const s=n.children[e];if(\"SECTION\"===s.tagName){const{style:e}=s;e.transformOrigin||(e.transformOrigin=`${-i}px ${-c}px`),e.transform=`scale(${a}) matrix(${t.a}, ${t.b}, ${t.c}, ${t.d}, ${t.e-l.left}, ${t.f-l.top}) translateZ(0.0001px)`;break}}}}}})),!1!==n&&Array.from(e.querySelectorAll(\"iframe\"),(({contentWindow:t})=>{null==t||t.postMessage(`${c}${n}`,\"null\"===window.origin?\"*\":window.origin)}))}function v({once:t=!1,target:e=document}={}){const i=function(t=document){if(t[d])return t[d];let e=!0;const i=()=>{e=!1,delete t[d]};Object.defineProperty(t,d,{configurable:!0,value:i});let n=[],s=!1;(async()=>{try{n=await h()}finally{s=!0}})();const o=()=>{for(const e of n)e({target:t});s&&0===n.length||e&&window.requestAnimationFrame(o)};return o(),i}(e);return t?(i(),()=>{}):i}p=1,m=void 0;const b=Symbol(),w=(e=document)=>{if(\"undefined\"==typeof window)throw new Error(\"Marp Core's browser script is valid only in browser context.\");if(((e=document)=>{const i=window[a];i||customElements.define(\"marp-auto-scaling\",s);for(const n of Object.keys(t)){const s=`marp-${n}`,a=t[n].proto();null!=r||(r=!!document.createElement(\"div\",{is:\"marp-auto-scaling\"}).outerHTML.startsWith(\"<div is\")),r&&a!==HTMLElement?i||customElements.define(s,o(a,{style:t[n].style}),{extends:n}):(i||customElements.define(s,o(HTMLElement,t[n])),e.querySelectorAll(`${n}[is=\"${s}\"]`).forEach((t=>{t.outerHTML=t.outerHTML.replace(new RegExp(`^<${n}`,\"i\"),`<${s}`).replace(new RegExp(`</${n}>$`,\"i\"),`</${s}>`)})))}window[a]=!0})(e),e[b])return e[b];const i=v({target:e}),n=()=>{i(),delete e[b]},l=Object.assign(n,{cleanup:n,update:()=>w(e)});return Object.defineProperty(e,b,{configurable:!0,value:l}),l},y=document.currentScript;w(y?y.getRootNode():document)}();\n</script></foreignObject></svg>"], "css": "div.marpit>svg>foreignObject>section{width:1280px;height:720px;box-sizing:border-box;overflow:hidden;position:relative;scroll-snap-align:center center}div.marpit>svg>foreignObject>section:after{bottom:0;content:attr(data-marpit-pagination);padding:inherit;pointer-events:none;position:absolute;right:0}div.marpit>svg>foreignObject>section:not([data-marpit-pagination]):after{display:none}/* Normalization */div.marpit>svg>foreignObject>section :is(h1,marp-h1){font-size:2em;margin:0.67em 0}div.marpit>svg>foreignObject>section video::-webkit-media-controls{will-change:transform}@page{size:1280px 720px;margin:0}@media print{body,html{background-color:#fff;margin:0;page-break-inside:avoid;break-inside:avoid-page}div.marpit>svg>foreignObject>section{page-break-before:always;break-before:page}div.marpit>svg>foreignObject>section,div.marpit>svg>foreignObject>section *{-webkit-print-color-adjust:exact!important;animation-delay:0s!important;animation-duration:0s!important;color-adjust:exact!important;transition:none!important}div.marpit>svg[data-marpit-svg]{display:block;height:100vh;width:100vw}}div.marpit>svg>foreignObject>section mjx-container[jax=SVG]{direction:ltr}div.marpit>svg>foreignObject>section mjx-container[jax=SVG]>svg{overflow:visible;min-height:1px;min-width:1px}div.marpit>svg>foreignObject>section mjx-container[jax=SVG]>svg a{fill:blue;stroke:blue}div.marpit>svg>foreignObject>section mjx-container[jax=SVG][display=true]{display:block;text-align:center;margin:1em 0}div.marpit>svg>foreignObject>section mjx-container[jax=SVG][display=true][width=full]{display:flex}div.marpit>svg>foreignObject>section mjx-container[jax=SVG][justify=left]{text-align:left}div.marpit>svg>foreignObject>section mjx-container[jax=SVG][justify=right]{text-align:right}div.marpit>svg>foreignObject>section g[data-mml-node=merror]>g{fill:red;stroke:red}div.marpit>svg>foreignObject>section g[data-mml-node=merror]>rect[data-background]{fill:yellow;stroke:none}div.marpit>svg>foreignObject>section g[data-mml-node=mtable]>line[data-line],div.marpit>svg>foreignObject>section svg[data-table]>g>line[data-line]{stroke-width:70px;fill:none}div.marpit>svg>foreignObject>section g[data-mml-node=mtable]>rect[data-frame],div.marpit>svg>foreignObject>section svg[data-table]>g>rect[data-frame]{stroke-width:70px;fill:none}div.marpit>svg>foreignObject>section g[data-mml-node=mtable]>.mjx-dashed,div.marpit>svg>foreignObject>section svg[data-table]>g>.mjx-dashed{stroke-dasharray:140}div.marpit>svg>foreignObject>section g[data-mml-node=mtable]>.mjx-dotted,div.marpit>svg>foreignObject>section svg[data-table]>g>.mjx-dotted{stroke-linecap:round;stroke-dasharray:0,140}div.marpit>svg>foreignObject>section g[data-mml-node=mtable]>g>svg{overflow:visible}div.marpit>svg>foreignObject>section [jax=SVG] mjx-tool{display:inline-block;position:relative;width:0;height:0}div.marpit>svg>foreignObject>section [jax=SVG] mjx-tool>mjx-tip{position:absolute;top:0;left:0}div.marpit>svg>foreignObject>section mjx-tool>mjx-tip{display:inline-block;padding:.2em;border:1px solid #888;font-size:70%;background-color:#F8F8F8;color:black;box-shadow:2px 2px 5px #AAAAAA}div.marpit>svg>foreignObject>section g[data-mml-node=maction][data-toggle]{cursor:pointer}div.marpit>svg>foreignObject>section mjx-status{display:block;position:fixed;left:1em;bottom:1em;min-width:25%;padding:.2em .4em;border:1px solid #888;font-size:90%;background-color:#F8F8F8;color:black}div.marpit>svg>foreignObject>section foreignObject[data-mjx-xml]{font-family:initial;line-height:normal;overflow:visible}div.marpit>svg>foreignObject>section mjx-container[jax=SVG] path[data-c],div.marpit>svg>foreignObject>section mjx-container[jax=SVG] use[data-c]{stroke-width:3}@media print{div.marpit>svg>foreignObject>section mjx-container[jax=SVG] path[data-c],div.marpit>svg>foreignObject>section mjx-container[jax=SVG] use[data-c]{stroke-width:0}}div.marpit>svg>foreignObject>section img[data-marp-twemoji]{background:transparent;height:1em;margin:0 .05em 0 .1em;vertical-align:-.1em;width:1em}\n/*!\n * Marp default theme.\n *\n * @theme default\n * @author Yuki Hattori\n *\n * @auto-scaling true\n * @size 16:9 1280px 720px\n * @size 4:3 960px 720px\n */div.marpit>svg>foreignObject>section{--color-prettylights-syntax-comment:#6e7781;--color-prettylights-syntax-constant:#0550ae;--color-prettylights-syntax-entity:#8250df;--color-prettylights-syntax-storage-modifier-import:#24292f;--color-prettylights-syntax-entity-tag:#116329;--color-prettylights-syntax-keyword:#cf222e;--color-prettylights-syntax-string:#0a3069;--color-prettylights-syntax-variable:#953800;--color-prettylights-syntax-brackethighlighter-unmatched:#82071e;--color-prettylights-syntax-invalid-illegal-text:#f6f8fa;--color-prettylights-syntax-invalid-illegal-bg:#82071e;--color-prettylights-syntax-carriage-return-text:#f6f8fa;--color-prettylights-syntax-carriage-return-bg:#cf222e;--color-prettylights-syntax-string-regexp:#116329;--color-prettylights-syntax-markup-list:#3b2300;--color-prettylights-syntax-markup-heading:#0550ae;--color-prettylights-syntax-markup-italic:#24292f;--color-prettylights-syntax-markup-bold:#24292f;--color-prettylights-syntax-markup-deleted-text:#82071e;--color-prettylights-syntax-markup-deleted-bg:#ffebe9;--color-prettylights-syntax-markup-inserted-text:#116329;--color-prettylights-syntax-markup-inserted-bg:#dafbe1;--color-prettylights-syntax-markup-changed-text:#953800;--color-prettylights-syntax-markup-changed-bg:#ffd8b5;--color-prettylights-syntax-markup-ignored-text:#eaeef2;--color-prettylights-syntax-markup-ignored-bg:#0550ae;--color-prettylights-syntax-meta-diff-range:#8250df;--color-prettylights-syntax-brackethighlighter-angle:#57606a;--color-prettylights-syntax-sublimelinter-gutter-mark:#8c959f;--color-prettylights-syntax-constant-other-reference-link:#0a3069;--color-fg-default:#24292f;--color-fg-muted:#57606a;--color-fg-subtle:#6e7781;--color-canvas-default:#fff;--color-canvas-subtle:#f6f8fa;--color-border-default:#d0d7de;--color-border-muted:#d8dee4;--color-neutral-muted:rgba(175,184,193,.2);--color-accent-fg:#0969da;--color-accent-emphasis:#0969da;--color-attention-subtle:#fff8c5;--color-danger-fg:#cf222e;color-scheme:light}div.marpit>svg>foreignObject>section:where(.invert){--color-prettylights-syntax-comment:#8b949e;--color-prettylights-syntax-constant:#79c0ff;--color-prettylights-syntax-entity:#d2a8ff;--color-prettylights-syntax-storage-modifier-import:#c9d1d9;--color-prettylights-syntax-entity-tag:#7ee787;--color-prettylights-syntax-keyword:#ff7b72;--color-prettylights-syntax-string:#a5d6ff;--color-prettylights-syntax-variable:#ffa657;--color-prettylights-syntax-brackethighlighter-unmatched:#f85149;--color-prettylights-syntax-invalid-illegal-text:#f0f6fc;--color-prettylights-syntax-invalid-illegal-bg:#8e1519;--color-prettylights-syntax-carriage-return-text:#f0f6fc;--color-prettylights-syntax-carriage-return-bg:#b62324;--color-prettylights-syntax-string-regexp:#7ee787;--color-prettylights-syntax-markup-list:#f2cc60;--color-prettylights-syntax-markup-heading:#1f6feb;--color-prettylights-syntax-markup-italic:#c9d1d9;--color-prettylights-syntax-markup-bold:#c9d1d9;--color-prettylights-syntax-markup-deleted-text:#ffdcd7;--color-prettylights-syntax-markup-deleted-bg:#67060c;--color-prettylights-syntax-markup-inserted-text:#aff5b4;--color-prettylights-syntax-markup-inserted-bg:#033a16;--color-prettylights-syntax-markup-changed-text:#ffdfb6;--color-prettylights-syntax-markup-changed-bg:#5a1e02;--color-prettylights-syntax-markup-ignored-text:#c9d1d9;--color-prettylights-syntax-markup-ignored-bg:#1158c7;--color-prettylights-syntax-meta-diff-range:#d2a8ff;--color-prettylights-syntax-brackethighlighter-angle:#8b949e;--color-prettylights-syntax-sublimelinter-gutter-mark:#484f58;--color-prettylights-syntax-constant-other-reference-link:#a5d6ff;--color-fg-default:#c9d1d9;--color-fg-muted:#8b949e;--color-fg-subtle:#6e7681;--color-canvas-default:#0d1117;--color-canvas-subtle:#161b22;--color-border-default:#30363d;--color-border-muted:#21262d;--color-neutral-muted:hsla(215,8%,47%,.4);--color-accent-fg:#58a6ff;--color-accent-emphasis:#1f6feb;--color-attention-subtle:rgba(187,128,9,.15);--color-danger-fg:#f85149;color-scheme:dark}div.marpit>svg>foreignObject>section{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;word-wrap:break-word;background-color:var(--color-canvas-default);color:var(--color-fg-default);font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Noto Sans,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;font-size:16px;line-height:1.5;margin:0}div.marpit>svg>foreignObject>section{--marpit-root-font-size:16px}div.marpit>svg>foreignObject>section :is(h1,marp-h1):hover .anchor .octicon-link:before,div.marpit>svg>foreignObject>section :is(h2,marp-h2):hover .anchor .octicon-link:before,div.marpit>svg>foreignObject>section :is(h3,marp-h3):hover .anchor .octicon-link:before,div.marpit>svg>foreignObject>section :is(h4,marp-h4):hover .anchor .octicon-link:before,div.marpit>svg>foreignObject>section :is(h5,marp-h5):hover .anchor .octicon-link:before,div.marpit>svg>foreignObject>section :is(h6,marp-h6):hover .anchor .octicon-link:before{background-color:currentColor;content:\" \";display:inline-block;height:16px;-webkit-mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 0 0 1.06 1.06l1.25-1.25a2 2 0 1 1 2.83 2.83l-2.5 2.5a2 2 0 0 1-2.83 0 .75.75 0 0 0-1.06 1.06 3.5 3.5 0 0 0 4.95 0l2.5-2.5a3.5 3.5 0 0 0-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 0 1 0-2.83l2.5-2.5a2 2 0 0 1 2.83 0 .75.75 0 0 0 1.06-1.06 3.5 3.5 0 0 0-4.95 0l-2.5 2.5a3.5 3.5 0 0 0 4.95 4.95l1.25-1.25a.75.75 0 0 0-1.06-1.06l-1.25 1.25a2 2 0 0 1-2.83 0z\"/></svg>');mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 0 0 1.06 1.06l1.25-1.25a2 2 0 1 1 2.83 2.83l-2.5 2.5a2 2 0 0 1-2.83 0 .75.75 0 0 0-1.06 1.06 3.5 3.5 0 0 0 4.95 0l2.5-2.5a3.5 3.5 0 0 0-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 0 1 0-2.83l2.5-2.5a2 2 0 0 1 2.83 0 .75.75 0 0 0 1.06-1.06 3.5 3.5 0 0 0-4.95 0l-2.5 2.5a3.5 3.5 0 0 0 4.95 4.95l1.25-1.25a.75.75 0 0 0-1.06-1.06l-1.25 1.25a2 2 0 0 1-2.83 0z\"/></svg>');width:16px}div.marpit>svg>foreignObject>section details,div.marpit>svg>foreignObject>section figcaption,div.marpit>svg>foreignObject>section figure{display:block}div.marpit>svg>foreignObject>section summary{display:list-item}div.marpit>svg>foreignObject>section [hidden]{display:none!important}div.marpit>svg>foreignObject>section a{background-color:transparent;color:var(--color-accent-fg);text-decoration:none}div.marpit>svg>foreignObject>section abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}div.marpit>svg>foreignObject>section b,div.marpit>svg>foreignObject>section strong{font-weight:var(--base-text-weight-semibold,600)}div.marpit>svg>foreignObject>section dfn{font-style:italic}div.marpit>svg>foreignObject>section :is(h1,marp-h1){border-bottom:1px solid var(--color-border-muted);font-size:2em;font-weight:var(--base-text-weight-semibold,600);margin:.67em 0;padding-bottom:.3em}div.marpit>svg>foreignObject>section mark{background-color:var(--color-attention-subtle);color:var(--color-fg-default)}div.marpit>svg>foreignObject>section small{font-size:90%}div.marpit>svg>foreignObject>section sub,div.marpit>svg>foreignObject>section sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}div.marpit>svg>foreignObject>section sub{bottom:-.25em}div.marpit>svg>foreignObject>section sup{top:-.5em}div.marpit>svg>foreignObject>section img{background-color:var(--color-canvas-default);border-style:none;box-sizing:content-box;max-width:100%}div.marpit>svg>foreignObject>section :is(pre,marp-pre),div.marpit>svg>foreignObject>section code,div.marpit>svg>foreignObject>section kbd,div.marpit>svg>foreignObject>section samp{font-family:monospace;font-size:1em}div.marpit>svg>foreignObject>section figure{margin:1em 40px}div.marpit>svg>foreignObject>section hr{background:transparent;background-color:var(--color-border-default);border:0;box-sizing:content-box;height:.25em;margin:24px 0;overflow:hidden;padding:0}div.marpit>svg>foreignObject>section input{font:inherit;font-family:inherit;font-size:inherit;line-height:inherit;margin:0;overflow:visible}div.marpit>svg>foreignObject>section [type=button],div.marpit>svg>foreignObject>section [type=reset],div.marpit>svg>foreignObject>section [type=submit]{-webkit-appearance:button}div.marpit>svg>foreignObject>section [type=checkbox],div.marpit>svg>foreignObject>section [type=radio]{box-sizing:border-box;padding:0}div.marpit>svg>foreignObject>section [type=number]::-webkit-inner-spin-button,div.marpit>svg>foreignObject>section [type=number]::-webkit-outer-spin-button{height:auto}div.marpit>svg>foreignObject>section [type=search]::-webkit-search-cancel-button,div.marpit>svg>foreignObject>section [type=search]::-webkit-search-decoration{-webkit-appearance:none}div.marpit>svg>foreignObject>section ::-webkit-input-placeholder{color:inherit;opacity:.54}div.marpit>svg>foreignObject>section ::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}div.marpit>svg>foreignObject>section a:hover{text-decoration:underline}div.marpit>svg>foreignObject>section ::-moz-placeholder{color:var(--color-fg-subtle);opacity:1}div.marpit>svg>foreignObject>section ::placeholder{color:var(--color-fg-subtle);opacity:1}div.marpit>svg>foreignObject>section hr:after,div.marpit>svg>foreignObject>section hr:before{content:\"\";display:table}div.marpit>svg>foreignObject>section hr:after{clear:both}div.marpit>svg>foreignObject>section table{border-collapse:collapse;border-spacing:0;display:block;max-width:100%;overflow:auto;width:-moz-max-content;width:max-content}div.marpit>svg>foreignObject>section td,div.marpit>svg>foreignObject>section th{padding:0}div.marpit>svg>foreignObject>section details summary{cursor:pointer}div.marpit>svg>foreignObject>section details:not([open])>:not(summary){display:none!important}div.marpit>svg>foreignObject>section [role=button]:focus,div.marpit>svg>foreignObject>section a:focus,div.marpit>svg>foreignObject>section input[type=checkbox]:focus,div.marpit>svg>foreignObject>section input[type=radio]:focus{box-shadow:none;outline:2px solid var(--color-accent-fg);outline-offset:-2px}div.marpit>svg>foreignObject>section [role=button]:focus:not(:focus-visible),div.marpit>svg>foreignObject>section a:focus:not(:focus-visible),div.marpit>svg>foreignObject>section input[type=checkbox]:focus:not(:focus-visible),div.marpit>svg>foreignObject>section input[type=radio]:focus:not(:focus-visible){outline:1px solid transparent}div.marpit>svg>foreignObject>section [role=button]:focus-visible,div.marpit>svg>foreignObject>section a:focus-visible,div.marpit>svg>foreignObject>section input[type=checkbox]:focus-visible,div.marpit>svg>foreignObject>section input[type=radio]:focus-visible{box-shadow:none;outline:2px solid var(--color-accent-fg);outline-offset:-2px}div.marpit>svg>foreignObject>section a:not([class]):focus,div.marpit>svg>foreignObject>section a:not([class]):focus-visible,div.marpit>svg>foreignObject>section input[type=checkbox]:focus,div.marpit>svg>foreignObject>section input[type=checkbox]:focus-visible,div.marpit>svg>foreignObject>section input[type=radio]:focus,div.marpit>svg>foreignObject>section input[type=radio]:focus-visible{outline-offset:0}div.marpit>svg>foreignObject>section kbd{background-color:var(--color-canvas-subtle);border-bottom-color:var(--color-neutral-muted);border:1px solid var(--color-neutral-muted);border-radius:6px;box-shadow:inset 0 -1px 0 var(--color-neutral-muted);color:var(--color-fg-default);display:inline-block;font:11px ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;line-height:10px;padding:3px 5px;vertical-align:middle}div.marpit>svg>foreignObject>section :is(h1,marp-h1),div.marpit>svg>foreignObject>section :is(h2,marp-h2),div.marpit>svg>foreignObject>section :is(h3,marp-h3),div.marpit>svg>foreignObject>section :is(h4,marp-h4),div.marpit>svg>foreignObject>section :is(h5,marp-h5),div.marpit>svg>foreignObject>section :is(h6,marp-h6){font-weight:var(--base-text-weight-semibold,600);line-height:1.25;margin-bottom:16px;margin-top:24px}div.marpit>svg>foreignObject>section :is(h2,marp-h2){border-bottom:1px solid var(--color-border-muted);font-size:1.5em;padding-bottom:.3em}div.marpit>svg>foreignObject>section :is(h2,marp-h2),div.marpit>svg>foreignObject>section :is(h3,marp-h3){font-weight:var(--base-text-weight-semibold,600)}div.marpit>svg>foreignObject>section :is(h3,marp-h3){font-size:1.25em}div.marpit>svg>foreignObject>section :is(h4,marp-h4){font-size:1em}div.marpit>svg>foreignObject>section :is(h4,marp-h4),div.marpit>svg>foreignObject>section :is(h5,marp-h5){font-weight:var(--base-text-weight-semibold,600)}div.marpit>svg>foreignObject>section :is(h5,marp-h5){font-size:.875em}div.marpit>svg>foreignObject>section :is(h6,marp-h6){color:var(--color-fg-muted);font-size:.85em;font-weight:var(--base-text-weight-semibold,600)}div.marpit>svg>foreignObject>section p{margin-bottom:10px;margin-top:0}div.marpit>svg>foreignObject>section blockquote{border-left:.25em solid var(--color-border-default);color:var(--color-fg-muted);margin:0;padding:0 1em}div.marpit>svg>foreignObject>section ol,div.marpit>svg>foreignObject>section ul{margin-bottom:0;margin-top:0;padding-left:2em}div.marpit>svg>foreignObject>section ol ol,div.marpit>svg>foreignObject>section ul ol{list-style-type:lower-roman}div.marpit>svg>foreignObject>section ol ol ol,div.marpit>svg>foreignObject>section ol ul ol,div.marpit>svg>foreignObject>section ul ol ol,div.marpit>svg>foreignObject>section ul ul ol{list-style-type:lower-alpha}div.marpit>svg>foreignObject>section dd{margin-left:0}div.marpit>svg>foreignObject>section :is(pre,marp-pre),div.marpit>svg>foreignObject>section code,div.marpit>svg>foreignObject>section samp,div.marpit>svg>foreignObject>section tt{font-family:ui-monospace,SFMono-Regular,SF Mono,Menlo,Consolas,Liberation Mono,monospace;font-size:12px}div.marpit>svg>foreignObject>section :is(pre,marp-pre){word-wrap:normal;margin-bottom:0;margin-top:0}div.marpit>svg>foreignObject>section .octicon{fill:currentColor;display:inline-block;overflow:visible!important;vertical-align:text-bottom}div.marpit>svg>foreignObject>section input::-webkit-inner-spin-button,div.marpit>svg>foreignObject>section input::-webkit-outer-spin-button{-webkit-appearance:none;appearance:none;margin:0}div.marpit>svg>foreignObject>section:after,div.marpit>svg>foreignObject>section:before{\n  /* content:\"\"; */display:table}div.marpit>svg>foreignObject>section:after{clear:both}div.marpit>svg>foreignObject>section>:first-child{margin-top:0!important}div.marpit>svg>foreignObject>section>:last-child{margin-bottom:0!important}div.marpit>svg>foreignObject>section a:not([href]){color:inherit;text-decoration:none}div.marpit>svg>foreignObject>section .absent{color:var(--color-danger-fg)}div.marpit>svg>foreignObject>section .anchor{float:left;line-height:1;margin-left:-20px;padding-right:4px}div.marpit>svg>foreignObject>section .anchor:focus{outline:none}div.marpit>svg>foreignObject>section :is(pre,marp-pre),div.marpit>svg>foreignObject>section blockquote,div.marpit>svg>foreignObject>section details,div.marpit>svg>foreignObject>section dl,div.marpit>svg>foreignObject>section ol,div.marpit>svg>foreignObject>section p,div.marpit>svg>foreignObject>section table,div.marpit>svg>foreignObject>section ul{margin-bottom:16px;margin-top:0}div.marpit>svg>foreignObject>section blockquote>:first-child{margin-top:0}div.marpit>svg>foreignObject>section blockquote>:last-child{margin-bottom:0}div.marpit>svg>foreignObject>section :is(h1,marp-h1) .octicon-link,div.marpit>svg>foreignObject>section :is(h2,marp-h2) .octicon-link,div.marpit>svg>foreignObject>section :is(h3,marp-h3) .octicon-link,div.marpit>svg>foreignObject>section :is(h4,marp-h4) .octicon-link,div.marpit>svg>foreignObject>section :is(h5,marp-h5) .octicon-link,div.marpit>svg>foreignObject>section :is(h6,marp-h6) .octicon-link{color:var(--color-fg-default);vertical-align:middle;visibility:hidden}div.marpit>svg>foreignObject>section :is(h1,marp-h1):hover .anchor,div.marpit>svg>foreignObject>section :is(h2,marp-h2):hover .anchor,div.marpit>svg>foreignObject>section :is(h3,marp-h3):hover .anchor,div.marpit>svg>foreignObject>section :is(h4,marp-h4):hover .anchor,div.marpit>svg>foreignObject>section :is(h5,marp-h5):hover .anchor,div.marpit>svg>foreignObject>section :is(h6,marp-h6):hover .anchor{text-decoration:none}div.marpit>svg>foreignObject>section :is(h1,marp-h1):hover .anchor .octicon-link,div.marpit>svg>foreignObject>section :is(h2,marp-h2):hover .anchor .octicon-link,div.marpit>svg>foreignObject>section :is(h3,marp-h3):hover .anchor .octicon-link,div.marpit>svg>foreignObject>section :is(h4,marp-h4):hover .anchor .octicon-link,div.marpit>svg>foreignObject>section :is(h5,marp-h5):hover .anchor .octicon-link,div.marpit>svg>foreignObject>section :is(h6,marp-h6):hover .anchor .octicon-link{visibility:visible}div.marpit>svg>foreignObject>section :is(h1,marp-h1) code,div.marpit>svg>foreignObject>section :is(h1,marp-h1) tt,div.marpit>svg>foreignObject>section :is(h2,marp-h2) code,div.marpit>svg>foreignObject>section :is(h2,marp-h2) tt,div.marpit>svg>foreignObject>section :is(h3,marp-h3) code,div.marpit>svg>foreignObject>section :is(h3,marp-h3) tt,div.marpit>svg>foreignObject>section :is(h4,marp-h4) code,div.marpit>svg>foreignObject>section :is(h4,marp-h4) tt,div.marpit>svg>foreignObject>section :is(h5,marp-h5) code,div.marpit>svg>foreignObject>section :is(h5,marp-h5) tt,div.marpit>svg>foreignObject>section :is(h6,marp-h6) code,div.marpit>svg>foreignObject>section :is(h6,marp-h6) tt{font-size:inherit;padding:0 .2em}div.marpit>svg>foreignObject>section summary :is(h1,marp-h1),div.marpit>svg>foreignObject>section summary :is(h2,marp-h2),div.marpit>svg>foreignObject>section summary :is(h3,marp-h3),div.marpit>svg>foreignObject>section summary :is(h4,marp-h4),div.marpit>svg>foreignObject>section summary :is(h5,marp-h5),div.marpit>svg>foreignObject>section summary :is(h6,marp-h6){display:inline-block}div.marpit>svg>foreignObject>section summary :is(h1,marp-h1) .anchor,div.marpit>svg>foreignObject>section summary :is(h2,marp-h2) .anchor,div.marpit>svg>foreignObject>section summary :is(h3,marp-h3) .anchor,div.marpit>svg>foreignObject>section summary :is(h4,marp-h4) .anchor,div.marpit>svg>foreignObject>section summary :is(h5,marp-h5) .anchor,div.marpit>svg>foreignObject>section summary :is(h6,marp-h6) .anchor{margin-left:-40px}div.marpit>svg>foreignObject>section summary :is(h1,marp-h1),div.marpit>svg>foreignObject>section summary :is(h2,marp-h2){border-bottom:0;padding-bottom:0}div.marpit>svg>foreignObject>section ol.no-list,div.marpit>svg>foreignObject>section ul.no-list{list-style-type:none;padding:0}div.marpit>svg>foreignObject>section ol[type=a]{list-style-type:lower-alpha}div.marpit>svg>foreignObject>section ol[type=A]{list-style-type:upper-alpha}div.marpit>svg>foreignObject>section ol[type=i]{list-style-type:lower-roman}div.marpit>svg>foreignObject>section ol[type=I]{list-style-type:upper-roman}div.marpit>svg>foreignObject>section div>ol:not([type]),div.marpit>svg>foreignObject>section ol[type=\"1\"]{list-style-type:decimal}div.marpit>svg>foreignObject>section ol ol,div.marpit>svg>foreignObject>section ol ul,div.marpit>svg>foreignObject>section ul ol,div.marpit>svg>foreignObject>section ul ul{margin-bottom:0;margin-top:0}div.marpit>svg>foreignObject>section li>p{margin-top:16px}div.marpit>svg>foreignObject>section li+li{margin-top:.25em}div.marpit>svg>foreignObject>section dl{padding:0}div.marpit>svg>foreignObject>section dl dt{font-size:1em;font-style:italic;font-weight:var(--base-text-weight-semibold,600);margin-top:16px;padding:0}div.marpit>svg>foreignObject>section dl dd{margin-bottom:16px;padding:0 16px}div.marpit>svg>foreignObject>section table th{font-weight:var(--base-text-weight-semibold,600)}div.marpit>svg>foreignObject>section table td,div.marpit>svg>foreignObject>section table th{border:1px solid var(--color-border-default);padding:6px 13px}div.marpit>svg>foreignObject>section table tr{background-color:var(--color-canvas-default);border-top:1px solid var(--color-border-muted)}div.marpit>svg>foreignObject>section table tr:nth-child(2n){background-color:var(--color-canvas-subtle)}div.marpit>svg>foreignObject>section table img{background-color:transparent}div.marpit>svg>foreignObject>section img[align=right]{padding-left:20px}div.marpit>svg>foreignObject>section img[align=left]{padding-right:20px}div.marpit>svg>foreignObject>section .emoji{background-color:transparent;max-width:none;vertical-align:text-top}div.marpit>svg>foreignObject>section :is(span,marp-span).frame,div.marpit>svg>foreignObject>section :is(span,marp-span).frame>:is(span,marp-span){display:block;overflow:hidden}div.marpit>svg>foreignObject>section :is(span,marp-span).frame>:is(span,marp-span){border:1px solid var(--color-border-default);float:left;margin:13px 0 0;padding:7px;width:auto}div.marpit>svg>foreignObject>section :is(span,marp-span).frame :is(span,marp-span) img{display:block;float:left}div.marpit>svg>foreignObject>section :is(span,marp-span).frame :is(span,marp-span) :is(span,marp-span){clear:both;color:var(--color-fg-default);display:block;padding:5px 0 0}div.marpit>svg>foreignObject>section :is(span,marp-span).align-center{clear:both;display:block;overflow:hidden}div.marpit>svg>foreignObject>section :is(span,marp-span).align-center>:is(span,marp-span){display:block;margin:13px auto 0;overflow:hidden;text-align:center}div.marpit>svg>foreignObject>section :is(span,marp-span).align-center :is(span,marp-span) img{margin:0 auto;text-align:center}div.marpit>svg>foreignObject>section :is(span,marp-span).align-right{clear:both;display:block;overflow:hidden}div.marpit>svg>foreignObject>section :is(span,marp-span).align-right>:is(span,marp-span){display:block;margin:13px 0 0;overflow:hidden;text-align:right}div.marpit>svg>foreignObject>section :is(span,marp-span).align-right :is(span,marp-span) img{margin:0;text-align:right}div.marpit>svg>foreignObject>section :is(span,marp-span).float-left{display:block;float:left;margin-right:13px;overflow:hidden}div.marpit>svg>foreignObject>section :is(span,marp-span).float-left :is(span,marp-span){margin:13px 0 0}div.marpit>svg>foreignObject>section :is(span,marp-span).float-right{display:block;float:right;margin-left:13px;overflow:hidden}div.marpit>svg>foreignObject>section :is(span,marp-span).float-right>:is(span,marp-span){display:block;margin:13px auto 0;overflow:hidden;text-align:right}div.marpit>svg>foreignObject>section code,div.marpit>svg>foreignObject>section tt{background-color:var(--color-neutral-muted);border-radius:6px;font-size:85%;margin:0;padding:.2em .4em;white-space:break-spaces}div.marpit>svg>foreignObject>section code br,div.marpit>svg>foreignObject>section tt br{display:none}div.marpit>svg>foreignObject>section del code{text-decoration:inherit}div.marpit>svg>foreignObject>section samp{font-size:85%}div.marpit>svg>foreignObject>section :is(pre,marp-pre) code{font-size:100%}div.marpit>svg>foreignObject>section :is(pre,marp-pre)>code{background:transparent;border:0;margin:0;padding:0;white-space:pre;word-break:normal}div.marpit>svg>foreignObject>section .highlight{margin-bottom:16px}div.marpit>svg>foreignObject>section .highlight :is(pre,marp-pre){margin-bottom:0;word-break:normal}div.marpit>svg>foreignObject>section :is(pre,marp-pre){background-color:var(--color-canvas-subtle);border-radius:6px;font-size:85%;line-height:1.45;overflow:auto;padding:16px}div.marpit>svg>foreignObject>section :is(pre,marp-pre) code,div.marpit>svg>foreignObject>section :is(pre,marp-pre) tt{word-wrap:normal;background-color:transparent;border:0;display:inline;line-height:inherit;margin:0;max-width:auto;overflow:visible;padding:0}div.marpit>svg>foreignObject>section .csv-data td,div.marpit>svg>foreignObject>section .csv-data th{font-size:12px;line-height:1;overflow:hidden;padding:5px;text-align:left;white-space:nowrap}div.marpit>svg>foreignObject>section .csv-data .blob-num{background:var(--color-canvas-default);border:0;padding:10px 8px 9px;text-align:right}div.marpit>svg>foreignObject>section .csv-data tr{border-top:0}div.marpit>svg>foreignObject>section .csv-data th{background:var(--color-canvas-subtle);border-top:0;font-weight:var(--base-text-weight-semibold,600)}div.marpit>svg>foreignObject>section [data-footnote-ref]:before{content:\"[\"}div.marpit>svg>foreignObject>section [data-footnote-ref]:after{content:\"]\"}div.marpit>svg>foreignObject>section .footnotes{border-top:1px solid var(--color-border-default);color:var(--color-fg-muted);font-size:12px}div.marpit>svg>foreignObject>section div.marpit>svg>foreignObject>section section.footnotes{--marpit-root-font-size:12px}div.marpit>svg>foreignObject>section .footnotes ol{padding-left:16px}div.marpit>svg>foreignObject>section .footnotes ol ul{display:inline-block;margin-top:16px;padding-left:16px}div.marpit>svg>foreignObject>section .footnotes li{position:relative}div.marpit>svg>foreignObject>section .footnotes li:target:before{border:2px solid var(--color-accent-emphasis);border-radius:6px;bottom:-8px;content:\"\";left:-24px;pointer-events:none;position:absolute;right:-8px;top:-8px}div.marpit>svg>foreignObject>section .footnotes li:target{color:var(--color-fg-default)}div.marpit>svg>foreignObject>section .footnotes .data-footnote-backref g-emoji{font-family:monospace}div.marpit>svg>foreignObject>section .pl-c{color:var(--color-prettylights-syntax-comment)}div.marpit>svg>foreignObject>section .pl-c1,div.marpit>svg>foreignObject>section .pl-s .pl-v{color:var(--color-prettylights-syntax-constant)}div.marpit>svg>foreignObject>section .pl-e,div.marpit>svg>foreignObject>section .pl-en{color:var(--color-prettylights-syntax-entity)}div.marpit>svg>foreignObject>section .pl-s .pl-s1,div.marpit>svg>foreignObject>section .pl-smi{color:var(--color-prettylights-syntax-storage-modifier-import)}div.marpit>svg>foreignObject>section .pl-ent{color:var(--color-prettylights-syntax-entity-tag)}div.marpit>svg>foreignObject>section .pl-k{color:var(--color-prettylights-syntax-keyword)}div.marpit>svg>foreignObject>section .pl-pds,div.marpit>svg>foreignObject>section .pl-s,div.marpit>svg>foreignObject>section .pl-s .pl-pse .pl-s1,div.marpit>svg>foreignObject>section .pl-sr,div.marpit>svg>foreignObject>section .pl-sr .pl-cce,div.marpit>svg>foreignObject>section .pl-sr .pl-sra,div.marpit>svg>foreignObject>section .pl-sr .pl-sre{color:var(--color-prettylights-syntax-string)}div.marpit>svg>foreignObject>section .pl-smw,div.marpit>svg>foreignObject>section .pl-v{color:var(--color-prettylights-syntax-variable)}div.marpit>svg>foreignObject>section .pl-bu{color:var(--color-prettylights-syntax-brackethighlighter-unmatched)}div.marpit>svg>foreignObject>section .pl-ii{background-color:var(--color-prettylights-syntax-invalid-illegal-bg);color:var(--color-prettylights-syntax-invalid-illegal-text)}div.marpit>svg>foreignObject>section .pl-c2{background-color:var(--color-prettylights-syntax-carriage-return-bg);color:var(--color-prettylights-syntax-carriage-return-text)}div.marpit>svg>foreignObject>section .pl-sr .pl-cce{color:var(--color-prettylights-syntax-string-regexp);font-weight:700}div.marpit>svg>foreignObject>section .pl-ml{color:var(--color-prettylights-syntax-markup-list)}div.marpit>svg>foreignObject>section .pl-mh,div.marpit>svg>foreignObject>section .pl-mh .pl-en,div.marpit>svg>foreignObject>section .pl-ms{color:var(--color-prettylights-syntax-markup-heading);font-weight:700}div.marpit>svg>foreignObject>section .pl-mi{color:var(--color-prettylights-syntax-markup-italic);font-style:italic}div.marpit>svg>foreignObject>section .pl-mb{color:var(--color-prettylights-syntax-markup-bold);font-weight:700}div.marpit>svg>foreignObject>section .pl-md{background-color:var(--color-prettylights-syntax-markup-deleted-bg);color:var(--color-prettylights-syntax-markup-deleted-text)}div.marpit>svg>foreignObject>section .pl-mi1{background-color:var(--color-prettylights-syntax-markup-inserted-bg);color:var(--color-prettylights-syntax-markup-inserted-text)}div.marpit>svg>foreignObject>section .pl-mc{background-color:var(--color-prettylights-syntax-markup-changed-bg);color:var(--color-prettylights-syntax-markup-changed-text)}div.marpit>svg>foreignObject>section .pl-mi2{background-color:var(--color-prettylights-syntax-markup-ignored-bg);color:var(--color-prettylights-syntax-markup-ignored-text)}div.marpit>svg>foreignObject>section .pl-mdr{color:var(--color-prettylights-syntax-meta-diff-range);font-weight:700}div.marpit>svg>foreignObject>section .pl-ba{color:var(--color-prettylights-syntax-brackethighlighter-angle)}div.marpit>svg>foreignObject>section .pl-sg{color:var(--color-prettylights-syntax-sublimelinter-gutter-mark)}div.marpit>svg>foreignObject>section .pl-corl{color:var(--color-prettylights-syntax-constant-other-reference-link);text-decoration:underline}div.marpit>svg>foreignObject>section g-emoji{display:inline-block;font-family:Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;font-size:1em;font-style:normal!important;font-weight:var(--base-text-weight-normal,400);line-height:1;min-width:1ch;vertical-align:-.075em}div.marpit>svg>foreignObject>section g-emoji img{height:1em;width:1em}div.marpit>svg>foreignObject>section .task-list-item{list-style-type:none}div.marpit>svg>foreignObject>section .task-list-item label{font-weight:var(--base-text-weight-normal,400)}div.marpit>svg>foreignObject>section .task-list-item.enabled label{cursor:pointer}div.marpit>svg>foreignObject>section .task-list-item+.task-list-item{margin-top:4px}div.marpit>svg>foreignObject>section .task-list-item .handle{display:none}div.marpit>svg>foreignObject>section .task-list-item-checkbox{margin:0 .2em .25em -1.4em;vertical-align:middle}div.marpit>svg>foreignObject>section .contains-task-list:dir(rtl) .task-list-item-checkbox{margin:0 -1.6em .25em .2em}div.marpit>svg>foreignObject>section .contains-task-list{position:relative}div.marpit>svg>foreignObject>section .contains-task-list:focus-within .task-list-item-convert-container,div.marpit>svg>foreignObject>section .contains-task-list:hover .task-list-item-convert-container{clip:auto;display:block;height:24px;overflow:visible;width:auto}div.marpit>svg>foreignObject>section ::-webkit-calendar-picker-indicator{filter:invert(50%)}div.marpit>svg>foreignObject>section :is(h1,marp-h1){color:var(--h1-color);font-size:1.6em}div.marpit>svg>foreignObject>section :is(h1,marp-h1),div.marpit>svg>foreignObject>section :is(h2,marp-h2){border-bottom:none}div.marpit>svg>foreignObject>section :is(h2,marp-h2){font-size:1.3em}div.marpit>svg>foreignObject>section :is(h3,marp-h3){font-size:1.1em}div.marpit>svg>foreignObject>section :is(h4,marp-h4){font-size:1.05em}div.marpit>svg>foreignObject>section :is(h5,marp-h5){font-size:1em}div.marpit>svg>foreignObject>section :is(h6,marp-h6){font-size:.9em}div.marpit>svg>foreignObject>section :is(h1,marp-h1) strong,div.marpit>svg>foreignObject>section :is(h2,marp-h2) strong,div.marpit>svg>foreignObject>section :is(h3,marp-h3) strong,div.marpit>svg>foreignObject>section :is(h4,marp-h4) strong,div.marpit>svg>foreignObject>section :is(h5,marp-h5) strong,div.marpit>svg>foreignObject>section :is(h6,marp-h6) strong{color:var(--heading-strong-color);font-weight:inherit}div.marpit>svg>foreignObject>section :is(h1,marp-h1)::part(auto-scaling),div.marpit>svg>foreignObject>section :is(h2,marp-h2)::part(auto-scaling),div.marpit>svg>foreignObject>section :is(h3,marp-h3)::part(auto-scaling),div.marpit>svg>foreignObject>section :is(h4,marp-h4)::part(auto-scaling),div.marpit>svg>foreignObject>section :is(h5,marp-h5)::part(auto-scaling),div.marpit>svg>foreignObject>section :is(h6,marp-h6)::part(auto-scaling){max-height:563px}div.marpit>svg>foreignObject>section hr{height:0;padding-top:.25em}div.marpit>svg>foreignObject>section :is(pre,marp-pre){border:1px solid var(--color-border-default);line-height:1.15;overflow:visible}div.marpit>svg>foreignObject>section :is(pre,marp-pre)::part(auto-scaling){max-height:529px}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs){color:var(--color-prettylights-syntax-storage-modifier-import)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-doctag),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-keyword),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-meta .hljs-keyword),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-template-tag),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-template-variable),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-type),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-variable.language_){color:var(--color-prettylights-syntax-keyword)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-title),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-title.class_),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-title.class_.inherited__),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-title.function_){color:var(--color-prettylights-syntax-entity)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-attr),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-attribute),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-literal),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-meta),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-number),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-operator),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-selector-attr),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-selector-class),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-selector-id),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-variable){color:var(--color-prettylights-syntax-constant)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-meta .hljs-string),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-regexp),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-string){color:var(--color-prettylights-syntax-string)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-built_in),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-symbol){color:var(--color-prettylights-syntax-variable)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-code),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-comment),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-formula){color:var(--color-prettylights-syntax-comment)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-name),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-quote),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-selector-pseudo),div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-selector-tag){color:var(--color-prettylights-syntax-entity-tag)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-subst){color:var(--color-prettylights-syntax-storage-modifier-import)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-section){color:var(--color-prettylights-syntax-markup-heading);font-weight:700}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-bullet){color:var(--color-prettylights-syntax-markup-list)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-emphasis){color:var(--color-prettylights-syntax-markup-italic);font-style:italic}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-strong){color:var(--color-prettylights-syntax-markup-bold);font-weight:700}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-addition){background-color:var(--color-prettylights-syntax-markup-inserted-bg);color:var(--color-prettylights-syntax-markup-inserted-text)}div.marpit>svg>foreignObject>section :is(pre,marp-pre) :where(.hljs-deletion){background-color:var(--color-prettylights-syntax-markup-deleted-bg);color:var(--color-prettylights-syntax-markup-deleted-text)}div.marpit>svg>foreignObject>section footer,div.marpit>svg>foreignObject>section header{color:var(--header-footer-color);font-size:18px;left:30px;margin:0;position:absolute}div.marpit>svg>foreignObject>section header{top:21px}div.marpit>svg>foreignObject>section footer{bottom:21px}div.marpit>svg>foreignObject>section{--h1-color:#246;--header-footer-color:hsla(0,0%,40%,.75);--heading-strong-color:#48c;--paginate-color:#777;align-items:stretch;display:flex;flex-flow:column nowrap;font-size:29px;height:720px;justify-content:center;padding:78.5px;width:1280px}div.marpit>svg>foreignObject>section{--marpit-root-font-size:29px}div.marpit>svg>foreignObject>section:where(.invert){--h1-color:#cee7ff;--header-footer-color:hsla(0,0%,60%,.75);--heading-strong-color:#7bf;--paginate-color:#999}div.marpit>svg>foreignObject>section>:last-child,div.marpit>svg>foreignObject>section[data-footer]>:nth-last-child(2){margin-bottom:0}div.marpit>svg>foreignObject>section>:first-child,div.marpit>svg>foreignObject>section>header:first-child+*{margin-top:0}div.marpit>svg>foreignObject>section:after{bottom:21px;color:var(--paginate-color);font-size:24px;padding:0;position:absolute;right:30px}div.marpit>svg>foreignObject>section:after{--marpit-root-font-size:24px}div.marpit>svg>foreignObject>section[data-color] :is(h1,marp-h1),div.marpit>svg>foreignObject>section[data-color] :is(h2,marp-h2),div.marpit>svg>foreignObject>section[data-color] :is(h3,marp-h3),div.marpit>svg>foreignObject>section[data-color] :is(h4,marp-h4),div.marpit>svg>foreignObject>section[data-color] :is(h5,marp-h5),div.marpit>svg>foreignObject>section[data-color] :is(h6,marp-h6){color:currentcolor}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background]{columns:initial!important;display:block!important;padding:0!important}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background]:after,div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background]:before,div.marpit>svg>foreignObject>section[data-marpit-advanced-background=content]:after,div.marpit>svg>foreignObject>section[data-marpit-advanced-background=content]:before{display:none!important}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background]>div[data-marpit-advanced-background-container]{all:initial;display:flex;flex-direction:row;height:100%;overflow:hidden;width:100%}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background]>div[data-marpit-advanced-background-container][data-marpit-advanced-background-direction=vertical]{flex-direction:column}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background][data-marpit-advanced-background-split]>div[data-marpit-advanced-background-container]{width:var(--marpit-advanced-background-split,50%)}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background][data-marpit-advanced-background-split=right]>div[data-marpit-advanced-background-container]{margin-left:calc(100% - var(--marpit-advanced-background-split, 50%))}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=background]>div[data-marpit-advanced-background-container]>figure{all:initial;background-position:center;background-repeat:no-repeat;background-size:cover;flex:auto;margin:0}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=content],div.marpit>svg>foreignObject>section[data-marpit-advanced-background=pseudo]{background:transparent!important}div.marpit>svg>foreignObject>section[data-marpit-advanced-background=pseudo],div.marpit>svg[data-marpit-svg]>foreignObject[data-marpit-advanced-background=pseudo]{pointer-events:none!important}div.marpit>svg>foreignObject>section[data-marpit-advanced-background-split]{width:100%;height:100%}"}
{"imports": {"flow/": "./flow_generated/typescript/"}}
{"user": "AlmacenNavideno", "meta": {"type": "FeatureCollection", "features": [{"type": "Feature", "properties": {"cluster": 0, "clusterCenter": true, "tweetCount": 22, "likelyHome": true, "likelyWork": true}, "geometry": {"type": "Point", "coordinates": [-67.15646267000002, 18.217122459999988]}}]}, "tweets": {"type": "FeatureCollection", "features": [{"type": "Feature", "properties": {"tweetID": "903380915304501249", "user": "AlmacenNavideno", "text": "Te esperamos desde ma\u00f1ana viernes 1 de sept. para que veas todo lo muevo que\u2026 https://t.co/GHVAbFaJaU", "date": "2017-08-31T22:16:08.000Z", "speed": "", "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-08-31T22:16:08.000Z", "timestamp": 1504217768}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903381717972635648", "user": "AlmacenNavideno", "text": "Te esperamos desde ma\u00f1ana viernes 1 de sept. para que veas todo lo muevo que\u2026 https://t.co/ADKi0rPTPX", "date": "2017-08-31T22:19:20.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-08-31T22:19:20.000Z", "timestamp": 1504217960, "timeDelta": 192}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903382264607784960", "user": "AlmacenNavideno", "text": "Just posted a photo @ Almacen Navide\u00f1o https://t.co/RpyqntMNTE", "date": "2017-08-31T22:21:30.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-08-31T22:21:30.000Z", "timestamp": 1504218090, "timeDelta": 130}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903407654671974401", "user": "AlmacenNavideno", "text": "Just posted a photo @ Almacen Navide\u00f1o https://t.co/Kdwuw26kkM", "date": "2017-09-01T00:02:24.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-01T00:02:24.000Z", "timestamp": 1504224144, "timeDelta": 6054}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903407674070405120", "user": "AlmacenNavideno", "text": "Just posted a photo @ Almacen Navide\u00f1o https://t.co/YOvUT9Oy5o", "date": "2017-09-01T00:02:28.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-01T00:02:28.000Z", "timestamp": 1504224148, "timeDelta": 4}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903409764444528640", "user": "AlmacenNavideno", "text": "Just posted a video @ Almacen Navide\u00f1o https://t.co/Q4KRJhCjHM", "date": "2017-09-01T00:10:47.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-01T00:10:47.000Z", "timestamp": 1504224647, "timeDelta": 499}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903409986994241536", "user": "AlmacenNavideno", "text": "Just posted a video @ Almacen Navide\u00f1o https://t.co/FnDZcKry5k", "date": "2017-09-01T00:11:40.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-01T00:11:40.000Z", "timestamp": 1504224700, "timeDelta": 53}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903410663585968129", "user": "AlmacenNavideno", "text": "Just posted a photo @ Almacen Navide\u00f1o https://t.co/TyZ77MFkHI", "date": "2017-09-01T00:14:21.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-01T00:14:21.000Z", "timestamp": 1504224861, "timeDelta": 161}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903623150491103232", "user": "AlmacenNavideno", "text": "Llego el dia... Esta noche a las 7pm haremos en encendido de nuestro parque navide\u00f1o para esta\u2026 https://t.co/RryKAzzUl9", "date": "2017-09-01T14:18:42.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-01T14:18:42.000Z", "timestamp": 1504275522, "timeDelta": 50661}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "903624413848920064", "user": "AlmacenNavideno", "text": "Horario artistico 1 al 3 Sept...\nViernes 1 - Juan Velez 5:30pm @jantoniooficial \nSabado 2 - UNNA\u2026 https://t.co/PQkZftgJ4c", "date": "2017-09-01T14:23:43.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-01T14:23:43.000Z", "timestamp": 1504275823, "timeDelta": 301}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "905243406213021698", "user": "AlmacenNavideno", "text": "#AlmacenNavide\u00f1o #TuAlmacenDeIdeas #LaGenteQueAdornaLaNavidadEnPR @ Almacen Navide\u00f1o https://t.co/44pbHRpP7y", "date": "2017-09-06T01:37:01.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-06T01:37:01.000Z", "timestamp": 1504661821, "timeDelta": 385998}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "905250977565028355", "user": "AlmacenNavideno", "text": "#AlmacenNavide\u00f1o #TuAlmacenDeIdras #LaGente QueAdornaLaNavidadEnPR @ Almacen Navide\u00f1o https://t.co/TKKVCsrCx4", "date": "2017-09-06T02:07:06.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-06T02:07:06.000Z", "timestamp": 1504663626, "timeDelta": 1805}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "906646194356670465", "user": "AlmacenNavideno", "text": "Una extensa veriedad en cintas navide\u00f1as y bolas decorativas para su arbolito.\n#AlmacenMavide\u00f1o\u2026 https://t.co/AwzZzGKDlq", "date": "2017-09-09T22:31:12.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-09T22:31:12.000Z", "timestamp": 1504996272, "timeDelta": 332646}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "906646817345081347", "user": "AlmacenNavideno", "text": "#AlmacenMavide\u00f1o #TuAlmacenDeIdeas #LaGenteQueAdornaLaNavidadEnPR @ Almacen Navide\u00f1o https://t.co/88YiBfBQRp", "date": "2017-09-09T22:33:40.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-09T22:33:40.000Z", "timestamp": 1504996420, "timeDelta": 148}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "906646893740089345", "user": "AlmacenNavideno", "text": "#AlmacenMavide\u00f1o #TuAlmacenDeIdeas #LaGenteQueAdornaLaNavidadEnPR @ Almacen Navide\u00f1o https://t.co/fKIQ3JGV96", "date": "2017-09-09T22:33:58.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-09T22:33:58.000Z", "timestamp": 1504996438, "timeDelta": 18}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "906647300990046208", "user": "AlmacenNavideno", "text": "#AlmacenMavide\u00f1o #TuAlmacenDeIdeas #LaGenteQueAdornaLaNavidadEnPR @ Almacen Navide\u00f1o https://t.co/uCUImzPDud", "date": "2017-09-09T22:35:35.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-09T22:35:35.000Z", "timestamp": 1504996535, "timeDelta": 97}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "906648102458839040", "user": "AlmacenNavideno", "text": "Ya escogiste tu decoraci\u00f3n??\n#AlmacenNavide\u00f1o #TuAlmacenDeIdeas #LaGenteQueAdornaLaNavidadEnPR @\u2026 https://t.co/I0OZMdiazg", "date": "2017-09-09T22:38:46.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-09T22:38:46.000Z", "timestamp": 1504996726, "timeDelta": 191}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "906648418780577797", "user": "AlmacenNavideno", "text": "#AlmacenNavide\u00f1o #TuAlmacenDeIdeas #LaGenteQueAdornaLaNavidadEnPR @ Almacen Navide\u00f1o https://t.co/j1LBp1D3Wb", "date": "2017-09-09T22:40:02.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-09T22:40:02.000Z", "timestamp": 1504996802, "timeDelta": 76}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "906669133852536832", "user": "AlmacenNavideno", "text": "Ma\u00f1ana Domingo abierto de 11:00am a 5:00pm.\nLos Esperamos!!!!\n#AlmacenNavide\u00f1o #TuAlmacenDeIdeas\u2026 https://t.co/0Vs3wsCLfJ", "date": "2017-09-10T00:02:21.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-10T00:02:21.000Z", "timestamp": 1505001741, "timeDelta": 4939}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "907301055393878017", "user": "AlmacenNavideno", "text": "Sigue llegando mercancia pero aprovecha que son cantidades limitadas...\n#AlmacenNavide\u00f1o\u2026 https://t.co/lCY7PCEZLL", "date": "2017-09-11T17:53:23.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-11T17:53:23.000Z", "timestamp": 1505152403, "timeDelta": 150662}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "907316485659471872", "user": "AlmacenNavideno", "text": "Despues del paso de Irma... Ya esta encendido nuevemente nuestro parque navide\u00f1o... Los\u2026 https://t.co/xponUbAiJs", "date": "2017-09-11T18:54:41.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-11T18:54:41.000Z", "timestamp": 1505156081, "timeDelta": 3678}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}, {"type": "Feature", "properties": {"tweetID": "907379042990514176", "user": "AlmacenNavideno", "text": "Te gustan las pi\u00f1as... lo tenemos!!!\nTe esperamos de Lunes a Viernes 9am a 7pm y Domingos de\u2026 https://t.co/gP3Lf9a4qJ", "date": "2017-09-11T23:03:16.000Z", "speed": 0, "timeD": "", "cluster": 0, "dbscan": "core", "dateStr": "2017-09-11T23:03:16.000Z", "timestamp": 1505170996, "timeDelta": 14915}, "geometry": {"type": "Point", "coordinates": [-67.15646267, 18.21712246]}}]}}
{"lock": false, "importMap": "import_map.json"}
{"lint": {"rules": {"exclude": ["no-extra-semi"]}}, "fmt": {"options": {"lineWidth": 120, "semiColons": false}}}
{"compilerOptions": {"lib": ["deno.ns", "dom"]}}
{"imports": {"@opennetwork/http-representation": "https://cdn.skypack.dev/@opennetwork/http-representation", "@virtualstate/astro-renderer": "https://cdn.skypack.dev/@virtualstate/astro-renderer", "@virtualstate/dom": "https://cdn.skypack.dev/@virtualstate/dom", "@virtualstate/examples": "https://cdn.skypack.dev/@virtualstate/examples", "@virtualstate/fringe": "https://cdn.skypack.dev/@virtualstate/fringe", "@virtualstate/hooks": "https://cdn.skypack.dev/@virtualstate/hooks", "@virtualstate/hooks-extended": "https://cdn.skypack.dev/@virtualstate/hooks-extended", "@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union", "@virtualstate/x": "https://cdn.skypack.dev/@virtualstate/x", "@virtualstate/promise": "https://cdn.skypack.dev/@virtualstate/promise", "@virtualstate/promise/the-thing": "https://cdn.skypack.dev/@virtualstate/promise/the-thing", "@virtualstate/app-history": "./src/app-history.ts", "@virtualstate/app-history/polyfill": "./src/polyfill.ts", "@virtualstate/app-history/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history/event-target": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported": "./src/app-history.ts", "@virtualstate/app-history-imported/polyfill": "./src/polyfill.ts", "@virtualstate/app-history-imported/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history-imported/event-target": "./src/event-target/sync-event-target.ts", "@virtualstate/focus": "https://cdn.skypack.dev/@virtualstate/focus", "dom-lite": "https://cdn.skypack.dev/dom-lite", "iterable": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "https://cdn.skypack.dev/-/iterable@v5.7.0-CNtyuMJo9f2zFu6CuB1D/dist=es2019,mode=imports/optimized/iterable.js": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "uuid": "./src/util/deno-uuid.ts", "whatwg-url": "https://cdn.skypack.dev/whatwg-url", "abort-controller": "https://cdn.skypack.dev/abort-controller", "deno:std/uuid/mod": "https://deno.land/std@0.113.0/uuid/mod.ts", "deno:std/uuid/v4": "https://deno.land/std@0.113.0/uuid/v4.ts", "deno:deno_dom/deno-dom-wasm.ts": "https://deno.land/x/deno_dom/deno-dom-wasm.ts", "urlpattern-polyfill": "https://cdn.skypack.dev/urlpattern-polyfill", "./src/tests/config": "./src/tests/config.ts", "./src/tests/util": "./src/tests/util.ts", "./src/index": "./src/index.ts", "./src": "./src/index.ts", "@virtualstate/space": "./esnext/index.js", "cheerio": "./scripts/nop/index.js"}}
{"tasks": {"test": "deno test --allow-net --allow-write --allow-read *.test.ts"}}
{"tasks": {"check": "deno check mod.ts ./examples/vite.config.mts", "url": "deno run -A npm:vite@3.2.4 examples/url --config ./examples/vite.config.mts", "npm": "deno run -A npm:vite@3.2.4 examples/npm --config ./examples/vite.config.mts"}, "fmt": {"options": {"singleQuote": true}}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:react@18.2.0", "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "types": ["vite/client"]}}
{"tasks": {"astart": "deno run -A --watch=static/,routes/ dev.ts", "start": "deno run -A --watch=static/,routes/,README.md dev.ts", "run": "deno run -A main.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"fmt": {"options": {"lineWidth": 120, "useTabs": true}, "files": {"exclude": [".deno_cache", "deno.lock"]}}, "lint": {"files": {"exclude": [".deno_cache", "deno.lock"]}}, "tasks": {"test": "deno test -A --unstable --no-check", "lint": "deno check mod.ts && deno lint --unstable && deno fmt --check", "deps": "deno run --allow-read=. --allow-write=. --allow-net https://deno.land/x/udd/main.ts deps.ts deps.dev.ts && deno cache --reload --lock=deno.lock deps.ts deps.dev.ts", "demos": "deno run -A .github/demos/generate.ts", "hooks": "export GITROOT=$(git rev-parse --show-toplevel); git config core.hooksPath $GITROOT/.hooks"}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-env --watch main.ts"}}
{"lock": false, "tasks": {"test": "deno test --unstable -A --parallel --doc", "check": "deno check --unstable $(find . -name '*.ts')", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts' -not -path '*/npm/*')"}}
{"exclude": [".github", "www/", "templates/_wip/", "_fresh"], "lock": false, "tasks": {"test": "deno test -A --parallel --unstable --coverage=./cov", "check:types": "deno check **/*.ts && deno check **/*.tsx", "ok": "deno fmt --check && deno lint && deno task check:types && deno task test", "deploy": "deno run --allow-env --allow-net --allow-read scripts/deploy-templates.ts", "cov": "deno coverage ./cov/ --lcov --exclude='test.ts|testdata' > cov.lcov"}, "imports": {"@/": "./", "netzo/": "https://deno.land/x/netzo@v0.2.32/", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.17.1", "preact/": "https://esm.sh/preact@10.17.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.2.1", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.4.0", "std/": "https://deno.land/std@0.190.0/"}}
{"lint": {"rules": {"exclude": ["require-await"]}}, "fmt": {"indentWidth": 4, "lineWidth": 120}, "imports": {"neolace/": "./neolace/", "std/": "https://deno.land/std@0.190.0/"}}
{"lock": false, "tasks": {"check": "deno cache --check=all src/mod.ts", "backport": "deno run --no-prompt --allow-read=. --allow-write=. https://deno.land/x/deno2node@v1.9.0/src/cli.ts tsconfig.json", "dev": "deno fmt && deno lint && deno task check"}, "fmt": {"indentWidth": 4, "proseWrap": "preserve", "exclude": ["./node_modules/", "./out/", "./package-lock.json"]}, "lint": {"exclude": ["./node_modules/", "./out/", "./package-lock.json"]}}
{"lock": false, "fmt": {"exclude": ["tests/assets/json/page1.md", "tests/assets/toml/page1.md", "deps/katex-auto-render", "CHANGELOG.md"]}, "tasks": {"test": "TZ=Z deno test -A", "test:update": "deno task test -- --update", "install": "deno run -A install.ts", "changelog": "deno run --allow-read --allow-write https://deno.land/x/changelog@v2.3.0/bin.ts", "update-deps": "deno run -A --quiet 'https://deno.land/x/udd@0.8.2/main.ts' deps/*.ts", "rollback-exp-deps": "git checkout deps/react.ts && git checkout deps/tailwindcss.ts && git checkout deps/cliffy.ts"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "tasks": {"dev": "deno run --watch --allow-net --allow-read --allow-env --allow-write src/index.js", "start": "deno run --allow-net --allow-read --allow-env --allow-write src/index.js", "fmt": "deno fmt", "fmt:check": "deno fmt --check", "lint": "deno lint"}, "lint": {"include": ["src/"], "rules": {"tags": ["recommended"]}}, "fmt": {"include": ["."], "useTabs": false, "lineWidth": 2000, "indentWidth": 1, "singleQuote": false, "proseWrap": "preserve"}}
{"imports": {}, "tasks": {"test": "deno test --allow-all --unstable ./src"}}
{"tasks": {"lint": "deno fmt --check && deno lint"}}
{"tasks": {"check": "deno check --unstable mod.ts", "fmt": "deno fmt --unstable", "fmt:check": "deno fmt --unstable --check", "lint": "deno lint --unstable", "test:doc": "deno test -A --unstable --doc", "build": "deno run -A --unstable script/build.ts", "run": "deno task build && export PLUGIN_URL=\"./build/\" && deno run -A --unstable", "run:fast": "export PLUGIN_URL=\"./build/\" && deno run -A --unstable"}, "fmt": {"files": {"exclude": ["webview/"]}}}
{"tasks": {"example_atlas": "deno run -A --unstable examples/atlas.ts", "example_frame": "deno run -A --unstable examples/frame.ts", "example_godot": "deno run -A --unstable examples/godot.ts", "example_image": "deno run -A --unstable examples/image.ts", "example_movingsquare": "deno run -A --unstable examples/movingsquare.ts", "example_perlin": "deno run -A --unstable examples/perlin.ts", "example_onclick": "deno run -A --unstable examples/onclick.ts", "example_sprite": "deno run -A --unstable examples/sprite.ts", "example_texturesprite": "deno run -A --unstable examples/texturesprite.ts", "example_transparent_window": "deno run -A --unstable examples/transparent_window.ts"}, "lint": {"files": {"exclude": ["./web", "./docs"]}}, "check": {"files": {"exclude": ["./web", "./docs"]}}}
{"importMap": "import_map.json", "tasks": {"start": "deno run src/mod.ts", "new": "deno run --allow-read=src/trivia --allow-write=src/trivia scripts/new.ts", "compile-debug": "deno compile --import-map=import_map.json -o target/debug/sw-trivia src/mod.ts", "compile-release": "deno task compile-linux & deno task compile-windows & deno task compile-macos-x86 & deno task compile-macos-arm", "compile-linux": "deno compile --import-map=import_map.json --target x86_64-unknown-linux-gnu -o target/release/linux/sw-trivia src/mod.ts", "compile-windows": "deno compile --import-map=import_map.json --target x86_64-pc-windows-msvc -o target/release/windows/sw-trivia src/mod.ts", "compile-macos-x86": "deno compile --import-map=import_map.json --target x86_64-apple-darwin -o target/release/macos-intel/sw-trivia src/mod.ts", "compile-macos-arm": "deno compile --import-map=import_map.json --target aarch64-apple-darwin -o target/release/macos-apple/sw-trivia src/mod.ts"}}
{"tasks": {"test": "deno test --allow-read --allow-write"}}
{"fmt": {"options": {"singleQuote": true}}, "tasks": {"changeset": "deno run --allow-read --allow-write --allow-run main.ts", "dev": "deno run --watch main.ts", "test": "deno test -A", "test:watch": "deno test --watch -A"}}
{"lint": {"files": {"exclude": ["./node_modules/", "./.next/", "./public/"]}}, "fmt": {"files": {"exclude": ["./node_modules/", "./.next/", "./public/"]}, "options": {"useTabs": true, "lineWidth": 80, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}}
{"fmt": {"options": {"useTabs": true, "singleQuote": true, "proseWrap": "never"}}}
{"tasks": {"bench:all": "deno run -A --unstable benchmarks/bench.ts", "bench:gather": "deno run -A --unstable benchmarks/gather.ts", "deno_bindgen": "deno run -A https://deno.land/x/deno_bindgen@0.6.0/codegen.ts", "fix:format": "dprint fmt", "fix": "deno task fix:format", "init": "pnpm install && deno task rust", "lint:format": "dprint check", "lint:ts": "deno lint", "lint": "deno task lint:ts && deno task lint:format", "lock:update": "deno run --allow-run=deno --allow-read config/scripts/cache.ts", "lock": "deno run --allow-run=deno --allow-env=CI --allow-read config/scripts/cache.ts --reload", "rust:deno": "deno task deno_bindgen -- --features deno", "rust:ffi": "cargo build -p benchmark_rust --lib --release --features ffi", "rust:node": "pnpm napi build -p benchmark_rust --release --js false --no-dts-header --features node --cargo-cwd benchmarks/rust && mv benchmark_rust.node benchmarks", "rust:wasm:create": "cargo build -p benchmark_rust --lib --target wasm32-unknown-unknown --release --features wasm", "rust:wasm:deno": "wasm-bindgen --target deno --out-dir benchmarks/wasm ./target/wasm32-unknown-unknown/release/benchmark_rust.wasm", "rust:wasm:node": "deno run -A config/scripts/node_wasm.ts", "rust:wasm": "deno task rust:wasm:create && deno task rust:wasm:deno && deno task rust:wasm:node", "rust": "deno task rust:node && deno task rust:ffi && deno task rust:deno && deno task rust:wasm", "start": "deno run -A --watch=static/,routes/ dev.ts", "typecheck": "deno --unstable check -A config/scripts/scripts/typecheck.ts", "update:deps": "deno run --allow-net --allow-read --allow-write https://deno.land/x/udd@0.7.5/main.ts import_map.json \"*.ts\"", "update:dprint": "dprint config update", "update": "deno task update:dprint && deno task update:deps"}, "compilerOptions": {"noUncheckedIndexedAccess": true}, "lint": {"files": {"exclude": ["**/fixtures", "**/*-lock.json", "**/snapshots", "node_modules/**"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo", "camelcase", "default-param-last", "eqeqeq", "no-await-in-loop", "no-eval", "no-sparse-arrays", "no-throw-literal", "single-var-declarator", "triple-slash-reference"], "exclude": ["ban-types"]}}, "importMap": "./import_map.json"}
{"tasks": {"test": "deno test -A", "test:cov": "deno test -A --coverage=coverage && deno coverage ./coverage --lcov --output=coverage.lcov", "start": "deno run -A ./cli.ts", "build": "deno compile --allow-net --allow-read --allow-write --output ./twimedia ./cli.ts "}}
{"tasks": {"start": "deno run -A tasks/start/main.ts"}}
{"fmt": {"options": {"lineWidth": 100}}}
{"tasks": {"docs:gen": "npx documentation readme src/serpapi.ts --section=Functions --shallow && deno fmt", "test": "ENV_TYPE=local deno test tests/ --allow-env --allow-read --allow-net --fail-fast", "test:watch": "deno task test --watch", "test:cov": "rm -rf cov_profile && deno task test --coverage=cov_profile && deno coverage cov_profile", "test:ci": "deno test tests/ --allow-env --allow-read --allow-net", "npm": "deno run -A scripts/build_npm.ts"}, "fmt": {"files": {"exclude": ["npm/", "examples/node", "smoke_tests/"]}}, "lint": {"files": {"exclude": ["npm/", "examples/node", "smoke_tests/"]}}, "test": {"files": {"include": ["tests/"]}}, "compilerOptions": {"lib": ["dom", "dom.iterable", "deno.ns"]}, "lock": false}
{"name": "sqlite-ulid", "version": "0.2.1", "github": "https://github.com/asg017/sqlite-ulid", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "compilerOptions": {"lib": ["deno.ns", "deno.unstable", "dom", "dom.iterable", "dom.asynciterable"], "strict": true}, "lint": {"files": {"include": ["src/", "examples/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"]}}, "fmt": {"files": {"include": ["src/", "examples/", "./deno.jsonc"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}}
{"fmt": {"options": {"lineWidth": 88, "useTabs": true}}}
{"tasks": {"start": "deno task run app.ts", "dev": "deno task dev-run --watch scripts/dev.ts", "run": "deno run --allow-net --allow-read=static,logs --allow-write=logs --allow-env=DENO_DEPLOYMENT_ID", "dev-run": "deno run --allow-run --allow-net --allow-read --allow-write=logs,routes.ts --allow-env=DENO_DEPLOYMENT_ID,PATH,PATHEXT"}}
{"lock": false, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update ."}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "$std/": "https://deno.land/std@0.193.0/", "@core/": "./core/", "@private/": "./private/"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run --allow-net=0.0.0.0:8000 --allow-read --watch server.ts", "compile": "deno compile --allow-net=0.0.0.0:8000 --allow-read server.ts"}}
{"lint-staged": {"*": "deno lint && deno fmt", "deno.jsonc": "deno task setup-hooks"}, "tasks": {"run": "deno run --allow-env --allow-read --allow-net", "dev": "deno task run --watch main.ts", "main": "deno task run main.ts", "start": "deno task run --watch server.ts", "test": "deno test --allow-env --allow-read --allow-net --allow-none", "cov": "deno task test --coverage=cov_profile; deno coverage cov_profile", "lint": "deno lint --ignore=cov_profile", "fmt": "deno fmt --ignore=cov_profile", "check": "deno check ./**/*.ts", "ci": "deno task check && deno task lint && deno task fmt --check && deno task test", "deps": "deno run --allow-read --allow-write --allow-net --allow-run https://deno.land/x/udd@0.8.2/main.ts --test='deno task test' deno.jsonc ./**.*.ts", "setup-hooks": "deno run --allow-read --allow-run https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/setup-hooks.ts", "pre-commit": "deno task doc && deno run --allow-read --allow-env --allow-run --allow-write https://pax.deno.dev/kawarimidoll/deno-dev-template/scripts/lint-staged.ts", "pre-push": "deno task ci", "doc": "deno task markdown && deno task vimdoc", "markdown": "deno run --allow-net --allow-read --allow-write https://pax.deno.dev/Omochice/podeno/cli.ts markdown --in ./pod/ahdr.pod --out ./README.md", "vimdoc": "deno run --allow-net --allow-read --allow-write https://pax.deno.dev/Omochice/podeno/cli.ts vimdoc --in ./pod/ahdr.pod --out ./doc/ahdr.txt"}, "fmt": {"useTabs": false, "lineWidth": 100, "indentWidth": 2, "singleQuote": false, "include": ["denops"]}, "lint": {"include": ["denops"]}, "lock": false}
{"name": "skia_canvas", "github": "https://github.com/DjDeveloperr/skia_canvas", "verision": "0.5.4", "tasks": {"build": "cd native/build && CC=clang CXX=clang++ cmake .. && cmake --build . --config Release", "build-win": "rm -rf native/build && mkdir native/build && cd native/build && cmake .. -G \"Visual Studio 17 2022\" -T ClangCL && cmake --build . --config Release", "test": "deno run -A --unstable ./test/test.ts", "test-prebuilt": "deno run -A --unstable --import-map=./test/import_map.json ./test/test.ts", "test-pdf": "deno run -A --unstable ./test/pdf.ts", "test-svg": "deno run -A --unstable ./test/svg.ts", "bench-deno": "deno bench -A --unstable bench/deno.js", "bench-node": "node bench/node.mjs", "bench": "deno run -A --unstable bench/main.js", "build-skia": "deno run -A --unstable scripts/build_skia.ts"}, "fmt": {"exclude": ["skia", "bench/node_modules", "build", "native/build"]}}
{"fmt": {"files": {"include": [], "exclude": ["."]}}, "tasks": {"build": "./admin/build.sh", "cover": "./admin/cover.sh", "dev": "deno run --allow-read=./ --allow-run ./admin/watchDev.ts", "serve": "deno run --allow-env --allow-net --allow-read ./admin/dev-server.ts", "test": "deno test --allow-read=./ --allow-write=./docs ./sanguine"}}
{"imports": {"dotenv/": "https://deno.land/x/dotenv@v3.2.2/", "std/": "https://deno.land/std@0.179.0/"}, "tasks": {"cli": "deno run --allow-net --allow-read --allow-env cli.ts", "server": "deno run --allow-net --allow-write --allow-read --allow-env server.ts"}}
{"lint": {"exclude": ["generated/", "cov_profile/"]}, "fmt": {"exclude": ["generated/", "cov_profile/"]}, "tasks": {"run": "deno run --allow-net --allow-env --allow-read src/mod.ts", "run:w": "deno run --allow-net --allow-env --allow-read --watch ./src/mod.ts", "run:debug": "deno run --inspect-brk --allow-net --allow-env --allow-read src/mod.ts", "test": "deno test --allow-net --allow-env --allow-read --no-check=remote --coverage=cov_profile", "coverage": "deno coverage cov_profile", "bench": "deno bench --unstable --allow-net --allow-env --allow-read", "bench:json": "deno bench --allow-net --allow-env --allow-read --json > bench_res.json", "db:push": "deno run -A --unstable npm:prisma db push", "db:pull": "deno run -A --unstable npm:prisma db pull", "db:init": "deno run --allow-net --allow-env --allow-read ./init/mod.ts", "deps:reload": "deno cache --lock=deno.lock --lock-write src/deps.ts", "deps:write": "deno cache --lock=deno.lock --lock-write src/deps.ts"}, "lock": true}
{"tasks": {"format": "deno fmt", "lint": "deno lint", "npm:add": "deno run -A https://esm.sh/v98 add", "npm:update": "deno run -A https://esm.sh/v98 update", "npm:remove": "deno run -A https://esm.sh/v98 remove", "run": "deno run --allow-net --allow-read src/mod.ts", "test": "deno test --fail-fast"}, "compilerOptions": {"lib": ["deno.window"], "strict": true, "noUncheckedIndexedAccess": true}, "lint": {"files": {"include": ["src/"]}, "rules": {"tags": ["recommended"]}}, "fmt": {"files": {"include": ["src/", ".vscode/settings.json", "deno.jsonc"]}}}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "deno run --watch --allow-read --allow-env --allow-net src/main.ts deleteit.yaml"}, "fmt": {"options": {"semiColons": false, "singleQuote": true}}, "imports": {"grammy": "https://deno.land/x/grammy@v1.15.3/mod.ts", "std/": "https://deno.land/std@0.180.0/", "src/": "./src/", "test/": "./test/"}}
{"compilerOptions": {"allowJs": true, "strict": true}, "lint": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo", "camelcase", "default-param-last", "no-const-assign", "no-eval", "prefer-ascii"]}}, "fmt": {"files": {"include": ["."], "exclude": ["dist/", "node_modules/", "cov_profile/"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}}}
{"tasks": {"run": "deno run --allow-net --allow-env --allow-write --allow-read --watch mod.ts", "compile": "deno compile -A -r --import-map src/import_map.jsonc --config deno.jsonc --output build/server mod.ts"}, "importMap": "./import_map.json", "compilerOptions": {"strict": true}}
{"tasks": {"check": "deno fmt && deno lint", "run": "deno run --watch -A main.ts"}, "imports": {"std/": "https://deno.land/std@0.197.0/", "grove": "https://deno.land/x/grove@0.5.0-pre.19/mod.ts", "zod": "https://deno.land/x/zod@v3.21.4/mod.ts", "serializable": "https://deno.land/x/serializable@0.3.4/mod.ts", "jose": "https://deno.land/x/jose@v4.14.4/index.ts"}}
{"compilerOptions": {"strict": true}, "lint": {"rules": {"tags": ["recommended"], "include": ["camelcase", "eqeqeq", "explicit-function-return-type", "no-await-in-loop", "no-const-assign", "no-eval"]}, "files": {"include": ["src/"]}}, "fmt": {"files": {"include": ["src/"]}, "options": {"useTabs": false, "indentWidth": 2, "singleQuote": false, "proseWrap": "always", "lineWidth": 80}}}
{"tasks": {"gen-docs": "deno doc mod.ts --json >> denoDoc.json", "lint": "deno lint --unstable mod.ts", "test": "deno test --allow-net mod_test.ts", "build": "deno run -A _build.ts", "publish": "cd npm && npm publish --access public"}}
{"lint": {"include": ["src/"], "exclude": ["src/entry.dev.tsx", "src/entry.express.tsx", "src/entry.ssr.tsx"]}}
{"tasks": {"run": "deno run --unstable --allow-net --allow-env --allow-read --allow-write src/index.ts", "run:dev": "ENV_PATH=.env.dev deno task run", "run:prod": "ENV_PATH=.env deno task run", "cache-reload": "deno cache --reload --lock=deno.lock --lock-write src/index.ts", "fmt": "deno fmt src/ --options-single-quote --options-line-width=120 --check", "fmt:fix": "deno fmt test/ src/ --options-single-quote --options-line-width=120", "test": "ENV_PATH=.env.test deno test --unstable --allow-read --allow-net --allow-env --allow-write --coverage=coverage", "lcov": "deno coverage coverage --lcov --output=coverage/report.lcov", "clean": "rm -rf ./npm ./coverage", "cover": "deno task clean && deno task test && deno task lcov && genhtml -o coverage/html coverage/report.lcov"}}
{"tasks": {"dev": "deno run --watch --allow-all main.ts", "start": "deno run --allow-all main.ts"}}
{"fmt": {"files": {"exclude": ["README.md", "./doc/pat.md"]}}}
{"fmt": {"options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4}}}
{"importMap": "importMap.json", "tasks": {"build": "deno run -A ./scripts/build/build.ts", "dev": "deno run -A ./scripts/build/dev.ts", "get-vanilla-data": "deno run -A ./scripts/vanillaData/main.ts", "test": "deno run -A ./scripts/build/build.ts && deno test --unstable --allow-net --allow-read", "test-silent": "deno run -A ./scripts/build/build.ts && deno test --unstable --allow-net --allow-read -- --silent"}}
{"tasks": {"run": "flix run", "brun": "flix build-jar && java -cp 'lib/*:jy_flix.jar' Main /home/itang/bin/jiayou.toml", "brun-win": "flix build-jar && java -cp 'lib/*;jy_flix.jar' Main D:\\ProgramData\\bin\\jiayou.toml", "native-win": "flix build-jar && native-image -cp 'lib/*;jy_flix.jar' Main --no-fallback --verbose -H:-CheckToolchain -H:Name=jy_flix"}}
{"name": "sqlite-jsonschema", "version": "0.2.3", "github": "https://github.com/asg017/sqlite-jsonschema", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"lock": false, "tasks": {"start": "deno run --unstable -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"devserver": "deno --unstable run --watch --allow-read --allow-net --allow-env main.ts"}}
{"fmt": {"options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}, "lint": {"rules": {"exclude": ["no-unused-vars", "prefer-const", "require-await", "no-explicit-any", "ban-types"]}}}
{"tasks": {"clean": "rm -fr ./_site", "build": "deno run --allow-env=LUME_ENV --allow-read=. --allow-write=./_site --allow-net=localhost:8080 ./build.ts", "serve": "deno run --allow-env=LUME_ENV --allow-read=. --allow-write=./_site --allow-net=localhost:8080,0.0.0.0:8000 ./serve.ts", "deploy": "deno task clean && deno task build && wrangler pages deploy --project-name today-bible ./_site"}, "imports": {"std/": "https://deno.land/std@0.200.0/", "lume/": "https://deno.land/x/lume@v1.18.4/"}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-env src/main.ts", "start:debug": "deno run --inspect-brk --allow-net --allow-read --allow-env src/main.ts", "dev": "deno run --allow-net --allow-read --allow-env --watch src/main.ts", "test": "deno test --allow-net --allow-read --allow-env --allow-run --allow-write", "qa:static": "deno fmt --check && deno lint", "console": "deno repl --allow-all --eval-file=console.ts", "test:smoke": "./test/index.sh"}, "importMap": "import_map.json", "fmt": {"options": {"singleQuote": true}}, "compilerOptions": {"lib": ["dom", "deno.ns"]}}
{"tasks": {"dev": "deno run --allow-env --allow-read --allow-net --watch main.ts", "start": "deno run --allow-env --allow-read --allow-net main.ts"}}
{"tasks": {"app-codegen": "cargo build -p app_rs --features codegen", "build-vm": "cargo build -p vm", "build": "deno task app-codegen && deno task build-vm", "vm-exec": "cargo run --bin vm", "e2e": "deno task build && deno task vm-exec"}}
{"tasks": {"dev": "deno run --watch --allow-net --allow-read --allow-write main.ts"}}
{"compilerOptions": {"lib": ["deno.window", "deno.ns"], "strict": true}, "lint": {"files": {"include": ["src"], "exclude": ["public"]}, "rules": {"tags": ["recommended"], "exclude": []}}, "fmt": {"files": {"include": ["src/"], "exclude": [".vscode", ".env"]}, "options": {"useTabs": true, "lineWidth": 100, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}}, "tasks": {"dev": "deno run -A --watch ./src/server.ts"}}
{"fmt": {"lineWidth": 100}, "tasks": {"update-lockfile": "deno cache --lock-write main.ts deps.ts && deno cache group_test.ts"}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-env main.ts", "dev": "deno run --watch --allow-all index.ts", "test": "deno test -allow-all"}}
{"tasks": {"dev": "deno --unstable run -A -c=deno.dev.jsonc --watch=static/,routes/ dev.ts", "start": "deno --unstable run -A -c=deno.jsonc --watch=static/,routes/ dev.ts", "pack": "deno fmt && deno lint && deno task start", "esm:add": "deno run -A https://esm.sh/ add", "esm:update": "deno run -A https://esm.sh/ update", "esm:remove": "deno run -A https://esm.sh/ remove"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "types": ["./types.d.ts"]}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "fmt": {"semiColons": false, "singleQuote": true}, "imports": {"@/": "./", "$fresh/": "https://deno.land/x/fresh@1.3.1/", "@twind/": "https://esm.sh/@twind/", "@trpc/client": "https://esm.sh/@trpc/client@10.37.1", "@trpc/server": "https://esm.sh/@trpc/server@10.37.1", "@trpc/server/": "https://esm.sh/@trpc/server@10.37.1/", "kvdex": "https://deno.land/x/kvdex@v0.5.3/mod.ts", "kv_oauth": "https://deno.land/x/deno_kv_oauth@v0.3.0/mod.ts", "zod": "https://esm.sh/zod@3.21.4", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "react": "https://esm.sh/preact@10.15.1/compat", "react/": "https://esm.sh/preact@10.15.1/compat/", "@preact/signals-core": "https://esm.sh/@preact/signals-core@1.3.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "use-sync-external-store": "https://esm.sh/*use-sync-external-store@1.2.0", "use-sync-external-store/": "https://esm.sh/*use-sync-external-store@1.2.0/", "swr": "https://esm.sh/*swr@2.2.0", "swr/": "https://esm.sh/*swr@2.2.0/", "@trpc-swr/client": "https://esm.sh/*@trpc-swr/client@1.0.2"}, "scopes": {}}
{"fmt": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve", "exclude": ["src/js/web3.min.js", "src/css/normalize.min.css"]}, "lint": {"exclude": ["src/js/main.js", "src/js/web3.min.js"]}, "lock": false}
{"importMap": "import_map.json", "fmt": {"options": {"singleQuote": true}, "files": {"include": ["tests/", "scripts/"], "exclude": ["src/"]}}, "lint": {"files": {"include": ["tests/", "scripts/"]}, "rules": {"tags": ["recommended"], "exclude": ["no-explicit-any", "no-empty", "no-unused-vars"], "include": ["eqeqeq", "no-const-assign", "no-throw-literal"]}}}
{"compilerOptions": {"isolatedModules": false}}
{"version": "1.1.7", "tasks": {"dev": "deno run -A --watch=src src/main.ts --url 'https://petstore3.swagger.io/api/v3/openapi.json' --outDir=out", "version": "echo '1.1.7' > release/version", "build:npm": "deno run -A src/npm/index.ts", "build:mac": "deno compile -A src/main.ts --output release/stc --target x86_64-apple-darwin", "build:mac-m": "deno compile -A src/main.ts --output release/stc-m --target aarch64-apple-darwin", "build:win": "deno compile -A src/main.ts --output release/stc-win --target x86_64-pc-windows-msvc", "build:linux": "deno compile -A src/main.ts --output release/stc-linux --target x86_64-unknown-linux-gnu"}, "imports": {"/": "./", "./": "./", "std/": "https://deno.land/std@0.195.0/", "x/": "https://deno.land/x/"}, "lint": {"include": ["src/", "test/"], "exclude": ["**/out/**/*", "**/shared/**/*", "dist"]}, "fmt": {"include": ["src/", "test/"], "exclude": ["out/**/*", "dist", "**/npm/package.json"]}, "test": {"include": ["test/"], "exclude": ["out", "dist"]}}
{"tasks": {"test:install": "deno install --unstable --allow-env=PGDATABASE,PGHOST,PGPORT,PGUSER,PGPASSWORD,PGAPPNAME --allow-net=deno.land,localhost:54320 --allow-read=. --allow-write=tests/nessie.config.ts,tests/db -f  https://deno.land/x/nessie/cli.ts", "test:build": "cd tests && docker-compose up -d && nessie migrate && cd ..", "test:start": "cd tests && deno test --unstable -A; cd .."}}
{"importMap": "import_map.json", "tasks": {"start": "pnpm --workspace-root run sync-deps && deno run --allow-net main.ts", "dev": "pnpm --workspace-root run sync-deps && deno run --watch --allow-net main.ts", "build": "pnpm --workspace-root run sync-deps && mkdir -p ./dist && deno bundle main.ts ./dist/main.js", "dist": "pnpm --workspace-root run sync-deps && deno run --allow-run --allow-read --allow-write ./dist.ts", "dist:pre": "git rev-parse HEAD && deno bundle routes.ts ./dist/routes.js", "compile": "deno compile --allow-net --import-map import_map.json -o ./dist/dandanplay-resource-service main.ts"}, "fmt": {"options": {"indentWidth": 2, "lineWidth": 100, "proseWrap": "always", "singleQuote": true, "useTabs": false}}, "lint": {"files": {"exclude": ["dist/"]}}}
{"imports": {"https://deno.land/x/deno_kv_oauth@$VERSION/": "./", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1"}, "tasks": {"demo": "deno run --allow-net --allow-env --allow-read --unstable --watch=demo.ts,mod.ts demo.ts", "check:license": "deno run -A tools/check_license.ts --check", "check:types": "deno check --unstable **/*.ts", "check": "deno task check:license && deno task check:types", "test": "KV_PATH=:memory: deno test --unstable --allow-env --allow-read --allow-run --parallel --trace-ops --coverage=./cov", "ok": "deno fmt --check && deno lint && deno task check && deno task test", "cov": "deno coverage ./cov/ --lcov --exclude='test.ts|testdata' > cov.lcov", "update": "deno run -A https://deno.land/x/udd/main.ts --test=\"deno task test\" deps.ts dev_deps.ts"}, "exclude": ["cov/"]}
{"fmt": {"indentWidth": 2, "exclude": ["./cov_profile/"]}, "lint": {"rules": {"exclude": ["no-explicit-any"]}}, "tasks": {"test": "deno test --parallel --coverage=cov_profile", "coverage": "deno coverage cov_profile", "test:coverage": "deno task test && deno task coverage", "test:cov": "deno task test:coverage"}, "imports": {"~/": "./src/", "#/": "./"}}
{"tasks": {"print-ports": "deno run --allow-ffi --unstable examples/print_ports.ts"}}
{"imports": {"std/": "https://deno.land/std@0.177.0/"}, "tasks": {"dev": "deno run -A --watch main.ts"}}
{"fmt": {"files": {"include": ["bulbofile.js"]}}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-env main.ts", "dev": "deno run --watch --allow-all main.ts", "test": "deno test db_test.ts"}}
{"fmt": {"lineWidth": 120, "include": ["./src", "./scripts"]}, "lint": {"include": ["./src", "./scripts"]}}
{"imports": {"deno_std/": "https://deno.land/std@0.200.0/", "esm.sh/": "https://esm.sh/v131/"}, "compilerOptions": {"allowJs": true, "strict": true, "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}, "tasks": {"build": "deno task clean && deno task test-cov ", "clean": "rm -rf dist/ coverage/", "fmt": "deno fmt", "test-cov": "deno test --coverage=coverage/json --no-check -A && deno coverage coverage/json --lcov --output=coverage/lcov.info", "html-report": "deno task clean && deno task test-cov && genhtml -o coverage/html coverage/lcov.info"}, "fmt": {}}
{"tasks": {"gen": "deno run --allow-read --allow-write ./gen.ts"}, "fmt": {"options": {"lineWidth": 120, "indentWidth": 2}, "files": {"exclude": ["gamedata/**/*", "README.md"]}}}
{"tasks": {"token": "deno run --allow-read --allow-write --allow-net token.js", "followings": "deno run --allow-net --allow-write followings.js", "pawoo": "deno run --allow-net --allow-write pawoo.js"}, "compilerOptions": {"strict": false}}
{"tasks": {"dev": "deno run --watch --allow-net=0.0.0.0:80 --allow-read server/server.ts", "css:dev": "twd -w client/**/*.html -o client/public/tailwind.css"}, "fmt": {"indentWidth": 2, "semiColons": true, "useTabs": false}}
{"tasks": {"start": "deno run -A --import-map=./import_map.json ./mod.ts", "test": "deno test --import-map=./import_map.json", "lint": "deno lint", "lock": "deno cache --import-map=./import_map.json --lock lock.json --lock-write ./mod.ts"}, "fmt": {"options": {"lineWidth": 120, "indentWidth": 2, "singleQuote": false, "useTabs": false}, "files": {"exclude": ["./lock.json"]}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "migrate": "deno run -A utils/db_migration.ts", "migrate_up": "deno run -A utils/db_migration.ts --up", "migrate_down": "deno run -A utils/db_migration.ts --down"}, "importMap": "./import_map.json"}
{"lock": false, "tasks": {"start": "deno run --unstable -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "lib": ["dom", "dom.iterable", "esnext", "deno.ns", "deno.unstable"]}}
{"tasks": {"dev": "we'll add as soon as deno is ready for us :)"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom"]}, "fmt": {"options": {"lineWidth": 100}}}
{"fmt": {"options": {"singleQuote": true}}, "lint": {"rules": {"tags": ["recommended"]}}}
{"tasks": {"test": "RUST_BACKTRACE=full cargo nextest run --features test", "test_log": "RUST_BACKTRACE=full NEXTEST_FAILURE_OUTPUT=immediate cargo nextest run --features test", "fuzz": "cargo +nightly fuzz run rich-text-utf16", "fuzz-match": "cargo +nightly fuzz run rich-text-match", "flame": "CARGO_PROFILE_RELEASE_DEBUG=true cargo flamegraph --root --example bench -- automerge", "example": "DEBUG=\"*\" cargo run --example bench -- automerge", "example-encode": "cargo run --example bench -- encode", "bench": "cargo bench"}}
{"tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "imports": {"lume/": "https://deno.land/x/lume@v1.16.1/"}}
{"fmt": {"options": {"indentWidth": 4, "lineWidth": 120, "singleQuote": true}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}}
{"fmt": {"options": {"useTabs": true}}, "compilerOptions": {"lib": ["deno.shared_globals"]}}
{"imports": {"dotenv/": "https://deno.land/std@0.194.0/dotenv/", "capitalize": "https://esm.sh/v128/capitalize@2.0.4", "chalk": "https://esm.sh/v128/chalk@5.3.0", "exif": "https://esm.sh/v128/exif@0.6.0", "image-size": "https://esm.sh/v128/image-size@1.0.2", "js-beautify": "https://esm.sh/v128/js-beautify@1.14.9", "mkdirp": "https://esm.sh/v128/mkdirp@3.0.1", "node-fetch": "https://esm.sh/v128/node-fetch@3.3.1", "wasm-vips/lib/vips-es6.js": "./library/wasm-vips@0.0.5/lib/vips-es6.js", "archiver": "npm:archiver@5.3.1", "fs-extra": "npm:fs-extra@11.1.1", "htm": "https://esm.sh/v128/htm@3.1.1", "lit": "https://esm.sh/v128/lit@2.7.6", "markdown-it": "https://esm.sh/v128/markdown-it@13.0.1", "markdown-it-deflist": "https://esm.sh/v128/markdown-it-deflist@2.1.0", "preact": "https://esm.sh/v128/preact@10.16.0", "preact/hooks": "https://esm.sh/v128/preact@10.16.0/hooks?external=preact", "preact-render-to-string": "https://esm.sh/v128/preact-render-to-string@6.2.0?external=preact", "xstate": "https://esm.sh/v128/xstate@4.38.1"}, "tasks": {"dev": "deno run --watch --allow-read=./_public,./client.js,./components,./css,./data,./helpers,./machines,./_api,./_archives,./_pictures --allow-net=0.0.0.0:4000 server-deno.js", "build": "deno run --allow-env --allow-read=./ --allow-write=./_site --allow-sys=uid build.js", "start": "cd ./_site && deno run --allow-read=./ --allow-net=0.0.0.0:4000 ../file-server.js", "create": "deno task create:images && deno task create:albums && deno task create:archives", "create:images": "deno run --allow-read=./ --allow-write=./_pictures create/images.js", "create:albums": "deno run --allow-env --allow-read=./ --allow-write=./_api,./_pictures create/albums-deno.js", "create:archives": "deno run --allow-env=__TESTING_MKDIRP_PLATFORM__,__TESTING_MKDIRP_NODE_VERSION__ --allow-read=./ --allow-write=./_archives create/archives.js", "esm:add": "deno run --allow-read=./deno.json,import_map.json --allow-write=./import_map.json --allow-net=esm.sh https://esm.sh/v128 add", "esm:update": "deno run --allow-read=./deno.json,import_map.json --allow-write=./import_map.json --allow-net=esm.sh https://esm.sh/v128 update", "esm:remove": "deno run --allow-read=./deno.json,import_map.json --allow-write=./import_map.json --allow-net=esm.sh https://esm.sh/v128 remove"}}
{"tasks": {"check": "bash -c 'deno check **/*.ts'", "start": "deno run -A --watch bot.ts"}, "importMap": "deno.json", "imports": {"@grammyjs/files": "https://deno.land/x/grammy_files@v1.0.4/mod.ts", "@grammyjs/parse-mode": "https://deno.land/x/grammy_parse_mode@1.5.0/mod.ts", "@kidonng/tz-offset": "https://esm.sh/@kidonng/tz-offset@1.1.0", "@octokit/rest": "https://esm.sh/@octokit/rest@19.0.7", "date-fns": "https://esm.sh/date-fns@2.29.3", "deno_extras": "https://deno.land/x/deno_extras@v0.7.1/mod.ts", "grammy": "https://deno.land/x/grammy@v1.14.1/mod.ts", "std/": "https://deno.land/std@0.177.0/", "strip-indent": "https://esm.sh/strip-indent@4.0.0"}}
{"tasks": {"check": "deno fmt && deno lint && deno check mod.ts", "release": "deno eval 'import \"https://denopkg.com/deco-cx/deco/scripts/release.ts\"'"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"migrate": "deno run -A --unstable npm:prisma migrate dev --name init", "dev": "deno run -A --unstable main.ts"}}
{"compilerOptions": {"target": "esnext", "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"importMap": "import-map.json", "tasks": {"dev": "deno run --watch main.ts"}}
{"tasks": {"check": "deno fmt --check && deno lint", "upgrade": "deno run -A mod.ts"}, "lock": false}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "docker": "docker compose build && docker compose up", "docker:clear": "docker compose rm --force && docker compose down && docker volume rm corporate_db_data", "docker:reset": "deno task docker:clear || true && deno task docker"}, "importMap": "./import_map.json"}
{"fmt": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve", "exclude": ["public/js/sweetalert.js"]}, "lint": {"rules": {"exclude": ["no-explicit-any", "no-window-prefix"]}, "exclude": ["public/js/sweetalert.js"]}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}, "importMap": "./import_map.json", "lock": false}
{"importMap": "import_map.json", "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable"]}, "tasks": {"build": "deno task lume", "serve": "deno task lume -s", "lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -"}, "lint": {"files": {"exclude": ["./_site"]}, "rules": {"tags": ["recommended"]}}, "fmt": {"files": {"exclude": ["./_site"]}}}
{"tasks": {"build:node": "deno run -A ./build.ts"}, "lint": {"files": {"exclude": ["./npm", "./coverage"]}}, "fmt": {"files": {"exclude": ["./npm", "./coverage"]}}, "test": {"files": {"exclude": ["./npm", "./coverage"]}}}
{"tasks": {"run": "deno run --allow-net --allow-env main.ts"}}
{"tasks": {"test": "deno test --import-map=./_test_import_map.json --doc", "build:npm": "deno run -A --no-lock _tools/build_npm.ts"}, "fmt": {"exclude": ["CHANGELOG.md"]}, "lint": {"exclude": ["CHANGELOG.md"]}, "test": {"exclude": ["CHANGELOG.md", "npm"]}, "compilerOptions": {"noImplicitReturns": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "tasks": {"start": "deno run --allow-net --allow-read $WATCH    bin.ts --port.http 7999 --port.https 8999", "dev": "WATCH=--watch deno task start"}}
{"tasks": {"gen": "deno run --allow-read --allow-write --allow-env ./gen.ts"}, "fmt": {"options": {"lineWidth": 120, "indentWidth": 2}, "files": {"exclude": ["gamedata/**/*", "README.md"]}}}
{"compilerOptions": {"allowJs": false, "strict": true}, "lint": {"files": {"include": ["src/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo", "no-implicit-any", "explicit-function-return-type"], "exclude": ["no-debugger", "no-console"]}}, "tasks": {"start": "deno run -A src/main.ts", "dev": "deno run -A --watch src/main.ts", "inspect": "deno run -A --inspect=0.0.0.0:9229 src/main.ts"}, "importMap": "./import_map.json"}
{"fmt": {"options": {"indentWidth": 4, "proseWrap": "preserve", "useTabs": true}}, "importMap": "import_map.json", "tasks": {"build": "deno task lume", "cache:rebuild": "rm ./deno.lock && deno cache --reload _config.js", "lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable --allow-read --allow-write=./_distribution --allow-net=0.0.0.0:3000,deno.land,cdn.deno.land --allow-sys --allow-env -", "serve": "deno task lume --serve"}}
{"imports": {"@js-temporal/polyfill": "npm:@js-temporal/polyfill@0.4.4", "ical.js": "npm:ical.js"}, "tasks": {"run": "deno run --allow-read=$HOME/.calendars/disroot --allow-net src/index.ts $HOME/.calendars/disroot"}}
{"tasks": {"prepare": "/root/.deno/bin/nessie migrate && /root/.deno/bin/nessie seed", "test": "deno test -A --unstable tests/integration"}}
{"tasks": {"test": "deno run -A --unstable test.ts"}}
{"imports": {"./": "./", "/": "./", "~/": "./src/", "ask": "https://deno.land/x/ask@1.0.6/mod.ts", "color": "https://deno.land/std@0.194.0/fmt/colors.ts", "dotenv": "https://deno.land/std@0.194.0/dotenv/mod.ts", "openai": "npm:openai@^3.3.0"}}
{"tasks": {"dev": "COMPUTED_PATH='../factory/computed.ts' deno run -A ./server.tsx", "start": "COMPUTED_PATH='../factory/computed.ts' ULTRA_MODE=production deno run -A --no-check --no-remote ./server.tsx", "build": "deno run -A ./build.ts"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react"}, "importMap": "./importMap.json"}
{"tasks": {"build": "deno run --allow-all mod.ts", "serve": "deno run --allow-all serve.ts", "dev": "deno task serve"}, "imports": {"io": "https://deno.land/std@0.200.0/io/mod.ts", "fs": "https://deno.land/std@0.200.0/fs/mod.ts", "path": "https://deno.land/std@0.200.0/path/mod.ts", "toml": "https://deno.land/std@0.200.0/toml/mod.ts", "async": "https://deno.land/std@0.200.0/async/mod.ts", "base64": "https://deno.land/std@0.200.0/encoding/base64.ts", "front_matter": "https://deno.land/std@0.200.0/front_matter/any.ts", "file_server": "https://deno.land/std@0.200.0/http/file_server.ts", "datetime": "https://deno.land/std@0.200.0/datetime/mod.ts", "esbuild": "https://deno.land/x/esbuild@v0.19.2/mod.js", "esbuild_deno_loader": "https://deno.land/x/esbuild_deno_loader@0.8.1/mod.ts", "svelte": "npm:svelte", "svelte/compiler": "npm:svelte/compiler", "svelte/internal": "npm:svelte/internal", "svelte/internal/disclose-version": "npm:svelte/internal/disclose-version", "postcss": "npm:postcss", "postcss-nesting": "npm:postcss-nesting", "cssnano": "npm:cssnano", "cssnano-preset-lite": "npm:cssnano-preset-lite", "striptags": "npm:striptags", "marked": "npm:marked", "marked-highlight": "npm:marked-highlight", "marked-smartypants": "npm:marked-smartypants", "marked-gfm-heading-id": "npm:marked-gfm-heading-id"}}
{"compilerOptions": {"strict": true, "lib": ["deno.ns", "deno.window", "dom", "dom.iterable", "dom.asynciterable", "esnext"], "types": ["mod.d.ts"]}, "importMap": "./import_map.json", "tasks": {"release": "{ deno fmt; deno lint --unstable; deno test -A --unstable --no-check; } && deno run -A --unstable https://deno.land/x/pub/cli.ts"}, "lint": {"files": {"exclude": [".{devcontainer,vscode,github,gitpod.yml}", "version.ts", "egg.json"]}}, "fmt": {"files": {"exclude": [".{devcontainer,vscode,github}"]}, "options": {"indentWidth": 2, "lineWidth": 80, "proseWrap": "preserve", "singleQuote": false, "useTabs": false}}}
{"lock": true, "compilerOptions": {"allowJs": false, "lib": ["deno.window", "deno.unstable"]}}
{"compilerOptions": {"exactOptionalPropertyTypes": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}, "fmt": {"semiColons": false, "singleQuote": true}, "imports": {"@/mem": "./mem/mod.ts", "@/solitaire": "./solitaire/mod.ts", "@/super-patience": "./super-patience/mod.ts", "@/void": "./void/mod.ts", "std/": "https://deno.land/std@0.192.0/"}, "lock": false}
{"tasks": {"udd": "deno run --allow-net --allow-read=. --allow-write=. https://deno.land/x/udd@0.5.0/main.ts"}}
{"tasks": {"test": "deno --unstable test --allow-net --allow-read", "cli": "deno --unstable run --allow-net --allow-read cli.ts", "compile": "deno --unstable compile --allow-net --allow-read mod.ts", "fmt": "deno fmt", "lint": "deno fmt --check && deno lint", "coverage": "rm -rf cov_profile && deno task test --coverage=cov_profile && deno coverage cov_profile && deno coverage cov_profile --lcov > cov_profile.lcov"}, "importMap": "./import_map.json", "fmt": {"options": {"lineWidth": 120}}}
{"lint": {"files": {"include": ["src/", "tests/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["src/", "tests/"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}}}
{"fmt": {"semiColons": false, "singleQuote": true}, "tasks": {"install": "deno install --root .deno -fqAn vr https://deno.land/x/velociraptor@1.5.0/cli.ts && .deno/bin/vr install"}}
{"fmt": {"files": {"exclude": ["dist"]}}, "tasks": {"dev": "deno test --watch ./src/envconfig.ts", "lint": "deno lint && deno fmt --check", "fmt": "deno fmt", "update": "deno run --allow-read=./ --allow-net --allow-write=./ https://deno.land/x/deno_outdated@0.2.4/cli.ts --ignore README.md CHANGELOG.md CONTRIBUTING.md"}, "lint": {"files": {"include": ["src/"]}, "rules": {"tags": ["recommended"], "exclude": ["no-explicit-any"]}}}
{"tasks": {"start": "TZ=utc deno run -A --watch=static/,routes/,componennts/,islands/,static/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"compilerOptions": {"strict": true}, "tasks": {"udd": "udd '*.ts' '*/*.ts'", "install-udd": "deno install -A -f -n udd https://deno.land/x/udd@0.7.3/main.ts", "test": "deno test -A --allow-read  --trace-ops", "build": "deno run -A build_npm.ts"}, "fmt": {"files": {"exclude": ["npm/node_modules", "node_modules"]}, "options": {"indentWidth": 4, "singleQuote": false}}, "lint": {"files": {"exclude": ["npm", ".yarn", "node_modules"]}}}
{"imports": {"@hedgedoc/html-to-react": "https://esm.sh/@hedgedoc/html-to-react@1.4.5", "@stitches/react": "https://esm.sh/@stitches/react@1.2.8?target=deno", "@mdx-js/esbuild": "https://esm.sh/@mdx-js/esbuild@2.2.1?target=deno", "@mdx-js/mdx": "https://esm.sh/@mdx-js/mdx@2.2.1?target=deno", "chai": "https://esm.sh/chai@4.3.7", "chai-jsdom": "https://esm.sh/chai-jsdom@0.2.3", "cky/": "../packages/design-system/", "cliffy/": "https://deno.land/x/cliffy@v0.25.7/", "deepmerge-ts/": "https://esm.sh/deepmerge-ts@4.2.2/", "deno-dom/": "https://deno.land/x/deno_dom@v0.1.36-alpha/", "esbuild": "https://esm.sh/esbuild@0.16.10", "esbuild-plugin-import-map": "https://esm.sh/esbuild-plugin-import-map@2.1.0", "jsdom": "https://esm.sh/jsdom@20.0.3", "nova/": "../", "react": "https://esm.sh/react@18.2.0?dev", "react/jsx-runtime": "https://esm.sh/react@18.2.0/jsx-runtime", "react/jsx-dev-runtime": "https://esm.sh/react@18.2.0/jsx-dev-runtime", "react-dom": "https://esm.sh/react-dom@18.2.0?dev", "react-dom/client": "https://esm.sh/react-dom@18.2.0/client?dev", "react-dom/server": "https://esm.sh/react-dom@18.2.0/server?dev", "react-router-dom": "https://esm.sh/react-router-dom@6.6.1?dev&external=react", "react-router-dom/server": "https://esm.sh/react-router-dom@6.6.1/server?dev&external=react", "std/": "https://deno.land/std@0.170.0/", "https://deno.land/std@0.170.0/node/vm.ts": "../lib/std/node/vm.ts", "test/": "../test/", "testing-library": "https://esm.sh/@testing-library/react@13.4.0?external=react", "websocket/": "https://deno.land/x/websocket@v0.1.4/"}}
{"tasks": {"build": "deno run --allow-all getArticles.ts && deno task dev", "dev": "deno run --allow-all --watch main.ts --dev", "serve": "deno run --allow-net --allow-read --no-check main.ts"}}
{"importMap": "import_map.json", "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read --allow-none"}, "fmt": {"files": {"exclude": ["README.md"]}, "options": {"lineWidth": 100}}}
{"importMap": "imports.json", "tasks": {"dev": "deno run --watch --unstable --allow-read --allow-env --allow-net mod.ts", "test": "deno test --allow-env", "build-documentation": "deno run --allow-write=static/ferrybox.md --allow-env --location=https://ferrybox.deno.dev documentation.ts"}}
{"tasks": {"install": "PUPPETEER_PRODUCT=chrome deno run -A --unstable https://deno.land/x/puppeteer@16.2.0/install.ts", "run": "TZ=UTC PUPPETEER_PRODUCT=chrome deno run --allow-env --allow-read --allow-write --allow-run --allow-net ./main.ts", "test": "TZ=UTC PUPPETEER_PRODUCT=chrome deno test --allow-env --allow-read --allow-write --allow-run --allow-net --parallel", "test:coverage": "deno task test --coverage=cov_profile", "launch_login_server": "deno run --allow-read --allow-env --allow-net tools/twitter_callback.ts"}, "lint": {"files": {"include": ["deps.ts", "dev_deps.ts", "src/"], "exclude": ["src/__tests__/data/"]}}, "fmt": {"files": {"include": ["main.ts", "deps.ts", "dev_deps.ts", "src/"], "exclude": ["src/__tests__/data/"]}}, "compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}}
{"tasks": {"grab": "deno run --allow-net=api.github.com --allow-write=README.md --allow-env main.ts"}}
{"tasks": {"example-single": "deno run --allow-net=api.openai.com --allow-env=OPENAI_API_KEY examples/_single_sentence.ts", "example-single-raw": "deno run --allow-net=api.openai.com --allow-env=OPENAI_API_KEY examples/_single_sentence_raw.ts", "example-single-system": "deno run --allow-net=api.openai.com --allow-env=OPENAI_API_KEY examples/_single_sentence_system.ts", "example-single-stream": "deno run --allow-net=api.openai.com --allow-env=OPENAI_API_KEY examples/_single_sentence_stream.ts", "example-two-choices": "deno run --allow-net=api.openai.com --allow-env=OPENAI_API_KEY examples/_two_choices.ts"}}
{"tasks": {"dev": "deno run --watch mod.ts"}, "lint": {"rules": {"exclude": ["no-explicit-any"]}}, "fmt": {"useTabs": false, "semiColons": true, "indentWidth": 2, "lineWidth": 80, "proseWrap": "preserve", "singleQuote": false}}
{"lock": false, "tasks": {"check": "deno fmt --check && deno lint && deno check **/*.ts && deno check **/*.tsx", "start": "deno run -A --watch=static/,routes/ dev.ts", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts", "test": "deno test -A --no-check", "update": "deno run -A -r https://fresh.deno.dev/update ."}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "fmt": {"exclude": ["_fresh"]}, "compilerOptions": {"jsx": "react-jsx", "jsxFactory": "h", "jsxFragmentFactory": "Fragment", "jsxImportSource": "preact"}, "imports": {"@/": "./", "netzo/": "https://deno.land/x/netzo@v0.2.32/", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.17.1", "preact/": "https://esm.sh/preact@10.17.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.2.1", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.4.0", "std/": "https://deno.land/std@0.190.0/", "@tremor/react": "https://esm.sh/@tremor/react@2.9.1?alias=react:preact/compat,react-dom:preact/compat&deps=preact@10.15.1"}}
{"importMap": "import_map.json", "tasks": {"build": "deno run -A https://deno.land/x/lume@v1.8.0/ci.ts", "serve": "deno task build -s"}}
{"lint": {"files": {"exclude": ["./skels"]}}, "fmt": {"files": {"exclude": ["./skels"]}}}
{"fmt": {"options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2}}, "lint": {"rules": {"tags": ["recommended"], "include": ["explicit-function-return-type"]}}, "tasks": {"cache": "deno cache ./src/_deps.ts && deno cache ./tests/_deps.ts", "run": "cd ./src && deno run main.ts", "test": "cd ./tests && deno test"}}
{"fmt": {"files": {"exclude": ["npm", "CHANGELOG.md"]}}, "lint": {"files": {"exclude": ["npm"]}, "rules": {"include": ["explicit-module-boundary-types"]}}, "test": {"files": {"exclude": ["npm"]}}}
{"annotations": {"list": [{"builtIn": 1, "datasource": {"type": "grafana", "uid": "-- Grafana --"}, "enable": true, "hide": true, "iconColor": "rgba(0, 211, 255, 1)", "name": "Annotations & Alerts", "target": {"limit": 100, "matchAny": false, "tags": [], "type": "dashboard"}, "type": "dashboard"}]}, "editable": true, "fiscalYearStartMonth": 0, "graphTooltip": 0, "links": [], "liveNow": false, "panels": [{"datasource": {"type": "datasource", "uid": "-- Dashboard --"}, "fieldConfig": {"defaults": {"color": {"mode": "palette-classic"}, "custom": {"hideFrom": {"legend": false, "tooltip": false, "viz": false}}, "mappings": []}, "overrides": []}, "gridPos": {"h": 6, "w": 5, "x": 0, "y": 0}, "id": 6, "options": {"displayLabels": ["name", "value"], "legend": {"displayMode": "list", "placement": "bottom", "showLegend": false}, "pieType": "pie", "reduceOptions": {"calcs": ["lastNotNull"], "fields": "", "values": true}, "tooltip": {"mode": "multi", "sort": "none"}}, "pluginVersion": "9.1.1", "targets": [{"datasource": {"type": "datasource", "uid": "-- Dashboard --"}, "panelId": 2, "refId": "A"}], "transformations": [{"id": "groupBy", "options": {"fields": {"id": {"aggregations": ["count"], "operation": "aggregate"}, "type": {"aggregations": [], "operation": "groupby"}}}}], "type": "piechart"}, {"datasource": {"type": "dashboard", "uid": "-- Dashboard --"}, "fieldConfig": {"defaults": {"color": {"mode": "thresholds"}, "mappings": [], "thresholds": {"mode": "absolute", "steps": [{"color": "green", "value": null}, {"color": "red", "value": 10}]}}, "overrides": []}, "gridPos": {"h": 6, "w": 4, "x": 5, "y": 0}, "id": 7, "options": {"colorMode": "background", "graphMode": "area", "justifyMode": "auto", "orientation": "auto", "reduceOptions": {"calcs": ["count"], "fields": "/^id$/", "values": false}, "textMode": "auto"}, "pluginVersion": "9.1.1", "targets": [{"datasource": {"type": "datasource", "uid": "-- Dashboard --"}, "panelId": 2, "refId": "A"}], "title": "Total", "transformations": [], "type": "stat"}, {"datasource": {"type": "marcusolsson-json-datasource", "uid": "f5GJYlZVk"}, "fieldConfig": {"defaults": {"color": {"mode": "thresholds"}, "custom": {"align": "auto", "displayMode": "auto", "inspect": false}, "mappings": [], "thresholds": {"mode": "absolute", "steps": [{"color": "green", "value": null}, {"color": "red", "value": 80}]}}, "overrides": [{"matcher": {"id": "byName", "options": "Name"}, "properties": [{"id": "custom.width", "value": 118}]}, {"matcher": {"id": "byName", "options": "Email"}, "properties": [{"id": "custom.width", "value": 175}]}, {"matcher": {"id": "byName", "options": "Type"}, "properties": [{"id": "custom.width", "value": 135}]}, {"matcher": {"id": "byName", "options": "Created"}, "properties": [{"id": "custom.width", "value": 199}]}]}, "gridPos": {"h": 15, "w": 15, "x": 9, "y": 0}, "id": 2, "options": {"footer": {"enablePagination": true, "fields": "", "reducer": ["sum"], "show": false}, "showHeader": true, "sortBy": []}, "pluginVersion": "9.1.1", "targets": [{"cacheDurationSeconds": 0, "datasource": {"type": "marcusolsson-json-datasource", "uid": "V7fAcUW4k"}, "fields": [{"jsonPath": "$.[*].id"}, {"jsonPath": "$.[*].name", "language": "jsonpath", "name": ""}, {"jsonPath": "$.[*].email", "language": "jsonpath", "name": ""}, {"jsonPath": "$.[*].type", "language": "jsonpath", "name": ""}, {"jsonPath": "$.[*].description", "language": "jsonpath", "name": ""}], "method": "GET", "queryParams": "", "refId": "A", "urlPath": "/"}], "title": "Submissions", "transformations": [{"id": "organize", "options": {"excludeByName": {"id": true}, "indexByName": {"created": 1, "description": 5, "email": 3, "id": 0, "name": 2, "type": 4}, "renameByName": {"created": "Created", "description": "Description", "email": "Email", "name": "Name", "type": "Type"}}}], "type": "table"}, {"datasource": {"type": "grafana", "uid": "grafana"}, "gridPos": {"h": 9, "w": 9, "x": 0, "y": 6}, "id": 4, "options": {"buttonGroup": {"orientation": "center", "size": "md"}, "elements": [{"id": "name", "labelWidth": 10, "title": "Name", "tooltip": "", "type": "string", "value": ""}, {"id": "type", "labelWidth": 10, "options": [{"label": "Comment", "value": "comment"}, {"label": "Issue", "value": "issue"}, {"label": "Feature Request", "value": "feature"}], "title": "Type", "tooltip": "", "type": "radio", "value": "comment"}, {"id": "description", "labelWidth": 10, "rows": 4, "title": "Description", "tooltip": "", "type": "textarea", "value": ""}], "initial": {"code": "console.log(elements)", "contentType": "application/json", "highlight": false, "highlightColor": "red", "method": "-"}, "layout": {"variant": "single"}, "reset": {"backgroundColor": "purple", "foregroundColor": "yellow", "icon": "process", "text": "Reset", "variant": "primary"}, "submit": {"backgroundColor": "purple", "foregroundColor": "yellow", "icon": "cloud-upload", "text": "Submit", "variant": "primary"}, "update": {"code": "console.log(response);\n\nif (response && response.ok) {\n  location.reload();\n} else {\n  alert(`Error: ${response.status}`);\n}\n", "confirm": false, "contentType": "application/json", "header": [{"name": "Authorization", "value": "123456"}, {"name": "Email", "value": "${__user.email}"}], "method": "POST", "url": "https://volkovlabs-feedback.deno.dev"}}, "targets": [{"datasource": {"type": "datasource", "uid": "grafana"}, "refId": "A"}], "title": "Feedback", "type": "volkovlabs-form-panel"}], "schemaVersion": 37, "style": "dark", "tags": [], "templating": {"list": []}, "time": {"from": "now-6h", "to": "now"}, "timepicker": {}, "timezone": "", "title": "Deno Feedback", "uid": "xi6fp8W4k", "version": 2, "weekStart": ""}
{"lint": {"include": ["."], "exclude": ["dist/", "node_modules/"], "rules": {"tags": ["recommended"]}}}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable", "deno.unstable"]}, "importMap": "import_map.json", "tasks": {"start": "deno run --unstable --allow-read --allow-write --allow-net --no-check=remote mod.ts", "dev": "deno run --unstable --allow-read --allow-write --allow-net --import-map=import_map_dev.json --watch --no-clear-screen --no-check mod.ts dev", "compile": "deno compile --unstable --allow-read --allow-write --allow-net --no-check --import-map=import_map.json mod.ts", "test": "deno test --unstable --allow-env --allow-net --allow-read --allow-write --no-check=remote --import-map=import_map_dev.json --location=http://localhost"}}
{"imports": {"$std/": "https://deno.land/std@0.194.0/"}, "fmt": {"files": {"include": ["**/*.ts"], "exclude": ["mocks"]}}, "tasks": {"test": "deno test --allow-net --allow-hrtime --allow-env --allow-read=. ./"}}
{"lint": {"include": ["./"], "rules": {"tags": ["recommended"], "include": ["explicit-function-return-type"]}}, "fmt": {"include": ["./"], "useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}, "tasks": {"run": "deno run --allow-net=api.websitecarbon.com,api.github.com src/cli.ts"}}
{"tasks": {"build": "deno run --allow-read --allow-write=_site --allow-net=esm.sh lib/build.js", "dev": "deno run --allow-read --allow-write=_site --allow-net=esm.sh --watch lib/build.js", "serve": "deno run --unstable --allow-read=_site --allow-net lib/serve.js _site"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "jsx"}, "importMap": "./import-map.json", "lint": {"rules": {"tags": ["recommended"], "exclude": ["prefer-const"]}}}
{"tasks": {"run": "DEV=0 deno run -A --allow-env --unstable src/index.ts", "prod": "deno run -A --unstable src/index.ts", "watch": "deno run --watch -A --unstablesrc/index.ts", "check": "deno cache --check --unstable src/index.ts"}, "compilerOptions": {"noImplicitAny": true}, "importMap": "importMap.json"}
{"fmt": {"include": ["./"], "useTabs": true, "lineWidth": 120, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}
{"fmt": {"options": {"useTabs": true, "lineWidth": 100}}, "tasks": {"build": "deno run --allow-read --allow-write --allow-run ./scripts/build.ts", "build-watch": "deno run --allow-read --allow-write --allow-run --watch=./site ./scripts/build.ts", "serve": "deno run --allow-read --allow-net=:8000 main.ts", "serve-watch": "deno run --allow-read --allow-net=:8000 --watch=/tmp/kana-guru-sync main.ts", "watch": "deno task build-watch & deno task --cwd server serve-watch"}}
{"tasks": {"fetch:subjects": "deno run --allow-net --allow-read --allow-write ./fetcher/fetch-subjects.ts", "fetch:courses": "deno run --allow-net --allow-read --allow-write ./fetcher/fetch-courses.ts", "fetch:courses:2": "deno run --allow-net --allow-read --allow-write ./fetcher/fetch-courses.v2.ts", "fetch:descriptions": "deno run --allow-net --allow-read --allow-write ./fetcher/fetch-descriptions.ts", "fetch:coreqs": "deno run --allow-net --allow-read --allow-write ./fetcher/fetch-coreqs.ts", "fetch:prereqs": "deno run --allow-net --allow-read --allow-write ./fetcher/fetch-prereqs.ts", "combine-courses": "deno run --allow-read --allow-write ./fetcher/combine-courses.ts", "mapping:term-courses": "deno run --allow-read --allow-write ./mappings/term-courses.ts", "dev": "deno run --watch --allow-read --allow-net ./api/index.ts", "fmt:data": "deno fmt ./.data"}, "importMap": "./import_map.json"}
{"tasks": {"atlas:clean": "atlas schema clean --url \"sqlite://gdol.db\"", "atlas:apply": "atlas schema apply --url \"sqlite://gdol.db\" --to \"file://store/schema.hcl\"", "build": "deno task build:node && deno task build:web && deno run --allow-all scripts/build.ts", "build:node": "deno run --unstable --allow-all scripts/build_node.ts", "build:web": "cd web && pnpm build", "dev:api": "deno run --unstable --allow-all --watch cli.ts --no-web --port 3001", "dev:node": "deno run --unstable --allow-all --watch scripts/build_api.ts", "dev:web": "cd web && pnpm dev", "fmt": "pnpm fmt", "fmt:sql": "pnpm fmt:sql", "lint:web": "cd web && pnpm lint", "seed": "deno run --unstable --allow-all cli.ts seed"}}
{"tasks": {"serve-client": "deno run -A --watch=static/,routes/ dev.ts", "serve-server": "deno run -A --watch=server/ server.ts"}, "importMap": "./import_map.json"}
{"lock": false, "tasks": {"start": "deno run -A --unstable --watch=static/,routes/,posts/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/", "README.md"]}}, "fmt": {"files": {"exclude": ["static/", "README.md"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"compilerOptions": {"allowJs": true, "jsx": "react", "lib": ["deno.window"], "strict": true, "lint": {}, "format": {}}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"lock": false, "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "imports": {"lume/": "https://deno.land/x/lume@v1.18.1/"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:preact"}}
{"tasks": {"run": "deno run --allow-read --allow-write main.ts", "build": "deno compile --allow-read --allow-write main.ts"}}
{"importMap": "Imports.json", "tasks": {"develop": "deno run --watch=Builder,Data --unstable --allow-read=.,Data,Website,$HOME/.cache/deno/npm --allow-write=Website --allow-env=UGLIFY_BUG_REPORT,HTTP_PROXY,http_proxy Builder/App.js", "build": "deno run --unstable --allow-read=.,Data,Website,$HOME/.cache/deno/npm --allow-write=Website --allow-env=UGLIFY_BUG_REPORT,HTTP_PROXY,http_proxy Builder/App.js", "host": "file_server Website"}}
{"tasks": {"build": "deno task graphql:codegen", "dev": "deno task start", "graphql:codegen": "pnpm run graphql:codegen", "graphql:codegen:watch": "pnpm run graphql:codegen:watch", "install": "npm i -g pnpm && pnpm install", "lint": "deno lint --ignore=./node_modules,./graphql/generated", "lint:watch": "deno task lint --watch", "start": "deno run -A --unstable --watch=static/,routes/,graphql/generated/ dev.ts", "test": "deno test -A --unstable --no-check --ignore=./node_modules .", "test:coverage": "deno task test --coverage=./coverage && deno coverage ./coverage --lcov --output=./coverage/coverage.lcov && deno coverage ./coverage", "test:watch": "deno task test --watch"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}}
{"lock": false, "importMap": "./import_map.json", "tasks": {"cache": "deno cache main.ts server-dev.ts", "server-dev": "deno run -A --unstable \"--watch=static/*.css,static/*.ts,static/*/,routes/,translation/\" server-dev.ts", "server": "deno run -A --unstable server-run.ts", "test": "deno test --allow-read=./ --allow-net --allow-write=./ --allow-run=tasklist.exe --unstable", "run": "deno run --allow-read=./ --allow-write=./ --allow-run=tasklist.exe --allow-env=DENO_DEPLOYMENT_ID --allow-net --unstable", "compile": "deno compile --allow-read=./ --allow-write=./ --allow-run=tasklist.exe --allow-env=DENO_DEPLOYMENT_ID --allow-net --unstable", "compile_full": "deno compile --allow-read --allow-write --allow-run=tasklist.exe --allow-env=DENO_DEPLOYMENT_ID --allow-net --unstable", "fetch": "deno run --allow-read=./ --allow-write=./ --allow-net fetch_static_files.ts", "gen_meili_server_key": "deno run --allow-net scripts/gen_meili_server_key.ts", "server-build": "deno run -A --unstable server-dev.ts build"}, "fmt": {"indentWidth": 4, "exclude": ["config.json", "static/sw.js", "static/sw.meta.json", "_fresh", "extensions/build"]}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "lib": ["es2022", "dom", "dom.iterable", "deno.window"]}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}}
{"tasks": {"test": "deno test --allow-run --allow-read", "test-cov": "deno test --allow-run --allow-read --coverage=.coverage"}}
{"tasks": {"dev": "deno run -A --watch main.ts", "lint": "deno lint", "fmt": "deno fmt"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "fmt": {"files": {"include": ["src", "cmd", "routes", "islands", "components"]}, "options": {"useTabs": true, "indentWidth": 4, "singleQuote": false, "lineWidth": 100}}, "lint": {"files": {"include": ["src", "cmd", "routes", "islands", "components"]}, "rules": {"tags": ["recommended"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"wasmbuild": "deno run -A https://deno.land/x/wasmbuild@0.10.2/main.ts"}}
{"importMap": "./import_map.json", "tasks": {"start:challenge-api": "deno run ./challenge-api/main.ts", "start:disturbance-api": "deno run ./disturbance-api/main.ts", "start:route-api": "deno run ./route-api/main.ts"}}
{"imports": {"/": "./", "./": "./", "axiod": "https://deno.land/x/axiod@0.26.2/mod.ts", "discordjs": "npm:discord.js@14.12.1"}, "tasks": {"run_bot": "denon run --allow-env --allow-net --allow-read /src/bot.ts"}}
{"tasks": {"start": "cd example && deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./example/import_map.json"}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable"]}, "tasks": {"build": "deno run -A scripts/npm.ts", "publish": "cd ./npm && npm publish --access public"}, "lint": {"exclude": ["npm"], "rules": {"tags": ["recommended"], "exclude": ["no-explicit-any"]}}, "fmt": {"exclude": ["npm"]}}
{"tasks": {"run": "deno run --allow-read --allow-write --allow-env --allow-run Source.App.ts"}}
{"tasks": {"dev": "deno task start", "start": "deno run -A --unstable --no-check server.ts", "cache": "deno cache --reload --no-check server.ts", "compile": "deno compile -o graphview -A --import-map=importMap.json --no-check server.ts"}, "importMap": "importMap.json", "compilerOptions": {"lib": ["deno.window", "es2020", "esnext", "dom", "esnext.asynciterable"], "allowJs": true, "allowUnreachableCode": false, "allowUnusedLabels": false, "checkJs": false, "emitDecoratorMetadata": true, "experimentalDecorators": true, "keyofStringsOnly": false, "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitOverride": true, "noImplicitReturns": false, "noImplicitThis": true, "noImplicitUseStrict": false, "noStrictGenericChecks": false, "noUncheckedIndexedAccess": true, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true, "strictBindCallApply": true, "strictFunctionTypes": true, "strictNullChecks": true, "strictPropertyInitialization": true}, "lint": {"files": {"include": ["./"]}, "rules": {"tags": ["recommended"]}}, "fmt": {"files": {"include": ["./"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "test": "deno run -A tester.ts", "coverage": "deno run -A tester.ts --coverage", "cli": "deno run src/main.ts", "esm:add": "deno run -A https://esm.sh/v111 add", "esm:update": "deno run -A https://esm.sh/v111 update", "esm:remove": "deno run -A https://esm.sh/v111 remove"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "lint": {"files": {"exclude": ["tests"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}}
{"tasks": {"dev": "deno run --allow-net --allow-read=.env,.env.defaults,.env.example src/mod.ts", "npm": "deno run --allow-all scripts/build_npm.ts", "clean": "deno run --allow-all scripts/clean.ts"}}
{"fmt": {"files": {"exclude": ["*.md", "*.json"]}}}
{"tasks": {"test": "deno test --import-map=_test_import_map.json --doc", "build:npm": "deno run -A --no-lock _tools/build_npm.ts"}, "fmt": {"exclude": ["CHANGELOG.md"]}, "lint": {"exclude": ["CHANGELOG.md"]}, "test": {"exclude": ["CHANGELOG.md", "npm"]}, "compilerOptions": {"noImplicitReturns": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}}
{"tasks": {"run": "deno run --allow-env=API_KEY,NEXTDNS_API_KEY,PORT --allow-net=0.0.0.0,api.nextdns.io main.ts", "run-watch": "deno run --allow-env=API_KEY,NEXTDNS_API_KEY,PORT --allow-net=0.0.0.0,api.nextdns.io --watch main.ts"}}
{"tasks": {"dev": "deno run --unstable --allow-read --allow-net --no-check --watch server.tsx"}, "importMap": "./importMap.json"}
{"tasks": {"watch": "deno bundle --watch index.ts sophy_test.bundle.js --config tsconfig.json", "build": "deno task bundle", "bundle": "deno bundle index.ts sophy_test.bundle.js --config tsconfig.json"}}
{"extends": "./tsconfig.json", "include": ["deno"], "exclude": [], "compilerOptions": {"rootDir": "./deno", "lib": ["es2020", "DOM"], "paths": {"openai/_shims/*": ["deno/_shims/*"], "openai": ["deno/index.ts"], "openai/*": ["deno/*"], "digest-fetch": ["./typings/digest-fetch"]}, "noEmit": true, "declaration": true, "declarationMap": true, "outDir": "deno", "pretty": true, "sourceMap": true}}
{"tasks": {"check": "deno cache --check=all mod.ts", "dev": "deno fmt && deno lint && deno task check", "backport": "deno run --no-prompt --allow-read=. --allow-write=. https://deno.land/x/deno2node@v1.7.2/src/cli.ts tsconfig.json", "clean": "git clean -fX '*.d.ts'"}, "fmt": {"proseWrap": "preserve"}, "lint": {"exclude": ["api.d.ts", "inline.d.ts", "manage.d.ts", "markup.d.ts", "message.d.ts", "methods.d.ts", "mod.d.ts", "passport.d.ts", "payment.d.ts", "settings.d.ts", "update.d.ts"], "rules": {"exclude": ["no-empty-interface"]}}}
{"tasks": {"check": "deno cache --check=all mod.ts", "dev": "deno fmt && deno lint && deno task check", "backport": "deno run --no-prompt --allow-read=. --allow-write=. https://deno.land/x/deno2node@v1.7.2/src/cli.ts tsconfig.json", "clean": "git clean -fX '*.d.ts'"}, "fmt": {"proseWrap": "preserve"}, "lint": {"exclude": ["api.d.ts", "inline.d.ts", "manage.d.ts", "markup.d.ts", "message.d.ts", "methods.d.ts", "mod.d.ts", "passport.d.ts", "payment.d.ts", "settings.d.ts", "update.d.ts"], "rules": {"exclude": ["no-empty-interface"]}}}
{"Release": "D97A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "LOC", "Min": 0, "Max": 9}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"Release": "D97A", "DocumentType": "CODENO", "TransactionSet": [{"Id": "UNH"}, {"Id": "BGM"}, {"Id": "DTM", "Min": 0, "Max": 9}, {"Id": "FTX", "Min": 0, "Max": 9}, {"Id": "RFFLoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "RFF"}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "TDTLoop1", "Loop": [{"Id": "TDT"}, {"Id": "LOC", "Min": 0, "Max": 9}, {"Id": "DTM", "Min": 0, "Max": 9}]}, {"Id": "NADLoop1", "Max": 9, "Loop": [{"Id": "NAD"}, {"Id": "CTALoop1", "Min": 0, "Max": 9, "Loop": [{"Id": "CTA"}, {"Id": "COM", "Min": 0, "Max": 9}]}]}, {"Id": "GIDLoop1", "Min": 0, "Max": 999, "Loop": [{"Id": "GID"}, {"Id": "DOCLoop1", "Max": 9, "Loop": [{"Id": "DOC"}, {"Id": "DTM", "Max": 9}]}, {"Id": "SGP", "Max": 999}]}, {"Id": "EQDLoop1", "Max": 999, "Loop": [{"Id": "EQD"}, {"Id": "RFF", "Min": 0}, {"Id": "NAD", "Min": 0, "Max": 9}]}, {"Id": "CNT", "Min": 0}, {"Id": "UNT"}]}
{"imports": {"flow/": "./flow_generated/typescript/"}}
{"imports": {"flow/": "./flow_generated/typescript/"}}
{"lock": false, "importMap": "import_map.json"}
{"compilerOptions": {"lib": ["deno.ns", "dom"]}}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "deno run --allow-net --allow-read --allow-env --watch main.tsx --dev", "serve": "deno run --allow-net --allow-read --allow-env --no-check main.tsx"}, "importMap": "./import_map.json"}
{"fmt": {"options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4}}}
{"lock": false, "tasks": {"start": "deno run --unstable -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"lock": false, "tasks": {"start": "deno run --unstable -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"fmt": {"options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}, "lint": {"rules": {"exclude": ["no-unused-vars", "prefer-const", "require-await", "no-explicit-any", "ban-types"]}}}
{"fmt": {"options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}, "lint": {"rules": {"exclude": ["no-unused-vars", "prefer-const", "require-await", "no-explicit-any", "ban-types"]}}}
{"imports": {"std/": "https://deno.land/std@0.177.0/"}, "tasks": {"dev": "deno run -A --watch main.ts"}}
{"tasks": {"dev": "we'll add as soon as deno is ready for us :)"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom"]}, "fmt": {"options": {"lineWidth": 100}}}
{"tasks": {"dev": "we'll add as soon as deno is ready for us :)"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom"]}, "fmt": {"options": {"lineWidth": 100}}}
{"tasks": {"dev": "we'll add as soon as deno is ready for us :)"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom"]}, "fmt": {"options": {"lineWidth": 100}}}
{"tasks": {"dev": "we'll add as soon as deno is ready for us :)"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom"]}, "fmt": {"options": {"lineWidth": 100}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}}
{"fmt": {"options": {"useTabs": true}}, "compilerOptions": {"lib": ["deno.shared_globals"]}}
{"tasks": {"migrate": "deno run -A --unstable npm:prisma migrate dev --name init", "dev": "deno run -A --unstable main.ts"}}
{"compilerOptions": {"target": "esnext", "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"fmt": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve", "exclude": ["public/js/sweetalert.js"]}, "lint": {"rules": {"exclude": ["no-explicit-any", "no-window-prefix"]}, "exclude": ["public/js/sweetalert.js"]}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}, "importMap": "./import_map.json", "lock": false}
{"tasks": {"test": "deno test --import-map=./_test_import_map.json --doc", "build:npm": "deno run -A --no-lock _tools/build_npm.ts"}, "fmt": {"exclude": ["CHANGELOG.md"]}, "lint": {"exclude": ["CHANGELOG.md"]}, "test": {"exclude": ["CHANGELOG.md", "npm"]}, "compilerOptions": {"noImplicitReturns": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}}
{"tasks": {"test": "deno test --import-map=./_test_import_map.json --doc", "build:npm": "deno run -A --no-lock _tools/build_npm.ts"}, "fmt": {"exclude": ["CHANGELOG.md"]}, "lint": {"exclude": ["CHANGELOG.md"]}, "test": {"exclude": ["CHANGELOG.md", "npm"]}, "compilerOptions": {"noImplicitReturns": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}}
{"tasks": {"test": "deno test --import-map=./_test_import_map.json --doc", "build:npm": "deno run -A --no-lock _tools/build_npm.ts"}, "fmt": {"exclude": ["CHANGELOG.md"]}, "lint": {"exclude": ["CHANGELOG.md"]}, "test": {"exclude": ["CHANGELOG.md", "npm"]}, "compilerOptions": {"noImplicitReturns": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}}
{"tasks": {"test": "deno test --import-map=./_test_import_map.json --doc", "build:npm": "deno run -A --no-lock _tools/build_npm.ts"}, "fmt": {"exclude": ["CHANGELOG.md"]}, "lint": {"exclude": ["CHANGELOG.md"]}, "test": {"exclude": ["CHANGELOG.md", "npm"]}, "compilerOptions": {"noImplicitReturns": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}}
{"compilerOptions": {"allowJs": false, "strict": true}, "lint": {"files": {"include": ["src/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo", "no-implicit-any", "explicit-function-return-type"], "exclude": ["no-debugger", "no-console"]}}, "tasks": {"start": "deno run -A src/main.ts", "dev": "deno run -A --watch src/main.ts", "inspect": "deno run -A --inspect=0.0.0.0:9229 src/main.ts"}, "importMap": "./import_map.json"}
{"fmt": {"options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2}}, "lint": {"rules": {"tags": ["recommended"], "include": ["explicit-function-return-type"]}}, "tasks": {"cache": "deno cache ./src/_deps.ts && deno cache ./tests/_deps.ts", "run": "cd ./src && deno run main.ts", "test": "cd ./tests && deno test"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/", "README.md"]}}, "fmt": {"files": {"exclude": ["static/", "README.md"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/", "README.md"]}}, "fmt": {"files": {"exclude": ["static/", "README.md"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/", "README.md"]}}, "fmt": {"files": {"exclude": ["static/", "README.md"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/", "README.md"]}}, "fmt": {"files": {"exclude": ["static/", "README.md"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"imports": {"/": "./", "./": "./", "axiod": "https://deno.land/x/axiod@0.26.2/mod.ts", "discordjs": "npm:discord.js@14.12.1"}, "tasks": {"run_bot": "denon run --allow-env --allow-net --allow-read /src/bot.ts"}}
{"tasks": {"dev": "deno run --watch main.ts"}}
{"browsers": {"deno": {"name": "Deno", "type": "server", "accepts_flags": true, "accepts_webextensions": false, "releases": {"1.0": {"release_date": "2020-05-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.0.0", "status": "retired", "engine": "V8", "engine_version": "8.4"}, "1.1": {"release_date": "2020-06-12", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.1.0", "status": "retired", "engine": "V8", "engine_version": "8.4"}, "1.2": {"release_date": "2020-07-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.2.0", "status": "retired", "engine": "V8", "engine_version": "8.5"}, "1.3": {"release_date": "2020-08-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.3.0", "status": "retired", "engine": "V8", "engine_version": "8.6"}, "1.4": {"release_date": "2020-09-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.4.0", "status": "retired", "engine": "V8", "engine_version": "8.7"}, "1.5": {"release_date": "2020-10-27", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.5.0", "status": "retired", "engine": "V8", "engine_version": "8.7"}, "1.6": {"release_date": "2020-12-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.6.0", "status": "retired", "engine": "V8", "engine_version": "8.8"}, "1.7": {"release_date": "2021-01-19", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.7.0", "status": "retired", "engine": "V8", "engine_version": "8.9"}, "1.8": {"release_date": "2021-03-02", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.8.0", "status": "retired", "engine": "V8", "engine_version": "9.0"}, "1.9": {"release_date": "2021-04-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.9.0", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.10": {"release_date": "2021-05-11", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.10.1", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.11": {"release_date": "2021-06-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.11.0", "status": "retired", "engine": "V8", "engine_version": "9.1"}, "1.12": {"release_date": "2021-07-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.12.0", "status": "retired", "engine": "V8", "engine_version": "9.2"}, "1.13": {"release_date": "2021-08-10", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.13.0", "status": "retired", "engine": "V8", "engine_version": "9.3"}, "1.14": {"release_date": "2021-09-14", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.14.0", "status": "retired", "engine": "V8", "engine_version": "9.4"}, "1.15": {"release_date": "2021-10-12", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.15.0", "status": "retired", "engine": "V8", "engine_version": "9.5"}, "1.16": {"release_date": "2021-11-08", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.16.0", "status": "retired", "engine": "V8", "engine_version": "9.7"}, "1.17": {"release_date": "2021-12-16", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.17.0", "status": "retired", "engine": "V8", "engine_version": "9.7"}, "1.18": {"release_date": "2022-01-20", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.18.0", "status": "retired", "engine": "V8", "engine_version": "9.8"}, "1.19": {"release_date": "2022-02-17", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.19.0", "status": "retired", "engine": "V8", "engine_version": "9.9"}, "1.20": {"release_date": "2022-03-17", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.20.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.21": {"release_date": "2022-04-21", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.21.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.22": {"release_date": "2022-05-18", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.22.0", "status": "retired", "engine": "V8", "engine_version": "10.0"}, "1.23": {"release_date": "2022-06-15", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.23.0", "status": "retired", "engine": "V8", "engine_version": "10.4"}, "1.24": {"release_date": "2022-07-20", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.24.0", "status": "retired", "engine": "V8", "engine_version": "10.4"}, "1.25": {"release_date": "2022-08-25", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.25.0", "status": "retired", "engine": "V8", "engine_version": "10.6"}, "1.26": {"release_date": "2022-09-29", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.26.0", "status": "retired", "engine": "V8", "engine_version": "10.7"}, "1.27": {"release_date": "2022-10-27", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.27.0", "status": "retired", "engine": "V8", "engine_version": "10.8"}, "1.28": {"release_date": "2022-11-13", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.28.0", "status": "retired", "engine": "V8", "engine_version": "10.9"}, "1.29": {"release_date": "2022-12-15", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.29.0", "status": "retired", "engine": "V8", "engine_version": "10.9"}, "1.30": {"release_date": "2023-01-26", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.30.0", "status": "retired", "engine": "V8", "engine_version": "10.9"}, "1.31": {"release_date": "2023-02-24", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.31.0", "status": "retired", "engine": "V8", "engine_version": "11.0"}, "1.32": {"release_date": "2023-03-23", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.32.0", "status": "retired", "engine": "V8", "engine_version": "11.2"}, "1.33": {"release_date": "2023-04-28", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.33.0", "status": "retired", "engine": "V8", "engine_version": "11.4"}, "1.34": {"release_date": "2023-05-24", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.34.0", "status": "retired", "engine": "V8", "engine_version": "11.5"}, "1.35": {"release_date": "2023-07-05", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.35.0", "status": "retired", "engine": "V8", "engine_version": "11.6"}, "1.36": {"release_date": "2023-08-03", "release_notes": "https://github.com/denoland/deno/releases/tag/v1.36.0", "status": "current", "engine": "V8", "engine_version": "11.6"}}}}}
{"compilerOptions": {"allowJs": true}, "lint": {"files": {"include": ["./src/*.ts"]}, "rules": {"tags": ["recommended"]}}, "fmt": {"files": {"include": ["./", "src/*.ts", "src/*.json", "bedrock/**/*.json"]}, "options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}, "tasks": {"atlas": "deno run --allow-write --allow-read --allow-env ./src/scripts/atlas.ts", "list": "deno run --allow-write --allow-read --allow-net ./src/scripts/texturesList.ts", "mcpack": "deno run --allow-write --allow-read --allow-net ./src/scripts/mcpack.ts", "split-channels": "deno run --allow-write --allow-read --allow-net ./src/scripts/channels.ts"}, "importMap": "./import_map.json"}
{"tasks": {"test": "deno test", "dev": "deno test --watch test.js", "coverage": "deno test --coverage=cov_profile && deno coverage cov_profile --lcov --output=cov_profile.lcov && genhtml -o cov_profile/html cov_profile.lcov && open cov_profile/html/TinyColor/mod.js.gcov.html", "serve": "deno run --watch --allow-env --allow-net=unpkg.com,0.0.0.0 --allow-read=. demo/server.jsx", "test-npm": "npm install --prefix npm && npm test --prefix npm", "build": "deno task test && deno run --allow-env --allow-read --allow-write=. build.js && deno task test-npm", "publish": "deno task build && cd npm && npm publish --access public", "publish-beta": "deno task build && cd npm && npm publish --tag beta --access public"}, "test": {"files": {"exclude": ["npm"]}}}
{"compilerOptions": {"noImplicitAny": false}}
{"id": "51b6257834090d64759a1dd359c93f19", "basics": {"username": "kcedeno", "ctime": 1509763251, "mtime": 1509763251, "id_version": 4, "track_version": 4, "last_id_change": 1509765496, "username_cased": "kcedeno", "status": 0}, "public_keys": {"all_bundles": ["0121e9d763f698475b279a1f1e34dce035eb7ba4bc02ee0d5022ea958b9a5d1ad43d0a", "0120004bc21d9d552e69840970c5f77934c917177ac512340e87c2e90ffd8f46d0f40a", "0120fec0f9ea625454f7ff19f3460c82435284b816ddd1e7e2c4af843db55bd884670a", "012141691bb6d64c7a41f770883590341cf5a5edef514d469993d391a14e6755c4240a"], "subkeys": ["0121e9d763f698475b279a1f1e34dce035eb7ba4bc02ee0d5022ea958b9a5d1ad43d0a", "012141691bb6d64c7a41f770883590341cf5a5edef514d469993d391a14e6755c4240a"], "sibkeys": ["0120004bc21d9d552e69840970c5f77934c917177ac512340e87c2e90ffd8f46d0f40a", "0120fec0f9ea625454f7ff19f3460c82435284b816ddd1e7e2c4af843db55bd884670a"], "families": {"0120004bc21d9d552e69840970c5f77934c917177ac512340e87c2e90ffd8f46d0f40a": ["0121e9d763f698475b279a1f1e34dce035eb7ba4bc02ee0d5022ea958b9a5d1ad43d0a", "0120004bc21d9d552e69840970c5f77934c917177ac512340e87c2e90ffd8f46d0f40a", "0120fec0f9ea625454f7ff19f3460c82435284b816ddd1e7e2c4af843db55bd884670a", "012141691bb6d64c7a41f770883590341cf5a5edef514d469993d391a14e6755c4240a"]}, "eldest_kid": "0120004bc21d9d552e69840970c5f77934c917177ac512340e87c2e90ffd8f46d0f40a", "eldest_key_fingerprint": "", "pgp_public_keys": []}, "proofs_summary": {"by_proof_type": {"twitter": [{"proof_type": "twitter", "nametag": "cedesec", "state": 1, "proof_url": "https://twitter.com/cedesec/status/926649733556375552", "sig_id": "098af769f861d02377a8bf2a92a16bbd2a56cb382f518e1ea57a5b6e2fb96d7d0f", "proof_id": "b3f18d23a9507a5ebd721f10", "human_url": "https://twitter.com/cedesec/status/926649733556375552", "service_url": "https://twitter.com/cedesec", "presentation_group": "twitter", "presentation_tag": "tweet"}]}, "by_presentation_group": {"twitter": [{"proof_type": "twitter", "nametag": "cedesec", "state": 1, "proof_url": "https://twitter.com/cedesec/status/926649733556375552", "sig_id": "098af769f861d02377a8bf2a92a16bbd2a56cb382f518e1ea57a5b6e2fb96d7d0f", "proof_id": "b3f18d23a9507a5ebd721f10", "human_url": "https://twitter.com/cedesec/status/926649733556375552", "service_url": "https://twitter.com/cedesec", "presentation_group": "twitter", "presentation_tag": "tweet"}]}, "all": [{"proof_type": "twitter", "nametag": "cedesec", "state": 1, "proof_url": "https://twitter.com/cedesec/status/926649733556375552", "sig_id": "098af769f861d02377a8bf2a92a16bbd2a56cb382f518e1ea57a5b6e2fb96d7d0f", "proof_id": "b3f18d23a9507a5ebd721f10", "human_url": "https://twitter.com/cedesec/status/926649733556375552", "service_url": "https://twitter.com/cedesec", "presentation_group": "twitter", "presentation_tag": "tweet"}]}, "cryptocurrency_addresses": {}, "pictures": {"primary": {"url": "https://s3.amazonaws.com/keybase_processed_uploads/f51fac96f8ba9848f96f85b9100b4a05_360_360.jpg", "width": 360, "height": 360, "source": "twitter"}}, "sigs": {"last": {"sig_id": "098af769f861d02377a8bf2a92a16bbd2a56cb382f518e1ea57a5b6e2fb96d7d0f", "seqno": 10, "payload_hash": "d66552fb9d12d7d3667337f81cc205a26a0fade82a70d0a0cafdfe30a3eb52aa"}}, "devices": {"d0ce598fb78fca1e8b23d197fc1e4718": {"type": "mobile", "ctime": 1509763344, "mtime": 1509763344, "name": "noface", "status": 1, "keys": [{"kid": "0120004bc21d9d552e69840970c5f77934c917177ac512340e87c2e90ffd8f46d0f40a", "key_role": 1, "sig_id": "f08695f16deec5fc1c0df11866c18800ea5bb4a235f3858f880d9d42af4a5c8f0f"}, {"kid": "0121e9d763f698475b279a1f1e34dce035eb7ba4bc02ee0d5022ea958b9a5d1ad43d0a", "key_role": 2, "sig_id": "6498c7b7c7ec083eb4809f6de72f1d4076fbc6618eb7258728977288f5443b340f"}]}, "fb68ca83652c0819f742c41a175a3218": {"type": "desktop", "ctime": 1509764117, "mtime": 1509764117, "name": "calcifer", "status": 1, "keys": [{"kid": "0120fec0f9ea625454f7ff19f3460c82435284b816ddd1e7e2c4af843db55bd884670a", "key_role": 1, "sig_id": "16525023098d922c312eb204357b64057303e1da9e013e92ef3a6ce49bbbc1600f"}, {"kid": "012141691bb6d64c7a41f770883590341cf5a5edef514d469993d391a14e6755c4240a", "key_role": 2, "sig_id": "17010b7be1eb6ea796285fc43490c29ecfcb1e08c111ad7be307360f1e21efd90f"}]}}}
{"id": 1159562552210182144, "name": "MarcoZdeno", "username": "MarcoZdeno", "bio": "", "location": "", "url": "", "join_date": "8 Aug 2019", "join_time": "1:30 PM", "tweets": 1, "following": 29, "followers": 0, "likes": 0, "media": 0, "private": 0, "verified": 0, "profile_image_url": "https://pbs.twimg.com/profile_images/1182146390417268736/hu-1bhOv_400x400.jpg", "background_image": "https://pbs.twimg.com/profile_banners/1159562552210182144/1570680348/1500x500"}
{"id": 136129, "name": "Bondeno", "latitude": "44.88944000", "longitude": "11.41542000", "state": {"id": 1773, "name": "Emilia-Romagna", "state_code": "45", "latitude": "44.59676070", "longitude": "11.21863960", "type": "region"}}
{"tasks": {"dev": "deno run --watch main.ts", "dnt": "deno run -A _build_npm.ts", "test": "deno test --allow-write=cmdCache --allow-read=interaction.txt --allow-net=discord.com"}, "fmt": {"lineWidth": 160, "indentWidth": 2, "include": ["src/", "samples/", "*.ts"], "exclude": ["npm/"]}, "lint": {"exclude": ["npm/"]}, "test": {"exclude": ["npm/"]}, "lock": false}
{"imports": {"@opennetwork/http-representation": "https://cdn.skypack.dev/@opennetwork/http-representation", "@virtualstate/astro-renderer": "https://cdn.skypack.dev/@virtualstate/astro-renderer", "@virtualstate/dom": "https://cdn.skypack.dev/@virtualstate/dom", "@virtualstate/examples": "https://cdn.skypack.dev/@virtualstate/examples", "@virtualstate/fringe": "https://cdn.skypack.dev/@virtualstate/fringe", "@virtualstate/focus": "https://cdn.skypack.dev/@virtualstate/focus", "@virtualstate/composite-key": "https://cdn.skypack.dev/@virtualstate/composite-key", "@virtualstate/navigation": "https://cdn.skypack.dev/@virtualstate/navigation", "@virtualstate/navigation/routes": "./node_modules/@virtualstate/navigation/esnext/routes/index.js", "@virtualstate/hooks": "https://cdn.skypack.dev/@virtualstate/hooks", "@virtualstate/memo": "https://cdn.skypack.dev/@virtualstate/memo", "@virtualstate/hooks-extended": "https://cdn.skypack.dev/@virtualstate/hooks-extended", "@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union", "@virtualstate/x": "https://cdn.skypack.dev/@virtualstate/x", "@virtualstate/kdl": "https://cdn.skypack.dev/@virtualstate/kdl", "@virtualstate/promise": "https://cdn.skypack.dev/@virtualstate/promise", "@virtualstate/promise/the-thing": "https://cdn.skypack.dev/@virtualstate/promise/the-thing", "@virtualstate/promise/the-sync-thing": "https://cdn.skypack.dev/@virtualstate/promise/the-sync-thing", "@virtualstate/app-history": "./src/app-history.ts", "@virtualstate/app-history/polyfill": "./src/polyfill.ts", "@virtualstate/app-history/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history/event-target": "./src/event-target/sync-eve$(System.AccessToken)$(System.AccessToken)nt-target.ts", "@virtualstate/app-history-imported": "./src/app-history.ts", "@virtualstate/app-history-imported/polyfill": "./src/polyfill.ts", "@virtualstate/app-history-imported/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history-imported/event-target": "./src/event-target/sync-event-target.ts", "dom-lite": "https://cdn.skypack.dev/dom-lite", "iterable": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "https://cdn.skypack.dev/-/iterable@v5.7.0-CNtyuMJo9f2zFu6CuB1D/dist=es2019,mode=imports/optimized/iterable.js": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "uuid": "./src/util/deno-uuid.ts", "whatwg-url": "https://cdn.skypack.dev/whatwg-url", "change-case": "https://cdn.skypack.dev/change-case", "abort-controller": "https://cdn.skypack.dev/abort-controller", "preact": "https://cdn.skypack.dev/preact@10.7.3", "react": "https://cdn.skypack.dev/react@18.1.0", "deno:std/uuid/mod": "https://deno.land/std@0.113.0/uuid/mod.ts", "deno:std/uuid/v4": "https://deno.land/std@0.113.0/uuid/v4.ts", "deno:deno_dom/deno-dom-wasm.ts": "https://deno.land/x/deno_dom/deno-dom-wasm.ts", "urlpattern-polyfill": "https://cdn.skypack.dev/urlpattern-polyfill", "./src/tests/examples": "./src/tests/examples/index.ts", "./src/tests/examples/jsx": "./src/tests/examples/jsx.tsx", "./src/tests/examples/fetch": "./src/tests/examples/fetch.ts", "./src/tests/examples/readme-detailed": "./src/tests/examples/readme-detailed.tsx", "./src/tests/app-history.class": "./src/tests/app-history.class.ts", "./src/tests/app-history.imported": "./src/tests/app-history.imported.ts", "./src/tests/app-history.scope": "./src/tests/app-history.scope.ts", "./src/tests/app-history": "./src/tests/app-history.tsx", "./src/tests/node-process": "./src/tests/default-process.ts", "./src/tests/imported": "./src/tests/imported.ts", "./src/tests/config": "./src/tests/config.ts", "./src/tests/util": "./src/tests/util.ts", "./src/app-history": "./src/app-history.ts", "./src/app-history-entry": "./src/app-history-entry.ts", "./src/spec/app-history": "./src/spec/app-history.ts", "./src/app-history-errors": "./src/app-history-errors.ts", "./src/app-history-event-target": "./src/app-history-event-target.ts", "./src/app-history-transition": "./src/app-history-transition.ts", "./src/create-app-history-transition": "./src/create-app-history-transition.ts", "./src/util/deferred": "./src/util/deferred.ts", "./src/util/deno-uuid": "./src/util/deno-uuid.ts", "./src/util/uuid-or-random": "./src/util/uuid-or-random.ts", "./src/util/parse-dom-deno": "./src/util/parse-dom-deno.ts", "./src/util/parse-dom": "./src/util/parse-dom-deno.ts", "./src/index": "./src/index.ts", "./src/util/writable": "./src/util/writable.ts", "./src": "./src/index.ts", "./src/event-target": "./src/event-target/index.ts", "./src/event-target/callback": "./src/event-target/callback.ts", "./src/event-target/context": "./src/event-target/context.ts", "./src/event-target/global": "./src/event-target/global.ts", "./src/event-target/descriptor": "./src/event-target/descriptor.ts", "./src/event-target/event": "./src/event-target/event.ts", "./src/event-target/create-event": "./src/event-target/create-event.ts", "./src/event-target/event-target": "./src/event-target/event-target.ts", "./src/event-target/async-event-target": "./src/event-target/async-event-target.ts", "./src/event-target/sync-event-target": "./src/event-target/sync-event-target.ts", "./src/event-target/event-target-options": "./src/event-target/event-target-options.ts", "./src/event-target/event-target-listeners": "./src/event-target/event-target-listeners.ts", "./src/event-target/index": "./src/event-target/index.ts", "./src/event-target/parallel-event": "./src/event-target/parallel-event.ts", "./src/event-target/respond-event": "./src/event-target/respond-event.ts", "./src/event-target/signal-event": "./src/event-target/signal-event.ts", "./src/event-target/transition-event": "./src/event-target/transition-event.ts", "./src/util/import-types": "./src/util/import-types.ts", "./src/polyfill": "./src/polyfill.ts", "./src/location": "./src/location.ts", "./src/history": "./src/history.ts", "./esnext/util/parse-dom-deno.js": "./esnext/util/parse-dom-deno.ts", "./esnext/util/parse-dom.js": "./esnext/util/parse-dom-deno.ts", "cheerio": "./scripts/nop/index.js"}}
{"compilerOptions": {"strict": true}, "lint": {"include": ["src/"]}, "fmt": {"include": ["src/"]}, "tasks": {"run": "deno run $(deno run --quiet --no-check ./flags.ts) ./src/main.ts", "check": "deno check --import-map src/import_map.json ./src/main.ts", "bundlesize": "deno bundle --import-map src/import_map.json ./src/main.ts | wc -c | awk '{print $1/1000\"K\"}'", "info": "deno info --import-map src/import_map.json ./src/main.ts", "test": "deno test $(deno run --quiet --no-check ./flags.ts) src/", "install": "deno install -f -n collie $(deno run --quiet --no-check ./flags.ts) src/main.ts"}}
{"extends": "./tsconfig-base.json", "compilerOptions": {}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"files": {"include": ["src", "docs", "README.md"]}, "options": {"semiColons": true, "indentWidth": 2, "lineWidth": 80, "proseWrap": "always", "singleQuote": false, "useTabs": false}}, "lint": {"files": {"include": ["src"]}, "rules": {"exclude": ["no-deprecated-deno-api"]}}, "lock": false, "tasks": {"test": "deno fmt --check && deno lint && deno test --allow-read", "coverage": "rm -rf .coverage && deno test --allow-read --coverage=.coverage src && deno coverage --exclude=fixtures --exclude=test --lcov --output=lcov.info .coverage && deno run --allow-read https://deno.land/x/code_coverage@0.2.0/cli.ts"}, "test": {"files": {"include": ["src"]}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.2.0/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.1.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "marked": "https://esm.sh/marked@3.0.4", "prism": "https://esm.sh/prismjs@1.25.0?pin=v57"}}
{"records": [{"id": "relation/2146290", "geometry": {"type": "Polygon", "coordinates": [[[11.0915588, 45.9773501], [11.0915626, 45.9774286], [11.0913722, 45.9774331], [11.0913684, 45.9773546], [11.0915588, 45.9773501]]]}}, {"id": "relation/2146291", "geometry": {"type": "Polygon", "coordinates": [[[11.0913684, 45.9773546], [11.0915588, 45.9773501], [11.0915437, 45.97704], [11.0913533, 45.9770444], [11.0913684, 45.9773546]]]}}, {"id": "relation/2516665", "geometry": {"type": "Polygon", "coordinates": [[[11.0896586, 45.9780265], [11.0898522, 45.9779021], [11.0897682, 45.9778234], [11.0896879, 45.9778615], [11.0896111, 45.9778031], [11.0895454, 45.9778259], [11.0893993, 45.9777701], [11.0896148, 45.9777625], [11.089655, 45.9777879], [11.0897171, 45.9777574], [11.0896769, 45.9777092], [11.0896258, 45.9775045], [11.0894796, 45.9774731], [11.0894906, 45.9774147], [11.0895819, 45.9774325], [11.0895454, 45.9773665], [11.0894102, 45.9773005], [11.0892897, 45.9773309], [11.0891509, 45.9773995], [11.0890924, 45.9774578], [11.089107, 45.9776838], [11.0891947, 45.9776812], [11.0891399, 45.9777345], [11.0893481, 45.9778082], [11.0893189, 45.977864], [11.0896258, 45.9779554], [11.0895856, 45.9779833], [11.0896586, 45.9780265]], [[11.0892824, 45.9776406], [11.0893627, 45.9776559], [11.0893847, 45.9776178], [11.0895673, 45.9776508], [11.0895271, 45.9776], [11.0892933, 45.9775264], [11.0892824, 45.9776406]]]}}, {"id": "relation/3222111", "geometry": {"type": "Polygon", "coordinates": [[[11.0908065, 45.9761364], [11.0907134, 45.975972], [11.0906459, 45.9759962], [11.0906821, 45.9760419], [11.0906561, 45.9760463], [11.0905818, 45.9759398], [11.090651, 45.9759022], [11.0904953, 45.9757419], [11.0901798, 45.975882], [11.0897048, 45.9761731], [11.0899221, 45.9763579], [11.0901274, 45.9762874], [11.089961, 45.9761442], [11.0899747, 45.9761366], [11.090156, 45.9762693], [11.0902405, 45.9762506], [11.0901284, 45.9761625], [11.0902384, 45.9761096], [11.0903708, 45.9762513], [11.0905096, 45.9762203], [11.0904582, 45.9761315], [11.0904199, 45.9761413], [11.0902902, 45.9760078], [11.0903798, 45.9759877], [11.0905393, 45.976192], [11.0908065, 45.9761364]]]}}, {"id": "relation/3222112", "geometry": {"type": "Polygon", "coordinates": [[[11.0896635, 45.9771067], [11.0901645, 45.977104], [11.0901456, 45.9770389], [11.0900813, 45.977027], [11.0900459, 45.9769281], [11.0901242, 45.9769189], [11.0901122, 45.9768854], [11.0903748, 45.9768503], [11.090352, 45.9767344], [11.0900024, 45.9767951], [11.0899664, 45.9767428], [11.089848, 45.9767661], [11.0898828, 45.9768686], [11.089844, 45.976876], [11.0898145, 45.9767726], [11.0896404, 45.9767954], [11.0896997, 45.9769831], [11.0896731, 45.976988], [11.0896635, 45.9771067]], [[11.0898904, 45.9770537], [11.0898777, 45.976993], [11.0899316, 45.9769996], [11.0899431, 45.9770423], [11.0898904, 45.9770537]]]}}, {"id": "relation/3222113", "geometry": {"type": "Polygon", "coordinates": [[[11.0885569, 45.9776585], [11.0884777, 45.9775517], [11.0886686, 45.9774902], [11.0886104, 45.9774012], [11.0886873, 45.9773753], [11.0887548, 45.9774918], [11.088813, 45.977466], [11.088636, 45.9771552], [11.0887688, 45.9771035], [11.088976, 45.9770889], [11.0891414, 45.9770339], [11.0892904, 45.9770759], [11.0892974, 45.9771471], [11.0894325, 45.9771585], [11.089302, 45.9772653], [11.0892601, 45.9772653], [11.0892159, 45.9773009], [11.0891041, 45.9773041], [11.0890901, 45.9772766], [11.0889038, 45.9772912], [11.0889714, 45.9773705], [11.0891181, 45.9773333], [11.0891321, 45.9773559], [11.0888433, 45.977521], [11.0888549, 45.9775485], [11.0885569, 45.9776585]], [[11.0887944, 45.9772572], [11.0888666, 45.9772475], [11.0888712, 45.9772281], [11.0889807, 45.9772281], [11.0889795, 45.9772103], [11.0887804, 45.9772119], [11.0887944, 45.9772572]], [[11.0890995, 45.9772143], [11.089146, 45.9771366], [11.089054, 45.9771156], [11.0890517, 45.9771658], [11.0888771, 45.9771633], [11.0888806, 45.9771844], [11.0890447, 45.9771779], [11.0890517, 45.9772095], [11.0890995, 45.9772143]]]}}, {"id": "relation/3222114", "geometry": {"type": "Polygon", "coordinates": [[[11.0894696, 45.9771449], [11.0896063, 45.977041], [11.0895446, 45.9767977], [11.08937, 45.976788], [11.0893775, 45.9768199], [11.0892745, 45.9768284], [11.0892745, 45.9767669], [11.0891301, 45.9767767], [11.0890952, 45.976733], [11.0888716, 45.976733], [11.0887459, 45.9767362], [11.0887342, 45.9767718], [11.0886132, 45.9767605], [11.0886077, 45.9767251], [11.0885945, 45.9766407], [11.0885549, 45.9766407], [11.088548, 45.9765727], [11.0883663, 45.9766148], [11.0884082, 45.9767071], [11.08852, 45.9767006], [11.0885213, 45.9767243], [11.088527, 45.9768317], [11.0884874, 45.9768317], [11.0884874, 45.9767378], [11.0883873, 45.9767508], [11.0884106, 45.976953], [11.088446, 45.9770448], [11.0885759, 45.9770194], [11.0887622, 45.9770307], [11.0888414, 45.9770065], [11.0888786, 45.9770679], [11.0889601, 45.9770599], [11.0889275, 45.9770145], [11.0891464, 45.9769951], [11.0891208, 45.9769547], [11.0892419, 45.9769482], [11.089301, 45.9770238], [11.0893161, 45.9770454], [11.0894696, 45.9771449]], [[11.0885992, 45.9769029], [11.0886947, 45.9768867], [11.088683, 45.9768333], [11.0885829, 45.9768414], [11.0885992, 45.9769029]], [[11.0888647, 45.9769288], [11.0890346, 45.9768851], [11.0890393, 45.9768074], [11.0889392, 45.9768171], [11.0889322, 45.9767767], [11.0888879, 45.9767815], [11.0888833, 45.9768365], [11.0889671, 45.9768673], [11.088846, 45.9768835], [11.0888647, 45.9769288]], [[11.0891348, 45.9768818], [11.0892163, 45.9768835], [11.0892, 45.976843], [11.0891162, 45.9768446], [11.0891348, 45.9768818]]]}}, {"id": "relation/3222115", "geometry": {"type": "Polygon", "coordinates": [[[11.0902733, 45.9757993], [11.0898996, 45.9760262], [11.0897195, 45.975874], [11.0896434, 45.9759092], [11.089573, 45.9758384], [11.0898269, 45.9757259], [11.0898254, 45.9757], [11.0898024, 45.9753121], [11.0897782, 45.9753084], [11.0897754, 45.9751147], [11.0897427, 45.9751092], [11.0897397, 45.9751414], [11.0896616, 45.9751447], [11.0896617, 45.9750637], [11.0898047, 45.975043], [11.0898147, 45.974969], [11.0899247, 45.9749558], [11.0899691, 45.9751022], [11.0899384, 45.9751142], [11.0899466, 45.975152], [11.0900139, 45.9751526], [11.0900474, 45.9752486], [11.0900868, 45.9752491], [11.0902047, 45.9754622], [11.0902291, 45.9754551], [11.0903324, 45.9755935], [11.0903831, 45.9757423], [11.0902733, 45.9757993]], [[11.0902387, 45.9757302], [11.0901839, 45.9756541], [11.0899941, 45.9756499], [11.0899955, 45.9757326], [11.0900494, 45.9758045], [11.0902387, 45.9757302]], [[11.0899614, 45.9755659], [11.0900316, 45.9755646], [11.0900263, 45.9754879], [11.0899562, 45.9755025], [11.0899614, 45.9755659]], [[11.0899348, 45.9753714], [11.0899804, 45.9753629], [11.0899559, 45.9752959], [11.0899068, 45.9753069], [11.0899348, 45.9753714]], [[11.0898889, 45.9758852], [11.0898009, 45.9758051], [11.0898592, 45.9757741], [11.0899447, 45.9758611], [11.0898889, 45.9758852]]]}}, {"id": "relation/9163864", "geometry": {"type": "Polygon", "coordinates": [[[11.090479, 45.9773837], [11.0906645, 45.9774078], [11.090672, 45.9773424], [11.0906076, 45.9773321], [11.0906249, 45.9772393], [11.0903577, 45.9771499], [11.0900781, 45.9771395], [11.090041, 45.9773356], [11.0901177, 45.9775144], [11.0899371, 45.9775763], [11.0900336, 45.9776915], [11.0901796, 45.977633], [11.0901944, 45.9776554], [11.0903651, 45.9776451], [11.0908823, 45.9775282], [11.0908575, 45.9774766], [11.0904864, 45.9775178], [11.0904666, 45.9774061], [11.0903033, 45.9773923], [11.0903825, 45.9775643], [11.0903231, 45.9775694], [11.0902117, 45.9773596], [11.090479, 45.9773837]], [[11.0903563, 45.9772298], [11.0903488, 45.9772728], [11.0901459, 45.9772745], [11.0901509, 45.9772229], [11.0903563, 45.9772298]]]}}, {"id": "way/99249647", "geometry": {"type": "Polygon", "coordinates": [[[11.0869603, 45.9646777], [11.0865909, 45.9632848], [11.0864165, 45.9633071], [11.0867859, 45.9647], [11.0869603, 45.9646777]]]}}, {"id": "way/99249651", "geometry": {"type": "Polygon", "coordinates": [[[11.08741, 45.9646218], [11.0872697, 45.9640626], [11.0869157, 45.9641056], [11.087056, 45.9646647], [11.08741, 45.9646218]]]}}, {"id": "way/99249654", "geometry": {"type": "Polygon", "coordinates": [[[11.0872697, 45.9640626], [11.087133, 45.9635177], [11.086779, 45.9635607], [11.0869157, 45.9641056], [11.0872697, 45.9640626]]]}}, {"id": "way/99249959", "geometry": {"type": "Polygon", "coordinates": [[[11.0729151, 45.9638477], [11.0730012, 45.9637782], [11.0729235, 45.9637317], [11.0728374, 45.9638012], [11.0729151, 45.9638477]]]}}, {"id": "way/99249960", "geometry": {"type": "Polygon", "coordinates": [[[11.0727262, 45.9635542], [11.0726317, 45.9634828], [11.0725406, 45.963541], [11.0726351, 45.9636124], [11.0727262, 45.9635542]]]}}, {"id": "way/107722554", "geometry": {"type": "Polygon", "coordinates": [[[11.1025586, 45.9688022], [11.1024804, 45.9685408], [11.1022133, 45.9685793], [11.1022915, 45.9688408], [11.1025586, 45.9688022]]]}}, {"id": "way/107722559", "geometry": {"type": "Polygon", "coordinates": [[[11.1021409, 45.9688523], [11.1020918, 45.968688], [11.1019732, 45.9687051], [11.1020223, 45.9688694], [11.1021409, 45.9688523]]]}}, {"id": "way/107722562", "geometry": {"type": "Polygon", "coordinates": [[[11.1061907, 45.9726289], [11.1060688, 45.9724941], [11.1059034, 45.9725664], [11.1060252, 45.9727011], [11.1061907, 45.9726289]]]}}, {"id": "way/107726156", "geometry": {"type": "Polygon", "coordinates": [[[11.0964358, 45.9761199], [11.0966455, 45.9760997], [11.096624, 45.9759917], [11.0964143, 45.9760118], [11.0964358, 45.9761199]]]}}, {"id": "way/107726157", "geometry": {"type": "Polygon", "coordinates": [[[11.0929454, 45.9720303], [11.0931193, 45.9720135], [11.0931138, 45.9719856], [11.0931629, 45.9719808], [11.0931455, 45.971894], [11.0929225, 45.9719156], [11.0929454, 45.9720303]]]}}, {"id": "way/107726160", "geometry": {"type": "Polygon", "coordinates": [[[11.0948402, 45.9747722], [11.0952353, 45.9747044], [11.0951974, 45.9745976], [11.0951411, 45.9746072], [11.0951357, 45.974592], [11.094839, 45.9746429], [11.0948476, 45.9746669], [11.0948054, 45.9746742], [11.0948402, 45.9747722]]]}}, {"id": "way/107726161", "geometry": {"type": "Polygon", "coordinates": [[[11.0908835, 45.9736433], [11.0910997, 45.9736269], [11.0910951, 45.9735976], [11.09124, 45.9735866], [11.0912239, 45.9734846], [11.0908628, 45.9735121], [11.0908835, 45.9736433]]]}}, {"id": "way/107726162", "geometry": {"type": "Polygon", "coordinates": [[[11.0943855, 45.9765476], [11.0944956, 45.9765381], [11.0944922, 45.9765196], [11.0946341, 45.9765073], [11.0946407, 45.9765439], [11.0947698, 45.9765327], [11.0947397, 45.9763645], [11.0943587, 45.9763974], [11.0943855, 45.9765476]]]}}, {"id": "way/107726163", "geometry": {"type": "Polygon", "coordinates": [[[11.0961648, 45.976402], [11.0963517, 45.9763841], [11.0963266, 45.9762581], [11.0961397, 45.9762761], [11.0961648, 45.976402]]]}}, {"id": "way/107726169", "geometry": {"type": "Polygon", "coordinates": [[[11.0928765, 45.9723841], [11.093058, 45.9723808], [11.0930565, 45.9723411], [11.0931102, 45.9723402], [11.0931071, 45.9722575], [11.0928719, 45.9722617], [11.0928765, 45.9723841]]]}}, {"id": "way/107726170", "geometry": {"type": "Polygon", "coordinates": [[[11.0949343, 45.976501], [11.0951583, 45.9764795], [11.0951376, 45.9763754], [11.0949136, 45.9763969], [11.0949343, 45.976501]]]}}, {"id": "way/107726171", "geometry": {"type": "Polygon", "coordinates": [[[11.0972156, 45.9760847], [11.097423, 45.9760648], [11.0973963, 45.9759303], [11.0971889, 45.9759502], [11.0972156, 45.9760847]]]}}, {"id": "way/107726172", "geometry": {"type": "Polygon", "coordinates": [[[11.0951854, 45.975715], [11.095449, 45.9756791], [11.0954229, 45.9755864], [11.0951593, 45.9756223], [11.0951854, 45.975715]]]}}, {"id": "way/107726173", "geometry": {"type": "Polygon", "coordinates": [[[11.0916395, 45.9743204], [11.0918326, 45.9743006], [11.0917968, 45.9741322], [11.0916038, 45.974152], [11.0916395, 45.9743204]]]}}, {"id": "way/107726177", "geometry": {"type": "Polygon", "coordinates": [[[11.092696, 45.9758363], [11.092686, 45.9756693], [11.0925625, 45.9756729], [11.092568, 45.9757646], [11.0924616, 45.9757677], [11.0924662, 45.9758429], [11.092696, 45.9758363]]]}}, {"id": "way/107726178", "geometry": {"type": "Polygon", "coordinates": [[[11.0952835, 45.9764764], [11.0955021, 45.9764554], [11.0954792, 45.9763403], [11.0952606, 45.9763613], [11.0952835, 45.9764764]]]}}, {"id": "way/107726179", "geometry": {"type": "Polygon", "coordinates": [[[11.0975044, 45.9761075], [11.0977451, 45.9760844], [11.097719, 45.9759532], [11.0974783, 45.9759762], [11.0975044, 45.9761075]]]}}, {"id": "way/107726180", "geometry": {"type": "Polygon", "coordinates": [[[11.0928682, 45.9762484], [11.0931725, 45.9762304], [11.0931584, 45.9761151], [11.0928541, 45.9761331], [11.0928682, 45.9762484]]]}}, {"id": "way/107726182", "geometry": {"type": "Polygon", "coordinates": [[[11.0933411, 45.9763874], [11.0935632, 45.9763769], [11.0935542, 45.9762839], [11.0933321, 45.9762944], [11.0933411, 45.9763874]]]}}, {"id": "way/107726183", "geometry": {"type": "Polygon", "coordinates": [[[11.0957195, 45.9764427], [11.095924, 45.9764231], [11.095904, 45.9763224], [11.0956995, 45.976342], [11.0957195, 45.9764427]]]}}, {"id": "way/107726184", "geometry": {"type": "Polygon", "coordinates": [[[11.0975797, 45.9763168], [11.0978081, 45.9762949], [11.0977792, 45.9761494], [11.0975508, 45.9761713], [11.0975797, 45.9763168]]]}}, {"id": "way/107726185", "geometry": {"type": "Polygon", "coordinates": [[[11.0933217, 45.9762121], [11.093604, 45.9762017], [11.0935954, 45.9760891], [11.093313, 45.9760996], [11.0933217, 45.9762121]]]}}, {"id": "way/107726186", "geometry": {"type": "Polygon", "coordinates": [[[11.0954146, 45.976223], [11.095581, 45.976207], [11.0955577, 45.9760896], [11.0953913, 45.9761055], [11.0954146, 45.976223]]]}}, {"id": "way/107726187", "geometry": {"type": "Polygon", "coordinates": [[[11.0928378, 45.9760025], [11.0930387, 45.9759901], [11.0930236, 45.9758724], [11.0928227, 45.9758848], [11.0928378, 45.9760025]]]}}, {"id": "way/107726189", "geometry": {"type": "Polygon", "coordinates": [[[11.0913978, 45.9734024], [11.0916188, 45.973375], [11.0915828, 45.9732349], [11.0913618, 45.9732624], [11.0913978, 45.9734024]]]}}, {"id": "way/107726190", "geometry": {"type": "Polygon", "coordinates": [[[11.0946628, 45.9762847], [11.0948273, 45.9762689], [11.0947946, 45.9761042], [11.0946301, 45.97612], [11.0946628, 45.9762847]]]}}, {"id": "way/107726191", "geometry": {"type": "Polygon", "coordinates": [[[11.0965239, 45.9750624], [11.0964913, 45.9749359], [11.0963569, 45.9749526], [11.0963611, 45.9749687], [11.0963083, 45.9749752], [11.0963367, 45.9750856], [11.0965239, 45.9750624]]]}}, {"id": "way/107726192", "geometry": {"type": "Polygon", "coordinates": [[[11.092433, 45.9736333], [11.0926595, 45.9736052], [11.0926199, 45.9734511], [11.0923934, 45.9734792], [11.092433, 45.9736333]]]}}, {"id": "way/107726193", "geometry": {"type": "Polygon", "coordinates": [[[11.0976172, 45.9766886], [11.0977887, 45.9766721], [11.0977602, 45.976529], [11.0975887, 45.9765455], [11.0976172, 45.9766886]]]}}, {"id": "way/107726194", "geometry": {"type": "Polygon", "coordinates": [[[11.0937035, 45.9761983], [11.093839, 45.9761879], [11.0938229, 45.9760871], [11.0936874, 45.9760976], [11.0937035, 45.9761983]]]}}, {"id": "way/107726195", "geometry": {"type": "Polygon", "coordinates": [[[11.0957076, 45.976189], [11.0959178, 45.9761688], [11.0958958, 45.9760582], [11.0956857, 45.9760783], [11.0957076, 45.976189]]]}}, {"id": "way/107726196", "geometry": {"type": "Polygon", "coordinates": [[[11.0922386, 45.9742578], [11.0923746, 45.9742455], [11.0923588, 45.974161], [11.0923775, 45.9741593], [11.0923634, 45.9740834], [11.0921975, 45.9740983], [11.0922121, 45.9741771], [11.0922234, 45.9741761], [11.0922386, 45.9742578]]]}}, {"id": "way/107726197", "geometry": {"type": "Polygon", "coordinates": [[[11.0909605, 45.9733864], [11.0911984, 45.9733569], [11.0911706, 45.9732485], [11.0909327, 45.973278], [11.0909605, 45.9733864]]]}}, {"id": "way/107726198", "geometry": {"type": "Polygon", "coordinates": [[[11.0944785, 45.975442], [11.0947814, 45.9753891], [11.094745, 45.9752887], [11.0946609, 45.9753034], [11.0946452, 45.97526], [11.0944616, 45.9752921], [11.0944721, 45.9753209], [11.0944369, 45.9753271], [11.0944785, 45.975442]]]}}, {"id": "way/107726199", "geometry": {"type": "Polygon", "coordinates": [[[11.0913599, 45.9703842], [11.0913403, 45.9702507], [11.0911061, 45.9702674], [11.0911257, 45.9704009], [11.0913599, 45.9703842]]]}}, {"id": "way/107726200", "geometry": {"type": "Polygon", "coordinates": [[[11.0916952, 45.9733701], [11.0919287, 45.9733411], [11.0918918, 45.9731973], [11.0916583, 45.9732263], [11.0916952, 45.9733701]]]}}, {"id": "way/107726201", "geometry": {"type": "Polygon", "coordinates": [[[11.0925483, 45.9741788], [11.0928434, 45.9741453], [11.0928142, 45.974021], [11.0925191, 45.9740545], [11.0925483, 45.9741788]]]}}, {"id": "way/107726202", "geometry": {"type": "Polygon", "coordinates": [[[11.0939848, 45.9763796], [11.094158, 45.9763743], [11.0941505, 45.9762543], [11.0939773, 45.9762596], [11.0939848, 45.9763796]]]}}, {"id": "way/107726203", "geometry": {"type": "Polygon", "coordinates": [[[11.0950532, 45.9762491], [11.0952761, 45.9762278], [11.0952528, 45.9761105], [11.0950299, 45.9761319], [11.0950532, 45.9762491]]]}}, {"id": "way/107726204", "geometry": {"type": "Polygon", "coordinates": [[[11.0953975, 45.9748335], [11.0955188, 45.9748094], [11.0954827, 45.9747215], [11.0953614, 45.9747456], [11.0953975, 45.9748335]]]}}, {"id": "way/107726206", "geometry": {"type": "Polygon", "coordinates": [[[11.0925256, 45.9744704], [11.0927101, 45.9744475], [11.0926934, 45.9743822], [11.0927293, 45.9743777], [11.0927019, 45.9742709], [11.0925756, 45.9742866], [11.0925873, 45.9743323], [11.0924931, 45.974344], [11.0925256, 45.9744704]]]}}, {"id": "way/107726207", "geometry": {"type": "Polygon", "coordinates": [[[11.0920463, 45.9747022], [11.092489, 45.9746624], [11.0924679, 45.9745492], [11.0920252, 45.9745889], [11.0920463, 45.9747022]]]}}, {"id": "way/107726208", "geometry": {"type": "Polygon", "coordinates": [[[11.0948735, 45.9753978], [11.0951115, 45.9753564], [11.0950678, 45.9752349], [11.0948297, 45.9752762], [11.0948735, 45.9753978]]]}}, {"id": "way/107726209", "geometry": {"type": "Polygon", "coordinates": [[[11.0899247, 45.9712356], [11.0903271, 45.9712314], [11.0903244, 45.9711063], [11.089922, 45.9711105], [11.0899247, 45.9712356]]]}}, {"id": "way/107726210", "geometry": {"type": "Polygon", "coordinates": [[[11.0919367, 45.9742864], [11.0920861, 45.9742711], [11.0920748, 45.9742175], [11.0921013, 45.9742148], [11.0920747, 45.9740888], [11.0918988, 45.9741067], [11.0919367, 45.9742864]]]}}, {"id": "way/107726211", "geometry": {"type": "Polygon", "coordinates": [[[11.0967681, 45.9761116], [11.096993, 45.97609], [11.0969676, 45.9759625], [11.0967428, 45.975984], [11.0967681, 45.9761116]]]}}, {"id": "way/107726212", "geometry": {"type": "Polygon", "coordinates": [[[11.0953266, 45.9749637], [11.0955555, 45.9749156], [11.0955236, 45.9748423], [11.0952947, 45.9748905], [11.0953266, 45.9749637]]]}}, {"id": "way/107726213", "geometry": {"type": "Polygon", "coordinates": [[[11.0919544, 45.9744936], [11.0923519, 45.9744601], [11.0923277, 45.9743213], [11.0919302, 45.9743547], [11.0919544, 45.9744936]]]}}, {"id": "way/107726214", "geometry": {"type": "Polygon", "coordinates": [[[11.0937755, 45.9764151], [11.0939524, 45.9763994], [11.0939306, 45.9762806], [11.0937537, 45.9762963], [11.0937755, 45.9764151]]]}}, {"id": "way/107726215", "geometry": {"type": "Polygon", "coordinates": [[[11.095209, 45.9753333], [11.0954862, 45.9752929], [11.0954533, 45.9751836], [11.095176, 45.975224], [11.095209, 45.9753333]]]}}, {"id": "way/107726218", "geometry": {"type": "Polygon", "coordinates": [[[11.0968419, 45.9763332], [11.0970234, 45.9763158], [11.0969962, 45.9761788], [11.0968147, 45.9761963], [11.0968419, 45.9763332]]]}}, {"id": "way/107726219", "geometry": {"type": "Polygon", "coordinates": [[[11.0893722, 45.9698082], [11.0895404, 45.9697873], [11.0895164, 45.969694], [11.0893483, 45.9697149], [11.0893722, 45.9698082]]]}}, {"id": "way/107726220", "geometry": {"type": "Polygon", "coordinates": [[[11.0949427, 45.9749946], [11.0951565, 45.9749507], [11.0951144, 45.9748518], [11.0949006, 45.9748958], [11.0949427, 45.9749946]]]}}, {"id": "way/107726221", "geometry": {"type": "Polygon", "coordinates": [[[11.0928076, 45.9758329], [11.0929773, 45.9758262], [11.0929651, 45.9756772], [11.0927954, 45.9756839], [11.0928076, 45.9758329]]]}}, {"id": "way/107726222", "geometry": {"type": "Polygon", "coordinates": [[[11.0960874, 45.9761598], [11.0963122, 45.9761382], [11.0962869, 45.9760107], [11.096062, 45.9760323], [11.0960874, 45.9761598]]]}}, {"id": "way/107726223", "geometry": {"type": "Polygon", "coordinates": [[[11.0949348, 45.97596], [11.0952337, 45.9759376], [11.0952096, 45.9757825], [11.0951289, 45.9757886], [11.0951266, 45.9757737], [11.0949862, 45.9757842], [11.0949894, 45.9758051], [11.0949116, 45.9758109], [11.0949348, 45.97596]]]}}, {"id": "way/107726226", "geometry": {"type": "Polygon", "coordinates": [[[11.0971865, 45.9762857], [11.0973981, 45.9762654], [11.097371, 45.9761288], [11.0971594, 45.9761491], [11.0971865, 45.9762857]]]}}, {"id": "way/107726227", "geometry": {"type": "Polygon", "coordinates": [[[11.0923602, 45.9760622], [11.0925288, 45.9760586], [11.0925293, 45.9760707], [11.0926722, 45.9760677], [11.0926712, 45.9760464], [11.0927226, 45.9760453], [11.0927188, 45.9759565], [11.0925359, 45.9759604], [11.0925365, 45.9759754], [11.0923566, 45.9759792], [11.0923602, 45.9760622]]]}}, {"id": "way/107726228", "geometry": {"type": "Polygon", "coordinates": [[[11.0946082, 45.9750302], [11.094822, 45.9750156], [11.0948064, 45.9749051], [11.0945926, 45.9749198], [11.0946082, 45.9750302]]]}}, {"id": "way/107726229", "geometry": {"type": "Polygon", "coordinates": [[[11.0931716, 45.9757967], [11.0933635, 45.9757899], [11.093355, 45.9756744], [11.0931631, 45.9756812], [11.0931716, 45.9757967]]]}}, {"id": "way/107726231", "geometry": {"type": "Polygon", "coordinates": [[[11.0942699, 45.97509], [11.0944897, 45.9750586], [11.0944572, 45.9749485], [11.0942374, 45.9749799], [11.0942699, 45.97509]]]}}, {"id": "way/107726233", "geometry": {"type": "Polygon", "coordinates": [[[11.0949735, 45.9707884], [11.0957148, 45.9706778], [11.0956703, 45.9705338], [11.09554, 45.9705533], [11.0955324, 45.9705285], [11.0950602, 45.9705989], [11.0950702, 45.9706311], [11.0949313, 45.9706519], [11.0949735, 45.9707884]]]}}, {"id": "way/107726234", "geometry": {"type": "Polygon", "coordinates": [[[11.0920282, 45.9733554], [11.0922666, 45.9733258], [11.0922268, 45.9731705], [11.0919884, 45.9732001], [11.0920282, 45.9733554]]]}}, {"id": "way/107726235", "geometry": {"type": "Polygon", "coordinates": [[[11.0945366, 45.9759931], [11.0948474, 45.9759617], [11.0948237, 45.9758483], [11.0945128, 45.9758797], [11.0945366, 45.9759931]]]}}, {"id": "way/107726237", "geometry": {"type": "Polygon", "coordinates": [[[11.0942994, 45.9748343], [11.0944388, 45.9748091], [11.0943779, 45.9746461], [11.0945138, 45.9746216], [11.0945513, 45.9747218], [11.0946853, 45.9746976], [11.0946192, 45.9745208], [11.0942099, 45.9745947], [11.0942994, 45.9748343]]]}}, {"id": "way/107726238", "geometry": {"type": "Polygon", "coordinates": [[[11.0916522, 45.973996], [11.0919322, 45.9739613], [11.0918992, 45.9738328], [11.0916192, 45.9738675], [11.0916522, 45.973996]]]}}, {"id": "way/107726239", "geometry": {"type": "Polygon", "coordinates": [[[11.095367, 45.9759057], [11.0956483, 45.9758712], [11.0956169, 45.975748], [11.0953356, 45.9757825], [11.095367, 45.9759057]]]}}, {"id": "way/107726240", "geometry": {"type": "Polygon", "coordinates": [[[11.0923888, 45.97622], [11.0925469, 45.9762069], [11.09253, 45.9761083], [11.0923719, 45.9761214], [11.0923888, 45.97622]]]}}, {"id": "way/107726241", "geometry": {"type": "Polygon", "coordinates": [[[11.0928501, 45.9756569], [11.0930962, 45.9756395], [11.0930861, 45.9755704], [11.0932329, 45.97556], [11.093225, 45.9755062], [11.0932581, 45.9755039], [11.0932465, 45.9754241], [11.0928463, 45.9754523], [11.0928668, 45.9755926], [11.0928409, 45.9755944], [11.0928501, 45.9756569]]]}}, {"id": "way/107726242", "geometry": {"type": "Polygon", "coordinates": [[[11.0939972, 45.9751228], [11.0941659, 45.975104], [11.0941417, 45.9749995], [11.0939731, 45.9750183], [11.0939972, 45.9751228]]]}}, {"id": "way/107726243", "geometry": {"type": "Polygon", "coordinates": [[[11.0970339, 45.9766569], [11.0972534, 45.9766358], [11.0972259, 45.9764973], [11.0970064, 45.9765183], [11.0970339, 45.9766569]]]}}, {"id": "way/107726244", "geometry": {"type": "Polygon", "coordinates": [[[11.0946247, 45.9757888], [11.0948328, 45.9757526], [11.0947963, 45.9756511], [11.0945881, 45.9756872], [11.0946247, 45.9757888]]]}}, {"id": "way/107726246", "geometry": {"type": "Polygon", "coordinates": [[[11.0920715, 45.9739369], [11.0923237, 45.9739056], [11.0922914, 45.9737799], [11.0920393, 45.9738112], [11.0920715, 45.9739369]]]}}, {"id": "way/107726247", "geometry": {"type": "Polygon", "coordinates": [[[11.0962739, 45.9768363], [11.096489, 45.9768156], [11.0964697, 45.9767186], [11.0962546, 45.9767392], [11.0962739, 45.9768363]]]}}, {"id": "way/107726248", "geometry": {"type": "Polygon", "coordinates": [[[11.0934071, 45.9766109], [11.0935652, 45.9766004], [11.0935506, 45.9764943], [11.0933925, 45.9765048], [11.0934071, 45.9766109]]]}}, {"id": "way/107726249", "geometry": {"type": "Polygon", "coordinates": [[[11.0952009, 45.9745386], [11.0954147, 45.9744947], [11.0953634, 45.9743742], [11.0951496, 45.9744181], [11.0952009, 45.9745386]]]}}, {"id": "way/107726250", "geometry": {"type": "Polygon", "coordinates": [[[11.0939902, 45.9748677], [11.0941618, 45.9748467], [11.0941301, 45.9747212], [11.0939585, 45.9747422], [11.0939902, 45.9748677]]]}}, {"id": "way/107726251", "geometry": {"type": "Polygon", "coordinates": [[[11.0966794, 45.9766893], [11.0968536, 45.9766726], [11.0968262, 45.976535], [11.0966521, 45.9765517], [11.0966794, 45.9766893]]]}}, {"id": "way/107726252", "geometry": {"type": "Polygon", "coordinates": [[[11.0928733, 45.9764263], [11.0933166, 45.9764172], [11.0933146, 45.9763683], [11.0930809, 45.9763731], [11.0930775, 45.976292], [11.0928678, 45.9762963], [11.0928733, 45.9764263]]]}}, {"id": "way/107726253", "geometry": {"type": "Polygon", "coordinates": [[[11.0938347, 45.9732383], [11.0937783, 45.9731555], [11.0936347, 45.9732027], [11.0936912, 45.9732855], [11.0938347, 45.9732383]]]}}, {"id": "way/107726254", "geometry": {"type": "Polygon", "coordinates": [[[11.0927403, 45.9735973], [11.0929434, 45.9735814], [11.0929249, 45.9734675], [11.0928821, 45.9734709], [11.092872, 45.973409], [11.0927117, 45.9734216], [11.0927403, 45.9735973]]]}}, {"id": "way/107726255", "geometry": {"type": "Polygon", "coordinates": [[[11.0938565, 45.9766192], [11.0941283, 45.9765931], [11.0941084, 45.9764931], [11.0939295, 45.9765102], [11.0939184, 45.9764543], [11.0938255, 45.9764632], [11.0938565, 45.9766192]]]}}, {"id": "way/107726256", "geometry": {"type": "Polygon", "coordinates": [[[11.0965192, 45.9763646], [11.096686, 45.9763486], [11.0966585, 45.9762102], [11.0964917, 45.9762262], [11.0965192, 45.9763646]]]}}, {"id": "way/107726257", "geometry": {"type": "Polygon", "coordinates": [[[11.0895056, 45.9717345], [11.0896918, 45.9717345], [11.0896918, 45.9716426], [11.0895056, 45.9716426], [11.0895056, 45.9717345]]]}}, {"id": "way/107726258", "geometry": {"type": "Polygon", "coordinates": [[[11.0947628, 45.9745728], [11.095064, 45.9745309], [11.0950355, 45.9744319], [11.0947344, 45.9744737], [11.0947628, 45.9745728]]]}}, {"id": "way/107726259", "geometry": {"type": "Polygon", "coordinates": [[[11.0961815, 45.9766707], [11.0963928, 45.9766504], [11.0963734, 45.9765529], [11.0961621, 45.9765732], [11.0961815, 45.9766707]]]}}, {"id": "way/107726260", "geometry": {"type": "Polygon", "coordinates": [[[11.0928575, 45.9766632], [11.0931558, 45.9766572], [11.0931531, 45.9765932], [11.0930336, 45.9765956], [11.0930311, 45.9765354], [11.0930868, 45.9765342], [11.093084, 45.976468], [11.0928495, 45.9764728], [11.0928575, 45.9766632]]]}}, {"id": "way/107726261", "geometry": {"type": "Polygon", "coordinates": [[[11.0943751, 45.9763119], [11.0945942, 45.9762909], [11.0945708, 45.9761733], [11.0943517, 45.9761943], [11.0943751, 45.9763119]]]}}, {"id": "way/107726262", "geometry": {"type": "Polygon", "coordinates": [[[11.0971651, 45.9749653], [11.097129, 45.9748607], [11.0969536, 45.97489], [11.0969897, 45.9749946], [11.0971651, 45.9749653]]]}}, {"id": "way/107726263", "geometry": {"type": "Polygon", "coordinates": [[[11.0941347, 45.9754781], [11.0943415, 45.9754572], [11.0943142, 45.9753267], [11.0941074, 45.9753476], [11.0941347, 45.9754781]]]}}, {"id": "way/107726264", "geometry": {"type": "Polygon", "coordinates": [[[11.0897025, 45.9699501], [11.0901469, 45.9699167], [11.0901312, 45.9698159], [11.0896868, 45.9698493], [11.0897025, 45.9699501]]]}}, {"id": "way/107726265", "geometry": {"type": "Polygon", "coordinates": [[[11.0907392, 45.9736359], [11.0907225, 45.9735245], [11.0905739, 45.9735353], [11.0905898, 45.9736413], [11.0905678, 45.9736429], [11.0905776, 45.9737079], [11.0907198, 45.9736976], [11.0907109, 45.973638], [11.0907392, 45.9736359]]]}}, {"id": "way/108758681", "geometry": {"type": "Polygon", "coordinates": [[[11.091012, 45.9750803], [11.0911898, 45.9750567], [11.0911559, 45.9749331], [11.0909781, 45.9749566], [11.091012, 45.9750803]]]}}, {"id": "way/108758683", "geometry": {"type": "Polygon", "coordinates": [[[11.0966911, 45.9777265], [11.096871, 45.9777382], [11.0968869, 45.9776205], [11.096707, 45.9776088], [11.0966911, 45.9777265]]]}}, {"id": "way/108758684", "geometry": {"type": "Polygon", "coordinates": [[[11.0948777, 45.9779804], [11.0950569, 45.9779889], [11.0950728, 45.977827], [11.0948936, 45.9778185], [11.0948777, 45.9779804]]]}}, {"id": "way/108758686", "geometry": {"type": "Polygon", "coordinates": [[[11.0950924, 45.9767886], [11.0951026, 45.9769022], [11.0953567, 45.9768911], [11.0953465, 45.9767775], [11.0950924, 45.9767886]]]}}, {"id": "way/108758688", "geometry": {"type": "Polygon", "coordinates": [[[11.0909038, 45.9810083], [11.0911071, 45.9809436], [11.0910381, 45.980839], [11.0908348, 45.9809037], [11.0909038, 45.9810083]]]}}, {"id": "way/108758689", "geometry": {"type": "Polygon", "coordinates": [[[11.0931558, 45.9824714], [11.092613, 45.9819644], [11.0927912, 45.9818723], [11.093062, 45.9821252], [11.0937758, 45.9817561], [11.0940479, 45.9820102], [11.0931558, 45.9824714]]]}}, {"id": "way/108758693", "geometry": {"type": "Polygon", "coordinates": [[[11.0962676, 45.9771529], [11.0965006, 45.9771456], [11.0964911, 45.9770014], [11.0962582, 45.9770087], [11.0962676, 45.9771529]]]}}, {"id": "way/108758695", "geometry": {"type": "Polygon", "coordinates": [[[11.093743, 45.9830506], [11.0940236, 45.982885], [11.0939261, 45.9828052], [11.0940596, 45.9827265], [11.0938752, 45.9825756], [11.0939345, 45.9825406], [11.0940142, 45.9826058], [11.0940938, 45.9825588], [11.0944312, 45.9828656], [11.0948666, 45.9823234], [11.0946761, 45.9821404], [11.0944518, 45.9822728], [11.0943183, 45.9821636], [11.093462, 45.9826691], [11.0936067, 45.9827875], [11.0935527, 45.9828194], [11.0935895, 45.9828495], [11.0935358, 45.9828812], [11.093743, 45.9830506]]]}}, {"id": "way/108758698", "geometry": {"type": "Polygon", "coordinates": [[[11.0920766, 45.9815416], [11.0923747, 45.9814121], [11.0921897, 45.9812064], [11.0918916, 45.9813359], [11.0920766, 45.9815416]]]}}, {"id": "way/108758700", "geometry": {"type": "Polygon", "coordinates": [[[11.0914255, 45.9745927], [11.0915567, 45.9745882], [11.0915482, 45.9744704], [11.0914171, 45.974475], [11.0914255, 45.9745927]]]}}, {"id": "way/108758702", "geometry": {"type": "Polygon", "coordinates": [[[11.0958217, 45.9813409], [11.0960903, 45.9810201], [11.0957267, 45.980873], [11.0955591, 45.9810732], [11.0954908, 45.9810457], [11.0953898, 45.9811663], [11.0958217, 45.9813409]]]}}, {"id": "way/108758705", "geometry": {"type": "Polygon", "coordinates": [[[11.0962668, 45.9774895], [11.0964891, 45.9774821], [11.096482, 45.9773781], [11.0962596, 45.9773855], [11.0962668, 45.9774895]]]}}, {"id": "way/108758706", "geometry": {"type": "Polygon", "coordinates": [[[11.0941843, 45.9772854], [11.0943696, 45.9772817], [11.0943646, 45.9771602], [11.0941793, 45.9771638], [11.0941843, 45.9772854]]]}}, {"id": "way/108758713", "geometry": {"type": "Polygon", "coordinates": [[[11.0936283, 45.9831473], [11.0937343, 45.9832462], [11.0940121, 45.9831026], [11.0939062, 45.9830036], [11.0936283, 45.9831473]]]}}, {"id": "way/108758714", "geometry": {"type": "Polygon", "coordinates": [[[11.091467, 45.9819971], [11.0915173, 45.9820908], [11.0917672, 45.982026], [11.0917169, 45.9819324], [11.091467, 45.9819971]]]}}, {"id": "way/108758718", "geometry": {"type": "Polygon", "coordinates": [[[11.0970614, 45.9783945], [11.0972268, 45.9784011], [11.097248, 45.9781473], [11.0970826, 45.9781406], [11.0970614, 45.9783945]]]}}, {"id": "way/108758720", "geometry": {"type": "Polygon", "coordinates": [[[11.0917912, 45.9755012], [11.0919437, 45.9754717], [11.0918987, 45.9753592], [11.0917463, 45.9753887], [11.0917912, 45.9755012]]]}}, {"id": "way/108758727", "geometry": {"type": "Polygon", "coordinates": [[[11.0951564, 45.9820713], [11.0957696, 45.9814027], [11.0954083, 45.9812427], [11.0947951, 45.9819113], [11.0951564, 45.9820713]]]}}, {"id": "way/108758728", "geometry": {"type": "Polygon", "coordinates": [[[11.0917723, 45.9794449], [11.0917574, 45.9792315], [11.0916237, 45.979236], [11.0916386, 45.9794494], [11.0916803, 45.979448], [11.0917723, 45.9794449]]]}}, {"id": "way/108758730", "geometry": {"type": "Polygon", "coordinates": [[[11.0952297, 45.9772246], [11.0952368, 45.9773486], [11.0955015, 45.9773412], [11.0954944, 45.9772172], [11.0952297, 45.9772246]]]}}, {"id": "way/108758733", "geometry": {"type": "Polygon", "coordinates": [[[11.0978978, 45.9773202], [11.0981149, 45.9773129], [11.0981058, 45.9771837], [11.0978888, 45.9771911], [11.0978978, 45.9773202]]]}}, {"id": "way/108758735", "geometry": {"type": "Polygon", "coordinates": [[[11.09717, 45.9771068], [11.0973658, 45.9771068], [11.0973658, 45.9769928], [11.09717, 45.9769928], [11.09717, 45.9771068]]]}}, {"id": "way/108758739", "geometry": {"type": "Polygon", "coordinates": [[[11.0959119, 45.9791213], [11.0959069, 45.9792602], [11.0960763, 45.9792632], [11.0960813, 45.9791242], [11.0959119, 45.9791213]]]}}, {"id": "way/108758742", "geometry": {"type": "Polygon", "coordinates": [[[11.0953456, 45.9786115], [11.0953562, 45.9783945], [11.0951607, 45.9783899], [11.0951501, 45.9786069], [11.0953456, 45.9786115]]]}}, {"id": "way/108758743", "geometry": {"type": "Polygon", "coordinates": [[[11.0910961, 45.974628], [11.0913502, 45.9746162], [11.0913386, 45.9744959], [11.0910845, 45.9745076], [11.0910961, 45.974628]]]}}, {"id": "way/108758746", "geometry": {"type": "Polygon", "coordinates": [[[11.0946595, 45.9772972], [11.0949143, 45.9772879], [11.0949091, 45.9772186], [11.0948134, 45.9772221], [11.0948096, 45.9771724], [11.0946505, 45.9771782], [11.0946595, 45.9772972]]]}}, {"id": "way/108758749", "geometry": {"type": "Polygon", "coordinates": [[[11.0910882, 45.9770428], [11.0910836, 45.9770145], [11.0910572, 45.9768631], [11.0906092, 45.9769008], [11.0906171, 45.9769422], [11.0905719, 45.9769628], [11.0905842, 45.9770356], [11.0906183, 45.9770453], [11.0906633, 45.9770449], [11.0906627, 45.9770276], [11.0907663, 45.9770258], [11.0907675, 45.9770605], [11.0910882, 45.9770428]]]}}, {"id": "way/108758753", "geometry": {"type": "Polygon", "coordinates": [[[11.0899725, 45.9747279], [11.0899974, 45.9747249], [11.0900061, 45.9747592], [11.0901439, 45.9747422], [11.0901122, 45.9746177], [11.0899495, 45.9746377], [11.0899725, 45.9747279]]]}}, {"id": "way/108758754", "geometry": {"type": "Polygon", "coordinates": [[[11.0942551, 45.9836417], [11.0943636, 45.9831967], [11.0942856, 45.9831684], [11.0938452, 45.9833803], [11.0941332, 45.9836346], [11.0942551, 45.9836417]]]}}, {"id": "way/108758758", "geometry": {"type": "Polygon", "coordinates": [[[11.0955581, 45.9777029], [11.0957964, 45.9777139], [11.0958097, 45.9775755], [11.0955714, 45.9775644], [11.0955581, 45.9777029]]]}}, {"id": "way/108758759", "geometry": {"type": "Polygon", "coordinates": [[[11.0935889, 45.9776053], [11.0935919, 45.9776972], [11.0938301, 45.9776935], [11.0938271, 45.9776016], [11.0935889, 45.9776053]]]}}, {"id": "way/108758760", "geometry": {"type": "Polygon", "coordinates": [[[11.0920028, 45.9751822], [11.0921871, 45.9751614], [11.0921574, 45.9750348], [11.0919732, 45.9750557], [11.0920028, 45.9751822]]]}}, {"id": "way/108758764", "geometry": {"type": "Polygon", "coordinates": [[[11.0938773, 45.9782932], [11.0940574, 45.9782967], [11.0940627, 45.9781643], [11.0938826, 45.9781608], [11.0938773, 45.9782932]]]}}, {"id": "way/108758766", "geometry": {"type": "Polygon", "coordinates": [[[11.0913251, 45.9814241], [11.091304, 45.9812946], [11.0911358, 45.9813079], [11.0911569, 45.9814374], [11.0913251, 45.9814241]]]}}, {"id": "way/108758768", "geometry": {"type": "Polygon", "coordinates": [[[11.0951497, 45.9783209], [11.0953081, 45.978329], [11.095324, 45.9781781], [11.0951656, 45.9781701], [11.0951497, 45.9783209]]]}}, {"id": "way/108758774", "geometry": {"type": "Polygon", "coordinates": [[[11.0950261, 45.9770093], [11.0950374, 45.9771517], [11.0953233, 45.9771407], [11.0953119, 45.9769982], [11.0950261, 45.9770093]]]}}, {"id": "way/108758778", "geometry": {"type": "Polygon", "coordinates": [[[11.0970932, 45.978045], [11.0972775, 45.9780563], [11.0972934, 45.9779312], [11.097109, 45.9779199], [11.0970932, 45.978045]]]}}, {"id": "way/108758779", "geometry": {"type": "Polygon", "coordinates": [[[11.0959284, 45.9789431], [11.0961105, 45.9789548], [11.0961263, 45.9788368], [11.0959442, 45.9788251], [11.0959284, 45.9789431]]]}}, {"id": "way/108758780", "geometry": {"type": "Polygon", "coordinates": [[[11.0915872, 45.980068], [11.0916974, 45.9800657], [11.0916932, 45.9799656], [11.0915829, 45.9799679], [11.0915872, 45.980068]]]}}, {"id": "way/108758784", "geometry": {"type": "Polygon", "coordinates": [[[11.0973263, 45.9774581], [11.097321, 45.9772006], [11.0971569, 45.9772022], [11.0971622, 45.9774598], [11.0973263, 45.9774581]]]}}, {"id": "way/108758785", "geometry": {"type": "Polygon", "coordinates": [[[11.0959544, 45.9771547], [11.0960868, 45.9770406], [11.0959453, 45.9769614], [11.095813, 45.9770754], [11.0959544, 45.9771547]]]}}, {"id": "way/108758791", "geometry": {"type": "Polygon", "coordinates": [[[11.0906198, 45.9748625], [11.090785, 45.9748536], [11.0907715, 45.9747323], [11.0906064, 45.9747411], [11.0906198, 45.9748625]]]}}, {"id": "way/108758793", "geometry": {"type": "Polygon", "coordinates": [[[11.0959977, 45.9777331], [11.0962629, 45.9777429], [11.0962652, 45.977713], [11.0965169, 45.9777223], [11.0965245, 45.9776221], [11.0960076, 45.977603], [11.0959977, 45.9777331]]]}}, {"id": "way/108758797", "geometry": {"type": "Polygon", "coordinates": [[[11.0917172, 45.9816457], [11.0916579, 45.981525], [11.0915199, 45.9815578], [11.0915792, 45.9816784], [11.0917172, 45.9816457]]]}}, {"id": "way/108758802", "geometry": {"type": "Polygon", "coordinates": [[[11.096283, 45.9783889], [11.0964527, 45.9783945], [11.0964686, 45.9781627], [11.0962989, 45.9781571], [11.096283, 45.9783889]]]}}, {"id": "way/108758805", "geometry": {"type": "Polygon", "coordinates": [[[11.0933825, 45.9772779], [11.0934025, 45.977378], [11.0935931, 45.9773596], [11.093573, 45.9772595], [11.0933825, 45.9772779]]]}}, {"id": "way/108758809", "geometry": {"type": "Polygon", "coordinates": [[[11.0915946, 45.9813679], [11.0915692, 45.9812502], [11.0914112, 45.9812667], [11.0914366, 45.9813844], [11.0915946, 45.9813679]]]}}, {"id": "way/108758814", "geometry": {"type": "Polygon", "coordinates": [[[11.0975537, 45.9768788], [11.0977708, 45.9768641], [11.0977536, 45.9767417], [11.0975365, 45.9767564], [11.0975537, 45.9768788]]]}}, {"id": "way/108758817", "geometry": {"type": "Polygon", "coordinates": [[[11.0918685, 45.9798522], [11.0918719, 45.979949], [11.0920455, 45.9799461], [11.0920421, 45.9798492], [11.0918685, 45.9798522]]]}}, {"id": "way/108758824", "geometry": {"type": "Polygon", "coordinates": [[[11.0945707, 45.9782269], [11.0947295, 45.9782269], [11.0947295, 45.9780834], [11.0945707, 45.9780834], [11.0945707, 45.9782269]]]}}, {"id": "way/108758827", "geometry": {"type": "Polygon", "coordinates": [[[11.0915673, 45.9746294], [11.0915976, 45.974768], [11.0917022, 45.974757], [11.0916989, 45.9747418], [11.091827, 45.9747283], [11.0918124, 45.974661], [11.0917854, 45.9746639], [11.0917731, 45.9746077], [11.0915673, 45.9746294]]]}}, {"id": "way/108758829", "geometry": {"type": "Polygon", "coordinates": [[[11.0966003, 45.9773386], [11.0967851, 45.9773319], [11.0967745, 45.9771921], [11.0965897, 45.9771988], [11.0966003, 45.9773386]]]}}, {"id": "way/108758833", "geometry": {"type": "Polygon", "coordinates": [[[11.0939321, 45.9812655], [11.0938674, 45.9813875], [11.0940606, 45.9814369], [11.0941252, 45.9813149], [11.0939321, 45.9812655]]]}}, {"id": "way/108758838", "geometry": {"type": "Polygon", "coordinates": [[[11.0948171, 45.9775979], [11.0950239, 45.9776031], [11.0950345, 45.977397], [11.0948277, 45.9773919], [11.0948171, 45.9775979]]]}}, {"id": "way/108758842", "geometry": {"type": "Polygon", "coordinates": [[[11.0927761, 45.9815569], [11.0928879, 45.9816675], [11.0930156, 45.9816052], [11.0929038, 45.9814946], [11.0927761, 45.9815569]]]}}, {"id": "way/108758845", "geometry": {"type": "Polygon", "coordinates": [[[11.0908061, 45.9753716], [11.0910772, 45.9753334], [11.0910317, 45.9751777], [11.0907607, 45.975216], [11.0908061, 45.9753716]]]}}, {"id": "way/108758847", "geometry": {"type": "Polygon", "coordinates": [[[11.0932341, 45.9783136], [11.0934776, 45.9783025], [11.0934673, 45.9781924], [11.0932238, 45.9782034], [11.0932341, 45.9783136]]]}}, {"id": "way/108758850", "geometry": {"type": "Polygon", "coordinates": [[[11.0941367, 45.9779401], [11.0943472, 45.9779495], [11.0943578, 45.9778355], [11.0941473, 45.977826], [11.0941367, 45.9779401]]]}}, {"id": "way/108758853", "geometry": {"type": "Polygon", "coordinates": [[[11.0919423, 45.9801373], [11.0920181, 45.9802405], [11.0922172, 45.9801699], [11.0921413, 45.9800666], [11.0919423, 45.9801373]]]}}, {"id": "way/108758857", "geometry": {"type": "Polygon", "coordinates": [[[11.0941314, 45.9782896], [11.0943749, 45.9782822], [11.0943661, 45.978142], [11.0941226, 45.9781494], [11.0941314, 45.9782896]]]}}, {"id": "way/108758860", "geometry": {"type": "Polygon", "coordinates": [[[11.0910267, 45.9742915], [11.0911925, 45.9742694], [11.0911544, 45.9741311], [11.0909886, 45.9741531], [11.0910267, 45.9742915]]]}}, {"id": "way/108758863", "geometry": {"type": "Polygon", "coordinates": [[[11.0913697, 45.9804406], [11.0914536, 45.9804096], [11.0913919, 45.9799803], [11.0911097, 45.9800071], [11.0913697, 45.9804406]]]}}, {"id": "way/108758866", "geometry": {"type": "Polygon", "coordinates": [[[11.0966457, 45.9775226], [11.0968255, 45.9775266], [11.0968308, 45.9774126], [11.096651, 45.9774085], [11.0966457, 45.9775226]]]}}, {"id": "way/108758867", "geometry": {"type": "Polygon", "coordinates": [[[11.0938641, 45.9772798], [11.0940441, 45.9772798], [11.0940441, 45.9771804], [11.0938641, 45.9771804], [11.0938641, 45.9772798]]]}}, {"id": "way/108758870", "geometry": {"type": "Polygon", "coordinates": [[[11.0906651, 45.9770948], [11.0907687, 45.977093], [11.0907675, 45.9770605], [11.0907663, 45.9770258], [11.0906627, 45.9770276], [11.0906633, 45.9770449], [11.0906651, 45.9770948]]]}}, {"id": "way/108758872", "geometry": {"type": "Polygon", "coordinates": [[[11.0925081, 45.978056], [11.0927135, 45.9780662], [11.0927294, 45.9779117], [11.092524, 45.9779015], [11.0925081, 45.978056]]]}}, {"id": "way/108758875", "geometry": {"type": "Polygon", "coordinates": [[[11.0917166, 45.981851], [11.0916526, 45.9817323], [11.0914493, 45.9817853], [11.0915133, 45.981904], [11.0917166, 45.981851]]]}}, {"id": "way/108758880", "geometry": {"type": "Polygon", "coordinates": [[[11.0918596, 45.9791102], [11.0920248, 45.9790867], [11.0919949, 45.9789854], [11.0918297, 45.979009], [11.0918596, 45.9791102]]]}}, {"id": "way/108758884", "geometry": {"type": "Polygon", "coordinates": [[[11.0954308, 45.9771657], [11.0956478, 45.9771547], [11.0956334, 45.9770174], [11.0954163, 45.9770285], [11.0954308, 45.9771657]]]}}, {"id": "way/108758887", "geometry": {"type": "Polygon", "coordinates": [[[11.0974984, 45.9771123], [11.0976996, 45.9771013], [11.0976842, 45.9769657], [11.097483, 45.9769768], [11.0974984, 45.9771123]]]}}, {"id": "way/108758892", "geometry": {"type": "Polygon", "coordinates": [[[11.0906871, 45.9800627], [11.0907445, 45.9801584], [11.0908969, 45.9801143], [11.0908395, 45.9800186], [11.0906871, 45.9800627]]]}}, {"id": "way/108758893", "geometry": {"type": "Polygon", "coordinates": [[[11.0933403, 45.9816334], [11.0935369, 45.9817041], [11.0936191, 45.9815935], [11.0934226, 45.9815229], [11.0933403, 45.9816334]]]}}, {"id": "way/108758896", "geometry": {"type": "Polygon", "coordinates": [[[11.0955838, 45.9780045], [11.0958274, 45.9780082], [11.0958309, 45.9778941], [11.0955874, 45.9778905], [11.0955838, 45.9780045]]]}}, {"id": "way/108758903", "geometry": {"type": "Polygon", "coordinates": [[[11.0913468, 45.9811307], [11.0914902, 45.9810913], [11.0914182, 45.9809647], [11.0912748, 45.9810041], [11.0913468, 45.9811307]]]}}, {"id": "way/108758905", "geometry": {"type": "Polygon", "coordinates": [[[11.0936021, 45.978343], [11.0937821, 45.9783319], [11.0937661, 45.9782062], [11.0935861, 45.9782172], [11.0936021, 45.978343]]]}}, {"id": "way/108758910", "geometry": {"type": "Polygon", "coordinates": [[[11.0923714, 45.9820031], [11.0927474, 45.9818218], [11.0924199, 45.9814937], [11.0920438, 45.981675], [11.0923714, 45.9820031]]]}}, {"id": "way/108758911", "geometry": {"type": "Polygon", "coordinates": [[[11.0960094, 45.9797982], [11.0961411, 45.9798143], [11.0962089, 45.9795464], [11.0960772, 45.9795303], [11.0960094, 45.9797982]]]}}, {"id": "way/108758915", "geometry": {"type": "Polygon", "coordinates": [[[11.0916068, 45.9798117], [11.0918101, 45.9798088], [11.0918068, 45.9796995], [11.0916035, 45.9797024], [11.0916068, 45.9798117]]]}}, {"id": "way/108758922", "geometry": {"type": "Polygon", "coordinates": [[[11.090516, 45.9747085], [11.0907151, 45.9746821], [11.0906838, 45.9745686], [11.0904847, 45.9745951], [11.090516, 45.9747085]]]}}, {"id": "way/108758923", "geometry": {"type": "Polygon", "coordinates": [[[11.0966566, 45.9780063], [11.0968055, 45.9780211], [11.096832, 45.9778923], [11.096683, 45.9778775], [11.0966566, 45.9780063]]]}}, {"id": "way/108758927", "geometry": {"type": "Polygon", "coordinates": [[[11.0937689, 45.9774324], [11.0937583, 45.9772963], [11.0936147, 45.9773016], [11.0936253, 45.9774378], [11.0937689, 45.9774324]]]}}, {"id": "way/108758928", "geometry": {"type": "Polygon", "coordinates": [[[11.0918867, 45.979488], [11.092094, 45.9794792], [11.0920813, 45.9793547], [11.0918739, 45.9793636], [11.0918867, 45.979488]]]}}, {"id": "way/108758933", "geometry": {"type": "Polygon", "coordinates": [[[11.0970485, 45.9768751], [11.0972656, 45.976864], [11.0972514, 45.9767289], [11.0970343, 45.9767399], [11.0970485, 45.9768751]]]}}, {"id": "way/108758934", "geometry": {"type": "Polygon", "coordinates": [[[11.0938987, 45.9779936], [11.0940736, 45.9779962], [11.0940789, 45.9778196], [11.093904, 45.977817], [11.0938987, 45.9779936]]]}}, {"id": "way/108758935", "geometry": {"type": "Polygon", "coordinates": [[[11.0912706, 45.9747931], [11.0914885, 45.9747741], [11.0914663, 45.9746513], [11.0912484, 45.9746704], [11.0912706, 45.9747931]]]}}, {"id": "way/108758940", "geometry": {"type": "Polygon", "coordinates": [[[11.0940814, 45.9816792], [11.0942344, 45.981726], [11.0943733, 45.9815071], [11.0942203, 45.9814602], [11.0940814, 45.9816792]]]}}, {"id": "way/108758941", "geometry": {"type": "Polygon", "coordinates": [[[11.0919923, 45.9787379], [11.0920306, 45.9788511], [11.0921746, 45.9788275], [11.0921363, 45.9787143], [11.0919923, 45.9787379]]]}}, {"id": "way/108758943", "geometry": {"type": "Polygon", "coordinates": [[[11.0959205, 45.9773313], [11.0961587, 45.9773276], [11.096155, 45.9772097], [11.0959167, 45.9772134], [11.0959205, 45.9773313]]]}}, {"id": "way/108758948", "geometry": {"type": "Polygon", "coordinates": [[[11.0944356, 45.977609], [11.0946364, 45.9776066], [11.0946311, 45.9773932], [11.0944303, 45.9773956], [11.0944356, 45.977609]]]}}, {"id": "way/108758949", "geometry": {"type": "Polygon", "coordinates": [[[11.092627, 45.9814268], [11.0927262, 45.9815187], [11.0928753, 45.981441], [11.0927761, 45.9813491], [11.092627, 45.9814268]]]}}, {"id": "way/133298824", "geometry": {"type": "Polygon", "coordinates": [[[11.0977735, 45.9914439], [11.0977034, 45.9911843], [11.0975381, 45.9912058], [11.0976082, 45.9914655], [11.0977735, 45.9914439]]]}}, {"id": "way/133298825", "geometry": {"type": "Polygon", "coordinates": [[[11.097284, 45.9889762], [11.0972603, 45.9888805], [11.097198, 45.9888879], [11.0972218, 45.9889836], [11.097284, 45.9889762]]]}}, {"id": "way/133298826", "geometry": {"type": "Polygon", "coordinates": [[[11.0973535, 45.9890666], [11.0972871, 45.9890754], [11.0973144, 45.9891752], [11.0973808, 45.9891664], [11.0973535, 45.9890666]]]}}, {"id": "way/133298828", "geometry": {"type": "Polygon", "coordinates": [[[11.0974461, 45.9894286], [11.0973871, 45.9891768], [11.0971372, 45.9892064], [11.0971799, 45.9893788], [11.0973412, 45.9893595], [11.0973608, 45.9894388], [11.0974461, 45.9894286]]]}}, {"id": "way/133298838", "geometry": {"type": "Polygon", "coordinates": [[[11.0991159, 45.9901329], [11.0990283, 45.9898895], [11.0988332, 45.9899234], [11.0989208, 45.9901668], [11.0991159, 45.9901329]]]}}, {"id": "way/133298839", "geometry": {"type": "Polygon", "coordinates": [[[11.0989866, 45.9877224], [11.0989716, 45.9876471], [11.0988963, 45.9876543], [11.0989112, 45.9877296], [11.0989866, 45.9877224]]]}}, {"id": "way/133298840", "geometry": {"type": "Polygon", "coordinates": [[[11.0971033, 45.9877743], [11.0973088, 45.9877198], [11.0972615, 45.9876338], [11.097056, 45.9876883], [11.0971033, 45.9877743]]]}}, {"id": "way/133298841", "geometry": {"type": "Polygon", "coordinates": [[[11.0997488, 45.9921458], [11.0999765, 45.9921092], [11.0999364, 45.9919884], [11.0997087, 45.9920249], [11.0997488, 45.9921458]]]}}, {"id": "way/133298842", "geometry": {"type": "Polygon", "coordinates": [[[11.0985028, 45.9902302], [11.0984036, 45.9900152], [11.0981242, 45.9900775], [11.0982234, 45.9902925], [11.0985028, 45.9902302]]]}}, {"id": "way/133298843", "geometry": {"type": "Polygon", "coordinates": [[[11.0983414, 45.9877443], [11.0982213, 45.9875732], [11.0981031, 45.9876132], [11.0981612, 45.987696], [11.0981228, 45.987709], [11.0981849, 45.9877974], [11.0983414, 45.9877443]]]}}, {"id": "way/133298844", "geometry": {"type": "Polygon", "coordinates": [[[11.0973584, 45.9909767], [11.0972417, 45.9905669], [11.0970104, 45.9905988], [11.0971271, 45.9910085], [11.0973584, 45.9909767]]]}}, {"id": "way/133298845", "geometry": {"type": "Polygon", "coordinates": [[[11.0968342, 45.9873589], [11.0971294, 45.9873148], [11.097097, 45.98721], [11.0968018, 45.9872541], [11.0968342, 45.9873589]]]}}, {"id": "way/135417307", "geometry": {"type": "Polygon", "coordinates": [[[11.1002133, 45.9575083], [11.100161, 45.9575303], [11.1001983, 45.9575732], [11.1002506, 45.9575512], [11.1002133, 45.9575083]]]}}, {"id": "way/135417309", "geometry": {"type": "Polygon", "coordinates": [[[11.1033032, 45.9603003], [11.1033998, 45.9602597], [11.1033514, 45.9602041], [11.1032548, 45.9602447], [11.1033032, 45.9603003]]]}}, {"id": "way/135417310", "geometry": {"type": "Polygon", "coordinates": [[[11.1012368, 45.9594002], [11.10139, 45.9593272], [11.1013274, 45.9592636], [11.101281, 45.9592857], [11.1012213, 45.9592251], [11.101141, 45.9592634], [11.1011785, 45.9593015], [11.101152, 45.9593141], [11.1012368, 45.9594002]]]}}, {"id": "way/135417311", "geometry": {"type": "Polygon", "coordinates": [[[11.1028815, 45.959556], [11.1029842, 45.9595128], [11.1029417, 45.9594639], [11.102839, 45.9595071], [11.1028815, 45.959556]]]}}, {"id": "way/135417312", "geometry": {"type": "Polygon", "coordinates": [[[11.0997458, 45.9576501], [11.0998193, 45.9575881], [11.0997586, 45.9575533], [11.0996851, 45.9576153], [11.0997458, 45.9576501]]]}}, {"id": "way/135417314", "geometry": {"type": "Polygon", "coordinates": [[[11.0995588, 45.9590743], [11.0995287, 45.9589864], [11.0994451, 45.9590003], [11.0994752, 45.9590881], [11.0995588, 45.9590743]]]}}, {"id": "way/135417315", "geometry": {"type": "Polygon", "coordinates": [[[11.0974294, 45.9595127], [11.0973933, 45.9593788], [11.097333, 45.9593866], [11.0973691, 45.9595205], [11.0974294, 45.9595127]]]}}, {"id": "way/135417522", "geometry": {"type": "Polygon", "coordinates": [[[11.0984246, 45.9568229], [11.0985204, 45.9567591], [11.0984225, 45.9566881], [11.0983267, 45.9567519], [11.0984246, 45.9568229]]]}}, {"id": "way/135420902", "geometry": {"type": "Polygon", "coordinates": [[[11.0754948, 45.9641362], [11.0754563, 45.9641047], [11.0754028, 45.9641364], [11.0754413, 45.9641678], [11.0754948, 45.9641362]]]}}, {"id": "way/135420920", "geometry": {"type": "Polygon", "coordinates": [[[11.089755, 45.9684967], [11.0898455, 45.9685177], [11.0898736, 45.968459], [11.0897831, 45.968438], [11.089755, 45.9684967]]]}}, {"id": "way/135420921", "geometry": {"type": "Polygon", "coordinates": [[[11.0725124, 45.9655265], [11.0724258, 45.9654072], [11.0723585, 45.9654308], [11.0724452, 45.9655501], [11.0725124, 45.9655265]]]}}, {"id": "way/141433613", "geometry": {"type": "Polygon", "coordinates": [[[11.0951966, 45.9606394], [11.0953182, 45.9606038], [11.0952852, 45.9605493], [11.0951636, 45.9605849], [11.0951966, 45.9606394]]]}}, {"id": "way/141433614", "geometry": {"type": "Polygon", "coordinates": [[[11.100523, 45.9610459], [11.1004144, 45.9609389], [11.1002786, 45.9610055], [11.1003872, 45.9611125], [11.100523, 45.9610459]]]}}, {"id": "way/141433615", "geometry": {"type": "Polygon", "coordinates": [[[11.0888002, 45.974004], [11.0887722, 45.9737719], [11.088715, 45.9737753], [11.0886219, 45.9737807], [11.0886248, 45.9738051], [11.08865, 45.9740128], [11.0888002, 45.974004]]]}}, {"id": "way/141433616", "geometry": {"type": "Polygon", "coordinates": [[[11.1026936, 45.9686132], [11.1026544, 45.9685223], [11.1025812, 45.9685376], [11.1026205, 45.9686284], [11.1026936, 45.9686132]]]}}, {"id": "way/141433617", "geometry": {"type": "Polygon", "coordinates": [[[11.0906389, 45.9606038], [11.0906389, 45.9604347], [11.0905301, 45.9604347], [11.0905301, 45.9606038], [11.0906389, 45.9606038]]]}}, {"id": "way/141433619", "geometry": {"type": "Polygon", "coordinates": [[[11.0893415, 45.9753072], [11.0895548, 45.9752782], [11.089515, 45.975137], [11.0893018, 45.975166], [11.0893415, 45.9753072]]]}}, {"id": "way/141433620", "geometry": {"type": "Polygon", "coordinates": [[[11.0894874, 45.9755242], [11.0896713, 45.9754734], [11.089587, 45.9753262], [11.0894032, 45.975377], [11.0894874, 45.9755242]]]}}, {"id": "way/141433621", "geometry": {"type": "Polygon", "coordinates": [[[11.0915192, 45.9639266], [11.0915544, 45.9638533], [11.0914534, 45.9638299], [11.0914183, 45.9639032], [11.0915192, 45.9639266]]]}}, {"id": "way/141433622", "geometry": {"type": "Polygon", "coordinates": [[[11.0943869, 45.9639161], [11.0943267, 45.9637974], [11.0941798, 45.9638335], [11.0942401, 45.9639522], [11.0943869, 45.9639161]]]}}, {"id": "way/141433623", "geometry": {"type": "Polygon", "coordinates": [[[11.0953293, 45.9738363], [11.0954724, 45.9737984], [11.0954006, 45.9736675], [11.0952575, 45.9737054], [11.0953293, 45.9738363]]]}}, {"id": "way/141433624", "geometry": {"type": "Polygon", "coordinates": [[[11.0951557, 45.9649248], [11.095271, 45.9648981], [11.0952479, 45.9648501], [11.0951327, 45.9648768], [11.0951557, 45.9649248]]]}}, {"id": "way/141433625", "geometry": {"type": "Polygon", "coordinates": [[[11.0898712, 45.9739393], [11.0900631, 45.9739253], [11.0900446, 45.9738024], [11.0898527, 45.9738163], [11.0898712, 45.9739393]]]}}, {"id": "way/141433626", "geometry": {"type": "Polygon", "coordinates": [[[11.1004048, 45.9637724], [11.100552, 45.9637502], [11.1005288, 45.9636761], [11.1003816, 45.9636983], [11.1004048, 45.9637724]]]}}, {"id": "way/141433627", "geometry": {"type": "Polygon", "coordinates": [[[11.0889503, 45.9726121], [11.0891846, 45.9726121], [11.0891846, 45.9724838], [11.0889503, 45.9724838], [11.0889503, 45.9726121]]]}}, {"id": "way/141433628", "geometry": {"type": "Polygon", "coordinates": [[[11.08986, 45.9737573], [11.0898414, 45.9736337], [11.0896911, 45.9736446], [11.0897097, 45.9737682], [11.08986, 45.9737573]]]}}, {"id": "way/141433629", "geometry": {"type": "Polygon", "coordinates": [[[11.0899939, 45.9745395], [11.0901405, 45.9745228], [11.0901466, 45.9745484], [11.0904082, 45.9745185], [11.0903896, 45.9744402], [11.0901367, 45.9744691], [11.0901272, 45.9744291], [11.090228, 45.9744176], [11.0902084, 45.974335], [11.0902824, 45.9743265], [11.0902668, 45.9742606], [11.0900542, 45.9742849], [11.0900776, 45.9743839], [11.0899602, 45.9743974], [11.0899939, 45.9745395]]]}}, {"id": "way/141433630", "geometry": {"type": "Polygon", "coordinates": [[[11.0905353, 45.9734171], [11.0908532, 45.9733819], [11.0908288, 45.9732752], [11.0905109, 45.9733104], [11.0905353, 45.9734171]]]}}, {"id": "way/141433631", "geometry": {"type": "Polygon", "coordinates": [[[11.0905383, 45.975127], [11.0907516, 45.9751116], [11.0907315, 45.9749774], [11.0905181, 45.9749929], [11.0905383, 45.975127]]]}}, {"id": "way/141433632", "geometry": {"type": "Polygon", "coordinates": [[[11.0948989, 45.9667823], [11.0952529, 45.9666961], [11.0952121, 45.9666151], [11.0948581, 45.9667013], [11.0948989, 45.9667823]]]}}, {"id": "way/141433633", "geometry": {"type": "Polygon", "coordinates": [[[11.0978443, 45.9659838], [11.0978482, 45.9660192], [11.0979314, 45.9660148], [11.0979275, 45.9659794], [11.0978443, 45.9659838]]]}}, {"id": "way/141433634", "geometry": {"type": "Polygon", "coordinates": [[[11.0905813, 45.9603635], [11.0908629, 45.9603235], [11.0908146, 45.9601592], [11.090533, 45.9601993], [11.0905813, 45.9603635]]]}}, {"id": "way/141433635", "geometry": {"type": "Polygon", "coordinates": [[[11.0906521, 45.974444], [11.0908797, 45.9744207], [11.0908499, 45.97428], [11.0906223, 45.9743033], [11.0906521, 45.974444]]]}}, {"id": "way/141433636", "geometry": {"type": "Polygon", "coordinates": [[[11.0923328, 45.9637625], [11.0923931, 45.9636334], [11.0922573, 45.9636027], [11.092197, 45.9637319], [11.0923328, 45.9637625]]]}}, {"id": "way/141433637", "geometry": {"type": "Polygon", "coordinates": [[[11.0904498, 45.9739434], [11.0904196, 45.9737934], [11.0902544, 45.9738094], [11.0902846, 45.9739595], [11.0904498, 45.9739434]]]}}, {"id": "way/141433638", "geometry": {"type": "Polygon", "coordinates": [[[11.0890847, 45.9746597], [11.0889608, 45.9744403], [11.0888342, 45.9744749], [11.0889581, 45.9746943], [11.0890847, 45.9746597]]]}}, {"id": "way/141433639", "geometry": {"type": "Polygon", "coordinates": [[[11.0899597, 45.9749342], [11.0902822, 45.9748781], [11.0902476, 45.9747818], [11.089925, 45.9748378], [11.0899597, 45.9749342]]]}}, {"id": "way/141433640", "geometry": {"type": "Polygon", "coordinates": [[[11.1002959, 45.9655878], [11.100456, 45.9655834], [11.1004521, 45.9655169], [11.1002921, 45.9655214], [11.1002959, 45.9655878]]]}}, {"id": "way/141433641", "geometry": {"type": "Polygon", "coordinates": [[[11.0919461, 45.9640453], [11.0919863, 45.963972], [11.0919088, 45.9639515], [11.0918686, 45.9640248], [11.0919461, 45.9640453]]]}}, {"id": "way/141433642", "geometry": {"type": "Polygon", "coordinates": [[[11.0892486, 45.9736532], [11.0895594, 45.9736331], [11.0895445, 45.9735218], [11.0892333, 45.973542], [11.0892406, 45.9735904], [11.0892486, 45.9736532]]]}}, {"id": "way/141433643", "geometry": {"type": "Polygon", "coordinates": [[[11.0961899, 45.9620449], [11.0961749, 45.9619716], [11.096125, 45.9619766], [11.09614, 45.9620499], [11.0961899, 45.9620449]]]}}, {"id": "way/141433644", "geometry": {"type": "Polygon", "coordinates": [[[11.0955985, 45.9729026], [11.0955545, 45.9728165], [11.0954763, 45.9728358], [11.0955203, 45.9729219], [11.0955985, 45.9729026]]]}}, {"id": "way/141433645", "geometry": {"type": "Polygon", "coordinates": [[[11.0890374, 45.972807], [11.0892576, 45.972802], [11.0892519, 45.9726789], [11.0890317, 45.9726839], [11.0890374, 45.972807]]]}}, {"id": "way/141433646", "geometry": {"type": "Polygon", "coordinates": [[[11.089522, 45.9757718], [11.0896601, 45.9757219], [11.089578, 45.975612], [11.0894399, 45.9756619], [11.089522, 45.9757718]]]}}, {"id": "way/141433647", "geometry": {"type": "Polygon", "coordinates": [[[11.0889702, 45.9737021], [11.0892526, 45.9736846], [11.0892486, 45.9736532], [11.0892406, 45.9735904], [11.0889582, 45.9736079], [11.0889702, 45.9737021]]]}}, {"id": "way/141433648", "geometry": {"type": "Polygon", "coordinates": [[[11.0937089, 45.9619821], [11.0937943, 45.9619332], [11.0937411, 45.9618883], [11.0936557, 45.9619372], [11.0937089, 45.9619821]]]}}, {"id": "way/141433649", "geometry": {"type": "Polygon", "coordinates": [[[11.0911315, 45.9755037], [11.0911574, 45.9755758], [11.0913296, 45.9755458], [11.0913036, 45.9754738], [11.0911315, 45.9755037]]]}}, {"id": "way/141433650", "geometry": {"type": "Polygon", "coordinates": [[[11.0947737, 45.9644573], [11.0948892, 45.9644293], [11.0948516, 45.9643542], [11.0947361, 45.9643821], [11.0947737, 45.9644573]]]}}, {"id": "way/141433651", "geometry": {"type": "Polygon", "coordinates": [[[11.092544, 45.9674343], [11.0925376, 45.9673631], [11.0924591, 45.9673665], [11.0924655, 45.9674377], [11.092544, 45.9674343]]]}}, {"id": "way/141433652", "geometry": {"type": "Polygon", "coordinates": [[[11.0917015, 45.9614715], [11.0917207, 45.9613514], [11.0916181, 45.9613434], [11.0915989, 45.9614636], [11.0917015, 45.9614715]]]}}, {"id": "way/141433653", "geometry": {"type": "Polygon", "coordinates": [[[11.0905365, 45.9610621], [11.0905365, 45.9608797], [11.0903572, 45.9608797], [11.0903572, 45.9610621], [11.0905365, 45.9610621]]]}}, {"id": "way/141433654", "geometry": {"type": "Polygon", "coordinates": [[[11.0903691, 45.9741853], [11.0903736, 45.9742067], [11.0905099, 45.974193], [11.0904728, 45.9740145], [11.0902912, 45.9740328], [11.0903239, 45.9741898], [11.0903691, 45.9741853]]]}}, {"id": "way/141433655", "geometry": {"type": "Polygon", "coordinates": [[[11.0893841, 45.9749617], [11.0895335, 45.9749377], [11.0894894, 45.9748047], [11.08934, 45.9748286], [11.0893841, 45.9749617]]]}}, {"id": "way/141433656", "geometry": {"type": "Polygon", "coordinates": [[[11.0917887, 45.9640034], [11.0918891, 45.963787], [11.091711, 45.963747], [11.0916105, 45.9639635], [11.0917887, 45.9640034]]]}}, {"id": "way/141433657", "geometry": {"type": "Polygon", "coordinates": [[[11.0891456, 45.9729984], [11.0893587, 45.9729786], [11.0893377, 45.972869], [11.0891246, 45.9728887], [11.0891456, 45.9729984]]]}}, {"id": "way/141433658", "geometry": {"type": "Polygon", "coordinates": [[[11.1028692, 45.9636256], [11.1030805, 45.9635766], [11.1030363, 45.9634845], [11.1028251, 45.9635335], [11.1028692, 45.9636256]]]}}, {"id": "way/141433659", "geometry": {"type": "Polygon", "coordinates": [[[11.0886801, 45.9745376], [11.0887888, 45.9745029], [11.0887372, 45.9744249], [11.0888748, 45.974381], [11.0887323, 45.9741655], [11.0886473, 45.9741926], [11.0886913, 45.9742592], [11.0885918, 45.974291], [11.0886119, 45.9743214], [11.0885241, 45.9743494], [11.0885803, 45.9744344], [11.0886063, 45.974426], [11.0886801, 45.9745376]]]}}, {"id": "way/141433660", "geometry": {"type": "Polygon", "coordinates": [[[11.0911576, 45.9642513], [11.0913033, 45.9641186], [11.0911619, 45.9640436], [11.0910162, 45.9641763], [11.0911576, 45.9642513]]]}}, {"id": "way/141433661", "geometry": {"type": "Polygon", "coordinates": [[[11.088715, 45.9737753], [11.0886905, 45.9735729], [11.0885305, 45.9735822], [11.0885579, 45.9738091], [11.0886248, 45.9738051], [11.0886219, 45.9737807], [11.088715, 45.9737753]]]}}, {"id": "way/141433662", "geometry": {"type": "Polygon", "coordinates": [[[11.0932546, 45.9682174], [11.0932225, 45.9681462], [11.0931569, 45.9681604], [11.0931889, 45.9682316], [11.0932546, 45.9682174]]]}}, {"id": "way/141433663", "geometry": {"type": "Polygon", "coordinates": [[[11.0893362, 45.9741908], [11.0895672, 45.9741745], [11.0895519, 45.9740695], [11.0894712, 45.9740752], [11.0894613, 45.9740079], [11.0893109, 45.9740185], [11.0893362, 45.9741908]]]}}, {"id": "way/141433664", "geometry": {"type": "Polygon", "coordinates": [[[11.0883174, 45.9754113], [11.0885071, 45.9753784], [11.0884607, 45.9752495], [11.088271, 45.9752824], [11.0883174, 45.9754113]]]}}, {"id": "way/141433665", "geometry": {"type": "Polygon", "coordinates": [[[11.0943769, 45.9631656], [11.0944874, 45.9631237], [11.0944619, 45.9630911], [11.0943514, 45.963133], [11.0943769, 45.9631656]]]}}, {"id": "way/141433666", "geometry": {"type": "Polygon", "coordinates": [[[11.0918407, 45.9604364], [11.0919655, 45.9602647], [11.0918316, 45.9602177], [11.0917068, 45.9603894], [11.0918407, 45.9604364]]]}}, {"id": "way/141433667", "geometry": {"type": "Polygon", "coordinates": [[[11.088887, 45.9756428], [11.0888452, 45.9754946], [11.0886803, 45.9755171], [11.088722, 45.9756653], [11.088887, 45.9756428]]]}}, {"id": "way/141433668", "geometry": {"type": "Polygon", "coordinates": [[[11.0902604, 45.9737117], [11.0902335, 45.9735938], [11.090075, 45.9736112], [11.0901018, 45.9737292], [11.0902604, 45.9737117]]]}}, {"id": "way/141433669", "geometry": {"type": "Polygon", "coordinates": [[[11.0917033, 45.9612668], [11.0918756, 45.9613132], [11.0919158, 45.9612411], [11.0919513, 45.9612507], [11.0919911, 45.9611792], [11.0918839, 45.9611503], [11.091951, 45.9610299], [11.0918506, 45.9610028], [11.0917033, 45.9612668]]]}}, {"id": "way/141433670", "geometry": {"type": "Polygon", "coordinates": [[[11.0899418, 45.9741499], [11.0901691, 45.9741254], [11.0901465, 45.974024], [11.0899192, 45.9740485], [11.0899418, 45.9741499]]]}}, {"id": "way/141433671", "geometry": {"type": "Polygon", "coordinates": [[[11.0999247, 45.965966], [11.0998927, 45.965659], [11.0997276, 45.9656673], [11.0997596, 45.9659743], [11.0999247, 45.965966]]]}}, {"id": "way/141433672", "geometry": {"type": "Polygon", "coordinates": [[[11.0910672, 45.9644468], [11.0910321, 45.9642827], [11.0909289, 45.9642934], [11.090964, 45.9644575], [11.0910672, 45.9644468]]]}}, {"id": "way/141433673", "geometry": {"type": "Polygon", "coordinates": [[[11.0919743, 45.9636897], [11.0917684, 45.9636444], [11.0917344, 45.9637189], [11.0919403, 45.9637642], [11.0919743, 45.9636897]]]}}, {"id": "way/141433674", "geometry": {"type": "Polygon", "coordinates": [[[11.0893472, 45.9734363], [11.0895368, 45.9734214], [11.0895146, 45.9732854], [11.0893564, 45.9732979], [11.0893647, 45.9733485], [11.0893333, 45.973351], [11.0893472, 45.9734363]]]}}, {"id": "way/141433675", "geometry": {"type": "Polygon", "coordinates": [[[11.0955967, 45.9736927], [11.095768, 45.9736273], [11.0957596, 45.9736167], [11.0956938, 45.9735333], [11.0955225, 45.9735987], [11.0955967, 45.9736927]]]}}, {"id": "way/141433676", "geometry": {"type": "Polygon", "coordinates": [[[11.0927019, 45.9733382], [11.0928517, 45.9733276], [11.0928371, 45.973228], [11.093021, 45.973215], [11.0930067, 45.9731177], [11.0926731, 45.9731413], [11.0927019, 45.9733382]]]}}, {"id": "way/141433677", "geometry": {"type": "Polygon", "coordinates": [[[11.0925935, 45.9733624], [11.0925676, 45.9731543], [11.0923236, 45.9731689], [11.0923376, 45.9732817], [11.0924339, 45.9732759], [11.0924457, 45.9733712], [11.0925935, 45.9733624]]]}}, {"id": "way/141433678", "geometry": {"type": "Polygon", "coordinates": [[[11.0885912, 45.9763764], [11.0887551, 45.9764724], [11.0888907, 45.9764294], [11.0888332, 45.976387], [11.0889682, 45.9763249], [11.0891198, 45.9764304], [11.0892901, 45.9763975], [11.0890505, 45.9761903], [11.0885912, 45.9763764]]]}}, {"id": "way/141433679", "geometry": {"type": "Polygon", "coordinates": [[[11.0888146, 45.973479], [11.089078, 45.973463], [11.0890427, 45.9731826], [11.0887513, 45.9732003], [11.088763, 45.9732929], [11.0889235, 45.9732832], [11.0889356, 45.9733791], [11.088803, 45.9733872], [11.0888146, 45.973479]]]}}, {"id": "way/141433829", "geometry": {"type": "Polygon", "coordinates": [[[11.0883648, 45.9759193], [11.088553, 45.9760078], [11.0886305, 45.9759281], [11.0884423, 45.9758396], [11.0883648, 45.9759193]]]}}, {"id": "way/141433830", "geometry": {"type": "Polygon", "coordinates": [[[11.0886085, 45.9761177], [11.0887491, 45.976027], [11.0886574, 45.9759583], [11.0885167, 45.9760491], [11.0886085, 45.9761177]]]}}, {"id": "way/141433831", "geometry": {"type": "Polygon", "coordinates": [[[11.0922006, 45.974942], [11.0924417, 45.9749106], [11.092414, 45.9748078], [11.0921729, 45.9748392], [11.0922006, 45.974942]]]}}, {"id": "way/141433832", "geometry": {"type": "Polygon", "coordinates": [[[11.0914724, 45.9750258], [11.0917487, 45.9749979], [11.0917236, 45.9748782], [11.0914474, 45.9749061], [11.0914724, 45.9750258]]]}}, {"id": "way/141530423", "geometry": {"type": "Polygon", "coordinates": [[[11.0982405, 45.9822454], [11.0982753, 45.9820718], [11.0980312, 45.9820481], [11.0979964, 45.9822217], [11.0982405, 45.9822454]]]}}, {"id": "way/141530426", "geometry": {"type": "Polygon", "coordinates": [[[11.0952895, 45.9834482], [11.0952954, 45.9833554], [11.095157, 45.9833512], [11.0951512, 45.983444], [11.0952895, 45.9834482]]]}}, {"id": "way/141530435", "geometry": {"type": "Polygon", "coordinates": [[[11.0955086, 45.9827888], [11.0957937, 45.9827547], [11.0957752, 45.9826801], [11.0956938, 45.9826898], [11.095682, 45.9826421], [11.0955028, 45.9826636], [11.0955171, 45.9827212], [11.0954926, 45.9827241], [11.0955086, 45.9827888]]]}}, {"id": "way/146620243", "geometry": {"type": "Polygon", "coordinates": [[[11.0950625, 45.9858058], [11.0950988, 45.9858058], [11.0950988, 45.9857869], [11.0950625, 45.9857869], [11.0950625, 45.9858058]]]}}, {"id": "way/146620244", "geometry": {"type": "Polygon", "coordinates": [[[11.0962857, 45.9840086], [11.096355, 45.983996], [11.0963323, 45.983936], [11.0962629, 45.9839487], [11.0962857, 45.9840086]]]}}, {"id": "way/146620247", "geometry": {"type": "Polygon", "coordinates": [[[11.095459, 45.9843243], [11.0956316, 45.9843116], [11.0956243, 45.9842638], [11.0954517, 45.9842764], [11.095459, 45.9843243]]]}}, {"id": "way/146620248", "geometry": {"type": "Polygon", "coordinates": [[[11.0939646, 45.9841538], [11.0937602, 45.9838918], [11.0936008, 45.9839519], [11.0938052, 45.9842138], [11.0939646, 45.9841538]]]}}, {"id": "way/147723464", "geometry": {"type": "Polygon", "coordinates": [[[11.1056127, 45.9841775], [11.1056526, 45.9841913], [11.1056882, 45.9841419], [11.1056483, 45.984128], [11.1056127, 45.9841775]]]}}, {"id": "way/147723465", "geometry": {"type": "Polygon", "coordinates": [[[11.1127812, 45.990095], [11.1126859, 45.9901187], [11.1127128, 45.9901711], [11.1128081, 45.9901475], [11.1127812, 45.990095]]]}}, {"id": "way/147723466", "geometry": {"type": "Polygon", "coordinates": [[[11.1076015, 45.983735], [11.1075161, 45.9837201], [11.1074983, 45.9837696], [11.1075837, 45.9837844], [11.1076015, 45.983735]]]}}, {"id": "way/147723472", "geometry": {"type": "Polygon", "coordinates": [[[11.1077793, 45.9832504], [11.1075516, 45.9831985], [11.1075218, 45.9832616], [11.1077495, 45.9833136], [11.1077793, 45.9832504]]]}}, {"id": "way/147723474", "geometry": {"type": "Polygon", "coordinates": [[[11.1139243, 45.9902629], [11.1138501, 45.9903011], [11.1138966, 45.9903447], [11.1139708, 45.9903065], [11.1139243, 45.9902629]]]}}, {"id": "way/147723476", "geometry": {"type": "Polygon", "coordinates": [[[11.1076022, 45.9796832], [11.107576, 45.9795845], [11.1074733, 45.9795977], [11.1074996, 45.9796964], [11.1076022, 45.9796832]]]}}, {"id": "way/147723481", "geometry": {"type": "Polygon", "coordinates": [[[11.1021136, 45.9847644], [11.1018497, 45.9848828], [11.1019354, 45.984975], [11.1021993, 45.9848566], [11.1021136, 45.9847644]]]}}, {"id": "way/147723488", "geometry": {"type": "Polygon", "coordinates": [[[11.1072332, 45.9774588], [11.1070557, 45.9775523], [11.1071578, 45.9776459], [11.1073353, 45.9775525], [11.1072332, 45.9774588]]]}}, {"id": "way/160392708", "geometry": {"type": "Polygon", "coordinates": [[[11.0909885, 45.9772925], [11.0911742, 45.9772882], [11.0911689, 45.9771787], [11.0909832, 45.9771831], [11.0909885, 45.9772925]]]}}, {"id": "way/160392710", "geometry": {"type": "Polygon", "coordinates": [[[11.0907999, 45.9778603], [11.0910008, 45.9778528], [11.0909989, 45.977828], [11.0910202, 45.9778272], [11.0910186, 45.9778061], [11.0910632, 45.9778044], [11.0910524, 45.9776647], [11.0907856, 45.9776746], [11.0907999, 45.9778603]]]}}, {"id": "way/160392713", "geometry": {"type": "Polygon", "coordinates": [[[11.0906636, 45.9779339], [11.0905364, 45.9776635], [11.0903994, 45.9776947], [11.0904341, 45.9777683], [11.0903014, 45.9777985], [11.0902554, 45.9777007], [11.0901555, 45.9777234], [11.0902345, 45.9778913], [11.0904332, 45.9778462], [11.0904927, 45.9779727], [11.0906636, 45.9779339]]]}}, {"id": "way/160392716", "geometry": {"type": "Polygon", "coordinates": [[[11.0904898, 45.9771629], [11.0908457, 45.9772614], [11.0908672, 45.9771603], [11.09048, 45.9771267], [11.0904898, 45.9771629]]]}}, {"id": "way/160392718", "geometry": {"type": "Polygon", "coordinates": [[[11.0900531, 45.9780509], [11.0898057, 45.9778222], [11.0900358, 45.9777276], [11.0901273, 45.97786], [11.0900581, 45.9778807], [11.0900754, 45.9779236], [11.0901447, 45.9778978], [11.0901793, 45.9779477], [11.0903228, 45.9779271], [11.0903723, 45.9780389], [11.0902638, 45.9780515], [11.0902352, 45.978009], [11.0900531, 45.9780509]]]}}, {"id": "way/160392720", "geometry": {"type": "Polygon", "coordinates": [[[11.0913631, 45.9781681], [11.0914967, 45.9781715], [11.0915041, 45.9781148], [11.091806, 45.9780924], [11.0918134, 45.9779514], [11.091665, 45.97796], [11.091665, 45.9779205], [11.0914794, 45.9779291], [11.0914819, 45.9779652], [11.0914052, 45.9779652], [11.0913977, 45.9778637], [11.0913062, 45.9778689], [11.091321, 45.9780632], [11.0913631, 45.9781681]]]}}, {"id": "way/160392725", "geometry": {"type": "Polygon", "coordinates": [[[11.0923497, 45.9772508], [11.0925197, 45.9772412], [11.0924951, 45.9770301], [11.0923251, 45.9770397], [11.0923497, 45.9772508]]]}}, {"id": "way/160392727", "geometry": {"type": "Polygon", "coordinates": [[[11.0913229, 45.9768841], [11.0914999, 45.9768741], [11.0914828, 45.9767275], [11.0913058, 45.9767374], [11.0913229, 45.9768841]]]}}, {"id": "way/160392728", "geometry": {"type": "Polygon", "coordinates": [[[11.0925848, 45.977125], [11.0928572, 45.9771097], [11.0928441, 45.976997], [11.0925716, 45.9770124], [11.0925848, 45.977125]]]}}, {"id": "way/160392730", "geometry": {"type": "Polygon", "coordinates": [[[11.09267, 45.9773855], [11.092857, 45.977375], [11.0928348, 45.9771851], [11.0926479, 45.9771956], [11.09267, 45.9773855]]]}}, {"id": "way/160392732", "geometry": {"type": "Polygon", "coordinates": [[[11.0916614, 45.9782865], [11.0920128, 45.9782796], [11.0920074, 45.9781471], [11.0916561, 45.978154], [11.0916614, 45.9782865]]]}}, {"id": "way/160392733", "geometry": {"type": "Polygon", "coordinates": [[[11.0924577, 45.9775404], [11.092672, 45.9775284], [11.0926637, 45.9774579], [11.0924495, 45.97747], [11.0924577, 45.9775404]]]}}, {"id": "way/160392735", "geometry": {"type": "Polygon", "coordinates": [[[11.0923499, 45.9787535], [11.0924769, 45.9787289], [11.0923945, 45.9785236], [11.0922675, 45.9785482], [11.0923499, 45.9787535]]]}}, {"id": "way/160392736", "geometry": {"type": "Polygon", "coordinates": [[[11.0913547, 45.9783067], [11.0915502, 45.9783067], [11.0915502, 45.9781949], [11.0913547, 45.9781949], [11.0913547, 45.9783067]]]}}, {"id": "way/160392737", "geometry": {"type": "Polygon", "coordinates": [[[11.0892541, 45.9781561], [11.0894941, 45.9780227], [11.0893876, 45.9779302], [11.0891476, 45.9780637], [11.0892541, 45.9781561]]]}}, {"id": "way/160392738", "geometry": {"type": "Polygon", "coordinates": [[[11.0920556, 45.9784436], [11.0921617, 45.9784433], [11.0921614, 45.9783804], [11.0920553, 45.9783806], [11.0920556, 45.9784436]]]}}, {"id": "way/160392739", "geometry": {"type": "Polygon", "coordinates": [[[11.0905855, 45.9783791], [11.0906726, 45.9783683], [11.0906474, 45.97827], [11.0905603, 45.9782808], [11.0905855, 45.9783791]]]}}, {"id": "way/160392740", "geometry": {"type": "Polygon", "coordinates": [[[11.0908558, 45.9784177], [11.0911935, 45.9783806], [11.0911603, 45.9782347], [11.0908226, 45.9782718], [11.0908558, 45.9784177]]]}}, {"id": "way/160392741", "geometry": {"type": "Polygon", "coordinates": [[[11.0910908, 45.9785248], [11.0912273, 45.9785148], [11.0912113, 45.9784096], [11.0910748, 45.9784196], [11.0910908, 45.9785248]]]}}, {"id": "way/160392742", "geometry": {"type": "Polygon", "coordinates": [[[11.0923755, 45.9774121], [11.0925572, 45.9774019], [11.0925427, 45.9772774], [11.092361, 45.9772876], [11.0923755, 45.9774121]]]}}, {"id": "way/160392743", "geometry": {"type": "Polygon", "coordinates": [[[11.0927161, 45.9776179], [11.0928927, 45.977608], [11.0928736, 45.9774444], [11.092697, 45.9774544], [11.0927161, 45.9776179]]]}}, {"id": "way/160392744", "geometry": {"type": "Polygon", "coordinates": [[[11.0920427, 45.977591], [11.092244, 45.9775796], [11.0922342, 45.977495], [11.0920328, 45.9775063], [11.0920427, 45.977591]]]}}, {"id": "way/160392745", "geometry": {"type": "Polygon", "coordinates": [[[11.0933117, 45.9774456], [11.0934822, 45.977436], [11.0934765, 45.9773866], [11.0933059, 45.9773962], [11.0933117, 45.9774456]]]}}, {"id": "way/160392746", "geometry": {"type": "Polygon", "coordinates": [[[11.0913873, 45.978479], [11.0915179, 45.978473], [11.0915066, 45.9783553], [11.091376, 45.9783614], [11.0913873, 45.978479]]]}}, {"id": "way/160392748", "geometry": {"type": "Polygon", "coordinates": [[[11.0899167, 45.9785891], [11.0901441, 45.9785434], [11.090083, 45.9783965], [11.0898557, 45.9784422], [11.0899167, 45.9785891]]]}}, {"id": "way/160392750", "geometry": {"type": "Polygon", "coordinates": [[[11.0915294, 45.9786063], [11.0917563, 45.9785896], [11.0917401, 45.978483], [11.0915131, 45.9784997], [11.0915294, 45.9786063]]]}}, {"id": "way/160392751", "geometry": {"type": "Polygon", "coordinates": [[[11.0895897, 45.9786651], [11.0897766, 45.9786318], [11.0897324, 45.978512], [11.0895454, 45.9785454], [11.0895897, 45.9786651]]]}}, {"id": "way/160392752", "geometry": {"type": "Polygon", "coordinates": [[[11.091654, 45.9788719], [11.0918297, 45.9788575], [11.0918034, 45.9787029], [11.0916276, 45.9787173], [11.091654, 45.9788719]]]}}, {"id": "way/160392753", "geometry": {"type": "Polygon", "coordinates": [[[11.0930593, 45.9779971], [11.0932498, 45.9779885], [11.093241, 45.9778939], [11.0930504, 45.9779025], [11.0930593, 45.9779971]]]}}, {"id": "way/160392754", "geometry": {"type": "Polygon", "coordinates": [[[11.0911259, 45.9788632], [11.091275, 45.9788563], [11.0912641, 45.9787422], [11.091115, 45.9787491], [11.0911259, 45.9788632]]]}}, {"id": "way/160392755", "geometry": {"type": "Polygon", "coordinates": [[[11.0907929, 45.9781162], [11.0908723, 45.9781135], [11.0908672, 45.9780423], [11.0907878, 45.978045], [11.0907929, 45.9781162]]]}}, {"id": "way/160392756", "geometry": {"type": "Polygon", "coordinates": [[[11.0909516, 45.9789194], [11.091088, 45.978919], [11.0910876, 45.9788298], [11.0909781, 45.9788227], [11.0909516, 45.9789194]]]}}, {"id": "way/160392757", "geometry": {"type": "Polygon", "coordinates": [[[11.0905928, 45.978234], [11.0907506, 45.9782285], [11.0907413, 45.9780982], [11.0905834, 45.9781036], [11.0905928, 45.978234]]]}}, {"id": "way/160392758", "geometry": {"type": "Polygon", "coordinates": [[[11.089875, 45.9782607], [11.0900259, 45.9782435], [11.0900037, 45.9781492], [11.0898527, 45.9781664], [11.089875, 45.9782607]]]}}, {"id": "way/160392759", "geometry": {"type": "Polygon", "coordinates": [[[11.0908786, 45.9787127], [11.0910148, 45.9787027], [11.0909921, 45.9785536], [11.0908559, 45.9785636], [11.0908786, 45.9787127]]]}}, {"id": "way/160392760", "geometry": {"type": "Polygon", "coordinates": [[[11.0910107, 45.9781983], [11.0912195, 45.9781911], [11.0912087, 45.9780401], [11.0909999, 45.9780474], [11.0910107, 45.9781983]]]}}, {"id": "way/160392761", "geometry": {"type": "Polygon", "coordinates": [[[11.091396, 45.977829], [11.09155, 45.9778203], [11.091539, 45.9777263], [11.091385, 45.977735], [11.091396, 45.977829]]]}}, {"id": "way/160392762", "geometry": {"type": "Polygon", "coordinates": [[[11.090444, 45.9785073], [11.0905768, 45.9784701], [11.0905133, 45.9783608], [11.0903806, 45.9783981], [11.090444, 45.9785073]]]}}, {"id": "way/160392763", "geometry": {"type": "Polygon", "coordinates": [[[11.0930419, 45.977863], [11.093183, 45.9778527], [11.0931676, 45.9777514], [11.0930266, 45.9777617], [11.0930419, 45.977863]]]}}, {"id": "way/160392764", "geometry": {"type": "Polygon", "coordinates": [[[11.0930378, 45.9776089], [11.0932978, 45.9775943], [11.0932826, 45.9774641], [11.0930226, 45.9774788], [11.0930378, 45.9776089]]]}}, {"id": "way/160392765", "geometry": {"type": "Polygon", "coordinates": [[[11.091379, 45.9777145], [11.0915869, 45.9777028], [11.0915753, 45.9776033], [11.0913674, 45.9776151], [11.091379, 45.9777145]]]}}, {"id": "way/160392766", "geometry": {"type": "Polygon", "coordinates": [[[11.0910489, 45.9774885], [11.0911236, 45.9774072], [11.0907819, 45.9772764], [11.0907166, 45.9773549], [11.0910489, 45.9774885]]]}}, {"id": "way/160392767", "geometry": {"type": "Polygon", "coordinates": [[[11.0931978, 45.977326], [11.0933159, 45.9773193], [11.0933068, 45.9772418], [11.0931887, 45.9772485], [11.0931978, 45.977326]]]}}, {"id": "way/160392768", "geometry": {"type": "Polygon", "coordinates": [[[11.0913766, 45.9775865], [11.0915653, 45.9775759], [11.091556, 45.9774956], [11.0913673, 45.9775062], [11.0913766, 45.9775865]]]}}, {"id": "way/160392769", "geometry": {"type": "Polygon", "coordinates": [[[11.0896901, 45.9784278], [11.0898543, 45.9783839], [11.089783, 45.9782551], [11.0896188, 45.978299], [11.0896901, 45.9784278]]]}}, {"id": "way/160392770", "geometry": {"type": "Polygon", "coordinates": [[[11.0930257, 45.9774153], [11.0931793, 45.9774066], [11.0931614, 45.9772536], [11.0930078, 45.9772622], [11.0930257, 45.9774153]]]}}, {"id": "way/160392771", "geometry": {"type": "Polygon", "coordinates": [[[11.0914334, 45.9789622], [11.0916191, 45.9789392], [11.0915719, 45.9787547], [11.0913862, 45.9787777], [11.0914334, 45.9789622]]]}}, {"id": "way/160392772", "geometry": {"type": "Polygon", "coordinates": [[[11.0930791, 45.9781399], [11.0932597, 45.978133], [11.0932504, 45.9780145], [11.0930697, 45.9780214], [11.0930791, 45.9781399]]]}}, {"id": "way/160392773", "geometry": {"type": "Polygon", "coordinates": [[[11.0894374, 45.9784875], [11.089589, 45.9784454], [11.0895225, 45.9783297], [11.0893709, 45.9783719], [11.0894374, 45.9784875]]]}}, {"id": "way/160392774", "geometry": {"type": "Polygon", "coordinates": [[[11.091257, 45.9767116], [11.09141, 45.976703], [11.0913927, 45.976555], [11.0912397, 45.9765636], [11.091257, 45.9767116]]]}}, {"id": "way/160392775", "geometry": {"type": "Polygon", "coordinates": [[[11.090486, 45.9781178], [11.0905619, 45.9781115], [11.0905554, 45.9780736], [11.0904795, 45.9780798], [11.090486, 45.9781178]]]}}, {"id": "way/160392776", "geometry": {"type": "Polygon", "coordinates": [[[11.0926982, 45.9783174], [11.0929531, 45.9783088], [11.0929432, 45.9781673], [11.0926883, 45.9781759], [11.0926982, 45.9783174]]]}}, {"id": "way/160392777", "geometry": {"type": "Polygon", "coordinates": [[[11.0921217, 45.9782744], [11.0924384, 45.9782796], [11.0924427, 45.978152], [11.092126, 45.9781469], [11.0921217, 45.9782744]]]}}, {"id": "way/160392778", "geometry": {"type": "Polygon", "coordinates": [[[11.0924691, 45.9786421], [11.0926342, 45.9786232], [11.0925989, 45.978474], [11.0924337, 45.9784929], [11.0924691, 45.9786421]]]}}, {"id": "way/160392779", "geometry": {"type": "Polygon", "coordinates": [[[11.0930928, 45.9769602], [11.0930951, 45.9770098], [11.0932088, 45.9770072], [11.0932092, 45.9770158], [11.0933362, 45.9770129], [11.0933323, 45.9769273], [11.0932561, 45.976929], [11.093253, 45.9768616], [11.0930598, 45.9768659], [11.0930642, 45.9769609], [11.0930928, 45.9769602]]]}}, {"id": "way/160392780", "geometry": {"type": "Polygon", "coordinates": [[[11.090343, 45.9786548], [11.0906449, 45.9785701], [11.0906009, 45.9784942], [11.0902989, 45.9785789], [11.090343, 45.9786548]]]}}, {"id": "way/160392781", "geometry": {"type": "Polygon", "coordinates": [[[11.0915497, 45.9767008], [11.0917419, 45.9766941], [11.0917328, 45.9765684], [11.0915407, 45.976575], [11.0915497, 45.9767008]]]}}, {"id": "way/160392782", "geometry": {"type": "Polygon", "coordinates": [[[11.0905274, 45.9787267], [11.090711, 45.978683], [11.0906644, 45.9785884], [11.0904808, 45.9786322], [11.0905274, 45.9787267]]]}}, {"id": "way/160392783", "geometry": {"type": "Polygon", "coordinates": [[[11.0901455, 45.9780814], [11.0902844, 45.9781639], [11.0903728, 45.97812], [11.0903299, 45.9780779], [11.0901783, 45.9780708], [11.0901455, 45.9780814]]]}}, {"id": "way/160392784", "geometry": {"type": "Polygon", "coordinates": [[[11.09025, 45.9770381], [11.0903403, 45.9770302], [11.0903521, 45.9770959], [11.0904717, 45.9770855], [11.0904353, 45.9768838], [11.0902255, 45.9769021], [11.09025, 45.9770381]]]}}, {"id": "way/160392785", "geometry": {"type": "Polygon", "coordinates": [[[11.0899653, 45.9789663], [11.090242, 45.9789289], [11.0902107, 45.9788172], [11.0900747, 45.9788356], [11.0900576, 45.9787745], [11.0899168, 45.9787935], [11.0899653, 45.9789663]]]}}, {"id": "way/160392786", "geometry": {"type": "Polygon", "coordinates": [[[11.0921869, 45.976843], [11.0926436, 45.9768272], [11.0926354, 45.9767131], [11.092434, 45.97672], [11.0924238, 45.9765788], [11.0922535, 45.9765847], [11.0922653, 45.9767502], [11.0921805, 45.9767531], [11.0921869, 45.976843]]]}}, {"id": "way/160392787", "geometry": {"type": "Polygon", "coordinates": [[[11.091869, 45.976865], [11.0921259, 45.9768483], [11.0921052, 45.9766951], [11.0921618, 45.9766915], [11.0921372, 45.9765091], [11.0919207, 45.9765232], [11.0919529, 45.9767616], [11.0918559, 45.9767679], [11.091869, 45.976865]]]}}, {"id": "way/160392788", "geometry": {"type": "Polygon", "coordinates": [[[11.0919261, 45.9772065], [11.0919304, 45.9773147], [11.0920581, 45.9773123], [11.0920599, 45.9773593], [11.0921982, 45.9773567], [11.0921961, 45.9773035], [11.0922864, 45.9773017], [11.0922824, 45.9771997], [11.0919261, 45.9772065]]]}}, {"id": "way/160394453", "geometry": {"type": "Polygon", "coordinates": [[[11.0935007, 45.9787202], [11.0938277, 45.978752], [11.0938418, 45.9786815], [11.0938771, 45.978685], [11.0939021, 45.9785607], [11.0937267, 45.9785436], [11.0937064, 45.9786448], [11.0935195, 45.9786267], [11.0935007, 45.9787202]]]}}, {"id": "way/160394456", "geometry": {"type": "Polygon", "coordinates": [[[11.0952309, 45.9789688], [11.0953732, 45.9789696], [11.0953745, 45.9788521], [11.0952323, 45.9788514], [11.0952309, 45.9789688]]]}}, {"id": "way/160394457", "geometry": {"type": "Polygon", "coordinates": [[[11.0946375, 45.9793413], [11.0948387, 45.9793473], [11.094846, 45.9792275], [11.0946448, 45.9792215], [11.0946375, 45.9793413]]]}}, {"id": "way/160394458", "geometry": {"type": "Polygon", "coordinates": [[[11.0942909, 45.9784694], [11.0944332, 45.9784742], [11.0944419, 45.9783489], [11.0942996, 45.9783441], [11.0942909, 45.9784694]]]}}, {"id": "way/160394459", "geometry": {"type": "Polygon", "coordinates": [[[11.095564, 45.9790699], [11.0957184, 45.9790855], [11.0957645, 45.9788648], [11.0956102, 45.9788492], [11.095564, 45.9790699]]]}}, {"id": "way/160394460", "geometry": {"type": "Polygon", "coordinates": [[[11.0945581, 45.9784919], [11.0947273, 45.9784871], [11.0947194, 45.9783529], [11.0945502, 45.9783577], [11.0945581, 45.9784919]]]}}, {"id": "way/160394463", "geometry": {"type": "Polygon", "coordinates": [[[11.0931115, 45.9786824], [11.093325, 45.9786711], [11.0933092, 45.9785271], [11.0930958, 45.9785384], [11.0931115, 45.9786824]]]}}, {"id": "way/160394464", "geometry": {"type": "Polygon", "coordinates": [[[11.0974853, 45.979157], [11.0975864, 45.9791653], [11.0976529, 45.9791708], [11.0976665, 45.9790916], [11.0976903, 45.9790936], [11.0977078, 45.978991], [11.0975164, 45.9789752], [11.0974853, 45.979157]]]}}, {"id": "way/160394467", "geometry": {"type": "Polygon", "coordinates": [[[11.0958033, 45.9768705], [11.096026, 45.9768644], [11.0960233, 45.9768177], [11.0960851, 45.976816], [11.0960801, 45.9767276], [11.0957956, 45.9767354], [11.0958033, 45.9768705]]]}}, {"id": "way/160394468", "geometry": {"type": "Polygon", "coordinates": [[[11.0948299, 45.9785319], [11.0950747, 45.9785168], [11.0950634, 45.9784279], [11.0948186, 45.978443], [11.0948299, 45.9785319]]]}}, {"id": "way/160394469", "geometry": {"type": "Polygon", "coordinates": [[[11.0922275, 45.9791079], [11.0924705, 45.9790942], [11.0924586, 45.9789915], [11.0922156, 45.9790052], [11.0922275, 45.9791079]]]}}, {"id": "way/160394472", "geometry": {"type": "Polygon", "coordinates": [[[11.0945418, 45.9778496], [11.0945625, 45.9778502], [11.0945599, 45.9778915], [11.0946459, 45.9778941], [11.0946487, 45.9778498], [11.0947526, 45.9778529], [11.0947571, 45.9777807], [11.0945465, 45.9777744], [11.0945418, 45.9778496]]]}}, {"id": "way/160394473", "geometry": {"type": "Polygon", "coordinates": [[[11.0966698, 45.9782918], [11.0968231, 45.9783016], [11.0968402, 45.9781722], [11.0966869, 45.9781624], [11.0966698, 45.9782918]]]}}, {"id": "way/160394475", "geometry": {"type": "Polygon", "coordinates": [[[11.0946692, 45.9788066], [11.0948965, 45.9788575], [11.0949493, 45.9787437], [11.0947219, 45.9786928], [11.0946692, 45.9788066]]]}}, {"id": "way/160394476", "geometry": {"type": "Polygon", "coordinates": [[[11.093618, 45.9781887], [11.0937943, 45.9781779], [11.0937821, 45.9780822], [11.0936058, 45.978093], [11.093618, 45.9781887]]]}}, {"id": "way/160394478", "geometry": {"type": "Polygon", "coordinates": [[[11.0956672, 45.979664], [11.0958429, 45.9796693], [11.0958534, 45.9794984], [11.0956777, 45.9794932], [11.0956672, 45.979664]]]}}, {"id": "way/160394479", "geometry": {"type": "Polygon", "coordinates": [[[11.0935437, 45.9780224], [11.0937119, 45.9780247], [11.0937145, 45.977934], [11.0938242, 45.9779355], [11.0938276, 45.9778157], [11.0936383, 45.9778131], [11.0936361, 45.9778901], [11.0935475, 45.9778889], [11.0935437, 45.9780224]]]}}, {"id": "way/160394480", "geometry": {"type": "Polygon", "coordinates": [[[11.093847, 45.9770609], [11.0940312, 45.9770519], [11.0940334, 45.9770742], [11.0942663, 45.9770629], [11.0942643, 45.9770432], [11.0943499, 45.977039], [11.094345, 45.9769912], [11.0943187, 45.9769924], [11.0943136, 45.976942], [11.0942326, 45.9769459], [11.0942301, 45.9769207], [11.0940304, 45.9769304], [11.0940274, 45.9769001], [11.0938317, 45.9769097], [11.093847, 45.9770609]]]}}, {"id": "way/160394484", "geometry": {"type": "Polygon", "coordinates": [[[11.095096, 45.9789257], [11.0952127, 45.9789264], [11.0952139, 45.9788168], [11.0950972, 45.9788161], [11.095096, 45.9789257]]]}}, {"id": "way/160394485", "geometry": {"type": "Polygon", "coordinates": [[[11.0946822, 45.9795122], [11.0948863, 45.9795182], [11.0948945, 45.9793853], [11.0946903, 45.9793793], [11.0946822, 45.9795122]]]}}, {"id": "way/160394486", "geometry": {"type": "Polygon", "coordinates": [[[11.0945928, 45.9791291], [11.0948701, 45.9791374], [11.0948796, 45.9789842], [11.0946022, 45.9789759], [11.0945928, 45.9791291]]]}}, {"id": "way/160394487", "geometry": {"type": "Polygon", "coordinates": [[[11.0938848, 45.9784258], [11.0940255, 45.9784329], [11.0940358, 45.978335], [11.0938951, 45.9783279], [11.0938848, 45.9784258]]]}}, {"id": "way/160394490", "geometry": {"type": "Polygon", "coordinates": [[[11.0930787, 45.9784517], [11.0932319, 45.9784436], [11.09322, 45.9783349], [11.0930668, 45.978343], [11.0930787, 45.9784517]]]}}, {"id": "way/160394492", "geometry": {"type": "Polygon", "coordinates": [[[11.0951496, 45.9796272], [11.0953337, 45.9796326], [11.0953619, 45.9791742], [11.0951779, 45.9791687], [11.0951496, 45.9796272]]]}}, {"id": "way/160394493", "geometry": {"type": "Polygon", "coordinates": [[[11.0936728, 45.9789143], [11.0938573, 45.9789198], [11.0938628, 45.9788315], [11.0936783, 45.978826], [11.0936728, 45.9789143]]]}}, {"id": "way/160394495", "geometry": {"type": "Polygon", "coordinates": [[[11.0954539, 45.9768834], [11.0956279, 45.976878], [11.095626, 45.9768484], [11.0957251, 45.9768453], [11.0957199, 45.9767642], [11.0954468, 45.9767728], [11.0954539, 45.9768834]]]}}, {"id": "way/160394496", "geometry": {"type": "Polygon", "coordinates": [[[11.0952227, 45.9775004], [11.0954757, 45.9775118], [11.0954864, 45.9773976], [11.0952333, 45.9773862], [11.0952227, 45.9775004]]]}}, {"id": "way/160394497", "geometry": {"type": "Polygon", "coordinates": [[[11.0948424, 45.978227], [11.0950397, 45.9782149], [11.0950248, 45.9780977], [11.0948275, 45.9781098], [11.0948424, 45.978227]]]}}, {"id": "way/160394499", "geometry": {"type": "Polygon", "coordinates": [[[11.0922683, 45.9793728], [11.0924672, 45.9793608], [11.0924434, 45.9791694], [11.0922445, 45.9791813], [11.0922683, 45.9793728]]]}}, {"id": "way/160394503", "geometry": {"type": "Polygon", "coordinates": [[[11.0941382, 45.9787119], [11.0944151, 45.9787297], [11.0944284, 45.9786293], [11.0941515, 45.9786115], [11.0941382, 45.9787119]]]}}, {"id": "way/160394504", "geometry": {"type": "Polygon", "coordinates": [[[11.0939703, 45.9789923], [11.0942368, 45.9790152], [11.0942424, 45.9789835], [11.0943401, 45.9789919], [11.0943546, 45.9789101], [11.0939904, 45.9788789], [11.0939703, 45.9789923]]]}}, {"id": "way/160394505", "geometry": {"type": "Polygon", "coordinates": [[[11.0955979, 45.977509], [11.0961966, 45.9775038], [11.0961947, 45.9774017], [11.095809, 45.9774051], [11.0958068, 45.9772865], [11.0956773, 45.9772876], [11.0956795, 45.977404], [11.095596, 45.9774048], [11.0955979, 45.977509]]]}}, {"id": "way/160394508", "geometry": {"type": "Polygon", "coordinates": [[[11.0947086, 45.9769191], [11.0949388, 45.9769012], [11.09492, 45.9767889], [11.0947725, 45.9767987], [11.0947188, 45.9767467], [11.0945825, 45.9768135], [11.0947086, 45.9769191]]]}}, {"id": "way/160394509", "geometry": {"type": "Polygon", "coordinates": [[[11.095158, 45.9780537], [11.0953438, 45.9780656], [11.0953656, 45.9779013], [11.0951798, 45.9778894], [11.095158, 45.9780537]]]}}, {"id": "way/160394510", "geometry": {"type": "Polygon", "coordinates": [[[11.0974775, 45.9782281], [11.0977751, 45.978237], [11.0977676, 45.978359], [11.0979287, 45.9783638], [11.0979452, 45.9780968], [11.0974864, 45.9780832], [11.0974775, 45.9782281]]]}}, {"id": "way/160394512", "geometry": {"type": "Polygon", "coordinates": [[[11.0973729, 45.9786993], [11.0976497, 45.9787133], [11.0976579, 45.9786355], [11.0975571, 45.9786303], [11.0975639, 45.9785654], [11.0973879, 45.9785564], [11.0973729, 45.9786993]]]}}, {"id": "way/160395251", "geometry": {"type": "Polygon", "coordinates": [[[11.0933641, 45.9813909], [11.0934117, 45.9813115], [11.0933195, 45.9812848], [11.0933345, 45.9812598], [11.0931552, 45.981208], [11.0931782, 45.9811695], [11.0930782, 45.9811406], [11.0930969, 45.9811093], [11.0930132, 45.981085], [11.092965, 45.9811655], [11.0929284, 45.9811549], [11.0928723, 45.9812486], [11.0933641, 45.9813909]]]}}, {"id": "way/160395254", "geometry": {"type": "Polygon", "coordinates": [[[11.0911097, 45.9800071], [11.0913919, 45.9799803], [11.0913206, 45.979273], [11.0909771, 45.9793886], [11.0909925, 45.9794525], [11.0908809, 45.979496], [11.0908954, 45.9796765], [11.0910166, 45.9796658], [11.0910188, 45.9795927], [11.091192, 45.979579], [11.0912104, 45.9797634], [11.0909963, 45.9797794], [11.0911097, 45.9800071]]]}}, {"id": "way/160395256", "geometry": {"type": "Polygon", "coordinates": [[[11.0908361, 45.9804882], [11.0910936, 45.9804214], [11.091012, 45.9802695], [11.090841, 45.9803139], [11.0908798, 45.980386], [11.0907933, 45.9804085], [11.0908361, 45.9804882]]]}}, {"id": "way/160395257", "geometry": {"type": "Polygon", "coordinates": [[[11.090126, 45.9795581], [11.0902802, 45.9795387], [11.0902336, 45.9793604], [11.0900794, 45.9793799], [11.090126, 45.9795581]]]}}, {"id": "way/160395258", "geometry": {"type": "Polygon", "coordinates": [[[11.09044, 45.9802619], [11.0906142, 45.9802279], [11.0905658, 45.9801083], [11.0904034, 45.98014], [11.0903797, 45.9800813], [11.0902868, 45.9800995], [11.0903326, 45.9802128], [11.0904137, 45.9801969], [11.09044, 45.9802619]]]}}, {"id": "way/160395262", "geometry": {"type": "Polygon", "coordinates": [[[11.0921214, 45.9804132], [11.0923642, 45.9803155], [11.0922802, 45.9802146], [11.0920373, 45.9803122], [11.0920734, 45.9803555], [11.0921214, 45.9804132]]]}}, {"id": "way/160395263", "geometry": {"type": "Polygon", "coordinates": [[[11.0908439, 45.9793971], [11.0910784, 45.9793485], [11.0910562, 45.9792967], [11.0908217, 45.9793453], [11.0908439, 45.9793971]]]}}, {"id": "way/160395265", "geometry": {"type": "Polygon", "coordinates": [[[11.0917043, 45.9803591], [11.0919408, 45.9802841], [11.091857, 45.9801565], [11.0917516, 45.9801899], [11.0917866, 45.9802432], [11.091718, 45.980265], [11.0917379, 45.9802953], [11.0916754, 45.9803151], [11.0917043, 45.9803591]]]}}, {"id": "way/160395266", "geometry": {"type": "Polygon", "coordinates": [[[11.0908583, 45.9792678], [11.0912666, 45.9791769], [11.0912389, 45.9790915], [11.0911675, 45.9791025], [11.0911358, 45.9789951], [11.0908742, 45.9790282], [11.0908583, 45.9792678]]]}}, {"id": "way/164249363", "geometry": {"type": "Polygon", "coordinates": [[[11.0913118, 45.9741179], [11.0914806, 45.9741032], [11.0914489, 45.9739272], [11.0912801, 45.9739418], [11.0913118, 45.9741179]]]}}, {"id": "way/164249364", "geometry": {"type": "Polygon", "coordinates": [[[11.0921195, 45.9638877], [11.0921627, 45.9638069], [11.092053, 45.9637786], [11.0920098, 45.9638594], [11.0921195, 45.9638877]]]}}, {"id": "way/164249366", "geometry": {"type": "Polygon", "coordinates": [[[11.0899129, 45.9708184], [11.0896855, 45.9708161], [11.0896832, 45.9709258], [11.0899106, 45.9709281], [11.0899129, 45.9708184]]]}}, {"id": "way/164249367", "geometry": {"type": "Polygon", "coordinates": [[[11.0979234, 45.9758183], [11.0978231, 45.9758331], [11.0978397, 45.9758874], [11.09794, 45.9758726], [11.0979234, 45.9758183]]]}}, {"id": "way/164249368", "geometry": {"type": "Polygon", "coordinates": [[[11.0897668, 45.9749284], [11.0897286, 45.9748134], [11.0896048, 45.9748333], [11.089643, 45.9749483], [11.0897668, 45.9749284]]]}}, {"id": "way/164249370", "geometry": {"type": "Polygon", "coordinates": [[[11.0908196, 45.9746998], [11.0909797, 45.9746858], [11.0909543, 45.9745459], [11.0907941, 45.97456], [11.0908196, 45.9746998]]]}}, {"id": "way/164249371", "geometry": {"type": "Polygon", "coordinates": [[[11.089971, 45.9734618], [11.0898565, 45.9734567], [11.0898498, 45.9735297], [11.0899643, 45.9735348], [11.089971, 45.9734618]]]}}, {"id": "way/164249373", "geometry": {"type": "Polygon", "coordinates": [[[11.0917514, 45.9722946], [11.0915941, 45.9723078], [11.0916037, 45.9723627], [11.0917609, 45.9723494], [11.0917514, 45.9722946]]]}}, {"id": "way/164249374", "geometry": {"type": "Polygon", "coordinates": [[[11.0909734, 45.9740601], [11.0911421, 45.9740493], [11.0911202, 45.973885], [11.0909515, 45.9738959], [11.0909734, 45.9740601]]]}}, {"id": "way/164249375", "geometry": {"type": "Polygon", "coordinates": [[[11.0900328, 45.974331], [11.0900104, 45.974234], [11.0898486, 45.974252], [11.0898607, 45.9743043], [11.0898893, 45.9743011], [11.0898996, 45.9743459], [11.0900328, 45.974331]]]}}, {"id": "way/164249376", "geometry": {"type": "Polygon", "coordinates": [[[11.0913538, 45.9737377], [11.0913429, 45.973618], [11.091608, 45.9736064], [11.0916162, 45.973696], [11.0915375, 45.9736995], [11.0915402, 45.9737295], [11.0913538, 45.9737377]]]}}, {"id": "way/164249488", "geometry": {"type": "Polygon", "coordinates": [[[11.0940084, 45.9761325], [11.0938768, 45.9761358], [11.0938791, 45.9761799], [11.0940106, 45.9761766], [11.0940084, 45.9761325]]]}}, {"id": "way/164249489", "geometry": {"type": "Polygon", "coordinates": [[[11.0954357, 45.974552], [11.0952947, 45.9745781], [11.0953147, 45.9746302], [11.0954557, 45.9746041], [11.0954357, 45.974552]]]}}, {"id": "way/167253889", "geometry": {"type": "Polygon", "coordinates": [[[11.1027138, 45.9648386], [11.1026112, 45.964865], [11.1026453, 45.9649291], [11.1027479, 45.9649026], [11.1027138, 45.9648386]]]}}, {"id": "way/167253890", "geometry": {"type": "Polygon", "coordinates": [[[11.1027927, 45.9824025], [11.1026733, 45.9822885], [11.1025387, 45.9823565], [11.1026581, 45.9824706], [11.1027927, 45.9824025]]]}}, {"id": "way/167253891", "geometry": {"type": "Polygon", "coordinates": [[[11.0972867, 45.9616062], [11.0973648, 45.9615655], [11.0973076, 45.9615126], [11.0972296, 45.9615533], [11.0972867, 45.9616062]]]}}, {"id": "way/167253892", "geometry": {"type": "Polygon", "coordinates": [[[11.102254, 45.9676107], [11.10218, 45.9676305], [11.1022011, 45.9676689], [11.1022752, 45.9676491], [11.102254, 45.9676107]]]}}, {"id": "way/167253893", "geometry": {"type": "Polygon", "coordinates": [[[11.09399, 45.9649972], [11.0939061, 45.9650199], [11.0939357, 45.9650729], [11.0940196, 45.9650502], [11.09399, 45.9649972]]]}}, {"id": "way/167793734", "geometry": {"type": "Polygon", "coordinates": [[[11.091958, 45.9762704], [11.0917569, 45.9762861], [11.0917792, 45.9764241], [11.0919803, 45.9764084], [11.091958, 45.9762704]]]}}, {"id": "way/167793735", "geometry": {"type": "Polygon", "coordinates": [[[11.0922133, 45.9761823], [11.0920393, 45.9761901], [11.0920479, 45.9762813], [11.0922219, 45.9762735], [11.0922133, 45.9761823]]]}}, {"id": "way/167793738", "geometry": {"type": "Polygon", "coordinates": [[[11.0922434, 45.9765583], [11.0924012, 45.9765511], [11.0923942, 45.9764898], [11.0923888, 45.9764076], [11.0922299, 45.9764154], [11.0922434, 45.9765583]]]}}, {"id": "way/167793739", "geometry": {"type": "Polygon", "coordinates": [[[11.0923942, 45.9764898], [11.0925649, 45.9764843], [11.0925569, 45.9763637], [11.0924184, 45.9763681], [11.092421, 45.9764065], [11.0923888, 45.9764076], [11.0923942, 45.9764898]]]}}, {"id": "way/167793740", "geometry": {"type": "Polygon", "coordinates": [[[11.0925586, 45.9766372], [11.0928184, 45.9766177], [11.0927869, 45.9764148], [11.0926204, 45.9764273], [11.0926401, 45.9765547], [11.0925468, 45.9765617], [11.0925586, 45.9766372]]]}}, {"id": "way/167793741", "geometry": {"type": "Polygon", "coordinates": [[[11.0911065, 45.9763999], [11.0911856, 45.9765208], [11.0913618, 45.9764784], [11.0913664, 45.9765051], [11.091459, 45.9764925], [11.0914138, 45.9763355], [11.0911065, 45.9763999]]]}}, {"id": "way/227631471", "geometry": {"type": "Polygon", "coordinates": [[[11.0957119, 45.9807767], [11.096122, 45.9809466], [11.0962738, 45.9807697], [11.0958636, 45.9805998], [11.0957119, 45.9807767]]]}}, {"id": "way/238920570", "geometry": {"type": "Polygon", "coordinates": [[[11.0918584, 45.9757796], [11.0917958, 45.9756073], [11.0916584, 45.9756213], [11.0916763, 45.9756763], [11.0916482, 45.9756831], [11.0916772, 45.975773], [11.0917331, 45.9757721], [11.0917528, 45.9758256], [11.0918584, 45.9757796]]]}}, {"id": "way/238920571", "geometry": {"type": "Polygon", "coordinates": [[[11.0886396, 45.9767195], [11.0885918, 45.9765833], [11.0888317, 45.9765299], [11.0891368, 45.9764846], [11.0891443, 45.9766949], [11.089064, 45.9767006], [11.0890413, 45.9766173], [11.0887828, 45.976627], [11.0887851, 45.9766739], [11.0888294, 45.9766739], [11.0888201, 45.9767127], [11.0886396, 45.9767195]]]}}, {"id": "way/238920572", "geometry": {"type": "Polygon", "coordinates": [[[11.0892065, 45.9767313], [11.0895442, 45.9767669], [11.0895558, 45.9767006], [11.0894324, 45.9766892], [11.0894417, 45.9766536], [11.0893439, 45.9766617], [11.0893416, 45.9766342], [11.089451, 45.9766294], [11.089479, 45.9766634], [11.0895326, 45.9766504], [11.0894115, 45.9765339], [11.0894068, 45.9764853], [11.0891716, 45.9764837], [11.0891926, 45.9766536], [11.0893137, 45.9766569], [11.089323, 45.976707], [11.0892042, 45.9766925], [11.0892065, 45.9767313]]]}}, {"id": "way/238920573", "geometry": {"type": "Polygon", "coordinates": [[[11.0897919, 45.9777749], [11.0896174, 45.9774088], [11.0896207, 45.977157], [11.0898051, 45.9771456], [11.0897919, 45.9771891], [11.0899269, 45.9771982], [11.0899401, 45.9771364], [11.0900224, 45.9771524], [11.0899632, 45.977331], [11.0898117, 45.9773332], [11.0898117, 45.9773996], [11.0898709, 45.9773996], [11.0899895, 45.9773561], [11.0899994, 45.9775003], [11.0898281, 45.9775163], [11.0898808, 45.9776811], [11.0899269, 45.977672], [11.0899533, 45.9777315], [11.0897919, 45.9777749]]]}}, {"id": "way/238920575", "geometry": {"type": "Polygon", "coordinates": [[[11.0906384, 45.9758414], [11.0908055, 45.9758119], [11.0908211, 45.9758337], [11.0910321, 45.9757824], [11.0910272, 45.9758532], [11.0911153, 45.9758452], [11.0911057, 45.9758097], [11.0913247, 45.9757748], [11.0913146, 45.9757244], [11.0914181, 45.9757242], [11.0914736, 45.9759475], [11.0916579, 45.975929], [11.0916333, 45.9758352], [11.0915434, 45.9758336], [11.0915412, 45.9757933], [11.0915855, 45.9757911], [11.0915505, 45.9755893], [11.0911496, 45.9756179], [11.0911729, 45.9756975], [11.091096, 45.9757074], [11.0910763, 45.9756191], [11.0907595, 45.9756751], [11.0905501, 45.9757286], [11.0905787, 45.9757733], [11.0906038, 45.9757684], [11.0906384, 45.9758414]]]}}, {"id": "way/238920576", "geometry": {"type": "Polygon", "coordinates": [[[11.0905444, 45.9756981], [11.0907442, 45.9756359], [11.0906741, 45.9754873], [11.0906022, 45.975502], [11.0905627, 45.9754631], [11.090459, 45.9754801], [11.0904104, 45.9753935], [11.0904647, 45.9753758], [11.0904409, 45.9753191], [11.0903866, 45.9753217], [11.0903638, 45.9752681], [11.0903095, 45.9752583], [11.090285, 45.9752072], [11.0904217, 45.9751852], [11.0903901, 45.9751158], [11.0902376, 45.9751438], [11.0902289, 45.9751109], [11.0904497, 45.975078], [11.0904339, 45.9750342], [11.0902604, 45.9750427], [11.0902376, 45.9749611], [11.0899922, 45.9749952], [11.0903568, 45.9755702], [11.0904672, 45.9756701], [11.0905321, 45.9756725], [11.0905444, 45.9756981]]]}}, {"id": "way/238920577", "geometry": {"type": "Polygon", "coordinates": [[[11.0896268, 45.9767523], [11.0897689, 45.97672], [11.0897014, 45.9766439], [11.0898201, 45.9766164], [11.0898015, 45.9766892], [11.0898877, 45.9766682], [11.0899016, 45.9767135], [11.0901205, 45.976673], [11.0900856, 45.9766277], [11.0901811, 45.9766002], [11.09023, 45.976652], [11.0904815, 45.9766099], [11.0904652, 45.9765598], [11.0906515, 45.9765209], [11.0906305, 45.9764707], [11.0907958, 45.9764335], [11.0908168, 45.9764788], [11.0909615, 45.9764614], [11.090896, 45.9763267], [11.0901229, 45.9764675], [11.0901438, 45.9765403], [11.0899994, 45.9765662], [11.0899924, 45.9766115], [11.089876, 45.9766293], [11.0898388, 45.9765209], [11.0899156, 45.9765031], [11.089897, 45.9764319], [11.0897619, 45.9764513], [11.0897759, 45.9765015], [11.0897014, 45.9765225], [11.0896618, 45.9764529], [11.089529, 45.9764756], [11.089571, 45.9766407], [11.0896268, 45.9767523]]]}}, {"id": "way/238920578", "geometry": {"type": "Polygon", "coordinates": [[[11.0938175, 45.9792198], [11.0940206, 45.979235], [11.0940382, 45.9791212], [11.093835, 45.9791061], [11.0938175, 45.9792198]]]}}, {"id": "way/238920579", "geometry": {"type": "Polygon", "coordinates": [[[11.0907353, 45.9762387], [11.0909061, 45.976218], [11.0908887, 45.9761484], [11.0907178, 45.9761691], [11.0907353, 45.9762387]]]}}, {"id": "way/238920580", "geometry": {"type": "Polygon", "coordinates": [[[11.0909193, 45.9756289], [11.0909, 45.9755192], [11.0908105, 45.9755269], [11.0908297, 45.9756365], [11.0909193, 45.9756289]]]}}, {"id": "way/238920581", "geometry": {"type": "Polygon", "coordinates": [[[11.0896447, 45.9764132], [11.0896328, 45.9763257], [11.0894984, 45.9763345], [11.0895103, 45.9764221], [11.0896447, 45.9764132]]]}}, {"id": "way/238920582", "geometry": {"type": "Polygon", "coordinates": [[[11.0944024, 45.9790645], [11.0939568, 45.9790095], [11.0939349, 45.9790948], [11.0943805, 45.9791499], [11.0944024, 45.9790645]]]}}, {"id": "way/238920583", "geometry": {"type": "Polygon", "coordinates": [[[11.0920051, 45.9757627], [11.0920749, 45.9757391], [11.0922593, 45.9755998], [11.0921769, 45.9755525], [11.0920839, 45.9756073], [11.09193, 45.9756433], [11.0920051, 45.9757627]]]}}, {"id": "way/238920584", "geometry": {"type": "Polygon", "coordinates": [[[11.0881072, 45.9769598], [11.0883471, 45.9770116], [11.0882679, 45.9768951], [11.0883308, 45.9768757], [11.0883028, 45.9767737], [11.0879931, 45.9768724], [11.0880397, 45.9769258], [11.0880956, 45.9768854], [11.0881072, 45.9769598]]]}}, {"id": "way/286516723", "geometry": {"type": "Polygon", "coordinates": [[[11.0960259, 45.9778545], [11.0960162, 45.9779789], [11.0962483, 45.9779876], [11.0962465, 45.9780108], [11.0965015, 45.9780204], [11.0965113, 45.9778939], [11.0963789, 45.9778889], [11.0963746, 45.9779439], [11.0962703, 45.97794], [11.0962742, 45.9778897], [11.0961405, 45.9778847], [11.0961425, 45.9778589], [11.0960259, 45.9778545]]]}}, {"id": "way/286516724", "geometry": {"type": "Polygon", "coordinates": [[[11.0966494, 45.9786393], [11.0966593, 45.9785763], [11.096635, 45.9785745], [11.0966437, 45.9785197], [11.0966263, 45.9785184], [11.0966361, 45.978456], [11.0967917, 45.9784678], [11.0967828, 45.9785249], [11.0968068, 45.9785267], [11.0967971, 45.9785885], [11.0968172, 45.97859], [11.0968075, 45.9786514], [11.0966494, 45.9786393]]]}}, {"id": "way/286516725", "geometry": {"type": "Polygon", "coordinates": [[[11.0956027, 45.9786545], [11.0956166, 45.9785339], [11.0956494, 45.9785358], [11.095663, 45.9784175], [11.0956872, 45.9784188], [11.0957008, 45.9782999], [11.0958511, 45.9783082], [11.0958357, 45.9784428], [11.0958003, 45.9784409], [11.0957866, 45.9785605], [11.0957594, 45.978559], [11.0957475, 45.9786625], [11.0956027, 45.9786545]]]}}, {"id": "way/286516726", "geometry": {"type": "Polygon", "coordinates": [[[11.0960242, 45.9787535], [11.0960426, 45.9786355], [11.095994, 45.9786318], [11.0960107, 45.9785247], [11.0959674, 45.9785214], [11.0959879, 45.9783901], [11.0959421, 45.9783867], [11.0959786, 45.9781535], [11.0961519, 45.9781666], [11.0961162, 45.978395], [11.0961567, 45.978398], [11.0961373, 45.9785225], [11.0961789, 45.9785256], [11.0961624, 45.9786311], [11.0962063, 45.9786344], [11.0961889, 45.9787456], [11.0961858, 45.9787657], [11.0961191, 45.9787607], [11.0960242, 45.9787535]]]}}, {"id": "way/286516727", "geometry": {"type": "Polygon", "coordinates": [[[11.0921071, 45.979615], [11.091912, 45.9796211], [11.0919195, 45.979737], [11.0921146, 45.9797309], [11.0921071, 45.979615]]]}}, {"id": "way/286516728", "geometry": {"type": "Polygon", "coordinates": [[[11.0918227, 45.9797396], [11.0919036, 45.979738], [11.0918989, 45.9796206], [11.091818, 45.9796222], [11.0918227, 45.9797396]]]}}, {"id": "way/286516729", "geometry": {"type": "Polygon", "coordinates": [[[11.098852, 45.9745811], [11.0988272, 45.9745064], [11.0987303, 45.9745219], [11.0987551, 45.9745966], [11.098852, 45.9745811]]]}}, {"id": "way/286516730", "geometry": {"type": "Polygon", "coordinates": [[[11.0956938, 45.9735333], [11.0957637, 45.9735067], [11.0958295, 45.9735901], [11.0957596, 45.9736167], [11.0956938, 45.9735333]]]}}, {"id": "way/286516731", "geometry": {"type": "Polygon", "coordinates": [[[11.1004584, 45.9769149], [11.1004475, 45.976823], [11.1003144, 45.9768305], [11.1003252, 45.9769225], [11.1004584, 45.9769149]]]}}, {"id": "way/286516732", "geometry": {"type": "Polygon", "coordinates": [[[11.0916739, 45.9790869], [11.0914879, 45.9790998], [11.0915074, 45.9792354], [11.0916934, 45.9792225], [11.0916739, 45.9790869]]]}}, {"id": "way/286516733", "geometry": {"type": "Polygon", "coordinates": [[[11.0995844, 45.9756033], [11.0994397, 45.9756175], [11.099451, 45.9756733], [11.0995957, 45.9756591], [11.0995844, 45.9756033]]]}}, {"id": "way/286516734", "geometry": {"type": "Polygon", "coordinates": [[[11.0997779, 45.9768077], [11.0997721, 45.9767724], [11.0997247, 45.9767762], [11.0997305, 45.9768114], [11.0997779, 45.9768077]]]}}, {"id": "way/286516735", "geometry": {"type": "Polygon", "coordinates": [[[11.0922742, 45.9755777], [11.0923827, 45.975482], [11.0923104, 45.9754424], [11.0922019, 45.9755381], [11.0922742, 45.9755777]]]}}, {"id": "way/286516736", "geometry": {"type": "Polygon", "coordinates": [[[11.0917355, 45.9805583], [11.0915906, 45.9805708], [11.091606, 45.9806568], [11.0917509, 45.9806443], [11.0917355, 45.9805583]]]}}, {"id": "way/286516737", "geometry": {"type": "Polygon", "coordinates": [[[11.1022855, 45.9762387], [11.1022623, 45.9761707], [11.1021843, 45.9761835], [11.1022075, 45.9762515], [11.1022855, 45.9762387]]]}}, {"id": "way/286516738", "geometry": {"type": "Polygon", "coordinates": [[[11.0969313, 45.9768729], [11.0969181, 45.9767556], [11.0967387, 45.9767654], [11.0967519, 45.9768826], [11.0969313, 45.9768729]]]}}, {"id": "way/286516739", "geometry": {"type": "Polygon", "coordinates": [[[11.0974853, 45.979157], [11.0974717, 45.9792368], [11.0975727, 45.9792451], [11.0975864, 45.9791653], [11.0974853, 45.979157]]]}}, {"id": "way/286516740", "geometry": {"type": "Polygon", "coordinates": [[[11.1047671, 45.9887916], [11.1047585, 45.9887275], [11.1046962, 45.9887315], [11.1047048, 45.9887957], [11.1047671, 45.9887916]]]}}, {"id": "way/286516741", "geometry": {"type": "Polygon", "coordinates": [[[11.1077214, 45.9897813], [11.1076974, 45.9897339], [11.1076081, 45.9897557], [11.107632, 45.9898031], [11.1077214, 45.9897813]]]}}, {"id": "way/286516742", "geometry": {"type": "Polygon", "coordinates": [[[11.1112569, 45.988662], [11.1111775, 45.9886916], [11.1112041, 45.988726], [11.1112835, 45.9886964], [11.1112569, 45.988662]]]}}, {"id": "way/286516743", "geometry": {"type": "Polygon", "coordinates": [[[11.1053529, 45.991045], [11.1054158, 45.9910893], [11.1055103, 45.9910244], [11.1054474, 45.9909802], [11.1053529, 45.991045]]]}}, {"id": "way/286516744", "geometry": {"type": "Polygon", "coordinates": [[[11.0930247, 45.9785996], [11.0930092, 45.9784768], [11.0929139, 45.9784826], [11.0929294, 45.9786054], [11.0930247, 45.9785996]]]}}, {"id": "way/286516745", "geometry": {"type": "Polygon", "coordinates": [[[11.1027903, 45.9843133], [11.1027365, 45.9842663], [11.1026682, 45.984304], [11.102722, 45.984351], [11.1027903, 45.9843133]]]}}, {"id": "way/286516746", "geometry": {"type": "Polygon", "coordinates": [[[11.0910588, 45.9755329], [11.0910742, 45.9755747], [11.0911374, 45.9755634], [11.091122, 45.9755217], [11.0910588, 45.9755329]]]}}, {"id": "way/286516747", "geometry": {"type": "Polygon", "coordinates": [[[11.100437, 45.9887299], [11.1004181, 45.9886745], [11.1003627, 45.9886836], [11.1003816, 45.9887391], [11.100437, 45.9887299]]]}}, {"id": "way/286516748", "geometry": {"type": "Polygon", "coordinates": [[[11.1085935, 45.9900567], [11.1085514, 45.9900272], [11.108497, 45.9900645], [11.108539, 45.9900941], [11.1085935, 45.9900567]]]}}, {"id": "way/286516749", "geometry": {"type": "Polygon", "coordinates": [[[11.0980798, 45.9877561], [11.0980056, 45.9877812], [11.0980358, 45.9878242], [11.09811, 45.9877991], [11.0980798, 45.9877561]]]}}, {"id": "way/286516750", "geometry": {"type": "Polygon", "coordinates": [[[11.098609, 45.9714438], [11.0985457, 45.971344], [11.0984242, 45.9713812], [11.0984874, 45.971481], [11.098609, 45.9714438]]]}}, {"id": "way/286516751", "geometry": {"type": "Polygon", "coordinates": [[[11.1033656, 45.9797156], [11.10331, 45.9796084], [11.1030491, 45.9796738], [11.1031048, 45.979781], [11.1033656, 45.9797156]]]}}, {"id": "way/286516752", "geometry": {"type": "Polygon", "coordinates": [[[11.0924355, 45.9795192], [11.0922535, 45.9795329], [11.0922733, 45.9796598], [11.0924553, 45.9796461], [11.0924355, 45.9795192]]]}}, {"id": "way/286516753", "geometry": {"type": "Polygon", "coordinates": [[[11.1007139, 45.9726591], [11.1006791, 45.972605], [11.1005952, 45.9726311], [11.10063, 45.9726852], [11.1007139, 45.9726591]]]}}, {"id": "way/286516754", "geometry": {"type": "Polygon", "coordinates": [[[11.1045889, 45.9886947], [11.1046361, 45.9886649], [11.1046047, 45.9886409], [11.1045575, 45.9886707], [11.1045889, 45.9886947]]]}}, {"id": "way/286516755", "geometry": {"type": "Polygon", "coordinates": [[[11.1021799, 45.9775405], [11.1020602, 45.9775515], [11.1020679, 45.9775921], [11.1021876, 45.9775811], [11.1021799, 45.9775405]]]}}, {"id": "way/286516756", "geometry": {"type": "Polygon", "coordinates": [[[11.0915293, 45.9795758], [11.0916888, 45.9795705], [11.0916803, 45.979448], [11.0916386, 45.9794494], [11.0915208, 45.9794534], [11.0915293, 45.9795758]]]}}, {"id": "way/286516757", "geometry": {"type": "Polygon", "coordinates": [[[11.0916888, 45.9795705], [11.0916903, 45.9795921], [11.0917824, 45.979589], [11.0917723, 45.9794449], [11.0916803, 45.979448], [11.0916888, 45.9795705]]]}}, {"id": "way/286516758", "geometry": {"type": "Polygon", "coordinates": [[[11.0966227, 45.9769686], [11.0966317, 45.9771244], [11.0968272, 45.9771189], [11.0968205, 45.9770038], [11.0967427, 45.9770059], [11.0967403, 45.9769653], [11.0966227, 45.9769686]]]}}, {"id": "way/286516759", "geometry": {"type": "Polygon", "coordinates": [[[11.1057273, 45.9711891], [11.1055683, 45.9712034], [11.1055791, 45.9712612], [11.1056221, 45.9712574], [11.1056267, 45.9712822], [11.1057427, 45.9712718], [11.1057273, 45.9711891]]]}}, {"id": "way/286516760", "geometry": {"type": "Polygon", "coordinates": [[[11.0923368, 45.9798238], [11.0926064, 45.9797233], [11.0925429, 45.9796319], [11.0924026, 45.9796776], [11.0924289, 45.9797141], [11.0923303, 45.9797644], [11.0923368, 45.9798238]]]}}, {"id": "way/286516761", "geometry": {"type": "Polygon", "coordinates": [[[11.0930046, 45.978354], [11.0927008, 45.9783551], [11.0927055, 45.9784337], [11.0927628, 45.9784779], [11.0928666, 45.9784779], [11.0928635, 45.9784273], [11.0930139, 45.9784262], [11.0930046, 45.978354]]]}}, {"id": "way/286516762", "geometry": {"type": "Polygon", "coordinates": [[[11.097152, 45.9786789], [11.0971629, 45.9786049], [11.0971308, 45.9786026], [11.0971478, 45.9784869], [11.0970027, 45.9784766], [11.096985, 45.9785968], [11.0970119, 45.9785987], [11.0970016, 45.9786682], [11.097152, 45.9786789]]]}}, {"id": "way/286516763", "geometry": {"type": "Polygon", "coordinates": [[[11.0956058, 45.9781959], [11.0956313, 45.9780594], [11.0957994, 45.9780746], [11.0957955, 45.9780951], [11.0958536, 45.9781003], [11.0958353, 45.9781983], [11.0957905, 45.9781942], [11.0957871, 45.9782123], [11.0956058, 45.9781959]]]}}, {"id": "way/424601700", "geometry": {"type": "Polygon", "coordinates": [[[11.104821, 45.9610007], [11.1047785, 45.9609539], [11.1047407, 45.9609705], [11.1047833, 45.9610173], [11.104821, 45.9610007]]]}}, {"id": "way/424601702", "geometry": {"type": "Polygon", "coordinates": [[[11.0988466, 45.9591811], [11.0988259, 45.9591458], [11.0987843, 45.9591576], [11.098805, 45.9591929], [11.0988466, 45.9591811]]]}}, {"id": "way/424601703", "geometry": {"type": "Polygon", "coordinates": [[[11.1008484, 45.9623], [11.100802, 45.9622542], [11.1007536, 45.962278], [11.1008, 45.9623237], [11.1008484, 45.9623]]]}}, {"id": "way/424601704", "geometry": {"type": "Polygon", "coordinates": [[[11.0921465, 45.9626572], [11.091987, 45.9624637], [11.0918615, 45.9625137], [11.092021, 45.9627072], [11.0921465, 45.9626572]]]}}, {"id": "way/424601706", "geometry": {"type": "Polygon", "coordinates": [[[11.0903455, 45.9652879], [11.0903556, 45.9652507], [11.090286, 45.9652416], [11.0902759, 45.9652788], [11.0903455, 45.9652879]]]}}, {"id": "way/424601708", "geometry": {"type": "Polygon", "coordinates": [[[11.0934501, 45.9603001], [11.0933921, 45.9602531], [11.0933593, 45.9602727], [11.0934172, 45.9603197], [11.0934501, 45.9603001]]]}}, {"id": "way/424601713", "geometry": {"type": "Polygon", "coordinates": [[[11.0923258, 45.9595554], [11.0923705, 45.9595545], [11.092369, 45.9595173], [11.0923243, 45.9595182], [11.0923258, 45.9595554]]]}}, {"id": "way/424601715", "geometry": {"type": "Polygon", "coordinates": [[[11.0993863, 45.9603002], [11.0993646, 45.9602782], [11.099324, 45.9602975], [11.0993457, 45.9603196], [11.0993863, 45.9603002]]]}}, {"id": "way/424601716", "geometry": {"type": "Polygon", "coordinates": [[[11.0933561, 45.9623467], [11.0932566, 45.9624048], [11.0933386, 45.9624728], [11.0932178, 45.9625432], [11.0933065, 45.9626167], [11.0935268, 45.9624882], [11.0933561, 45.9623467]]]}}, {"id": "way/538078160", "geometry": {"type": "Polygon", "coordinates": [[[11.0896907, 45.974564], [11.0896661, 45.9744569], [11.0893461, 45.9744924], [11.0893214, 45.9743845], [11.0894212, 45.9743734], [11.0894056, 45.9743053], [11.0893295, 45.9743137], [11.0893169, 45.9742588], [11.0891652, 45.9742756], [11.0891823, 45.9743501], [11.0892797, 45.9743393], [11.0892849, 45.974362], [11.0891773, 45.9743739], [11.0891958, 45.9744549], [11.0892176, 45.9744525], [11.0892498, 45.9745928], [11.0893729, 45.9745792], [11.0893773, 45.9745987], [11.0896907, 45.974564]]]}}, {"id": "way/608273194", "geometry": {"type": "Polygon", "coordinates": [[[11.1042166, 45.9905943], [11.1042729, 45.9904694], [11.1041079, 45.9904335], [11.1040516, 45.9905583], [11.1042166, 45.9905943]]]}}, {"id": "way/658916942", "geometry": {"type": "Polygon", "coordinates": [[[11.096186, 45.9644781], [11.0961197, 45.9644979], [11.096168, 45.9645762], [11.0962343, 45.9645564], [11.096186, 45.9644781]]]}}, {"id": "way/658916943", "geometry": {"type": "Polygon", "coordinates": [[[11.0974789, 45.9643504], [11.0974373, 45.9643584], [11.097456, 45.9644059], [11.0974976, 45.964398], [11.0974789, 45.9643504]]]}}, {"id": "way/658916945", "geometry": {"type": "Polygon", "coordinates": [[[11.0977216, 45.96415], [11.0976655, 45.9641611], [11.0976896, 45.9642199], [11.0977457, 45.9642087], [11.0977216, 45.96415]]]}}, {"id": "way/658916947", "geometry": {"type": "Polygon", "coordinates": [[[11.0999358, 45.9663201], [11.099917, 45.9661561], [11.0997898, 45.9661631], [11.0998086, 45.9663272], [11.0999358, 45.9663201]]]}}, {"id": "way/658916949", "geometry": {"type": "Polygon", "coordinates": [[[11.0993806, 45.9667433], [11.0993457, 45.9664917], [11.0991826, 45.9665026], [11.0992175, 45.9667543], [11.0993806, 45.9667433]]]}}, {"id": "way/658916951", "geometry": {"type": "Polygon", "coordinates": [[[11.1029264, 45.9597358], [11.1029513, 45.9597644], [11.1030149, 45.9597377], [11.1029901, 45.959709], [11.1029264, 45.9597358]]]}}, {"id": "way/659050997", "geometry": {"type": "Polygon", "coordinates": [[[11.0912669, 45.9810783], [11.091114, 45.9811137], [11.0911395, 45.9811668], [11.0912923, 45.9811314], [11.0912669, 45.9810783]]]}}, {"id": "way/659050998", "geometry": {"type": "Polygon", "coordinates": [[[11.0919589, 45.9785191], [11.0919589, 45.9783737], [11.0918167, 45.9783737], [11.0918167, 45.9785191], [11.0919589, 45.9785191]]]}}, {"id": "way/659051000", "geometry": {"type": "Polygon", "coordinates": [[[11.0887233, 45.9776573], [11.0887841, 45.9778565], [11.08899, 45.9778261], [11.0889568, 45.9777176], [11.0889083, 45.9777247], [11.0888806, 45.9776341], [11.0887233, 45.9776573]]]}}, {"id": "way/659051001", "geometry": {"type": "Polygon", "coordinates": [[[11.095545, 45.9753541], [11.0952178, 45.9754025], [11.0952554, 45.9755253], [11.0955826, 45.9754768], [11.095545, 45.9753541]]]}}, {"id": "way/659051002", "geometry": {"type": "Polygon", "coordinates": [[[11.0950327, 45.9754323], [11.0946867, 45.9754845], [11.0947177, 45.9755839], [11.0950637, 45.9755317], [11.0950327, 45.9754323]]]}}, {"id": "way/659051004", "geometry": {"type": "Polygon", "coordinates": [[[11.0906164, 45.9753447], [11.0904837, 45.975369], [11.0905168, 45.9754566], [11.0906496, 45.9754324], [11.0906164, 45.9753447]]]}}, {"id": "way/659051005", "geometry": {"type": "Polygon", "coordinates": [[[11.0942468, 45.9780587], [11.0942495, 45.9779972], [11.0941714, 45.9779956], [11.0941688, 45.9780571], [11.0942468, 45.9780587]]]}}, {"id": "way/659051009", "geometry": {"type": "Polygon", "coordinates": [[[11.0988978, 45.9777773], [11.0988387, 45.9777791], [11.0988405, 45.9778054], [11.0988995, 45.9778036], [11.0988978, 45.9777773]]]}}, {"id": "way/659051010", "geometry": {"type": "Polygon", "coordinates": [[[11.0908592, 45.9802125], [11.0907005, 45.9802584], [11.0907277, 45.9803038], [11.0908864, 45.9802579], [11.0908592, 45.9802125]]]}}, {"id": "way/659051013", "geometry": {"type": "Polygon", "coordinates": [[[11.0961191, 45.9787607], [11.0961149, 45.978788], [11.0963631, 45.9788068], [11.0963725, 45.9787466], [11.0962601, 45.9787381], [11.0962581, 45.9787508], [11.0961889, 45.9787456], [11.0961858, 45.9787657], [11.0961191, 45.9787607]]]}}, {"id": "way/659051015", "geometry": {"type": "Polygon", "coordinates": [[[11.0934122, 45.9787932], [11.0933852, 45.9788926], [11.093449, 45.9789009], [11.0934423, 45.9789255], [11.093611, 45.9789476], [11.0936353, 45.9788577], [11.0935687, 45.978849], [11.0935779, 45.9788149], [11.0934122, 45.9787932]]]}}, {"id": "way/659051023", "geometry": {"type": "Polygon", "coordinates": [[[11.0937291, 45.9815032], [11.093803, 45.9815237], [11.0938673, 45.9814119], [11.0937935, 45.9813914], [11.0937291, 45.9815032]]]}}, {"id": "way/659051024", "geometry": {"type": "Polygon", "coordinates": [[[11.0932276, 45.9812013], [11.0932732, 45.9811211], [11.093224, 45.9811076], [11.0931784, 45.9811878], [11.0932276, 45.9812013]]]}}, {"id": "way/659051025", "geometry": {"type": "Polygon", "coordinates": [[[11.0935494, 45.9811724], [11.0933429, 45.9811053], [11.0933036, 45.9811637], [11.0935101, 45.9812308], [11.0935494, 45.9811724]]]}}, {"id": "way/659051026", "geometry": {"type": "Polygon", "coordinates": [[[11.093422, 45.9813634], [11.0933968, 45.9814057], [11.0934907, 45.9814327], [11.0935159, 45.9813904], [11.093422, 45.9813634]]]}}, {"id": "way/659051027", "geometry": {"type": "Polygon", "coordinates": [[[11.0926842, 45.981145], [11.0928697, 45.9812], [11.0929103, 45.9811337], [11.0928879, 45.9811271], [11.0929214, 45.9810725], [11.0927582, 45.9810242], [11.0926842, 45.981145]]]}}, {"id": "way/659051028", "geometry": {"type": "Polygon", "coordinates": [[[11.0920363, 45.9803817], [11.0918374, 45.9804632], [11.091907, 45.9805453], [11.0920423, 45.9804899], [11.0920285, 45.9804737], [11.0920922, 45.9804476], [11.0920363, 45.9803817]]]}}, {"id": "way/659051029", "geometry": {"type": "Polygon", "coordinates": [[[11.0947216, 45.9804874], [11.0948955, 45.9805015], [11.0949626, 45.9801007], [11.0947886, 45.9800867], [11.0947216, 45.9804874]]]}}, {"id": "way/659051030", "geometry": {"type": "Polygon", "coordinates": [[[11.0948181, 45.9800214], [11.0949998, 45.9800347], [11.0950373, 45.9797868], [11.0948557, 45.9797735], [11.0948181, 45.9800214]]]}}, {"id": "way/659051031", "geometry": {"type": "Polygon", "coordinates": [[[11.0939866, 45.9801612], [11.0939236, 45.9802701], [11.0944305, 45.9804118], [11.0944936, 45.9803029], [11.0939866, 45.9801612]]]}}, {"id": "way/659051032", "geometry": {"type": "Polygon", "coordinates": [[[11.093941, 45.9801482], [11.0936218, 45.980068], [11.0935653, 45.9801768], [11.0938845, 45.9802569], [11.093941, 45.9801482]]]}}, {"id": "way/659051033", "geometry": {"type": "Polygon", "coordinates": [[[11.0941502, 45.9797679], [11.0936058, 45.9798071], [11.0936261, 45.9799434], [11.0941705, 45.9799043], [11.0941502, 45.9797679]]]}}, {"id": "way/659051034", "geometry": {"type": "Polygon", "coordinates": [[[11.094574, 45.9797493], [11.0942388, 45.9797679], [11.0942528, 45.97989], [11.0945881, 45.9798714], [11.094574, 45.9797493]]]}}, {"id": "way/659051035", "geometry": {"type": "Polygon", "coordinates": [[[11.0906982, 45.9787372], [11.0906138, 45.9787568], [11.0906431, 45.978818], [11.0907276, 45.9787984], [11.0906982, 45.9787372]]]}}, {"id": "way/659051036", "geometry": {"type": "Polygon", "coordinates": [[[11.0905749, 45.9790317], [11.0908149, 45.9790718], [11.0908511, 45.9788481], [11.0906835, 45.9788313], [11.0903938, 45.978849], [11.0904327, 45.9789488], [11.0905547, 45.9789571], [11.0905507, 45.9789711], [11.090591, 45.9789739], [11.0905749, 45.9790317]]]}}, {"id": "way/659051037", "geometry": {"type": "Polygon", "coordinates": [[[11.0956952, 45.9769282], [11.0956361, 45.9769311], [11.0956424, 45.9769939], [11.0957015, 45.9769911], [11.0956952, 45.9769282]]]}}, {"id": "way/659051041", "geometry": {"type": "Polygon", "coordinates": [[[11.0923907, 45.9775415], [11.0922916, 45.9775471], [11.0922968, 45.9775918], [11.0923959, 45.9775862], [11.0923907, 45.9775415]]]}}, {"id": "way/659051042", "geometry": {"type": "Polygon", "coordinates": [[[11.0933617, 45.975848], [11.093182, 45.9758592], [11.0932038, 45.976029], [11.0933835, 45.9760178], [11.0933617, 45.975848]]]}}, {"id": "way/659051043", "geometry": {"type": "Polygon", "coordinates": [[[11.0937345, 45.9756523], [11.0934904, 45.9756691], [11.0935036, 45.9757619], [11.0937477, 45.9757451], [11.0937345, 45.9756523]]]}}, {"id": "way/659051044", "geometry": {"type": "Polygon", "coordinates": [[[11.0943192, 45.9755498], [11.094169, 45.9755666], [11.0941914, 45.9756635], [11.0943416, 45.9756467], [11.0943192, 45.9755498]]]}}, {"id": "way/659051045", "geometry": {"type": "Polygon", "coordinates": [[[11.0910375, 45.975533], [11.0909159, 45.9755541], [11.0909375, 45.975614], [11.0910591, 45.9755929], [11.0910375, 45.975533]]]}}, {"id": "way/659051046", "geometry": {"type": "Polygon", "coordinates": [[[11.0910354, 45.9760755], [11.0908759, 45.9761035], [11.0907164, 45.9758757], [11.0908584, 45.975855], [11.0909516, 45.9760034], [11.0909711, 45.975996], [11.0909052, 45.975882], [11.0912247, 45.9758635], [11.0912423, 45.9759378], [11.0911676, 45.9759478], [11.091177, 45.9759729], [11.0910778, 45.9759906], [11.0911019, 45.9760549], [11.0910354, 45.9760755]]]}}, {"id": "way/659051047", "geometry": {"type": "Polygon", "coordinates": [[[11.0910362, 45.9760914], [11.0910727, 45.9761458], [11.0911639, 45.9761163], [11.0911274, 45.9760619], [11.0910362, 45.9760914]]]}}, {"id": "way/659051048", "geometry": {"type": "Polygon", "coordinates": [[[11.0912993, 45.9759646], [11.0911314, 45.9760167], [11.0911556, 45.9760572], [11.0911924, 45.9761083], [11.0914396, 45.976034], [11.0914098, 45.9759451], [11.0912993, 45.9759646]]]}}, {"id": "way/659051050", "geometry": {"type": "Polygon", "coordinates": [[[11.0898641, 45.9760456], [11.0895311, 45.9762448], [11.0894671, 45.9761323], [11.0895272, 45.9761153], [11.0894872, 45.9760587], [11.0897211, 45.9759949], [11.0896629, 45.9759384], [11.089734, 45.9759095], [11.0898252, 45.9759888], [11.0898064, 45.9759971], [11.0898641, 45.9760456]]]}}, {"id": "way/659051051", "geometry": {"type": "Polygon", "coordinates": [[[11.0894487, 45.9761328], [11.0895023, 45.9762539], [11.0892356, 45.976307], [11.0891096, 45.9761897], [11.0894487, 45.9761328]]]}}, {"id": "way/659051052", "geometry": {"type": "Polygon", "coordinates": [[[11.0896294, 45.97596], [11.0894746, 45.9759998], [11.0894058, 45.9758704], [11.0895155, 45.9758422], [11.0895533, 45.9759131], [11.0895983, 45.9759016], [11.0896294, 45.97596]]]}}, {"id": "way/659051053", "geometry": {"type": "Polygon", "coordinates": [[[11.0887282, 45.9762069], [11.0888043, 45.976273], [11.0889988, 45.9761649], [11.0889226, 45.9760987], [11.0887282, 45.9762069]]]}}, {"id": "way/659051054", "geometry": {"type": "Polygon", "coordinates": [[[11.0890514, 45.9759897], [11.088928, 45.9760232], [11.0889613, 45.9760824], [11.0890846, 45.9760488], [11.0890514, 45.9759897]]]}}, {"id": "way/659051055", "geometry": {"type": "Polygon", "coordinates": [[[11.089359, 45.975906], [11.0891144, 45.9759715], [11.0891529, 45.976041], [11.0892261, 45.9760214], [11.0892404, 45.9760472], [11.0892829, 45.9760358], [11.0893119, 45.9760882], [11.089441, 45.9760537], [11.089359, 45.975906]]]}}, {"id": "way/659051056", "geometry": {"type": "Polygon", "coordinates": [[[11.0921574, 45.9749626], [11.0920769, 45.9749701], [11.0920842, 45.9750082], [11.0921647, 45.9750007], [11.0921574, 45.9749626]]]}}, {"id": "way/659051057", "geometry": {"type": "Polygon", "coordinates": [[[11.0919026, 45.9749309], [11.0918918, 45.9748694], [11.0918406, 45.9748737], [11.0918514, 45.9749352], [11.0919026, 45.9749309]]]}}]}
{"lint": {"files": {"include": ["src", "test"]}}, "fmt": {"files": {"include": ["."], "exclude": ["node_modules"]}, "options": {"lineWidth": 80, "indentWidth": 4}}}
{"name": "sqlite-http", "version": "0.1.1", "github": "https://github.com/asg017/sqlite-http", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"imports": {"@virtualstate/deno": "https://cdn.skypack.dev/@virtualstate/deno", "@virtualstate/fringe": "https://cdn.skypack.dev/@virtualstate/fringe", "@virtualstate/dom": "https://cdn.skypack.dev/@virtualstate/dom", "@virtualstate/hooks": "https://cdn.skypack.dev/@virtualstate/hooks", "@virtualstate/hooks-extended": "https://cdn.skypack.dev/@virtualstate/hooks-extended", "@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union", "@virtualstate/web": "https://cdn.skypack.dev/@virtualstate/web", "@virtualstate/x": "https://cdn.skypack.dev/@virtualstate/x", "@opennetwork/http-representation": "https://cdn.skypack.dev/@opennetwork/http-representation", "@opennetwork/http-representation-node": "https://cdn.skypack.dev/@opennetwork/http-representation-node", "@opentelemetry/api": "https://cdn.skypack.dev/@opentelemetry/api", "@opentelemetry/sdk-node": "https://cdn.skypack.dev/@opentelemetry/sdk-node", "@opentelemetry/auto-instrumentations-node": "https://cdn.skypack.dev/@opentelemetry/auto-instrumentations-node", "@opentelemetry/metrics": "https://cdn.skypack.dev/@opentelemetry/metrics", "async_hooks": "./src/resolve/nop.js", "fs.js": "./src/resolve/nop.js", "fs": "./src/resolve/nop.js", "http": "./src/resolve/nop.js", "jsdom": "./src/resolve/nop.js", "abort-controller": "https://cdn.skypack.dev/abort-controller", "iterable": "https://cdn.skypack.dev/iterable", "microtask-collector": "https://cdn.skypack.dev/microtask-collector", "deno:std/http/server": "https://deno.land/std@0.111.0/http/server.ts", "deno-dom-wasm": "https://deno.land/x/deno_dom/deno-dom-wasm.ts", "uuid": "./src/uuid.ts"}}
{"id": 102208, "name": "Vedeno", "latitude": "42.96892000", "longitude": "46.09611000", "state": {"id": 1893, "name": "Chechen Republic", "state_code": "CE", "latitude": "43.40233010", "longitude": "45.71874680", "type": null}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["./"], "exclude": []}, "rules": {"tags": ["recommended"], "include": [], "exclude": ["no-explicit-any"]}}, "fmt": {"files": {"include": ["./"], "exclude": []}, "options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}}
{"lock": false}
{"version": "0.4.1", "imports": {"dnt/": "https://deno.land/x/dnt@0.34.0/", "testing/": "https://deno.land/std@0.183.0/testing/"}, "tasks": {"test": "deno task test:unit && deno task test:lint && deno task test:format && deno task test:types", "test:unit": "deno test -A --unstable", "test:lint": "deno lint", "test:format": "deno fmt --check", "test:types": "find . -name '*.ts' | xargs deno check --unstable", "build:npm": "deno run -A scripts/build_npm.ts"}, "lint": {"files": {"exclude": [".npm/"]}}, "fmt": {"files": {"exclude": [".npm/"]}}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "importMap": "import_map.json", "lint": {"files": {"include": ["src/", "levain.ts"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["src/", "levain.ts"]}, "options": {"useTabs": true, "lineWidth": 80, "indentWidth": 3, "singleQuote": true, "proseWrap": "preserve"}}, "test": {"files": {"include": ["src/", "levain.test.ts"]}}}
{"importMap": "./import_map.json", "fmt": {"files": {"exclude": ["README.md"]}, "options": {"useTabs": true, "lineWidth": 101, "indentWidth": 2, "singleQuote": true}}}
{"version": "3.0.3", "imports": {"dnt/": "https://deno.land/x/dnt@0.34.0/", "fmt/": "https://deno.land/std@0.186.0/fmt/", "testing/": "https://deno.land/std@0.186.0/testing/"}, "lint": {"exclude": [".npm"]}, "fmt": {"exclude": [".npm"]}, "tasks": {"test": "deno task test:unit && deno task test:lint && deno task test:format && deno task test:types", "test:format": "deno fmt --check", "test:lint": "deno lint", "test:unit": "deno test -A", "test:types": "deno check mod.ts", "build:npm": "deno run --allow-env --allow-read --allow-write --allow-net --allow-run scripts/build_npm.ts"}}
{"tasks": {"start": "deno run -A ./src/main.ts", "dev": "deno run --watch -A ./src/main.ts", "refreshPlaylists": "deno run -A ./src/tools/refreshPlaylists.ts", "migratePlaylists": "deno run -A ./src/tools/migratePlaylists.ts", "generateCupOfADayPlaylist": "deno run -A ./src/tools/generateCupOfADayPlaylist.ts", "generate": "deno run ./src/main.ts"}}
{"fmt": {"options": {"useTabs": true, "indentWidth": 4}}}
{"lint": {"files": {"exclude": ["ssb-base", "static/common/js/ext"]}}, "fmt": {"files": {"exclude": ["ssb-base", "static/common/js/ext"]}}}
{"tasks": {"dev": "deno run --allow-all --watch src/App.ts", "vendor": "rm -rf public/vendor && deno vendor --no-config public/search.ts --output public/vendor"}}
{"importMap": "import_map.json", "fmt": {"options": {"lineWidth": 100}}}
{"importMap": "import_map.json", "tasks": {"dev": "deno run --watch --allow-env=PORT,POSTGRES_URL --allow-net --allow-read=. main.tsx", "test": "deno test --watch --allow-read ./lib .", "wasmbuild": "deno run -A https://deno.land/x/wasmbuild@0.10.2/main.ts"}}
{"importMap": "import_map.json", "lint": {"rules": {"include": ["explicit-function-return-type", "ban-untagged-todo", "camelcase", "default-param-last", "eqeqeq", "explicit-module-boundary-types", "no-const-assign", "no-eval", "no-external-import", "no-non-null-assertion", "no-throw-literal"]}}}
{"compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}, "lint": {"files": {"exclude": ["www/dist"]}}, "importMap": "./import_map.json", "tasks": {"esm:add": "deno run -A https://esm.sh/v113 add", "esm:update": "deno run -A https://esm.sh/v113 update", "esm:remove": "deno run -A https://esm.sh/v113 remove"}}
{"compilerOptions": {"noCheck": true}}
{"$schema": "https://deno.land/x/deno@v1.22.1/cli/schemas/config-file.v1.json", "compilerOptions": {"lib": ["deno.ns"]}, "tasks": {"dnt": "deno run -A dnt.ts $(git describe --tags)", "test": "deno test -A src", "test:coverage": "TMP=$(mktemp -d) && deno task test --coverage=$TMP && deno coverage --exclude='utils/xml-validation/fontoxml' $TMP --lcov > $TMP/lcov.lcov && genhtml -o coverage $TMP/lcov.lcov", "lint": "deno lint src && npm run lint", "precommit": "deno task lint && deno task test"}}
{"lint": {"files": {"include": ["src/"], "exclude": ["node_modules/", "./**/*.test.ts"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"options": {"singleQuote": true, "useTabs": true}, "files": {"exclude": ["./node_modules/", "./coverage/", "./doc/"]}}, "compilerOptions": {"emitDecoratorMetadata": true, "jsx": "react-jsx", "jsxImportSource": "preact"}, "tasks": {"test": "NO_LOG=true COOKIE_SECRET_KEY=mysecretkey deno test -A --unstable --coverage=coverage spec", "start:example": "deno run --allow-net --allow-env --watch example/run.ts"}}
{"tasks": {"deps:load": "deno cache --lock --reload deps.ts", "deps:update": "deno cache --lock --lock-write deps.ts"}}
{"tasks": {"deploy-pkg": "truffle-cli deploy", "deploy-fn": "cd backend/ && supabase functions deploy viewer-polls-example-handler --no-verify-jwt"}, "fmt": {"options": {"lineWidth": 140}}}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable", "esnext"], "jsx": "react", "jsxFactory": "h", "jsxFragmentFactory": "Fragment"}, "importMap": "./import_map.json", "lint": {"files": {"exclude": ["dist"]}}, "fmt": {"options": {"singleQuote": true, "proseWrap": "preserve"}}, "tasks": {"dev": "bext --watch", "build": "bext", "build:chrome": "bext chrome", "build:firefox": "bext firefox", "test": "deno fmt && deno task check && deno task test:unit && deno lint", "test:unit": "deno test -A source", "test:unit:update": "deno test -A -- --update source", "check": "deno task check:background && deno task check:content_script && deno task check:options && deno task check:popup", "check:background": "deno check source/background.ts", "check:content_script": "deno check source/content_script.ts", "check:options": "deno check source/options.tsx", "check:popup": "deno check source/popup.tsx"}}
{"fmt": {"indentWidth": 4, "proseWrap": "preserve", "exclude": ["./node_modules/", "./out/", "./package-lock.json"]}, "lint": {"exclude": ["./node_modules/", "./out/", "./package-lock.json"]}}
{"tasks": {"run": "deno run -A main.ts", "build": "deno run -A build.ts", "dev": " deno run -A build.ts; deno run -A dev.ts", "start": " deno run -A --watch=static/,blog/ dev.ts", "wasmbuild": "deno run -A  https://deno.land/x/wasmbuild@0.8.3/main.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "fmt": {"options": {"singleQuote": true}}}
{"tasks": {"test": "deno test", "dev": "deno fmt && deno lint && deno task test --fail-fast"}}
{"tasks": {"update": "bash -c 'shopt -s globstar; deno run -A https://deno.land/x/udd@0.7.5/main.ts **/*.ts'; deno task cache", "cache": "bash -c 'shopt -s globstar; deno cache **/*.ts'"}, "fig": {"update": {"description": "Update dependency versions", "icon": "\u2b06\ufe0f"}, "cache": {"description": "Cache dependencies", "icon": "\u2b07\ufe0f"}}}
{"compilerOptions": {"emitDecoratorMetadata": true, "strict": true, "jsx": "react-jsx", "jsxImportSource": "https://esm.sh/preact@10.11.2?pin=v67", "lib": ["dom", "dom.iterable", "deno.ns", "deno.unstable"]}, "fmt": {"options": {"useTabs": false, "lineWidth": 160, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}, "lint": {"rules": {"tags": ["recommended"], "include": ["default-param-last", "eqeqeq", "no-const-assign", "no-eval", "no-non-null-asserted-optional-chain", "no-sparse-arrays", "no-throw-literal", "no-undef"], "exclude": []}}, "tasks": {"build": "deno task clean && deno task ensure-out-exists && deno task copy:assets && deno task build:assets && deno task minify:assets && deno task compress && deno task build:server && deno task minify:server", "build:assets": "deno task build:assets:js && deno task build:assets:css", "build:assets:css": "sass --no-source-map -I assets/node_modules assets/index.scss out/assets/index.css", "build:assets:css:watch": "sass --no-source-map -I assets/node_modules assets/index.scss out/assets/index.css --watch", "build:assets:js": "deno task ensure-out-exists && deno bundle --no-check --config=assets/tsconfig.json --lock=deno.lock --unstable assets/index.ts -- out/assets/index.js", "build:assets:js:watch": "deno task ensure-out-exists && deno bundle --no-check --config=assets/tsconfig.json --lock=deno.lock --unstable assets/index.ts -- out/assets/index.js", "build:ingredient-parser": "deno run --lock=deno.lock --unstable --no-check --allow-run --allow-read --allow-write=src/data/parse/ingredient/parser.js dev/build-ingredient-parser.ts", "build:server": "deno bundle --no-check --config=deno.jsonc --unstable src/main.ts -- out/server.js && deno run --allow-read --allow-write --allow-run --no-check dev/write-build-info.ts", "build:icons": "deno run --no-check --allow-read --allow-write dev/build-icons.ts", "build:icons:watch": "deno run --watch=src/tpl/templates/_components/icon.tsx --no-check --allow-read --allow-write dev/build-icons.ts", "clean": "rm -rf out/", "compress": "deno task compress:brotli && deno task compress:gzip", "compress:brotli": "cd out/assets && brotli -f -k index.min.css index.min.js", "compress:gzip": "cd out/assets && gzip -f -k index.min.css index.min.js", "copy:assets": "cp -r assets/favicons/ assets/icons.svg assets/placeholder.svg assets/sw.js out/assets", "coverage": "deno coverage --exclude=tests --unstable --lcov ./out/coverage --output=out/coverage.lcov", "coverage:html": "genhtml -o out/coverage-html out/coverage.lcov", "ensure-out-exists": "deno run --no-check --allow-read --allow-write dev/ensure-dir-exists.ts out/assets", "fmt": "deno fmt --config=deno.jsonc ./dev ./src ./tests", "fmt:check": "deno task fmt --check", "insert-example-data": "deno run --lock=deno.lock --unstable --allow-all --no-check dev/insert-example-data.ts", "lint": "deno lint --config=deno.jsonc --unstable ./dev ./src ./tests", "minify:assets": "deno task minify:assets:js && deno task minify:assets:css", "minify:assets:css": "parcel-css --minify --nesting --bundle --targets '>= 0.25%' out/assets/index.css -o out/assets/index.min.css", "minify:assets:js": "esbuild --bundle --format=esm --minify out/assets/index.js --outfile=out/assets/index.min.js", "minify:server": "esbuild --bundle --format=esm --minify out/server.js --outfile=out/server.min.js", "run:debug": "deno run --watch=deno.lock,deno.jsonc --allow-all --no-check --unstable --config=deno.jsonc src/main.ts", "run:dev": "deno task build:assets:css:watch & deno task build:assets:js:watch & deno task build:icons:watch & deno task run:debug", "test": "deno test --config=deno.jsonc --unstable --allow-read --allow-net --allow-env --allow-write --fail-fast --parallel .", "test:coverage": "deno task test --coverage=out/coverage", "test:no-check": "deno task test --no-check", "test:watch": "deno task test --watch", "update-lock-file": "deno cache --no-check --unstable --lock=deno.lock --lock-write deps.ts deps-test.ts"}}
{"cmds": {"test": "deno test --allow-read", "deploy": "rsync -avz --exclude .git --exclude deno.json . altcloud@tinyserver.club:webroot/code.strm.city/timestreams/"}}
{"version": "1.36.4", "description": "A secure runtime for JavaScript and TypeScript", "homepage": "https://deno.land", "license": "MIT", "architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v1.36.4/deno-x86_64-pc-windows-msvc.zip", "hash": "f5b5aca801e5f102876fa56b600bc8fa833f41436c68fa45875e8a9b43b188b1"}}, "bin": "deno.exe", "checkver": {"github": "https://github.com/denoland/deno"}, "autoupdate": {"architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v$version/deno-x86_64-pc-windows-msvc.zip"}}}}
{"tasks": {"ci": "deno fmt --check && deno lint && deno test", "fix": "deno fmt && deno lint && deno test && deno task run-example", "run-example": "deno run --allow-read=example --allow-write=example example/gen.ts"}}
{"fmt": {"options": {"indentWidth": 4}}, "tasks": {"help": "deno run --allow-read --allow-write main.ts help", "run": "deno run --allow-read --allow-write main.ts run examples/example.vorth", "venus": "deno run --allow-read --allow-write main.ts compile examples/example.vorth", "linux": "deno run --allow-read --allow-write main.ts compile examples/example.vorth -t linux"}}
{"tasks": {"check": "deno fmt --check && deno lint"}}
{"tasks": {"test": "deno test --allow-net --allow-env", "test:cov": "deno test -A --coverage=coverage && deno coverage ./coverage --lcov --output=coverage.lcov", "cache": "deno cache ./deps.ts"}, "fmt": {"files": {"exclude": ["*.md", "LICENSE"]}}, "lint": {"files": {"exclude": ["*.md", "LICENSE"]}}, "importMap": "import_map.json"}
{"tasks": {"day": "deno run -A run.ts"}}
{"tasks": {"start": "deno run -A --no-check --unstable --watch=routes/,components/,setups/,tailwind.css ./dev.js", "generate": "deno run -A --unstable ./scripts/generate.js", "is-completely-transparent": "deno run -A --unstable ./scripts/is-completely-transparent.js", "get-vexillologists": "deno run -A --unstable ./scripts/get-vexillologists.js", "generate-entities": "deno run -A --unstable ./scripts/generate-entities.js", "fix-svg": "deno run -A --unstable ./scripts/fix-svg.js", "svg-to-png": "deno run -A --unstable ./scripts/svg-to-png.js", "install": "deno run -A --unstable ./scripts/install.js", "fill-database": "deno run -A --unstable ./scripts/fill-database.js", "print": "deno run -A --unstable ./scripts/print.js", "find-grid": "deno run -A --unstable ./scripts/find-grid.js", "set-secrets": "deno run -A --unstable ./scripts/set-secrets.js"}, "importMap": "./import-map.json", "lint": {"rules": {"exclude": ["require-await"]}}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"imports": {"@std/": "https://deno.land/std@0.158.0/", "hono": "https://deno.land/x/hono@v3.1.2/mod.ts", "logger": "https://deno.land/x/logger@v1.0.2/logger.ts"}, "tasks": {"start": "deno run --allow-net --allow-env --allow-read --allow-write --unstable main.ts"}}
{"compilerOptions": {"experimentalDecorators": true, "emitDecoratorMetadata": true}, "fmt": {"options": {"useTabs": false, "lineWidth": 120}}, "importMap": "./imports.json"}
{"version": "1.15.0", "name": "oak_nest", "tasks": {"dev": "deno run --unstable --allow-net --allow-read --allow-write --allow-env --check example/main.ts", "dev:scheduler": "deno run --allow-net --allow-env  --unstable modules/scheduler/example/main.ts", "dev:cache": "deno run --allow-net --allow-env  --unstable --location https://www.baidu.com modules/cache/example/main.ts", "dev:redis": "deno run --allow-net --allow-env  --unstable modules/redis/example/main.ts", "dev:mysql": "deno run --allow-net --allow-env  --unstable modules/mysql/example/main.ts", "dev:postgres": "deno run --allow-net --allow-env  --unstable modules/postgres/example/main.ts", "dev:es": "deno run --allow-net --allow-env --unstable modules/elasticsearch/example/main.ts", "pm2": "pm2 start --name oak_nest example/main.ts --interpreter='deno' --interpreter-args='run --allow-net --allow-env --allow-write --allow-read --unstable'", "test": "deno test --allow-env --parallel --ignore=example --coverage=cov_profile", "cache": "deno cache --lock deno.lock --unstable --lock-write deps.ts", "coverage": "deno coverage --unstable --lcov ./cov_profile", "coverage:html": "deno task test && deno task coverage > cov.lcov && genhtml -o cov_profile/html cov.lcov", "log": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0"}, "compilerOptions": {"removeComments": true, "emitDecoratorMetadata": true, "strictPropertyInitialization": false}}
{"fmt": {"options": {"lineWidth": 120, "indentWidth": 2}}, "tasks": {"test": "deno test src", "test:mod": "deno test -A module_test/", "codegen": "deno task codegen:codec && deno task codegen:types && deno task codegen:constants", "codegen:codec": "deno run codegen/generate_codec.ts | deno fmt - > src/amqp_codec.ts", "codegen:types": "deno run codegen/generate_types.ts | deno fmt - > src/amqp_types.ts", "codegen:constants": "deno run codegen/generate_constants.ts | deno fmt - > src/amqp_constants.ts"}}
{"tasks": {"day8": "deno run --allow-read day8/main.ts", "day10": "deno run --allow-read day10/main.ts", "day12": "deno run --allow-read day12/main.ts", "day13": "deno run --allow-read day13/main.ts", "day14": "deno run --allow-read day14/main.ts"}}
{"imports": {"std/": "https://deno.land/std@0.178.0/", "@notionhq/client": "npm:@notionhq/client@2.2.3", "vhtml": "https://esm.sh/vhtml@2.2.0"}, "tasks": {"generate": "deno run --allow-net=api.notion.com --allow-env=NOTION_TOKEN,NOTION_DB --allow-read --allow-write ./src/generate.ts"}, "compilerOptions": {"jsxFactory": "h", "jsxFragmentFactory": "undefined"}}
{"tasks": {"start": "deno run -A --cert ./ca-certificate.crt --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json"}
{"compilerOptions": {"emitDecoratorMetadata": true}, "fmt": {"files": {"include": ["app", "tests"]}}, "test": {"files": {"include": ["tests/"]}}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/"]}}, "fmt": {"files": {"exclude": ["static/"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"compile": "deno compile -A --unstable --import-map=./import-map.json --output ./build/imgtools.exe src/main.ts", "run": ".\\build\\imgtools.exe", "dev": "deno run --allow-read --allow-write --allow-net --unstable src/main.ts"}, "importMap": "./import-map.json"}
{"tasks": {"dev": "deno run -A --no-check --unstable --watch ./server.tsx", "test": "deno test --allow-all", "build": "deno run -A ./build.ts", "start": "ULTRA_MODE=production deno run -A --unstable --no-remote ./server.js"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}, "fmt": {"files": {"exclude": [".ultra"]}}, "lint": {"files": {"exclude": [".ultra"]}}, "importMap": "./importMap.json"}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "serve": "DENO_DEPLOYMENT_ID='no-alive' deno run --unstable -A main.ts", "npm:add": "deno run -A https://esm.sh/v96 add", "npm:update": "deno run -A https://esm.sh/v96 update", "npm:remove": "deno run -A https://esm.sh/v96 remove"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "types": ["preact"]}}
{"compilerOptions": {"noImplicitOverride": true}, "tasks": {"run": "deno run -A --unstable --watch server.ts", "deploy": "deno run --allow-net --unstable --watch server.ts", "test": "deno run -A --unstable --watch test.ts", "cacheLib": "deno cache --reload --lock-write ./lib/deps.ts", "cacheSrv": "deno cache --reload --lock-write ./srv/deps.ts", "cacheTst": "deno cache --reload --lock-write ./test/deps.ts"}}
{"compilerOptions": {"experimentalDecorators": true, "emitDecoratorMetadata": true}, "tasks": {"bundle": "deno bundle --import-map=importMap.json ./src/app.ts bundle.js", "compile:mac:m": "deno compile --allow-all --output appMacM --target aarch64-apple-darwin ./bundle.js", "compile:mac:intel": "deno compile --allow-all --output appMacIntel --target x86_64-apple-darwin ./bundle.js", "compile:windows": "deno compile --allow-all --output appWindows --target x86_64-pc-windows-msvc ./bundle.js", "compile:linux": "deno compile --allow-all --output appLinuxGNU --target x86_64-unknown-linux-gnu ./bundle.js", "compile:all": "deno task bundle && deno task compile:mac:m && deno task compile:mac:intel && deno task compile:windows && deno task compile:linux"}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-write --allow-env=DEBUG ./client.ts", "test": "deno test --allow-net --allow-read --allow-write --allow-env=DEBUG --fail-fast ./tests/", "npm": "deno run -A ./scripts/npm.ts"}, "lint": {"rules": {"exclude": ["no-explicit-any"]}}}
{"compilerOptions": {"lib": ["deno.ns", "deno.unstable", "dom", "dom.iterable", "dom.asynciterable"]}, "importMap": "./import_map.json", "tasks": {"bench": "deno bench --unstable --no-check=remote --allow-env --allow-ffi --allow-read=. bench.ts", "deno_dom": "deno run main_dd.ts", "deno_dom:native": "deno run --unstable --allow-env --allow-ffi --allow-read --allow-write --allow-net main_ddn.ts", "jsdom": "deno run --no-check=remote --allow-env main_js.ts", "linkedom": "deno run --no-check=remote main_ld.ts", "serve:deno_dom": "deno run --allow-net server_dd.ts", "serve:jsdom": "deno run --no-check=remote --allow-env --allow-net server_js.ts", "serve:linkedom": "deno run --no-check=remote --allow-net server_ld.ts"}}
{"lock": false, "tasks": {"build": "deno run -A scripts/build-npm.ts", "format": "deno fmt", "check": "deno fmt --check && deno lint"}, "exclude": [".changeset/", "CHANGELOG.md", "npm/"], "imports": {"asserts": "https://deno.land/std@0.193.0/testing/asserts.ts", "snapshot": "https://deno.land/std@0.193.0/testing/snapshot.ts"}}
{"name": "deno-article-parser", "version": "1.0.0", "tasks": {"dev": "deno run --allow-net --allow-env --allow-read index.ts"}, "compilerOptions": {"allowJs": true, "noImplicitAny": false, "lib": ["deno.window"], "strict": true}}
{"tasks": {"start": "ENV=prod deno run --check=all --import-map=import_map.json --unstable --allow-net --allow-env --allow-read --allow-write=. ./src/app.ts", "dev": "ENV=dev deno run --check=all --import-map=import_map.json --unstable --allow-net --allow-env --allow-read --allow-write=. --watch ./src/app.ts", "update": "deno run -A https://deno.land/x/udd/main.ts import_map.json"}}
{"lint": {"files": {"exclude": []}, "rules": {"exclude": ["camelcase"]}}, "fmt": {"files": {"include": [], "exclude": []}, "options": {"lineWidth": 100, "indentWidth": 2}}}
{"tasks": {"ts-subscribers": "deno run --unstable --allow-net --allow-read --allow-env index.ts"}}
{"tasks": {"build-npm": "deno run -A scripts/build_npm.ts"}}
{"lock": false, "tasks": {"test": "deno test -A --coverage=coverage", "cov": "deno task test && deno coverage coverage --exclude=vendor --lcov > coverage/lcov.info", "cov:html": "deno task cov && genhtml -o coverage/html --ignore-errors unmapped coverage/lcov.info && open coverage/html/index.html"}, "fmt": {"exclude": ["docs", "dist", "vendor", "coverage", ".git"]}, "lint": {"exclude": ["examples", "docs", "dist", "vendor", "coverage", ".git"]}}
{"fmt": {"options": {"useTabs": true, "singleQuote": true}}, "test": {"files": {"exclude": ["bench.ts"]}}, "lint": {"rules": {"exclude": ["ban-types", "no-explicit-any"]}}, "tasks": {"bench": "deno run -A bench.ts"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "wasmbuild": "deno run -A https://deno.land/x/wasmbuild@0.14.1/main.ts", "update": "deno run -A -r https://fresh.deno.dev/update ."}, "imports": {"@/": "./", "$fresh/": "https://deno.land/x/fresh@1.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "$std/": "https://deno.land/std@0.197.0/"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ --unstable dev.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.2.0/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.1.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/"}}
{"tasks": {"fixture": "deno run -A --watch=static/,routes/ ./tests/fixture/dev.ts"}, "importMap": "./tests/fixture/import_map.json"}
{"tasks": {"start": "deno run --allow-net --allow-env=PORT server.ts"}}
{"tasks": {"prepare": "deno task cache && deno task bundle", "cache": "deno cache --import-map=denops/bufpreview/lib/filetype/markdown/client/import_map.json --node-modules-dir denops/bufpreview/lib/filetype/markdown/client/markdown.js", "bundle": "deno run --allow-run --allow-read --allow-env --node-modules-dir denops/bufpreview/lib/filetype/markdown/client/esbuild.js"}}
{"importMap": "import_map.json", "tasks": {"build": "silverbullet plug:compile --importmap import_map.json twitter.plug.yaml", "watch": "silverbullet plug:compile -w --importmap import_map.json twitter.plug.yaml"}}
{"importMap": "import_map.json", "tasks": {"build": "silverbullet plug:compile  --info --importmap import_map.json ghost.plug.yaml", "watch": "silverbullet plug:compile -w --importmap import_map.json ghost.plug.yaml"}}
{"tasks": {"test": "deno test --allow-net main_test.ts"}}
{"tasks": {"run": "deno run -A main.ts"}, "lint": {"rules": {"exclude": ["no-explicit-any"]}}}
{"tasks": {"check": "deno task fix && deno task lint && deno task test && deno task test:docs && deno task typecheck && CI=true deno task lock", "fix": "deno task fix:format", "fix:format": "dprint fmt", "lint": "deno task lint:ts && deno task lint:format", "lint:ts": "deno lint", "lint:format": "dprint check", "lock:update": "deno run --allow-run=deno --allow-read scripts/cache.ts", "lock": "deno run --allow-run=deno --allow-env=CI --allow-read scripts/cache.ts --reload", "publish": "deno run -A scripts/publish.ts", "test:coverage": "deno test --coverage=coverage --unstable -A", "test:docs": "deno run -A ./scripts/test_docs.ts", "test:snapshot": "deno test --unstable -A -- -u", "test:watch": "deno test --unstable -A --watch", "test": "deno test --unstable -A", "typecheck": "deno run --unstable -A scripts/typecheck.ts", "update:deps": "deno run --allow-net --allow-read --allow-write scripts/update.ts", "update:dprint": "dprint config update", "update": "deno task update:dprint && deno task update:deps", "version": "deno run -A ./scripts/version.ts"}, "compilerOptions": {"noUncheckedIndexedAccess": true}, "lint": {"files": {"include": ["./"], "exclude": ["**/node_modules", "**/*-lock.json", "**/fixtures", "**/snapshots"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo", "camelcase", "default-param-last", "eqeqeq", "no-await-in-loop", "no-eval", "no-sparse-arrays", "no-throw-literal", "single-var-declarator", "triple-slash-reference"], "exclude": ["ban-types"]}}}
{"tasks": {"test": "deno test --unstable --allow-env --allow-read"}, "fmt": {"options": {"proseWrap": "preserve", "singleQuote": true, "useTabs": true}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.3.0/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.1.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "smtp": "https://deno.land/x/denomailer@1.3.0/mod.ts"}}
{"lock": false, "tasks": {"test": "deno test --unstable -A --doc --parallel --shuffle", "lint": "deno lint --unstable", "format-check": "deno fmt --check $(find . -name '*.ts')", "check": "deno task lint && deno task format-check && deno check --unstable $(find . -name '*.ts')", "test-install": "deno run -A https://deno.land/x/cache_injector/injector.ts ./ https://deno.land/x/deno_interceptor@9.9.9", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"fmt": {"files": {"exclude": ["action/node_modules/"]}}, "lint": {"files": {"exclude": ["action/node_modules/"]}}, "tasks": {"test": "deno test -A --unstable tests/ src/", "build-action": "deno bundle ./src/utils/mod.ts > ./action/deps.js"}}
{"tasks": {"build": "pandoc -f markdown -t html --section-divs --css product-list-docs.css --template=template.html -o product-list-docs.html product-list-docs.md"}}
{"tasks": {"repl": "deno repl --unstable --no-check --eval-file=./dir1/mod1.ts", "repl:quack": "deno repl --unstable --no-check --eval='await import(\"./dir1/mod1.ts\")'"}}
{"tasks": {"dev": "deno run -A main.ts dev"}}
{"tasks": {"dev": "deno run --watch stream.ts"}}
{"tasks": {"dev": "deno run --watch --allow-hrtime src/main.ts"}}
{"tasks": {"build": "deno bundle mod.ts dist/mod.js"}}
{"importMap": "import_map.json", "lint": {"rules": {"exclude": ["no-explicit-any", "require-await"]}}, "fmt": {"files": {"exclude": ["README.md"]}}}
{"compilerOptions": {"strict": true}, "lint": {"files": {"include": ["src/"]}, "rules": {"tags": ["recommended"]}}, "fmt": {"files": {"include": ["src/"]}, "options": {"useTabs": false, "lineWidth": 100, "indentWidth": 4, "singleQuote": false}}}
{"lint": {"files": {"include": ["./src"]}}, "fmt": {"options": {"useTabs": true, "lineWidth": 70, "singleQuote": true}}, "tasks": {"fix": "deno fmt && deno lint", "test": "deno test --allow-net=graphql.anilist.co"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "bundle_examples": "deno run -A scripts/bundle_examples.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "fmt": {"files": {"exclude": ["./static"]}}, "lint": {"files": {"exclude": ["./static"]}}}
{"__why_two_deno_config_files?__": "I'd prefer to use a single config/import map for the monorepo but Fresh always expects 'deno.json' to be in this directory...", "importMap": "../import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "xeact", "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable"]}, "importMap": "./import_map.json"}
{"tasks": {"setup": "deno run -A ../cli/pb/entrypoint.ts gen ts --entry-path data -o data/gen", "bench": "deno bench --unstable --allow-read --allow-env --no-check"}}
{"lock": false, "tasks": {"dev": "deno run -A --unstable --watch ./main.ts", "debug": "deno run -A --unstable --inspect-brk ./main.ts", "start": "deno run -A --unstable ./main.ts"}}
{"fmt": {"files": {"exclude": ["docs/", "AutograderTools.xml"]}}}
{"tasks": {"dev": "deno run --allow-net --watch main.ts", "run": "deno run --allow-net --allow-env --allow-read --allow-write --allow-run main.ts", "check": "deno check main.ts", "start": "deno run --allow-net --allow-env --allow-read --allow-write --allow-run main.ts start", "compile": "echo Please implement in deno tasks"}}
{"tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:preact"}, "imports": {"lume/": "https://deno.land/x/lume@v1.17.5/"}}
{"compilerOptions": {"allowJs": true, "lib": ["dom", "dom.iterable", "deno.window"], "strict": true, "include": ["www/**/*", "./bin/**/*"]}, "importMap": "deno.imports.json", "fmt": {"files": {"exclude": ["public", "www/js/dist", "www/css/dist"]}, "options": {"useTabs": false, "lineWidth": 100, "indentWidth": 2, "singleQuote": true}}, "lint": {"files": {"exclude": ["public", "www/js/dist", "www/css/dist"]}, "rules": {"tags": ["recommended"]}}, "tasks": {"bin:esbuild": "deno run --allow-read --allow-write --allow-net --allow-run --allow-env='ESBUILD_BINARY_PATH,XDG_CACHE_HOME,HOME' .bin/esbuild.ts", "bin:rollup": "deno run --allow-read --allow-write --allow-net --allow-env='NO_COLOR,FORCE_COLOR,TERM,CI' --allow-sys='uid' .bin/rollup.ts", "bin:sass": "deno run --allow-read --allow-write --allow-env='SASS_PATH' .bin/sass.ts", "bin:serve": "deno run --allow-net --allow-run --allow-read .bin/serve.ts", "bin:whistler": "deno run --allow-all .bin/filewhistler.ts", "build": "deno task clean && deno task setup && deno task bin:rollup", "build:ssg": "deno task build:ssg:blog", "build:ssg:blog": "deno run --allow-all .bin/ssg.ts --template www/html/blog/template.html", "clean": "deno task clean:dist && deno task clean:public", "clean:dist": "find . -name 'dist' -type d -prune -exec rm -rf '{}' +", "clean:public": "rm -rf public", "setup": "deno task bin:sass --target www/css/pages/ --rootdir www/css && deno task bin:esbuild --target www/js && deno task build:ssg", "start": "deno task setup && deno task start:hmr", "start:hmr": "deno task start:hmr:server & deno task start:hmr:whistler", "start:hmr:server": "deno task bin:serve --target www", "start:hmr:whistler": "deno task bin:whistler --target www", "preview": "deno run --allow-net --allow-run --allow-read .bin/serve.ts --target public"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "typecheck": "deno check --remote main.ts dev.ts", "npm:add": "deno run -A https://esm.sh/v99 add", "npm:update": "deno run -A https://esm.sh/v99 update", "npm:remove": "deno run -A https://esm.sh/v99 remove"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"download": "deno task mypy_download && deno task pyproject_download", "mypy_download": "deno run -A scripts/mypy.ts download", "pyproject_download": "deno run -A scripts/pyproject.ts download", "check": "deno task mypy_check && deno task pyproject_check", "mypy_check": "deno run -A scripts/mypy.ts check", "pyproject_check": "deno run -A scripts/pyproject.ts check", "generate": "deno run -A scripts/pyproject.ts generate"}}
{"lock": false, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "types": ["./types.d.ts"]}}
{"tasks": {"test": "deno test --watch"}, "fmt": {"semiColons": false, "lineWidth": 100}, "compilerOptions": {"exactOptionalPropertyTypes": true}}
{"importMap": "import.map.json", "tasks": {"generate": "deno run --allow-env --allow-read --allow-write=./generated --check --reload=npm:@iconify/json --lock-write tasks/generate.ts", "list": "deno run --allow-env --allow-read --allow-write=./README.md --check --reload=npm:@iconify/json --lock-write tasks/list.ts && deno fmt README.md", "test": "deno test --allow-read --allow-env --check", "publish": "deno run --allow-read --allow-env --allow-run --allow-write tasks/publish.ts"}, "fmt": {"files": {"exclude": ["./generated/", "./benckmarks/generated/"]}, "options": {"singleQuote": true, "indentWidth": 2, "useTabs": false}}, "lint": {"files": {"exclude": ["./generated/"]}}}
{"tasks": {"check": "deno fmt && deno lint && deno check mod.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"dev": "deno run --watch --allow-all --reload=https://raw.githubusercontent.com --lock=deno.lock --lock-write local.ts", "run": "deno run --allow-all --reload=https://raw.githubusercontent.com --lock=deno.lock --lock-write main.ts", "test": "deno test tests --allow-all --reload=https://raw.githubusercontent.com --quiet --lock=deno.lock --lock-write", "push_image": "./scripts/push_to_ecr.sh", "deploy_testbed": "helm uninstall pac-runtime && helm install pac-runtime ./helm -f ./helm/values.secret.yaml"}, "fmt": {"indentWidth": 4, "singleQuote": true, "semiColons": false, "lineWidth": 120, "files": {"exclude": ["*.yaml"]}}, "lint": {"rules": {"exclude": ["require-await", "no-explicit-any"]}}}
{"importMap": "import_map.json"}
{"imports": {"/": "./", "./": "./", "nonstd/": "https://raw.githubusercontent.com/s-i-e-v-e/nonstd/b3483070677dc86c7274b28541f4d2e4c124b76c/src/ts/"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "fmt": {"exclude": ["LICENSE"]}}
{"tasks": {"run": "deno run --allow-read --allow-write --allow-run --allow-env --config deno.json", "format": "deno fmt --config deno.json"}, "fmt": {"options": {"useTabs": true, "lineWidth": 100, "indentWidth": 4}}}
{"tasks": {"test": "deno test --allow-all"}, "fmt": {"lineWidth": 120}}
{"tasks": {"start:dev": "deno run -A --watch=static/,routes/ dev.ts", "start": "deno run -A --watch=static/,routes/ main.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run --allow-net index.tsx"}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "jsxFactory": "h", "jsxFragmentFactory": "Fragment"}}
{"imports": {"/": "./", "./": "./", "lucid": "https://deno.land/x/lucid@0.10.6/mod.ts", "lucid/": "https://deno.land/x/lucid@0.10.6/", "std/": "https://deno.land/std@0.145.0/", "distributed_set": "./plutus.ts", "src": "./src"}, "lint": {"include": ["src/"], "exclude": [".vscode"], "rules": {"tags": ["recommended", "strict"], "include": ["ban-untagged-todo", "no-unused-vars"], "exclude": []}}, "fmt": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "semiColons": false, "singleQuote": false, "proseWrap": "never", "include": ["./"]}, "tasks": {"build": "aiken build -k && deno run -A https://deno.land/x/lucid@0.10.6/blueprint.ts && deno fmt", "run": "deno run -A ./src/main.ts", "test": "deno test -A ./src/test.ts"}}
{"tasks": {"ci": "deno fmt --check && deno lint && deno test", "fix": "deno fmt && deno lint && deno test", "cov": "deno test --coverage=.cov && deno coverage .cov && rm -rf .cov"}}
{"tasks": {"dev": "deno run -A --watch ./server.tsx", "build": "deno run -A ./build.ts"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom"]}, "importMap": "./importMap.json"}
{"compilerOptions": {}, "tasks": {"run": "deno run -A --unstable --import-map=./import_map.json app.ts", "init": "deno run -A --unstable --import-map=./import_map.json init.ts", "build": "deno compile -A --unstable --import-map=./import_map.json app.ts && mv app.exe dist", "clean": "rm -rf dist"}}
{"lint": {"exclude": ["build"], "rules": {"tags": ["recommended"]}}, "fmt": {"exclude": ["build", "packages/**/__snapshots__"], "semiColons": false, "singleQuote": true, "proseWrap": "preserve"}}
{"imports": {"./": "./"}, "compilerOptions": {"target": "ESNext", "module": "commonjs", "noEmit": true, "esModuleInterop": true, "forceConsistentCasingInFileNames": true, "strict": true, "noImplicitAny": true, "strictNullChecks": true, "strictFunctionTypes": true, "strictBindCallApply": true, "strictPropertyInitialization": true, "noImplicitThis": true, "useUnknownInCatchVariables": true, "alwaysStrict": true, "exactOptionalPropertyTypes": true, "noImplicitReturns": true, "noFallthroughCasesInSwitch": true, "noUncheckedIndexedAccess": true, "noImplicitOverride": true, "allowUnusedLabels": true, "allowUnreachableCode": true, "skipLibCheck": true}, "lint": {"files": {"include": ["/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["/"]}, "options": {"useTabs": true, "lineWidth": 80, "singleQuote": false, "proseWrap": "preserve"}}}
{"tasks": {"lume": "deno run --unstable -A build.ts", "build": "deno task lume", "serve": "deno task lume -s"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:preact"}, "imports": {"lume/": "https://deno.land/x/lume@v1.17.0/"}}
{"tasks": {"tests": "deno run -A main.ts"}}
{"importMap": "./import_map.json", "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s", "generate": "deno run --allow-write=./posts ./scripts/gen_post.js"}}
{"tasks": {"dev": "deno run main.ts"}}
{"tasks": {"start": "deno run -A --watch main.ts"}, "lint": {"rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}}
{"lint": {"rules": {"exclude": ["no-explicit-any"]}}, "compilerOptions": {"target": "esnext", "lib": ["esnext", "dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable"]}}
{"tasks": {"bld": "deno run --allow-read=templates --allow-write=static unocss.ts", "dev": "deno run --allow-read=templates --allow-write=static --watch=templates unocss.ts", "min": "deno run --allow-read=templates --allow-write=static unocss.ts --minify"}}
{"version": "3.0.0", "tasks": {"dev": "deno run --watch main.ts"}}
{"tasks": {"dev": "deno run --watch main.ts", "test": "deno test --watch"}}
{"importMap": "./import_map.json", "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:react"}}
{"tasks": {"rebuild-deps": "deno cache --lock-write -r ./deps.ts ./test.ts", "cache": "deno cache --lock -r ./deps.ts ./test.ts", "test": "deno test --allow-env --check"}}
{"tasks": {"main": "deno run .\\main.ts", "test": "deno run .\\test.ts", "watch:test": "denon run .\\test.ts", "welcome": "deno run https://deno.land/std/examples/welcome.ts", "sandbox": "deno run --allow-read --allow-write --allow-net .\\sandbox.ts", "files": "deno run --allow-read --allow-write files.ts", "fetch": "deno run --allow-net fetch.ts", "std": "deno run --allow-read --allow-write --allow-net std.ts", "third_parties": "deno run third_parties.ts", "docker:up": "docker compose up", "docker:down": "docker compose down", "docker:stop": "docker compose stop", "docker:start": "docker compose start", "docker:logs": "docker compose logs -f", "docker:deno": "docker compose exec -it deno /bin/bash", "docker:rmi:all": "docker rmi -f $(docker images -aq)", "docker:rm:all": "docker rm -vf $(docker ps -aq)", "docker:volume:prune": "docker volume prune", "http_request": "deno run --allow-all --unstable --lock=lock.json --cached-only --import-map=import_map.json .\\http_request.ts https://www.google.com", "read_file": "deno run --allow-all --unstable --lock=lock.json --cached-only --import-map=import_map.json .\\read_file.ts 'C:\\Windows\\System32\\Drivers\\etc\\hosts'", "http_server": "deno run --allow-net --allow-write --lock=lock.json --cached-only http_server.ts", "deno_files": "deno run -A --lock=lock.json --cached-only deno_files.ts", "import_json": "deno run -A --lock=lock.json --cached-only import_json.ts", "parse_json": "deno run -A --lock=lock.json --cached-only parse_json.ts", "npm_express": "deno run -A --lock=lock.json --cached-only npm_express.ts", "cow_say": "deno run --allow-env --allow-read npm:cowsay@1.5.0 Hello there!", "local_npm": "deno run -A --node-modules-dir .\\local_npm.ts", "ffi": "deno run --allow-ffi --unstable .\\ffi.ts", "cache": "deno cache --lock=lock.json --lock-write --import-map=import_map.json .\\deps.ts", "reload": "deno cache --reload --lock=lock.json --import-map=import_map.json .\\deps.ts", "shell": "deno run --allow-all .\\Drake.ts shell"}, "lint": {"rules": {"exclude": ["no-inferrable-types"]}}, "fmt": {"lineWidth": 80, "semiColons": true, "singleQuote": true}}
{"lock": false, "tasks": {"check": "deno cache --check=all src/mod.ts", "backport": "deno run --no-prompt --allow-read=. --allow-write=. https://deno.land/x/deno2node@v1.7.1/src/cli.ts tsconfig.json", "dev": "deno fmt && deno lint && deno task check"}, "fmt": {"indentWidth": 4, "proseWrap": "preserve", "exclude": ["./node_modules/", "./out/", "./package-lock.json"]}, "lint": {"exclude": ["./node_modules/", "./out/", "./package-lock.json"]}}
{"name": "deno-oembed-parser", "version": "1.0.0", "tasks": {"dev": "deno run --allow-net --allow-env --allow-read index.ts"}, "compilerOptions": {"allowJs": true, "noImplicitAny": false, "lib": ["deno.window"], "strict": true}}
{"tasks": {"compile": "deno run --allow-env --allow-read --allow-write main.ts compile --src src --dst dst", "test": "deno test -A --parallel src", "test:watch": "deno test -A --parallel src --watch", "pre": "deno fmt && deno lint"}}
{"imports": {"std/": "https://deno.land/std@0.178.0/", "x/": "https://deno.land/x/"}, "fmt": {"options": {"indentWidth": 2, "useTabs": true, "singleQuote": true, "semiColons": false, "lineWidth": 100}}, "lock": true, "tasks": {}, "lint": {"rules": {"exclude": ["no-explicit-any"]}}, "importMap": "./vendor/import_map.json"}
{"fmt": {"options": {"indentWidth": 2, "singleQuote": true}}, "tasks": {"pre-bundle": "rm -rf ./dist && mkdir ./dist", "bundle": "deno task pre-bundle && deno bundle ./src/index.ts > ./dist/server.js", "pre-compile": "rm -rf ./bin && mkdir ./bin && deno task bundle", "start:dev": "deno run --allow-net --allow-read=$PWD --allow-env --watch ./src/index.ts", "start:prod": "deno task bundle && deno run --allow-net ./dist/server.js", "compile:linux": "deno compile --allow-net --allow-read=$PWD --allow-env --output=./bin/server.bin --target=x86_64-unknown-linux-gnu ./dist/server.js", "compile:windows": "deno compile --allow-net --allow-read=$PWD --allow-env --output=./bin/server.exe --target=x86_64-pc-windows-msvc ./dist/server.js", "compile": "deno task pre-compile && deno task compile:linux && deno task compile:windows", "test": "deno test --allow-all --coverage=cov/"}}
{"fmt": {"options": {"useTabs": false, "lineWidth": 160, "indentWidth": 2, "singleQuote": true}}}
{"tasks": {"dev": "deno run -A --no-check --watch ./server.tsx", "build": "deno run -A ./build.ts", "start": "ULTRA_MODE=production deno run -A --no-remote ./server.tsx"}, "compilerOptions": {"jsx": "react-jsxdev", "jsxImportSource": "react", "lib": ["deno.ns", "dom", "deno.window"]}, "importMap": "./importMap.json"}
{"lock": false, "compilerOptions": {"emitDecoratorMetadata": true}, "imports": {"@vkno/errantly": "./@vkno/errantly/source/index.mts", "@vkno/fsext": "./@vkno/fsext/source/index.mts", "@vkno/typed": "./@vkno/typed/source/index.mts", "deps": "./deps.mts", "dev_deps": "./dev_deps.mts"}, "test": {"include": ["**/source/**/*.spec.mts"]}}
{"lock": false, "tasks": {"start": "deno run --unstable -A --watch=static/,routes/ dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update .", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "$std/": "https://deno.land/std@0.193.0/", "$/": "./", "@twind/core": "https://esm.sh/@twind/core@1.1.3", "@twind/preset-tailwind": "https://esm.sh/@twind/preset-tailwind@1.1.4", "@twind/preset-autoprefix": "https://esm.sh/@twind/preset-autoprefix@1.0.7", "@twind/preset-typography": "https://esm.sh/@twind/preset-typography@1.0.7"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "fmt": {"exclude": ["_fresh"]}}
{"tasks": {"fmt": "deno fmt src/"}, "fmt": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "semiColons": false, "singleQuote": true, "proseWrap": "preserve", "include": ["src/"], "exclude": ["src/testdata/", "data/fixtures/**/*.ts"]}}
{"$schema": "https://deno.land/x/deno@v1.29.0/cli/schemas/config-file.v1.json", "importMap": "import_map.json", "tasks": {"dev": "denon run --allow-net --allow-read --allow-write index.ts"}, "fmt": {"options": {"useTabs": true, "lineWidth": 100, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}}}
{"tasks": {"update": "deno run --allow-net --allow-read --allow-write  readfeed.js"}}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable"]}, "fmt": {"options": {"useTabs": true, "singleQuote": true}}}
{"imports": {"lucia-auth": "npm:lucia-auth"}, "tasks": {"dev": "deno run -A --unstable npm:astro dev", "types": "mkdir -p src/types; deno types --unstable > src/types/lib.deno.d.ts", "patch": "patch node_modules/.deno/undici@5.22.1/node_modules/undici/lib/fetch/index.js undici_5.22.1.patch", "build": "deno run --allow-read --allow-env --allow-sys --allow-net --allow-write --allow-run --unstable npm:astro build", "deploy": "(cd dist/; deployctl deploy --prod --project=lucia-deno-kv-demo server/entry.mjs)", "preview": "deno run --allow-net --allow-read --allow-env --unstable ./dist/server/entry.mjs"}}
{"fmt": {"options": {"indentWidth": 2, "lineWidth": 120, "singleQuote": true, "useTabs": false}}}
{"tasks": {"build": "pandoc -f markdown -t html --css paste-checklist-docs.css --template=template.html -o paste-checklist-docs.html paste-checklist-docs.md"}}
{"tasks": {"start": "deno run -A ./main.ts", "dev": "deno run -A --watch ./main.ts"}}
{"lock": false, "importMap": "./import_map.json"}
{"tasks": {"start": "deno run -A --watch --no-check main.ts"}, "importMap": "./import_map.json"}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "compilerOptions": {"noImplicitAny": false, "types": ["./mod.d.ts"], "jsxFactory": "window.createElement", "jsxFragmentFactory": "window.Fragment"}, "lint": {"include": ["src/"], "exclude": ["src/old/"], "rules": {"tags": ["recommended"], "include": ["eqeqeq", "no-await-in-loop"], "exclude": ["no-explicit-any"]}}, "imports": {"bot": "./src/bot.ts", "log": "./src/log.ts", "jsx": "./src/jsx/mod.ts", "modules": "./src/modules/mod.ts", "std:bytes": "https://deno.land/std@0.192.0/fmt/bytes.ts", "std:duration": "https://deno.land/std@0.192.0/fmt/duration.ts", "std:path": "https://deno.land/std@0.192.0/path/mod.ts", "discordeno": "npm:@discordeno/bot@19.0.0-next.3445211", "genius": "npm:genius-lyrics-api", "commonTags": "npm:common-tags@1.8.2", "fuse": "https://esm.sh/fuse.js@6.6.2", "mathjs": "npm:mathjs@11.8.1", "progressbar": "npm:string-progressbar@1.0.4", "temporal": "npm:@js-temporal/polyfill@0.4.4", "wtf_wiki": "https://esm.sh/wtf_wikipedia@10.1.5", "axiod": "https://deno.land/x/axiod@0.26.2/mod.ts", "axiodInterfaces": "https://deno.land/x/axiod@0.26.2/interfaces.ts", "canvas": "https://deno.land/x/canvas@v1.4.1/mod.ts", "colorConvert": "https://deno.land/x/color@v0.3.0/mod.ts", "dom": "https://deno.land/x/deno_dom@v0.1.38/deno-dom-wasm.ts", "exif": "https://deno.land/x/deno_exif@0.0.3/mod.ts", "googleTranslate": "https://deno.land/x/gtr@v0.0.1/mod.ts", "otpauth": "https://deno.land/x/otpauth@v9.1.3/dist/otpauth.esm.js", "puppeteer": "https://deno.land/x/puppeteer@16.2.0/mod.ts", "time": "https://deno.land/x/time.ts@v2.0.1/mod.ts"}}
{"importMap": "import_map.json", "lint": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "always"}}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "options": {"useTabs": true, "lineWidth": 80, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}}}
{"tasks": {"dev": "deno run -A --unstable main.jsx"}}
{"tasks": {"dev": "deno task --cwd src dev", "prod": "deno task --cwd src prod", "docs": "mdbook serve docs", "docs:build": "mdbook build docs", "news": "deno task --cwd scripts news", "stats": "deno task --cwd scripts stats"}, "lint": {"exclude": ["docs"]}, "fmt": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve", "exclude": ["docs/book", "src/data"]}, "importMap": "./import_map.json"}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "importMap": "./import_map.json", "lint": {"files": {"include": ["./src/"], "exclude": []}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["./src/"], "exclude": []}, "options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}, "tasks": {"update-cache": "deno cache --reload --lock=lock.json --lock-write ./src/index.ts", "lint": "deno lint && deno fmt --check", "fmt": "deno fmt", "update": "deno run --allow-read=./ --allow-net --allow-write=./ https://deno.land/x/deno_outdated@0.2.4/cli.ts --ignore README.md CHANGELOG.md CONTRIBUTING.md"}}
{"lock": false, "tasks": {"start": "deno run -A --unstable --watch=static/,routes/ dev.ts", "start-prod": "deno run -A --unstable main.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"dev": "deno run -A --unstable --watch=config.json,.env source/server.ts --port=9000 --sync", "serve": "deno run --allow-env --allow-read=. --allow-run --allow-net --allow-write=repo --unstable source/server.ts"}, "imports": {"std/": "https://deno.land/std@0.190.0/", "superstruct": "npm:superstruct@^1.0.3"}, "fmt": {"singleQuote": true, "semiColons": false}}
{"tasks": {"start": "deno task bundle && deno run -A --unstable --watch=tailwind.css,sections/,functions/,loaders/,actions/,workflows/,accounts/,.env dev.ts", "gen": "deno run -A dev.ts --gen-only", "component": "deno eval 'import \"deco/scripts/component.ts\"'", "release": "deno eval 'import \"deco/scripts/release.ts\"'", "update": "deno eval 'import \"deco/scripts/update.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts", "install": "deno eval 'import \"deco/scripts/apps/install.ts\"'", "uninstall": "deno eval 'import \"deco/scripts/apps/uninstall.ts\"'", "bundle": "deno eval 'import \"deco/scripts/apps/bundle.ts\"' deco-sites/storefront"}, "githooks": {"pre-commit": "check"}, "exclude": ["node_modules", "static/", "README.md"], "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "nodeModulesDir": true, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run --allow-net=:8000 --watch main.ts"}}
{"tasks": {"start": "deno run --allow-read --allow-write=. --allow-net --allow-env --allow-run --unstable --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "lock": false}
{"tasks": {"update": "deno run --allow-net --allow-read --allow-write ./main.ts && deno fmt ./docs/data.json"}, "imports": {"deno-dom-wasm": "https://deno.land/x/deno_dom@v0.1.38/deno-dom-wasm.ts"}}
{"bench": {"files": {"include": ["./benches/comparison.ts"]}}, "test": {"files": {"include": ["./test.ts"]}}}
{"tasks": {"test": "deno test", "dev": "deno run --watch main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "https://esm.sh/react@18.2.0"}, "importMap": "./import_map.json"}
{"tasks": {"dev": "pyro dev", "build": "pyro build"}}
{"lock": false, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update .", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.4.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "$std/": "https://deno.land/std@0.193.0/", "langchain": "https://esm.sh/langchain", "langchain/": "https://esm.sh/langchain/", "downshift/preact": "https://esm.sh/downshift@8.1.0/preact?alias=preact:preact/compat&external=preact"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"test": "deno test --check --unstable --allow-all", "serve": "deno run --check -A server.ts", "bundle": "deno bundle --check static/src/index.ts > static/dist/index.js"}, "compilerOptions": {"lib": ["esnext", "dom", "dom.iterable", "deno.ns"], "strict": true, "useUnknownInCatchVariables": true, "verbatimModuleSyntax": true, "noImplicitOverride": false, "checkJs": true}}
{"compilerOptions": {"strict": true}, "fmt": {"files": {"include": ["src", "examples", "scripts"]}, "options": {"singleQuote": true}}, "lint": {"files": {"include": ["src"]}, "rules": {"tags": ["recommended"], "include": [], "exclude": []}}}
{"compilerOptions": {}}
{"imports": {"@/": "./src/", "deno/": "https://deno.land/std@0.174.0/", "sqlite/": "https://deno.land/x/sqlite@v3.7.0/"}}
{"tasks": {"start": "deno run --allow-all src/index.ts"}, "imports": {"$std/": "https://deno.land/std/", "fp-ts/": "npm:/fp-ts/"}}
{"tasks": {"build": "tsc -p ./src/"}, "lint": {"files": {"include": ["./src"]}, "rules": {"tags": ["recommended"], "include": [], "exclude": ["require-await"]}}, "fmt": {"files": {"include": ["./src"]}, "options": {"useTabs": true, "indentWidth": 4, "lineWidth": 160, "singleQuote": true}}}
{"tasks": {"start": "deno run -A --watch=static/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/"]}}, "fmt": {"files": {"exclude": ["static/"]}}, "importMap": "./vendor/import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"importMap": "./import_map.json", "compilerOptions": {"lib": ["deno.window", "esnext"], "allowJs": false, "noFallthroughCasesInSwitch": true, "noImplicitReturns": true, "noImplicitAny": false}}
{"compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "noImplicitOverride": true, "noImplicitReturns": true, "noUncheckedIndexedAccess": true, "strict": true}, "imports": {"async/": "https://deno.land/std@0.200.0/async/", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "@vitalets/google-translate-api": "https://esm.sh/@vitalets/google-translate-api@8.0.0/", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "classnames": "https://esm.sh/classnames@2.3.1", "deno_dom": "https://deno.land/x/deno_dom@v0.1.38/deno-dom-wasm.ts", "dotenv": "https://deno.land/std@0.200.0/dotenv/mod.ts", "preact": "https://esm.sh/preact@10.15.1", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "preact/": "https://esm.sh/preact@10.15.1/", "zod": "https://deno.land/x/zod@v3.22.2/mod.ts"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "tasks": {"esm:add": "deno run -A https://esm.sh/v129 add", "esm:remove": "deno run -A https://esm.sh/v129 remove", "esm:update": "deno run -A https://esm.sh/v129 update", "sass": "sass static/style.scss:static/style.css --watch", "start": "deno run -A --watch=static/,routes/ --unstable dev.ts", "upgrade": "deno run -A -r https://fresh.deno.dev/update .", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "fmt": {"exclude": ["_fresh"]}}
{"tasks": {"run": "deno run --allow-write --allow-read --allow-net=api.spotify.com ./main.ts", "compile": "deno compile --allow-write --allow-read --allow-net=api.spotify.com ./main.ts"}, "importMap": "./import_map.json"}
{"tasks": {"start": "deno run -A dev.ts & deno run -A --watch=src/ watcher.ts"}, "importMap": "./import_map.json"}
{"tasks": {"start": "deno run -A --allow-write --watch=static/,routes/ dev.ts", "esm:add": "deno run -A https://esm.sh/v104 add", "esm:update": "deno run -A https://esm.sh/v104 update", "esm:remove": "deno run -A https://esm.sh/v104 remove"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"lock": false, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update ."}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "$std/": "https://deno.land/std@0.193.0/"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --allow-env --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"dev": "deno task codegen && deno task server:development", "start": "deno task server:production", "cache": "deno cache --reload server.ts", "vendor": "importMap=importMap.json deno run -A --unstable https://deno.land/x/ultra@v1.0.1/vendor.ts", "server:development": "mode=dev deno run -A --location=http://localhost:8000 --unstable --no-check server.ts", "server:production": "deno run -A --location=http://localhost:8000 --unstable --no-check server.ts", "codegen": "./node_modules/.bin/graphql-codegen --config graphql.config.ts", "db:migrate": "deno run -A --no-check src/db/migrate.ts"}, "importMap": "importMap.json", "compilerOptions": {"lib": ["deno.window", "es2020", "esnext", "dom", "esnext.asynciterable"], "allowJs": true, "allowUnreachableCode": false, "allowUnusedLabels": false, "checkJs": false, "emitDecoratorMetadata": true, "experimentalDecorators": true, "keyofStringsOnly": false, "noFallthroughCasesInSwitch": true, "noImplicitAny": true, "noImplicitOverride": true, "noImplicitReturns": false, "noImplicitThis": true, "noImplicitUseStrict": false, "noStrictGenericChecks": false, "noUncheckedIndexedAccess": true, "noUnusedLocals": true, "noUnusedParameters": true, "strict": true, "strictBindCallApply": true, "strictFunctionTypes": true, "strictNullChecks": true, "strictPropertyInitialization": true}, "lint": {"files": {"include": ["./bin", "./src"]}, "rules": {"tags": ["recommended"]}}, "fmt": {"files": {"include": ["./bin", "./src"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": true, "proseWrap": "preserve"}}}
{"lock": false, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update ."}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"mongo": "https://deno.land/x/mongo@v0.30.1/mod.ts", "dotenv": "https://deno.land/x/dotenv@v3.2.0/mod.ts", "$fresh/": "https://deno.land/x/fresh@1.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3"}}
{"importMap": "import_map.json", "tasks": {"lume": "deno eval \"import 'lume/task.ts'\" --", "build": "deno task lume", "serve": "deno task lume -s"}}
{"imports": {"std/": "https://deno.land/std@0.182.0/", "copy_paste/": "https://deno.land/x/copy_paste@v1.1.3/"}, "tasks": {"run": "deno run --allow-net --allow-read --allow-env --allow-write --allow-run --unstable src/index.ts"}, "fmt": {"files": {"include": ["src/", "deno.json", "bundle.ts"]}, "options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": true}}}
{"compilerOptions": {"lib": ["deno.ns", "deno.window", "dom", "dom.iterable"], "types": ["./types.ts"]}, "fmt": {"files": {"exclude": [".vscode"]}}, "lint": {"rules": {"exclude": ["no-explicit-any", "no-bad-types", "no-namespace", "ban-types"]}}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "tasks": {"test": "deno test --allow-read=test-vectors"}, "lint": {"include": ["src/"], "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["ban-types"]}}}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}, "importMap": "./import_map.json"}
{"tasks": {"run": "deno run --allow-all src/js65.ts", "djs": "deno compile --allow-all src/js65.ts -o build/djs65", "qjs": "deno run --allow-all bundle.ts", "qjsbuild": "deno task qjs && quickjs/bin/qjsc -e -o ./build/qjs65.c ./src/qjs.js && gcc -O3 -D_GNU_SOURCE -Iquickjs/include/quickjs/ -o ./build/js65 ./build/qjs65.c -static -s -Lquickjs/lib/quickjs/ -lquickjs -lm -ldl -lpthread", "qjsrun": "deno task qjsbuild && build/js65"}, "imports": {"/": "./", "./": "./", "std/": "https://deno.land/std@0.198.0/", "esbuild": "https://deno.land/x/esbuild@v0.17.12/mod.js", "esbuild_deno_loader": "https://deno.land/x/esbuild_deno_loader@0.8.1/mod.ts", "chai": "npm:chai@4.3.7", "chai-as-promised": "npm:chai-as-promised@7.1.1", "zod": "https://deno.land/x/zod@v3.21.4/mod.ts", "base64": "https://deno.land/x/b64@1.1.27/src/base64.js"}, "lock": "./lock.file"}
{"tasks": {"run": "deno run --unstable --allow-read --allow-write --allow-env --allow-ffi --allow-sys=uid --allow-net=www.pathofexile.com main.ts", "build": "deno compile --unstable --lock --allow-read --allow-write --allow-env --allow-ffi --allow-sys=uid --allow-net=www.pathofexile.com main.ts"}, "imports": {"path": "https://deno.land/std@0.193.0/path/mod.ts", "discord_rpc": "https://deno.land/x/discord_rpc@0.3.2/mod.ts", "prompt": "https://deno.land/x/cliffy@v1.0.0-rc.2/prompt/mod.ts", "poe-log-events": "npm:poe-log-events@4.0.0"}, "fmt": {"indentWidth": 4, "singleQuote": true, "lineWidth": 100, "proseWrap": "never"}}
{"tasks": {"dev": "deno run --watch main.ts"}}
{"tasks": {"dev": "deno run --watch main.ts"}}
{"tasks": {"dev": "deno run --watch main.ts"}}
{"tasks": {"dev": "deno run --watch main.ts"}}
{"imports": {"@opennetwork/http-representation": "https://cdn.skypack.dev/@opennetwork/http-representation", "@virtualstate/astro-renderer": "https://cdn.skypack.dev/@virtualstate/astro-renderer", "@virtualstate/dom": "https://cdn.skypack.dev/@virtualstate/dom", "@virtualstate/examples": "https://cdn.skypack.dev/@virtualstate/examples", "@virtualstate/fringe": "https://cdn.skypack.dev/@virtualstate/fringe", "@virtualstate/focus": "https://cdn.skypack.dev/@virtualstate/focus", "@virtualstate/composite-key": "https://cdn.skypack.dev/@virtualstate/composite-key", "@virtualstate/navigation": "https://cdn.skypack.dev/@virtualstate/navigation", "@virtualstate/navigation/routes": "./node_modules/@virtualstate/navigation/esnext/routes/index.js", "@virtualstate/hooks": "https://cdn.skypack.dev/@virtualstate/hooks", "@virtualstate/memo": "https://cdn.skypack.dev/@virtualstate/memo", "@virtualstate/hooks-extended": "https://cdn.skypack.dev/@virtualstate/hooks-extended", "@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union", "@virtualstate/x": "https://cdn.skypack.dev/@virtualstate/x", "@virtualstate/kdl": "https://cdn.skypack.dev/@virtualstate/kdl", "@virtualstate/promise": "https://cdn.skypack.dev/@virtualstate/promise", "@virtualstate/promise/the-thing": "https://cdn.skypack.dev/@virtualstate/promise/the-thing", "@virtualstate/promise/the-sync-thing": "https://cdn.skypack.dev/@virtualstate/promise/the-sync-thing", "@virtualstate/app-history": "./src/app-history.ts", "@virtualstate/app-history/polyfill": "./src/polyfill.ts", "@virtualstate/app-history/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history/event-target": "./src/event-target/sync-eve$(System.AccessToken)$(System.AccessToken)nt-target.ts", "@virtualstate/app-history-imported": "./src/app-history.ts", "@virtualstate/app-history-imported/polyfill": "./src/polyfill.ts", "@virtualstate/app-history-imported/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history-imported/event-target": "./src/event-target/sync-event-target.ts", "dom-lite": "https://cdn.skypack.dev/dom-lite", "iterable": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "https://cdn.skypack.dev/-/iterable@v5.7.0-CNtyuMJo9f2zFu6CuB1D/dist=es2019,mode=imports/optimized/iterable.js": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "uuid": "./src/util/deno-uuid.ts", "whatwg-url": "https://cdn.skypack.dev/whatwg-url", "change-case": "https://cdn.skypack.dev/change-case", "abort-controller": "https://cdn.skypack.dev/abort-controller", "preact": "https://cdn.skypack.dev/preact@10.7.3", "react": "https://cdn.skypack.dev/react@18.1.0", "deno:std/uuid/mod": "https://deno.land/std@0.113.0/uuid/mod.ts", "deno:std/uuid/v4": "https://deno.land/std@0.113.0/uuid/v4.ts", "deno:deno_dom/deno-dom-wasm.ts": "https://deno.land/x/deno_dom/deno-dom-wasm.ts", "urlpattern-polyfill": "https://cdn.skypack.dev/urlpattern-polyfill", "./src/tests/examples": "./src/tests/examples/index.ts", "./src/tests/examples/jsx": "./src/tests/examples/jsx.tsx", "./src/tests/examples/fetch": "./src/tests/examples/fetch.ts", "./src/tests/examples/readme-detailed": "./src/tests/examples/readme-detailed.tsx", "./src/tests/app-history.class": "./src/tests/app-history.class.ts", "./src/tests/app-history.imported": "./src/tests/app-history.imported.ts", "./src/tests/app-history.scope": "./src/tests/app-history.scope.ts", "./src/tests/app-history": "./src/tests/app-history.tsx", "./src/tests/node-process": "./src/tests/default-process.ts", "./src/tests/imported": "./src/tests/imported.ts", "./src/tests/config": "./src/tests/config.ts", "./src/tests/util": "./src/tests/util.ts", "./src/app-history": "./src/app-history.ts", "./src/app-history-entry": "./src/app-history-entry.ts", "./src/spec/app-history": "./src/spec/app-history.ts", "./src/app-history-errors": "./src/app-history-errors.ts", "./src/app-history-event-target": "./src/app-history-event-target.ts", "./src/app-history-transition": "./src/app-history-transition.ts", "./src/create-app-history-transition": "./src/create-app-history-transition.ts", "./src/util/deferred": "./src/util/deferred.ts", "./src/util/deno-uuid": "./src/util/deno-uuid.ts", "./src/util/uuid-or-random": "./src/util/uuid-or-random.ts", "./src/util/parse-dom-deno": "./src/util/parse-dom-deno.ts", "./src/util/parse-dom": "./src/util/parse-dom-deno.ts", "./src/index": "./src/index.ts", "./src/util/writable": "./src/util/writable.ts", "./src": "./src/index.ts", "./src/event-target": "./src/event-target/index.ts", "./src/event-target/callback": "./src/event-target/callback.ts", "./src/event-target/context": "./src/event-target/context.ts", "./src/event-target/global": "./src/event-target/global.ts", "./src/event-target/descriptor": "./src/event-target/descriptor.ts", "./src/event-target/event": "./src/event-target/event.ts", "./src/event-target/create-event": "./src/event-target/create-event.ts", "./src/event-target/event-target": "./src/event-target/event-target.ts", "./src/event-target/async-event-target": "./src/event-target/async-event-target.ts", "./src/event-target/sync-event-target": "./src/event-target/sync-event-target.ts", "./src/event-target/event-target-options": "./src/event-target/event-target-options.ts", "./src/event-target/event-target-listeners": "./src/event-target/event-target-listeners.ts", "./src/event-target/index": "./src/event-target/index.ts", "./src/event-target/parallel-event": "./src/event-target/parallel-event.ts", "./src/event-target/respond-event": "./src/event-target/respond-event.ts", "./src/event-target/signal-event": "./src/event-target/signal-event.ts", "./src/event-target/transition-event": "./src/event-target/transition-event.ts", "./src/util/import-types": "./src/util/import-types.ts", "./src/polyfill": "./src/polyfill.ts", "./src/location": "./src/location.ts", "./src/history": "./src/history.ts", "./esnext/util/parse-dom-deno.js": "./esnext/util/parse-dom-deno.ts", "./esnext/util/parse-dom.js": "./esnext/util/parse-dom-deno.ts", "cheerio": "./scripts/nop/index.js"}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["./"], "exclude": []}, "rules": {"tags": ["recommended"], "include": [], "exclude": ["no-explicit-any"]}}, "fmt": {"files": {"include": ["./"], "exclude": []}, "options": {"useTabs": false, "lineWidth": 120, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}}
{"lock": false}
{"lock": false}
{"lock": false}
{"lock": false}
{"importMap": "import_map.json", "fmt": {"options": {"lineWidth": 100}}}
{"tasks": {"test": "deno test", "dev": "deno fmt && deno lint && deno task test --fail-fast"}}
{"version": "1.36.4", "description": "A secure runtime for JavaScript and TypeScript", "homepage": "https://deno.land", "license": "MIT", "architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v1.36.4/deno-x86_64-pc-windows-msvc.zip", "hash": "f5b5aca801e5f102876fa56b600bc8fa833f41436c68fa45875e8a9b43b188b1"}}, "bin": "deno.exe", "checkver": {"github": "https://github.com/denoland/deno"}, "autoupdate": {"architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v$version/deno-x86_64-pc-windows-msvc.zip"}}}}
{"version": "1.36.4", "description": "A secure runtime for JavaScript and TypeScript", "homepage": "https://deno.land", "license": "MIT", "architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v1.36.4/deno-x86_64-pc-windows-msvc.zip", "hash": "f5b5aca801e5f102876fa56b600bc8fa833f41436c68fa45875e8a9b43b188b1"}}, "bin": "deno.exe", "checkver": {"github": "https://github.com/denoland/deno"}, "autoupdate": {"architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v$version/deno-x86_64-pc-windows-msvc.zip"}}}}
{"version": "1.36.4", "description": "A secure runtime for JavaScript and TypeScript", "homepage": "https://deno.land", "license": "MIT", "architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v1.36.4/deno-x86_64-pc-windows-msvc.zip", "hash": "f5b5aca801e5f102876fa56b600bc8fa833f41436c68fa45875e8a9b43b188b1"}}, "bin": "deno.exe", "checkver": {"github": "https://github.com/denoland/deno"}, "autoupdate": {"architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v$version/deno-x86_64-pc-windows-msvc.zip"}}}}
{"version": "1.36.4", "description": "A secure runtime for JavaScript and TypeScript", "homepage": "https://deno.land", "license": "MIT", "architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v1.36.4/deno-x86_64-pc-windows-msvc.zip", "hash": "f5b5aca801e5f102876fa56b600bc8fa833f41436c68fa45875e8a9b43b188b1"}}, "bin": "deno.exe", "checkver": {"github": "https://github.com/denoland/deno"}, "autoupdate": {"architecture": {"64bit": {"url": "https://github.com/denoland/deno/releases/download/v$version/deno-x86_64-pc-windows-msvc.zip"}}}}
{"tasks": {"test": "deno test --allow-net --allow-env", "test:cov": "deno test -A --coverage=coverage && deno coverage ./coverage --lcov --output=coverage.lcov", "cache": "deno cache ./deps.ts"}, "fmt": {"files": {"exclude": ["*.md", "LICENSE"]}}, "lint": {"files": {"exclude": ["*.md", "LICENSE"]}}, "importMap": "import_map.json"}
{"tasks": {"test": "deno test --allow-net --allow-env", "test:cov": "deno test -A --coverage=coverage && deno coverage ./coverage --lcov --output=coverage.lcov", "cache": "deno cache ./deps.ts"}, "fmt": {"files": {"exclude": ["*.md", "LICENSE"]}}, "lint": {"files": {"exclude": ["*.md", "LICENSE"]}}, "importMap": "import_map.json"}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/"]}}, "fmt": {"files": {"exclude": ["static/"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/"]}}, "fmt": {"files": {"exclude": ["static/"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/"]}}, "fmt": {"files": {"exclude": ["static/"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"start": "deno run -A --watch=static/,sections/,functions/ dev.ts", "component": "deno eval 'import \"$live/scripts/component.ts\"'", "check": "deno fmt && deno lint && deno check dev.ts main.ts"}, "githooks": {"pre-commit": "check"}, "lint": {"files": {"exclude": ["static/"]}}, "fmt": {"files": {"exclude": ["static/"]}}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"test": "deno test --unstable --allow-env --allow-read"}, "fmt": {"options": {"proseWrap": "preserve", "singleQuote": true, "useTabs": true}}}
{"compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "xeact", "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns", "deno.unstable"]}, "importMap": "./import_map.json"}
{"importMap": "import_map.json"}
{"importMap": "import_map.json"}
{"importMap": "import_map.json"}
{"importMap": "import_map.json"}
{"tasks": {"lume": "deno run --unstable -A build.ts", "build": "deno task lume", "serve": "deno task lume -s"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:preact"}, "imports": {"lume/": "https://deno.land/x/lume@v1.17.0/"}}
{"tasks": {"dev": "deno run main.ts"}}
{"importMap": "./import_map.json", "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:react"}}
{"importMap": "./import_map.json", "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "npm:react"}}
{"lock": false, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update ."}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.0", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "$std/": "https://deno.land/std@0.193.0/"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"importMap": "import_map.json", "tasks": {"lume": "deno eval \"import 'lume/task.ts'\" --", "build": "deno task lume", "serve": "deno task lume -s"}}
{"importMap": "import_map.json", "tasks": {"lume": "deno eval \"import 'lume/task.ts'\" --", "build": "deno task lume", "serve": "deno task lume -s"}}
{"importMap": "import_map.json", "tasks": {"lume": "deno eval \"import 'lume/task.ts'\" --", "build": "deno task lume", "serve": "deno task lume -s"}}
{"importMap": "import_map.json", "tasks": {"lume": "deno eval \"import 'lume/task.ts'\" --", "build": "deno task lume", "serve": "deno task lume -s"}}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}, "importMap": "./import_map.json"}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}, "importMap": "./import_map.json"}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}, "importMap": "./import_map.json"}
{"tasks": {"build": "deno run --allow-read --allow-write --allow-net --allow-env --allow-run _build_npm.ts", "coverage": "deno coverage --unstable --lcov ./cov", "example": "deno run --unstable --allow-net examples/echoServer.ts", "test": "deno test --import-map import-map.json --allow-read --allow-write --allow-net --parallel --ignore=npm,http_server_native_unstable_test.ts", "test:bundle": "deno bundle --import-map import-map.json mod.ts oak.bundle.js", "test:no-check": "deno test --import-map import-map.json --allow-read --allow-write --allow-net --no-check --parallel --ignore=npm,http_server_native_unstable_test.ts", "test:unstable": "deno test --coverage=./cov --import-map import-map.json --allow-read --allow-write --allow-net --unstable --cert ./examples/tls/RootCA.crt --parallel --ignore=npm"}}
{"tasks": {"lume": "deno run -A --no-check https://deno.land/x/lume@v1.15.3/ci.ts", "build:ci": "deno task build && cp -r playground/build _site/playground", "build": "deno run -A https://deno.land/x/lume@v1.15.3/ci.ts", "serve": "deno task build -s"}, "imports": {"lume/": "https://deno.land/x/lume@v1.15.3/"}}
{"name": "Deno", "uniqueClass": "deno", "image": "/img/33.png", "bgColor": "rgb(0, 0, 0)", "libs": [{"minimumVersion": null, "support": {"sign": true, "verify": true, "iss": true, "sub": true, "aud": true, "exp": true, "nbf": true, "iat": true, "jti": true, "typ": true, "hs256": true, "hs384": true, "hs512": true, "rs256": true, "rs384": true, "rs512": true, "es256": true, "es384": true, "es512": false, "ps256": true, "ps384": true, "ps512": true, "eddsa": true, "es256k": false}, "authorUrl": "https://github.com/panva", "authorName": "Filip Skokan", "gitHubRepoPath": "panva/jose", "repoUrl": "https://github.com/panva/jose", "installCommandHtml": "see https://deno.land/x/jose"}]}
{"name": "sqlite-jsonschema", "version": "${VERSION}", "github": "https://github.com/asg017/${PACKAGE_NAME}", "tasks": {"test": "deno test --unstable -A test.ts"}}
{"fmt": {"files": {"include": ["api", "cli/src/cmd/generate_src", "server", "packages", "deno.json", "tsc_compile", "tsc_compile_build"], "exclude": ["tsc_compile/tests/", "server/docs", "third_party", "packages/create-chiselstrike-app/node_modules/", "packages/chiselstrike-cli/node_modules/", "packages/chiselstrike-api/node_modules/", "packages/create-chiselstrike-app/package-lock.json", "packages/create-chiselstrike-app/dist/", "packages/chiselstrike-cli/package-lock.json", "packages/chiselstrike-api/package-lock.json", "packages/chiselstrike-api/lib/"]}, "options": {"indentWidth": 4}}, "lint": {"files": {"include": ["api", "cli/src/cmd/generate_src", "server", "packages", "tsc_compile", "tsc_compile_build"], "exclude": ["cli/src/cmd/generate_src/client.ts", "tsc_compile/tests/", "third_party", "packages/create-chiselstrike-app/node_modules/", "packages/chiselstrike-cli/node_modules/", "packages/chiselstrike-api/node_modules/", "packages/chiselstrike-next-auth/dist/", "packages/chiselstrike-next-auth/lib", "packages/chiselstrike-next-auth/node_modules/", "packages/chiselstrike-next-auth/test", "packages/create-chiselstrike-app/package-lock.json", "packages/create-chiselstrike-app/dist/", "packages/chiselstrike-api/lib/", "packages/chiselstrike-cli/package-lock.json", "packages/chiselstrike-api/package-lock.json"]}, "rules": {"tags": ["recommended"]}}}
{"tasks": {"gen": "deno run --allow-read=lua/efmls-configs --allow-write=doc/SUPPORTED_LIST.md generate.ts"}, "fmt": {"lineWidth": 100}}
{"imports": {"@opennetwork/http-representation": "https://cdn.skypack.dev/@opennetwork/http-representation", "@virtualstate/astro-renderer": "https://cdn.skypack.dev/@virtualstate/astro-renderer", "@virtualstate/dom": "https://cdn.skypack.dev/@virtualstate/dom", "@virtualstate/examples": "https://cdn.skypack.dev/@virtualstate/examples", "@virtualstate/fringe": "https://cdn.skypack.dev/@virtualstate/fringe", "@virtualstate/focus": "https://cdn.skypack.dev/@virtualstate/focus@^1.2.0", "@virtualstate/focus/static-h": "https://cdn.skypack.dev/@virtualstate/focus/static-h", "@virtualstate/focus/h": "https://cdn.skypack.dev/@virtualstate/focus/h", "@virtualstate/hooks": "https://cdn.skypack.dev/@virtualstate/hooks", "@virtualstate/hooks-extended": "https://cdn.skypack.dev/@virtualstate/hooks-extended", "@virtualstate/union": "https://cdn.skypack.dev/@virtualstate/union", "@virtualstate/x": "https://cdn.skypack.dev/@virtualstate/x", "@virtualstate/promise": "https://cdn.skypack.dev/@virtualstate/promise", "@virtualstate/composite-key": "https://cdn.skypack.dev/@virtualstate/composite-key", "chevrotain": "https://cdn.skypack.dev/chevrotain", "@virtualstate/promise/the-thing": "https://cdn.skypack.dev/@virtualstate/promise/the-thing", "@virtualstate/app-history": "./src/app-history.ts", "@virtualstate/app-history/polyfill": "./src/polyfill.ts", "@virtualstate/app-history/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history/event-target": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported": "./src/app-history.ts", "@virtualstate/app-history-imported/polyfill": "./src/polyfill.ts", "@virtualstate/app-history-imported/event-target/sync": "./src/event-target/sync-event-target.ts", "@virtualstate/app-history-imported/event-target/async": "./src/event-target/async-event-target.ts", "@virtualstate/app-history-imported/event-target": "./src/event-target/sync-event-target.ts", "dom-lite": "https://cdn.skypack.dev/dom-lite", "iterable": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "https://cdn.skypack.dev/-/iterable@v5.7.0-CNtyuMJo9f2zFu6CuB1D/dist=es2019,mode=imports/optimized/iterable.js": "https://cdn.skypack.dev/iterable@6.0.1-beta.5", "uuid": "./src/util/deno-uuid.ts", "whatwg-url": "https://cdn.skypack.dev/whatwg-url", "abort-controller": "https://cdn.skypack.dev/abort-controller", "deno:std/uuid/mod": "https://deno.land/std@0.113.0/uuid/mod.ts", "deno:std/uuid/v4": "https://deno.land/std@0.113.0/uuid/v4.ts", "deno:deno_dom/deno-dom-wasm.ts": "https://deno.land/x/deno_dom/deno-dom-wasm.ts", "urlpattern-polyfill": "https://cdn.skypack.dev/urlpattern-polyfill", "cheerio": "./scripts/nop/index.js"}}
{"_comment": "Generated using MiningMark48's JSON Generator.", "parent": "item/generated", "textures": {"layer0": "kamenridercraft4th:items/ziku_driver_deno"}}
{"tasks": {"test": "deno test --allow-net tests", "test:watch": "deno test --allow-net --watch tests"}}
{"title": "PoncheNavideno", "img": "https://cdn.liquor.com/wp-content/uploads/2016/11/21072232/Mexican-Ponche-Navideno-720x720-recipe.jpg", "ingredients_key": ["Light rum", "Piloncillo (Mexican-style unrefined brown sugar), grated (or 1 cup packed dark brown sugar)", "Cinnamon sticks", "Whole cloves", "Tamarind paste", "Tart apples, peeled, cored, finely chopped", "Ripe pear, peeled, cored, finely chopped", "Packed raisins or golden raisins", "Dried hibiscus flowers (also known as jamaica or sorrel), tied inside a square of cheesecloth", "Juice of 1 lemon", "Water", "Garnish", "Glass"], "ingredients_value": ["10 oz", "12 oz", "2", "5", "1 tbsp", "2", "1", "1\u20442 cup", "1 cup", "None", "10 cup", "Lemon slice", "Punch glass"], "recipe": ["In a large stockpot, add the water, piloncillo, cinnamon sticks, cloves and tamarind paste, and bring to a boil. Drop to a simmer, and stir to completely dissolve the tamarind paste. Simmer for 15 minutes.", "Add the apples, pear, raisins and hibiscus flowers, and simmer for 15 minutes, until the fruit is soft and raisins are rehydrated.", "Squeeze the remaining liquid out of the cheesecloth packet and discard. Remove the cinnamon sticks and cloves and discard. Stir in the lemon juice and rum.", "Ladle the punch between 12 punch glasses, thinly slice 2 lemons, and garnish each glass with a slice."], "profile_key": ["Flavor", "Base Spirit", "Cocktail Type", "Served", "Preparation", "Strength", "Difficulty", "Hours", "Brands"], "profile_value": [["Fruity/Citrus-forward"], ["Rum"], ["Modern Classics", "Punches"], ["Neat/Up"], ["Stirred"], ["Medium"], ["Complicated"], ["Afternoon", "Evening"], ["None"]]}
{"tasks": {"puppeteer:init": "PUPPETEER_PRODUCT=chrome deno run -A --unstable https://deno.land/x/puppeteer@16.2.0/install.ts", "puppeteer": "deno run -A --unstable src/puppeteer.ts", "puppeteer:fmt": "deno fmt src/puppeteer.ts"}, "compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["no-unused-vars"]}}, "fmt": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}, "options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": true, "proseWrap": "preserve"}}, "test": {"files": {"include": ["src/"], "exclude": ["src/testdata/"]}}}
{"tasks": {"test": "deno test --allow-all --unstable src", "test-watch": "deno test --watch --allow-all --no-check --unstable src", "bench": "deno bench --allow-all --unstable --no-check src/test/benchmark", "bundle": "deno run --allow-all scripts/build_web_bundle.ts", "npm": "deno run --allow-all scripts/build_npm.ts", "example": "deno run examples/animal_story.ts", "coverage": "deno task test-coverage && deno task show-coverage", "test-coverage": "deno test --no-check --coverage=cov_profile src", "show-coverage": "deno coverage cov_profile --lcov > cov.lcov && genhtml -o cov_html cov.lcov", "clean": "rm -rf npm build coverage dist cov.lcov coverage_html cov_profile", "release-alpha": "deno run --allow-all scripts/release_alpha.ts", "release-beta": "deno run --allow-all scripts/release_beta.ts"}, "fmt": {"files": {"exclude": ["npm", ".git", "earthstar.bundle.js", ".nova"]}}, "lock": false}
{"lock": false, "tasks": {"pre-commit": "deno task fmt && deno task check && deno task test", "test": "deno test -A", "check": "deno check **/*.ts && deno fmt --check **/*.ts && deno lint && luacheck lua/*", "fmt": "deno fmt **/*.ts && stylua lua/*"}}
{"imports": {"fmt/": "https://deno.land/std@0.55.0/fmt/"}}
{"actions": {"clean": {"enabled": true, "script": "#!/bin/sh\n./deno.sh clean"}, "run": {"enabled": true, "script": "#!/bin/sh\n./deno.sh start"}}, "identifier": "718743C9-BE3F-464F-B3EA-5BFB2BD6C0B1", "openLogOnRun": "fail"}
{"lock": false, "tasks": {"build": "cp LICENSE js/LICENSE && deno run --unstable -A https://deno.land/x/wasmbuild@0.14.1/main.ts --no-default-features --features wasm --out js", "test": "deno test --allow-read --allow-net"}, "exclude": ["target", "benches/fixtures"]}
{"tasks": {"test": "deno test --unstable --allow-read --coverage=coverage", "lcov": "deno coverage coverage --lcov --output=coverage/report.lcov", "cover": "deno task clean && deno task test && deno task lcov && genhtml -o coverage/html coverage/report.lcov", "build": "deno run -A scripts/build_npm.ts", "publish": "cd ./npm && npm publish", "clean": "rm -rf ./npm ./coverage"}}
{"_format": "hh-sol-artifact-1", "contractName": "SuperDeno", "sourceName": "contracts/SocialDao.sol", "abi": [{"inputs": [{"internalType": "string[]", "name": "_discipline", "type": "string[]"}], "stateMutability": "nonpayable", "type": "constructor"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "string", "name": "message", "type": "string"}], "name": "DisciplineUpdated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "sender", "type": "address"}, {"indexed": false, "internalType": "string", "name": "name", "type": "string"}, {"indexed": false, "internalType": "string", "name": "message", "type": "string"}], "name": "SocialDaoCreated", "type": "event"}, {"inputs": [], "name": "NAME", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "allDaoNames", "outputs": [{"internalType": "string[]", "name": "_daoNames", "type": "string[]"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address[]", "name": "_owners", "type": "address[]"}, {"internalType": "uint256", "name": "_numConfirmationsRequired", "type": "uint256"}, {"internalType": "string", "name": "_name", "type": "string"}, {"internalType": "string[]", "name": "_constitution", "type": "string[]"}], "name": "createSocialDAO", "outputs": [], "stateMutability": "payable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "daoNames", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "daos", "outputs": [{"internalType": "contract SocialDAO", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "discipline", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "string", "name": "_name", "type": "string"}], "name": "getDAOAddressByName", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "owners", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "superDenoInfo", "outputs": [{"internalType": "string", "name": "_superDaoName", "type": "string"}, {"internalType": "string[]", "name": "_discipline", "type": "string[]"}, {"internalType": "address[]", "name": "_owners", "type": "address[]"}], "stateMutability": "view", "type": "function"}], "bytecode": "", "deployedBytecode": "0x608060405260043610620000925760003560e01c806368acaf99116200006157806368acaf99146200016f578063982a623414620001b3578063a3f4df7e14620001e5578063ccbbd2601462000215578063d6b554a814620002595762000092565b8063025e7c27146200009757806328152deb14620000db578063346d6059146200010b5780635717a08d146200014f575b600080fd5b348015620000a457600080fd5b50620000c36004803603810190620000bd919062000aef565b6200029d565b604051620000d2919062000b66565b60405180910390f35b348015620000e857600080fd5b50620000f3620002dd565b60405162000102919062000cf7565b60405180910390f35b3480156200011857600080fd5b5062000137600480360381019062000131919062000aef565b620003c0565b60405162000146919062000d6d565b60405180910390f35b6200016d6004803603810190620001679190620010e5565b62000475565b005b3480156200017c57600080fd5b506200019b600480360381019062000195919062000aef565b620006b9565b604051620001aa919062000d6d565b60405180910390f35b348015620001c057600080fd5b50620001cb6200076e565b604051620001dc9392919062001282565b60405180910390f35b348015620001f257600080fd5b50620001fd6200091f565b6040516200020c919062000d6d565b60405180910390f35b3480156200022257600080fd5b506200024160048036038101906200023b919062000aef565b62000958565b6040516200025091906200133f565b60405180910390f35b3480156200026657600080fd5b506200028560048036038101906200027f91906200135c565b62000998565b60405162000294919062000b66565b60405180910390f35b60018181548110620002ae57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606003805480602002602001604051908101604052809291908181526020016000905b82821015620003b75783829060005260206000200180546200032390620013dc565b80601f01602080910402602001604051908101604052809291908181526020018280546200035190620013dc565b8015620003a25780601f106200037657610100808354040283529160200191620003a2565b820191906000526020600020905b8154815290600101906020018083116200038457829003601f168201915b50505050508152602001906001019062000301565b50505050905090565b60008181548110620003d157600080fd5b906000526020600020016000915090508054620003ee90620013dc565b80601f01602080910402602001604051908101604052809291908181526020018280546200041c90620013dc565b80156200046d5780601f1062000441576101008083540402835291602001916200046d565b820191906000526020600020905b8154815290600101906020018083116200044f57829003601f168201915b505050505081565b60058260405162000487919062001454565b908152602001604051809103902060009054906101000a900460ff1615620004e6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004dd90620014bd565b60405180910390fd5b600084848484604051620004fa90620009e2565b620005099493929190620014f0565b604051809103906000f08015801562000526573d6000803e3d6000fd5b5090506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004846040516200059f919062001454565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600584604051620005ff919062001454565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060038390806001815401808255809150506001900390600052602060002001600090919091909150908051906020019062000661929190620009f0565b503373ffffffffffffffffffffffffffffffffffffffff167ffe3d028c87f5fddc175c482ced09f4365559478c9ba845528fbeea876e85ad0084604051620006aa9190620015a2565b60405180910390a25050505050565b60038181548110620006ca57600080fd5b906000526020600020016000915090508054620006e790620013dc565b80601f01602080910402602001604051908101604052809291908181526020018280546200071590620013dc565b8015620007665780601f106200073a5761010080835404028352916020019162000766565b820191906000526020600020905b8154815290600101906020018083116200074857829003601f168201915b505050505081565b60608060606040518060400160405280600a81526020017f53757065722044656e6f000000000000000000000000000000000000000000008152506000600181805480602002602001604051908101604052809291908181526020016000905b8282101562000884578382906000526020600020018054620007f090620013dc565b80601f01602080910402602001604051908101604052809291908181526020018280546200081e90620013dc565b80156200086f5780601f1062000843576101008083540402835291602001916200086f565b820191906000526020600020905b8154815290600101906020018083116200085157829003601f168201915b505050505081526020019060010190620007ce565b505050509150808054806020026020016040519081016040528092919081815260200182805480156200090d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620008c2575b50505050509050925092509250909192565b6040518060400160405280600a81526020017f53757065722044656e6f0000000000000000000000000000000000000000000081525081565b600281815481106200096957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600482604051620009ac919062001454565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61422780620015dc83390190565b828054620009fe90620013dc565b90600052602060002090601f01602090048101928262000a22576000855562000a6e565b82601f1062000a3d57805160ff191683800117855562000a6e565b8280016001018555821562000a6e579182015b8281111562000a6d57825182559160200191906001019062000a50565b5b50905062000a7d919062000a81565b5090565b5b8082111562000a9c57600081600090555060010162000a82565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b62000ac98162000ab4565b811462000ad557600080fd5b50565b60008135905062000ae98162000abe565b92915050565b60006020828403121562000b085762000b0762000aaa565b5b600062000b188482850162000ad8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000b4e8262000b21565b9050919050565b62000b608162000b41565b82525050565b600060208201905062000b7d600083018462000b55565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562000beb57808201518184015260208101905062000bce565b8381111562000bfb576000848401525b50505050565b6000601f19601f8301169050919050565b600062000c1f8262000baf565b62000c2b818562000bba565b935062000c3d81856020860162000bcb565b62000c488162000c01565b840191505092915050565b600062000c61838362000c12565b905092915050565b6000602082019050919050565b600062000c838262000b83565b62000c8f818562000b8e565b93508360208202850162000ca38562000b9f565b8060005b8581101562000ce5578484038952815162000cc3858262000c53565b945062000cd08362000c69565b925060208a0199505060018101905062000ca7565b50829750879550505050505092915050565b6000602082019050818103600083015262000d13818462000c76565b905092915050565b600082825260208201905092915050565b600062000d398262000baf565b62000d45818562000d1b565b935062000d5781856020860162000bcb565b62000d628162000c01565b840191505092915050565b6000602082019050818103600083015262000d89818462000d2c565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000dd08262000c01565b810181811067ffffffffffffffff8211171562000df25762000df162000d96565b5b80604052505050565b600062000e0762000aa0565b905062000e15828262000dc5565b919050565b600067ffffffffffffffff82111562000e385762000e3762000d96565b5b602082029050602081019050919050565b600080fd5b62000e598162000b41565b811462000e6557600080fd5b50565b60008135905062000e798162000e4e565b92915050565b600062000e9662000e908462000e1a565b62000dfb565b9050808382526020820190506020840283018581111562000ebc5762000ebb62000e49565b5b835b8181101562000ee9578062000ed4888262000e68565b84526020840193505060208101905062000ebe565b5050509392505050565b600082601f83011262000f0b5762000f0a62000d91565b5b813562000f1d84826020860162000e7f565b91505092915050565b600080fd5b600067ffffffffffffffff82111562000f495762000f4862000d96565b5b62000f548262000c01565b9050602081019050919050565b82818337600083830152505050565b600062000f8762000f818462000f2b565b62000dfb565b90508281526020810184848401111562000fa65762000fa562000f26565b5b62000fb384828562000f61565b509392505050565b600082601f83011262000fd35762000fd262000d91565b5b813562000fe584826020860162000f70565b91505092915050565b600067ffffffffffffffff8211156200100c576200100b62000d96565b5b602082029050602081019050919050565b6000620010346200102e8462000fee565b62000dfb565b905080838252602082019050602084028301858111156200105a576200105962000e49565b5b835b81811015620010a857803567ffffffffffffffff81111562001083576200108262000d91565b5b80860162001092898262000fbb565b855260208501945050506020810190506200105c565b5050509392505050565b600082601f830112620010ca57620010c962000d91565b5b8135620010dc8482602086016200101d565b91505092915050565b6000806000806080858703121562001102576200110162000aaa565b5b600085013567ffffffffffffffff81111562001123576200112262000aaf565b5b620011318782880162000ef3565b9450506020620011448782880162000ad8565b935050604085013567ffffffffffffffff81111562001168576200116762000aaf565b5b620011768782880162000fbb565b925050606085013567ffffffffffffffff8111156200119a576200119962000aaf565b5b620011a887828801620010b2565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b620011eb8162000b41565b82525050565b6000620011ff8383620011e0565b60208301905092915050565b6000602082019050919050565b60006200122582620011b4565b620012318185620011bf565b93506200123e83620011d0565b8060005b8381101562001275578151620012598882620011f1565b975062001266836200120b565b92505060018101905062001242565b5085935050505092915050565b600060608201905081810360008301526200129e818662000d2c565b90508181036020830152620012b4818562000c76565b90508181036040830152620012ca818462001218565b9050949350505050565b6000819050919050565b6000620012ff620012f9620012f38462000b21565b620012d4565b62000b21565b9050919050565b60006200131382620012de565b9050919050565b6000620013278262001306565b9050919050565b62001339816200131a565b82525050565b60006020820190506200135660008301846200132e565b92915050565b60006020828403121562001375576200137462000aaa565b5b600082013567ffffffffffffffff81111562001396576200139562000aaf565b5b620013a48482850162000fbb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620013f557607f821691505b602082108114156200140c576200140b620013ad565b5b50919050565b600081905092915050565b60006200142a8262000baf565b62001436818562001412565b93506200144881856020860162000bcb565b80840191505092915050565b60006200146282846200141d565b915081905092915050565b7f44414f20616c7265616479206578697374730000000000000000000000000000600082015250565b6000620014a560128362000d1b565b9150620014b2826200146d565b602082019050919050565b60006020820190508181036000830152620014d88162001496565b9050919050565b620014ea8162000ab4565b82525050565b600060808201905081810360008301526200150c818762001218565b90506200151d6020830186620014df565b818103604083015262001531818562000d2c565b9050818103606083015262001547818462000c76565b905095945050505050565b7f44616f20686173206265656e2063726561746564210000000000000000000000600082015250565b60006200158a60158362000d1b565b9150620015978262001552565b602082019050919050565b60006040820190508181036000830152620015be818462000d2c565b90508181036020830152620015d3816200157b565b90509291505056fe60806040523480156200001157600080fd5b5060405162004227380380620042278339818101604052810190620000379190620008f5565b60008451116200007e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000759062000a4b565b60405180910390fd5b6000815111620000c5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000bc9062000abd565b60405180910390fd5b600083118015620000d7575083518311155b62000119576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001109062000b55565b60405180910390fd5b60005b84518110156200031d5760008582815181106200013e576200013d62000b77565b5b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b29062000bf6565b60405180910390fd5b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156200024b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002429062000c68565b60405180910390fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508080620003149062000cb9565b9150506200011c565b508260068190555081600090805190602001906200033d92919062000361565b50806002908051906020019062000356929190620003f2565b505050505062000d6c565b8280546200036f9062000d36565b90600052602060002090601f016020900481019282620003935760008555620003df565b82601f10620003ae57805160ff1916838001178555620003df565b82800160010185558215620003df579182015b82811115620003de578251825591602001919060010190620003c1565b5b509050620003ee919062000459565b5090565b82805482825590600052602060002090810192821562000446579160200282015b82811115620004455782518290805190602001906200043492919062000361565b509160200191906001019062000413565b5b50905062000455919062000478565b5090565b5b80821115620004745760008160009055506001016200045a565b5090565b5b808211156200049c5760008181620004929190620004a0565b5060010162000479565b5090565b508054620004ae9062000d36565b6000825580601f10620004c25750620004e3565b601f016020900490600052602060002090810190620004e2919062000459565b5b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200054a82620004ff565b810181811067ffffffffffffffff821117156200056c576200056b62000510565b5b80604052505050565b600062000581620004e6565b90506200058f82826200053f565b919050565b600067ffffffffffffffff821115620005b257620005b162000510565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005f582620005c8565b9050919050565b6200060781620005e8565b81146200061357600080fd5b50565b6000815190506200062781620005fc565b92915050565b6000620006446200063e8462000594565b62000575565b905080838252602082019050602084028301858111156200066a5762000669620005c3565b5b835b8181101562000697578062000682888262000616565b8452602084019350506020810190506200066c565b5050509392505050565b600082601f830112620006b957620006b8620004fa565b5b8151620006cb8482602086016200062d565b91505092915050565b6000819050919050565b620006e981620006d4565b8114620006f557600080fd5b50565b6000815190506200070981620006de565b92915050565b600080fd5b600067ffffffffffffffff82111562000732576200073162000510565b5b6200073d82620004ff565b9050602081019050919050565b60005b838110156200076a5780820151818401526020810190506200074d565b838111156200077a576000848401525b50505050565b600062000797620007918462000714565b62000575565b905082815260208101848484011115620007b657620007b56200070f565b5b620007c38482856200074a565b509392505050565b600082601f830112620007e357620007e2620004fa565b5b8151620007f584826020860162000780565b91505092915050565b600067ffffffffffffffff8211156200081c576200081b62000510565b5b602082029050602081019050919050565b6000620008446200083e84620007fe565b62000575565b905080838252602082019050602084028301858111156200086a5762000869620005c3565b5b835b81811015620008b857805167ffffffffffffffff811115620008935762000892620004fa565b5b808601620008a28982620007cb565b855260208501945050506020810190506200086c565b5050509392505050565b600082601f830112620008da57620008d9620004fa565b5b8151620008ec8482602086016200082d565b91505092915050565b60008060008060808587031215620009125762000911620004f0565b5b600085015167ffffffffffffffff811115620009335762000932620004f5565b5b6200094187828801620006a1565b94505060206200095487828801620006f8565b935050604085015167ffffffffffffffff811115620009785762000977620004f5565b5b6200098687828801620007cb565b925050606085015167ffffffffffffffff811115620009aa57620009a9620004f5565b5b620009b887828801620008c2565b91505092959194509250565b600082825260208201905092915050565b7f6f6e65206f72206d6f7265207468616e206f6e65206f776e657273206172652060008201527f7265717569726564000000000000000000000000000000000000000000000000602082015250565b600062000a33602883620009c4565b915062000a4082620009d5565b604082019050919050565b6000602082019050818103600083015262000a668162000a24565b9050919050565b7f412064657461696c656420436f6e737469747574696f6e207265717569726564600082015250565b600062000aa5602083620009c4565b915062000ab28262000a6d565b602082019050919050565b6000602082019050818103600083015262000ad88162000a96565b9050919050565b7f696e76616c6964206e756d626572206f6620726571756972656420636f6e666960008201527f726d6174696f6e73000000000000000000000000000000000000000000000000602082015250565b600062000b3d602883620009c4565b915062000b4a8262000adf565b604082019050919050565b6000602082019050818103600083015262000b708162000b2e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f696e76616c6964206f776e657200000000000000000000000000000000000000600082015250565b600062000bde600d83620009c4565b915062000beb8262000ba6565b602082019050919050565b6000602082019050818103600083015262000c118162000bcf565b9050919050565b7f6f776e6572206e6f7420756e6971756500000000000000000000000000000000600082015250565b600062000c50601083620009c4565b915062000c5d8262000c18565b602082019050919050565b6000602082019050818103600083015262000c838162000c41565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000cc682620006d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000cfc5762000cfb62000c8a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000d4f57607f821691505b6020821081141562000d665762000d6562000d07565b5b50919050565b6134ab8062000d7c6000396000f3fe6080604052600436106101445760003560e01c80635a9b0b89116100b6578063c01a8c841161006f578063c01a8c841461050d578063c642747414610536578063d0549b851461055f578063d39258ca1461058a578063ee22610b146105c8578063f3c900e8146105f15761019b565b80635a9b0b89146103e357806366456437146104125780637065cb481461043b57806380f59a65146104645780639ace38c2146104a1578063a0e67e2b146104e25761019b565b80632e7700f0116101085780632e7700f0146102975780632f54bf6e146102c257806333ea3dc8146102ff5780633f73d8871461034057806350c05ccd1461037d5780635831f26a146103a65761019b565b8063025e7c27146101a057806306fdde03146101dd578063173825d9146102085780631a1e71181461023157806320ea8d861461026e5761019b565b3661019b573373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15344760405161019192919061235f565b60405180910390a2005b600080fd5b3480156101ac57600080fd5b506101c760048036038101906101c291906123c8565b61061c565b6040516101d49190612436565b60405180910390f35b3480156101e957600080fd5b506101f261065b565b6040516101ff91906124ea565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a9190612538565b6106e9565b005b34801561023d57600080fd5b50610258600480360381019061025391906123c8565b61083f565b60405161026591906124ea565b60405180910390f35b34801561027a57600080fd5b50610295600480360381019061029091906123c8565b6108eb565b005b3480156102a357600080fd5b506102ac610bc5565b6040516102b99190612565565b60405180910390f35b3480156102ce57600080fd5b506102e960048036038101906102e49190612538565b610bd2565b6040516102f6919061259b565b60405180910390f35b34801561030b57600080fd5b50610326600480360381019061032191906123c8565b610bf2565b60405161033795949392919061260b565b60405180910390f35b34801561034c57600080fd5b50610367600480360381019061036291906123c8565b610d05565b60405161037491906124ea565b60405180910390f35b34801561038957600080fd5b506103a4600480360381019061039f9190612880565b610db1565b005b3480156103b257600080fd5b506103cd60048036038101906103c89190612538565b610e6f565b6040516103da919061259b565b60405180910390f35b3480156103ef57600080fd5b506103f8610e8f565b604051610409959493929190612ac2565b60405180910390f35b34801561041e57600080fd5b5061043960048036038101906104349190612bd9565b6111f8565b005b34801561044757600080fd5b50610462600480360381019061045d9190612538565b61140d565b005b34801561047057600080fd5b5061048b60048036038101906104869190612c35565b611652565b604051610498919061259b565b60405180910390f35b3480156104ad57600080fd5b506104c860048036038101906104c391906123c8565b611681565b6040516104d995949392919061260b565b60405180910390f35b3480156104ee57600080fd5b506104f761177c565b6040516105049190612c75565b60405180910390f35b34801561051957600080fd5b50610534600480360381019061052f91906123c8565b61180a565b005b34801561054257600080fd5b5061055d60048036038101906105589190612c97565b611ae7565b005b34801561056b57600080fd5b50610574611cf1565b6040516105819190612565565b60405180910390f35b34801561059657600080fd5b506105b160048036038101906105ac91906123c8565b611cf7565b6040516105bf929190612d06565b60405180910390f35b3480156105d457600080fd5b506105ef60048036038101906105ea91906123c8565b611dd3565b005b3480156105fd57600080fd5b506106066120cb565b60405161061391906124ea565b60405180910390f35b6003818154811061062c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000805461066890612d65565b80601f016020809104026020016040519081016040528092919081815260200182805461069490612d65565b80156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d90612de3565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107db90612e4f565b60405180910390fd5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6004818154811061084f57600080fd5b90600052602060002001600091509050805461086a90612d65565b80601f016020809104026020016040519081016040528092919081815260200182805461089690612d65565b80156108e35780601f106108b8576101008083540402835291602001916108e3565b820191906000526020600020905b8154815290600101906020018083116108c657829003601f168201915b505050505081565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e90612ebb565b60405180910390fd5b80600a8054905081106109bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b690612f27565b60405180910390fd5b81600a81815481106109d4576109d3612f47565b5b906000526020600020906005020160030160009054906101000a900460ff1615610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a90612fc2565b60405180910390fd5b6000600a8481548110610a4957610a48612f47565b5b906000526020600020906005020190506009600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610af6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aed9061302e565b60405180910390fd5b6001816004016000828254610b0b919061307d565b9250508190555060006009600086815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550833373ffffffffffffffffffffffffffffffffffffffff167ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5560405160405180910390a350505050565b6000600a80549050905090565b60056020528060005260406000206000915054906101000a900460ff1681565b60008060606000806000600a8781548110610c1057610c0f612f47565b5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010154826002018360030160009054906101000a900460ff168460040154828054610c7190612d65565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9d90612d65565b8015610cea5780601f10610cbf57610100808354040283529160200191610cea565b820191906000526020600020905b815481529060010190602001808311610ccd57829003601f168201915b50505050509250955095509550955095505091939590929450565b60028181548110610d1557600080fd5b906000526020600020016000915090508054610d3090612d65565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5c90612d65565b8015610da95780601f10610d7e57610100808354040283529160200191610da9565b820191906000526020600020905b815481529060010190602001808311610d8c57829003601f168201915b505050505081565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3490612ebb565b60405180910390fd5b8160019080519060200190610e53929190612159565b508060049080519060200190610e6a9291906121df565b505050565b60086020528060005260406000206000915054906101000a900460ff1681565b60608060608060606003600060026001600484805480602002602001604051908101604052809291908181526020018280548015610f2257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ed8575b50505050509450838054610f3590612d65565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6190612d65565b8015610fae5780601f10610f8357610100808354040283529160200191610fae565b820191906000526020600020905b815481529060010190602001808311610f9157829003601f168201915b5050505050935082805480602002602001604051908101604052809291908181526020016000905b82821015611082578382906000526020600020018054610ff590612d65565b80601f016020809104026020016040519081016040528092919081815260200182805461102190612d65565b801561106e5780601f106110435761010080835404028352916020019161106e565b820191906000526020600020905b81548152906001019060200180831161105157829003601f168201915b505050505081526020019060010190610fd6565b50505050925081805461109490612d65565b80601f01602080910402602001604051908101604052809291908181526020018280546110c090612d65565b801561110d5780601f106110e25761010080835404028352916020019161110d565b820191906000526020600020905b8154815290600101906020018083116110f057829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b828210156111e157838290600052602060002001805461115490612d65565b80601f016020809104026020016040519081016040528092919081815260200182805461118090612d65565b80156111cd5780601f106111a2576101008083540402835291602001916111cd565b820191906000526020600020905b8154815290600101906020018083116111b057829003601f168201915b505050505081526020019060010190611135565b505050509050945094509450945094509091929394565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127c906130fd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ec90613169565b60405180910390fd5b600760405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906113ae92919061223f565b5050506001600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561149a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611491906130fd565b60405180910390fd5b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611526576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151d906131d5565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158b90612e4f565b60405180910390fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506003819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60096020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600a818154811061169157600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020180546116e090612d65565b80601f016020809104026020016040519081016040528092919081815260200182805461170c90612d65565b80156117595780601f1061172e57610100808354040283529160200191611759565b820191906000526020600020905b81548152906001019060200180831161173c57829003601f168201915b5050505050908060030160009054906101000a900460ff16908060040154905085565b6060600380548060200260200160405190810160405280929190818152602001828054801561180057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116117b6575b5050505050905090565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161188d90612ebb565b60405180910390fd5b80600a8054905081106118de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118d590612f27565b60405180910390fd5b81600a81815481106118f3576118f2612f47565b5b906000526020600020906005020160030160009054906101000a900460ff1615611952576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194990612fc2565b60405180910390fd5b826009600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156119f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e890613241565b60405180910390fd5b6000600a8581548110611a0757611a06612f47565b5b906000526020600020906005020190506001816004016000828254611a2c9190613261565b9250508190555060016009600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550843373ffffffffffffffffffffffffffffffffffffffff167f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004160405160405180910390a35050505050565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90612ebb565b60405180910390fd5b6000600a805490509050600a6040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020016000151581526020016000815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190611c5692919061223f565b5060608201518160030160006101000a81548160ff0219169083151502179055506080820151816004015550508373ffffffffffffffffffffffffffffffffffffffff16813373ffffffffffffffffffffffffffffffffffffffff167fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d8686604051611ce39291906132b7565b60405180910390a450505050565b60065481565b60078181548110611d0757600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054611d5090612d65565b80601f0160208091040260200160405190810160405280929190818152602001828054611d7c90612d65565b8015611dc95780601f10611d9e57610100808354040283529160200191611dc9565b820191906000526020600020905b815481529060010190602001808311611dac57829003601f168201915b5050505050905082565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e5690612ebb565b60405180910390fd5b80600a805490508110611ea7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9e90612f27565b60405180910390fd5b81600a8181548110611ebc57611ebb612f47565b5b906000526020600020906005020160030160009054906101000a900460ff1615611f1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f1290612fc2565b60405180910390fd5b6000600a8481548110611f3157611f30612f47565b5b9060005260206000209060050201905060065481600401541015611f8a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f8190613333565b60405180910390fd5b60018160030160006101000a81548160ff02191690831515021790555060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16826001015483600201604051611ffa91906133f2565b60006040518083038185875af1925050503d8060008114612037576040519150601f19603f3d011682016040523d82523d6000602084013e61203c565b606091505b5050905080612080576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207790613455565b60405180910390fd5b843373ffffffffffffffffffffffffffffffffffffffff167f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac60405160405180910390a35050505050565b600180546120d890612d65565b80601f016020809104026020016040519081016040528092919081815260200182805461210490612d65565b80156121515780601f1061212657610100808354040283529160200191612151565b820191906000526020600020905b81548152906001019060200180831161213457829003601f168201915b505050505081565b82805461216590612d65565b90600052602060002090601f01602090048101928261218757600085556121ce565b82601f106121a057805160ff19168380011785556121ce565b828001600101855582156121ce579182015b828111156121cd5782518255916020019190600101906121b2565b5b5090506121db91906122c5565b5090565b82805482825590600052602060002090810192821561222e579160200282015b8281111561222d57825182908051906020019061221d929190612159565b50916020019190600101906121ff565b5b50905061223b91906122e2565b5090565b82805461224b90612d65565b90600052602060002090601f01602090048101928261226d57600085556122b4565b82601f1061228657805160ff19168380011785556122b4565b828001600101855582156122b4579182015b828111156122b3578251825591602001919060010190612298565b5b5090506122c191906122c5565b5090565b5b808211156122de5760008160009055506001016122c6565b5090565b5b8082111561230257600081816122f99190612306565b506001016122e3565b5090565b50805461231290612d65565b6000825580601f106123245750612343565b601f01602090049060005260206000209081019061234291906122c5565b5b50565b6000819050919050565b61235981612346565b82525050565b60006040820190506123746000830185612350565b6123816020830184612350565b9392505050565b6000604051905090565b600080fd5b600080fd5b6123a581612346565b81146123b057600080fd5b50565b6000813590506123c28161239c565b92915050565b6000602082840312156123de576123dd612392565b5b60006123ec848285016123b3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612420826123f5565b9050919050565b61243081612415565b82525050565b600060208201905061244b6000830184612427565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561248b578082015181840152602081019050612470565b8381111561249a576000848401525b50505050565b6000601f19601f8301169050919050565b60006124bc82612451565b6124c6818561245c565b93506124d681856020860161246d565b6124df816124a0565b840191505092915050565b6000602082019050818103600083015261250481846124b1565b905092915050565b61251581612415565b811461252057600080fd5b50565b6000813590506125328161250c565b92915050565b60006020828403121561254e5761254d612392565b5b600061255c84828501612523565b91505092915050565b600060208201905061257a6000830184612350565b92915050565b60008115159050919050565b61259581612580565b82525050565b60006020820190506125b0600083018461258c565b92915050565b600081519050919050565b600082825260208201905092915050565b60006125dd826125b6565b6125e781856125c1565b93506125f781856020860161246d565b612600816124a0565b840191505092915050565b600060a0820190506126206000830188612427565b61262d6020830187612350565b818103604083015261263f81866125d2565b905061264e606083018561258c565b61265b6080830184612350565b9695505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6126a7826124a0565b810181811067ffffffffffffffff821117156126c6576126c561266f565b5b80604052505050565b60006126d9612388565b90506126e5828261269e565b919050565b600067ffffffffffffffff8211156127055761270461266f565b5b61270e826124a0565b9050602081019050919050565b82818337600083830152505050565b600061273d612738846126ea565b6126cf565b9050828152602081018484840111156127595761275861266a565b5b61276484828561271b565b509392505050565b600082601f83011261278157612780612665565b5b813561279184826020860161272a565b91505092915050565b600067ffffffffffffffff8211156127b5576127b461266f565b5b602082029050602081019050919050565b600080fd5b60006127de6127d98461279a565b6126cf565b90508083825260208201905060208402830185811115612801576128006127c6565b5b835b8181101561284857803567ffffffffffffffff81111561282657612825612665565b5b808601612833898261276c565b85526020850194505050602081019050612803565b5050509392505050565b600082601f83011261286757612866612665565b5b81356128778482602086016127cb565b91505092915050565b6000806040838503121561289757612896612392565b5b600083013567ffffffffffffffff8111156128b5576128b4612397565b5b6128c18582860161276c565b925050602083013567ffffffffffffffff8111156128e2576128e1612397565b5b6128ee85828601612852565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61292d81612415565b82525050565b600061293f8383612924565b60208301905092915050565b6000602082019050919050565b6000612963826128f8565b61296d8185612903565b935061297883612914565b8060005b838110156129a95781516129908882612933565b975061299b8361294b565b92505060018101905061297c565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006129fe82612451565b612a0881856129e2565b9350612a1881856020860161246d565b612a21816124a0565b840191505092915050565b6000612a3883836129f3565b905092915050565b6000602082019050919050565b6000612a58826129b6565b612a6281856129c1565b935083602082028501612a74856129d2565b8060005b85811015612ab05784840389528151612a918582612a2c565b9450612a9c83612a40565b925060208a01995050600181019050612a78565b50829750879550505050505092915050565b600060a0820190508181036000830152612adc8188612958565b90508181036020830152612af081876124b1565b90508181036040830152612b048186612a4d565b90508181036060830152612b1881856124b1565b90508181036080830152612b2c8184612a4d565b90509695505050505050565b600067ffffffffffffffff821115612b5357612b5261266f565b5b612b5c826124a0565b9050602081019050919050565b6000612b7c612b7784612b38565b6126cf565b905082815260208101848484011115612b9857612b9761266a565b5b612ba384828561271b565b509392505050565b600082601f830112612bc057612bbf612665565b5b8135612bd0848260208601612b69565b91505092915050565b60008060408385031215612bf057612bef612392565b5b6000612bfe85828601612523565b925050602083013567ffffffffffffffff811115612c1f57612c1e612397565b5b612c2b85828601612bab565b9150509250929050565b60008060408385031215612c4c57612c4b612392565b5b6000612c5a858286016123b3565b9250506020612c6b85828601612523565b9150509250929050565b60006020820190508181036000830152612c8f8184612958565b905092915050565b600080600060608486031215612cb057612caf612392565b5b6000612cbe86828701612523565b9350506020612ccf868287016123b3565b925050604084013567ffffffffffffffff811115612cf057612cef612397565b5b612cfc86828701612bab565b9150509250925092565b6000604082019050612d1b6000830185612427565b8181036020830152612d2d81846125d2565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612d7d57607f821691505b60208210811415612d9157612d90612d36565b5b50919050565b7f6f776e657220646f65736e277420657869737400000000000000000000000000600082015250565b6000612dcd60138361245c565b9150612dd882612d97565b602082019050919050565b60006020820190508181036000830152612dfc81612dc0565b9050919050565b7f43616c6c206e6f742073656e6420627920636f6e747261637400000000000000600082015250565b6000612e3960198361245c565b9150612e4482612e03565b602082019050919050565b60006020820190508181036000830152612e6881612e2c565b9050919050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000612ea560098361245c565b9150612eb082612e6f565b602082019050919050565b60006020820190508181036000830152612ed481612e98565b9050919050565b7f747820646f6573206e6f74206578697374000000000000000000000000000000600082015250565b6000612f1160118361245c565b9150612f1c82612edb565b602082019050919050565b60006020820190508181036000830152612f4081612f04565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f747820616c726561647920657865637574656400000000000000000000000000600082015250565b6000612fac60138361245c565b9150612fb782612f76565b602082019050919050565b60006020820190508181036000830152612fdb81612f9f565b9050919050565b7f7478206e6f7420636f6e6669726d656400000000000000000000000000000000600082015250565b600061301860108361245c565b915061302382612fe2565b602082019050919050565b600060208201905081810360008301526130478161300b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061308882612346565b915061309383612346565b9250828210156130a6576130a561304e565b5b828203905092915050565b7f6f776e657220616c726561647920657869737473000000000000000000000000600082015250565b60006130e760148361245c565b91506130f2826130b1565b602082019050919050565b60006020820190508181036000830152613116816130da565b9050919050565b7f696e76616c696420757365720000000000000000000000000000000000000000600082015250565b6000613153600c8361245c565b915061315e8261311d565b602082019050919050565b6000602082019050818103600083015261318281613146565b9050919050565b7f75736572206861736e742070726f706f73656420796574210000000000000000600082015250565b60006131bf60188361245c565b91506131ca82613189565b602082019050919050565b600060208201905081810360008301526131ee816131b2565b9050919050565b7f747820616c726561647920636f6e6669726d6564000000000000000000000000600082015250565b600061322b60148361245c565b9150613236826131f5565b602082019050919050565b6000602082019050818103600083015261325a8161321e565b9050919050565b600061326c82612346565b915061327783612346565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156132ac576132ab61304e565b5b828201905092915050565b60006040820190506132cc6000830185612350565b81810360208301526132de81846125d2565b90509392505050565b7f63616e6e6f742065786563757465207478000000000000000000000000000000600082015250565b600061331d60118361245c565b9150613328826132e7565b602082019050919050565b6000602082019050818103600083015261334c81613310565b9050919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461338081612d65565b61338a8186613353565b945060018216600081146133a557600181146133b6576133e9565b60ff198316865281860193506133e9565b6133bf8561335e565b60005b838110156133e1578154818901526001820191506020810190506133c2565b838801955050505b50505092915050565b60006133fe8284613373565b915081905092915050565b7f7478206661696c65640000000000000000000000000000000000000000000000600082015250565b600061343f60098361245c565b915061344a82613409565b602082019050919050565b6000602082019050818103600083015261346e81613432565b905091905056fea264697066735822122021bd5b82ebc862f29b222e5b458599b449d352dcb22f03a1b04f182c3d315f8164736f6c634300080a0033a26469706673582212205872afd38687945ae78ca511cee69d7f394262d75b6e53019e373c822399ace364736f6c634300080a0033", "linkReferences": {}, "deployedLinkReferences": {}}
{"importMap": "./import-map.json", "compilerOptions": {"allowJs": true, "emitDecoratorMetadata": true, "strict": true}, "lint": {"files": {"include": ["src/", "samples/", "mod.ts", "*.md", "*.json"], "exclude": []}, "rules": {"tags": ["recommended"], "include": [], "exclude": []}}, "fmt": {"files": {"include": ["src/", "samples/", "mod.ts", "*.md", "*.json"], "exclude": []}}, "test": {"files": {"include": ["src/**/*.test.[js,jsx,ts,tsx]"], "exclude": []}}, "bench": {"files": {"include": ["src/**/*.bench.[js,jsx,ts,tsx]"], "exclude": []}}, "tasks": {"cleanup": "rm deno.lock && deno cache --reload ./src/main.ts", "start": "deno run ./src/main.ts", "dev": "deno run --watch ./src/main.ts", "test": "deno test ./src/ --parallel --coverage=./etc/coverage", "test:coverage": "deno coverage ./etc/coverage", "test:generate-lcov": "deno coverage ./etc/coverage --lcov > ./etc/coverage/cov_profile.lcov", "bench": "deno bench ./src/"}}
{"importMap": "./import_map.json", "tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}}
{"imports": {"../deno.js": "../null.js"}}
{"tasks": {"start": "deno run -A mod.ts", "install": "deno install --allow-read --allow-write --allow-env --allow-net -rfn dnrm mod.ts", "release-npm": "deno run -A --unstable release-npm.ts", "release": "deno run --allow-read --allow-write --allow-env --allow-run https://deno.land/x/easy_std@v0.4.5/scripts/release.ts"}}
{"lock": false, "tasks": {"generate-mod": "deno run --allow-read --allow-env --allow-net --allow-write src/tl/generate_module.ts && deno fmt src/tl/api.d.ts"}, "fmt": {"options": {"indentWidth": 2, "proseWrap": "preserve"}}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"tasks": {"check": "deno task check:mod && deno task check:ext && deno task check:examples", "check:mod": "deno check --unstable mod.ts", "check:ext": "deno check --unstable ext/*.ts", "check:examples": "deno check --unstable examples/*.ts", "test": "deno test --unstable -A test/test.ts", "example:hello_python": "deno run -A --unstable examples/hello_python.ts", "example:matplotlib": "deno run -A --unstable examples/matplotlib.ts", "example:pip_import": "deno run -A --unstable examples/pip_import.ts", "example:run_code": "deno run -A --unstable examples/run_code.ts", "example:tensorflow": "deno run -A --unstable examples/tensorflow.ts"}}
{"lock": false, "tasks": {"build-npm": "deno run -A scripts/build_npm.ts $(git describe --tags --always --dirty)", "test": "deno test --unstable -A --parallel", "check": "deno check --unstable $(find . -name '*.ts')", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts' -not -path '*/npm/*')"}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "preview": "DENO_DEPLOYMENT_ID=abc deno run -A main.ts"}, "importMap": "./import_map.json"}
{"compilerOptions": {"declaration": true, "sourceMap": true}}
{"tasks": {"start": "deno run -A server/dev.ts", "dev": "deno run -A --watch server/dev.ts"}, "imports": {"react": "https://esm.sh/react@18.3.0-next-3706edb81-20230308&dev", "react/": "https://esm.sh/react@18.3.0-next-3706edb81-20230308&dev/", "react-dom": "https://esm.sh/react-dom@18.3.0-next-3706edb81-20230308&dev", "react-dom/": "https://esm.sh/react-dom@18.3.0-next-3706edb81-20230308&dev/", "react-server-dom-webpack": "https://esm.sh/react-server-dom-webpack@0.0.0-experimental-41b4714f1-20230328&dev", "react-server-dom-webpack/": "https://esm.sh/react-server-dom-webpack@0.0.0-experimental-41b4714f1-20230328&dev/"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "react", "lib": ["deno.window", "dom", "dom.iterable"], "allowJs": true}, "fmt": {"options": {"semiColons": false}, "files": {"exclude": ["dist"]}}, "lint": {"files": {"exclude": ["dist"]}}}
{"tasks": {"test": "deno check **/*.js **/*.ts && deno fmt --check && deno lint && deno test"}, "compilerOptions": {"lib": ["deno.ns", "es2022", "dom"]}, "fmt": {"proseWrap": "preserve"}}
{"compilerOptions": {"lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["deno", "deno.jsonc", "apps/web/src", "packages/helper/src"], "exclude": ["node_modules", "packages/deno-pkg-node", "deno/packages"]}, "rules": {"tags": ["recommended"], "exclude": ["no-unused-vars", "no-implicit-any", "no-explicit-any", "require-await", "ban-ts-comment"]}}, "fmt": {"files": {"include": ["src", "deno.jsonc"], "exclude": ["node_modules"]}, "options": {"useTabs": false, "lineWidth": 100, "indentWidth": 2, "singleQuote": true}}}
{"tasks": {"bootstrap": "deno task setup:rust", "fix": "deno task fix:clippy && deno task fix:format", "fix:format": "dprint fmt", "fix:clippy": "cargo clippy --fix --allow-dirty --allow-staged", "lint:format": "dprint check", "lint:clippy": "cargo clippy", "setup:rust": "cargo insta -h || cargo install cargo-insta; cargo upgrade -h || cargo install cargo-edit || cargo install cargo-audit --features=fix", "snapshot": "cargo insta review", "test": "cargo test", "update:crates": "cargo upgrade", "update:dprint": "dprint config update", "update": "deno task update:crates && deno task update:dprint"}, "compilerOptions": {"noUncheckedIndexedAccess": true, "noImplicitOverride": true}, "lint": {"files": {"include": ["./"], "exclude": ["**/fixtures", "**/snapshots"]}, "rules": {"tags": ["recommended"], "include": [], "exclude": ["ban-types"]}}}
{"lint": {"include": ["*.ts", "*.js", "test/"], "rules": {"tags": ["recommended"]}}}
{"tasks": {"start": "deno run -A --watch=example/pages example/mod.ts", "format": "deno fmt", "lint": "deno lint", "test": "deno test -A test"}, "fmt": {"files": {"exclude": ["CHANGELOG.md"]}}}
{"tasks": {"build": "deno run -A ../build.ts", "run": "deno run -A ./main.ts", "dev": "export APP_ENTRY_POINT=./main.ts && deno run -A --import-map=./import_map.json ../dev.ts", "test": "export APP_ENV=test && deno test -A .", "test-watch": "export APP_ENV=test && deno test -A --watch .", "check": "deno lint && deno fmt --check", "cache-reload": "deno cache --reload main.ts && deno cache --reload --import-map=./import_map.json ../dev.ts", "git-rebase": "git fetch origin main && git rebase --onto origin/main HEAD"}, "compilerOptions": {"lib": ["esnext", "dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "jsx": "react-jsx", "jsxImportSource": "npm/react"}, "lint": {"exclude": ["public/build"]}, "fmt": {"exclude": ["public/build"]}, "importMap": "./import_map.json"}
{"tasks": {"bookmarklet": "deno run -A scripts/config/bookmarklet.ts", "check": "sh -c 'deno check scripts/*.{js,ts,tsx}'", "script": "deno task check && deno run -A scripts/config/script.ts", "watch": "deno run -A scripts/config/watch.ts"}, "lint": {"files": {"include": ["scripts/config"], "exclude": ["scripts/generated", "scripts/vendor", "node_modules"]}}, "compilerOptions": {"lib": ["DOM", "DOM.Iterable", "Deno.ns"]}, "importMap": "deno.json", "imports": {"@github/catalyst": "https://esm.sh/@github/catalyst@1.5.0?target=es2021", "@github/hotkey": "https://esm.sh/@github/hotkey@2.0.1?target=es2021", "@kidonng/typed-json": "https://esm.sh/@kidonng/typed-json@1.2.0", "@primer/octicons-react": "https://esm.sh/@primer/octicons-react@17.3.0?target=es2021&alias=react:dom-chef&external=dom-chef&pin=v87", "animation-observer": "https://esm.sh/animation-observer@2.1.1?target=es2021&pin=v90", "code-tag": "https://esm.sh/code-tag@1.1.0?target=es2021", "dom-chef": "https://esm.sh/dom-chef@5.1.0?target=es2021", "element-ready": "https://esm.sh/element-ready@6.2.1?target=es2021", "esbuild_deno_loader": "https://deno.land/x/esbuild_deno_loader@0.5.2/mod.ts?external=esbuild", "esbuild": "https://deno.land/x/esbuild@v0.14.51/mod.js", "fzf": "https://esm.sh/fzf@0.5.1?target=es2021", "github-url-detection": "https://esm.sh/github-url-detection@6.0.1?target=es2021", "https://esm.sh/v90/typed-query-selector@2.6.1/parser.js/shim.d.ts": "https://esm.sh/v90/typed-query-selector@2.6.1/parser.d.ts", "medium-zoom": "https://esm.sh/medium-zoom@1.0.6?target=es2021", "std/": "https://deno.land/std@0.150.0/", "typed-query-selector": "https://esm.sh/typed-query-selector@2.6.1"}}
{"lint": {"include": ["**/*.ts"], "exclude": ["elm-stuff/", "node_modules/"], "rules": {"tags": ["recommended"]}}}
{"tasks": {"example:compress": "deno run -A --unstable examples/run.ts compress.scss c", "example:css-err": "deno run -A --unstable examples/run.ts css-err.scss", "example:import": "deno run -A --unstable examples/run.ts import.scss", "example:indent": "deno run -A --unstable examples/run.ts indent.sass", "example:simple": "deno run -A --unstable examples/run.ts simple.scss", "vendor": "powershell -NoLogo -NoProfile ./dart-sass/vendor.ps1"}}
{"tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "imports": {"lume/": "https://deno.land/x/lume@v1.18.1/"}}
{"fmt": {"lineWidth": 140, "semiColons": false, "singleQuote": true, "useTabs": true}, "lint": {"rules": {"include": ["no-external-import", "explicit-module-boundary-types"]}}, "lock": false}
{"tasks": {"build": "deno run --allow-read --allow-write --allow-net --allow-run --allow-env ./style/patch.ts && deno fmt", "dev": "deno run -A --unstable --watch --no-check ./example/main.ts", "test": "deno test --allow-read", "coverage": "deno test --allow-read --coverage=cov_profile"}, "lock": false}
{"fmt": {"files": {"exclude": ["cjs", "mjs", "types", "package.json"]}}, "lint": {"files": {"exclude": ["cjs", "mjs", "types"]}}, "tasks": {"dnt": "deno run -A scripts/dnt.ts", "test": "rm -rf coverage && deno test --allow-read --coverage=coverage --parallel", "cov": "deno coverage ./coverage --lcov --output=coverage/coverage.lcov", "cov:report": "genhtml -o coverage-html coverage/coverage.lcov", "test-report": "deno task test ; deno task cov && deno task cov:report"}}
{"importMap": "./import-map.json", "tasks": {"update": "deno run --check --allow-read=.. --allow-env --allow-net main.ts"}}
{"importMap": "import_map.server.json", "tasks": {"build": "deno run -A --no-check ./build.ts", "dev": "deno run -A --no-check --watch=app/ --import-map=import_map.server.dev.json ./dev.ts", "start": "deno run -A --import-map=import_map.server.json ./prod.ts"}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"]}}
{"tasks": {"build": "deno run -A src/build.ts --site_dir src/_site", "dev": "deno run -A --node-modules-dir src/build.ts --site_dir src/_site --watch --base=mononykus"}, "compilerOptions": {"strict": true, "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "checkJs": true, "noUncheckedIndexedAccess": true}, "lint": {"exclude": ["build", "src/_site/build", ".cache"]}, "fmt": {"useTabs": true, "exclude": ["build", "src/_site/build", ".cache"]}}
{"importMap": "import_map.json", "fmt": {"files": {"include": ["./"], "exclude": []}, "options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": true, "proseWrap": "preserve"}}}
{"compilerOptions": {"experimentalDecorators": true}}
{"tasks": {"fmt": "deno fmt mod.ts src/ --check", "test": "deno test --unstable --allow-read --allow-net --coverage=coverage", "lcov": "deno coverage coverage --lcov --output=coverage/report.lcov", "cover": "deno task clean && deno task test && deno task lcov && genhtml -o coverage/html coverage/report.lcov", "clean": "rm -rf ./npm ./coverage"}}
{"hello": {"dependencies": {"deno.land": "^1.33.3"}}, "imports": {"deno/": "https://cdn.jsdelivr.net/gh/denoland/deno_std@0.200.0/", "color": "https://cdn.jsdelivr.net/gh/denoland/deno_std@0.200.0/fmt/colors.ts"}, "compilerOptions": {"allowJs": false, "strict": true}, "lint": {"include": ["src/"]}, "tasks": {"start": "deno run src/main.ts"}}
{"fmt": {"options": {"useTabs": true, "lineWidth": 120}}}
{"tasks": {"test": "deno lint && deno fmt --check && deno test -A --no-check", "cache": "deno cache --lock=deno.lock --lock-write deps.js dev_deps.js test/hyper.js", "test:harness": "deno run --no-check --unstable -A ./test/hyper.js"}, "fmt": {"include": ["./"], "exclude": ["./CHANGELOG.md"], "lineWidth": 100, "singleQuote": true, "semiColons": false}}
{"tasks": {"demo": "deno run  --allow-net --allow-read --allow-env=NODE_DEBUG --watch --no-check testdata/my_blog.tsx --dev", "test": "deno test --no-check=remote --allow-read"}}
{"compilerOptions": {"lib": ["dom", "ES2016"]}}
{"importMap": "import_map.json", "tasks": {"build": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "serve": "deno task build -s --quiet"}, "compilerOptions": {"lib": ["deno.ns", "deno.unstable", "dom", "dom.iterable"], "strict": true}, "lint": {"rules": {"exclude": ["no-explicit-any"]}}, "fmt": {"options": {"useTabs": true, "lineWidth": 100, "singleQuote": true, "indentWidth": 4}}}
{"tasks": {"example": "deno run --allow-run --allow-env --allow-read --allow-write --allow-net example/index.ts"}, "lint": {"files": {"include": ["mod.ts", "deps.ts", "example/"]}}, "fmt": {"files": {"include": ["mod.ts", "deps.ts", "example/"]}, "options": {"singleQuote": true}}}
{"version": "1.36.4", "description": "A secure runtime for JavaScript and TypeScript", "homepage": "https://deno.land", "license": "MIT", "architecture": {"64bit": {"url": "https://ghproxy.net/https://github.com/denoland/deno/releases/download/v1.36.4/deno-x86_64-pc-windows-msvc.zip", "hash": "f5b5aca801e5f102876fa56b600bc8fa833f41436c68fa45875e8a9b43b188b1"}}, "bin": "deno.exe", "checkver": {"github": "https://github.com/denoland/deno"}, "autoupdate": {"architecture": {"64bit": {"url": "https://ghproxy.net/https://github.com/denoland/deno/releases/download/v$version/deno-x86_64-pc-windows-msvc.zip"}}}}
{"tasks": {"dev": "deno run -A --watch main.ts", "build": "deno compile -A -o endict main.ts"}}
{"compilerOptions": {"checkJs": false, "experimentalDecorators": false, "noFallthroughCasesInSwitch": true, "noImplicitReturns": true, "noUncheckedIndexedAccess": true}, "lint": {"files": {"exclude": ["target"], "include": ["."]}, "rules": {"exclude": ["ban-types", "no-empty", "no-explicit-any", "no-namespace", "require-await"], "tags": ["recommended"]}}, "importMap": "import_map.json", "include": ["."], "tasks": {"build_npm_pkg": "deno run -A --no-check=remote _tasks/build_npm_pkg.ts", "main": "deno run -A --no-check=remote main.ts", "test": "deno test -A --no-check=remote -L=info"}}
{"compilerOptions": {"allowJs": true, "checkJs": false, "lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["build.ts", "src/", "spec/", "test/"]}, "rules": {"tags": ["recommended"], "include": ["no-unused-vars"], "exclude": ["no-inferrable-types", "no-explicit-any"]}}, "fmt": {"files": {"include": ["build.ts", "src/", "spec/", "test/"]}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}}}
{"exclude": ["npm/"]}
{"tasks": {"test": "deno run --allow-all ./test/index.js"}}
{"tasks": {"release": "deno run --allow-run ./scripts/release.ts"}}
{"fmt": {"options": {"singleQuote": true}, "files": {"exclude": ["tmp"]}}}
{"tasks": {"test": "deno test --allow-net --allow-env=BUF_BIGINT_DISABLE", "regen-proto": "cd private/protobuf && deno run --allow-read=. --allow-write=. --allow-run=protoc,npm,npm.cmd regenerate.ts", "build-npm": "deno run -A ./npm-build/dnt.ts"}, "test": {"files": {"exclude": ["npm-build"]}}}
{"tasks": {"dev": "deno run --watch --allow-net --allow-env=PORT main.ts"}}
{"tasks": {"build": "deno run --allow-net --cached-only --allow-read --allow-write --allow-env scripts/build.ts", "clean": "rm -rf ./dist", "check": "dprint check && typos && deno fmt --check && deno lint && deno check src/*.ts* scripts/*.ts && deno task check:manifest", "check:manifest": "deno run scripts/manifestValidator.ts", "stylelint": "deno task cache:stylelint && deno run --node-modules-dir --allow-env --allow-read --allow-sys npm:stylelint@15.10.3/stylelint src/*.css | deno run --allow-sys scripts/checkEmpty.ts", "deps": "deno --version && mogrify --version && dprint --version && typos --version && actionlint --version && rg --version", "cache": "deno cache --node-modules-dir --reload **/*.ts **/*.tsx", "update": "deno cache --lock-write --node-modules-dir npm:stylelint@15.10.3 npm:stylelint-config-recommended@13.0.0 **/*.ts **/*.tsx", "cache:stylelint": "deno cache --node-modules-dir npm:stylelint@15.10.3 npm:stylelint-config-recommended@13.0.0", "resize": "mogrify -resize 128x128! assets/icon-*.png", "all": "deno task deps && deno task check && deno task build && deno task stylelint && deno task resize"}, "compilerOptions": {"lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"], "types": ["https://esm.sh/v128/chrome-types@0.1.216/index.d.ts"]}, "lint": {"include": ["src/", "scripts/"], "rules": {"tags": ["recommended"]}}, "fmt": {"singleQuote": true, "include": ["src/", "scripts/"]}}
{"importMap": "import_map.json", "tasks": {"dev": "netlify dev", "encode": "deno run --allow-read encode.ts", "test": "deno test --allow-env --allow-net"}}
{"tasks": {"run": "deno run -A main.ts", "compile": "deno compile -A --target x86_64-pc-windows-msvc --output dist/hello.exe main.ts"}}
{"velociraptor": {"scripts": {"start": "deno run --allow-env --allow-net --allow-read --allow-write --allow-run run.ts", "dev": {"cmd": "deno run --allow-env --allow-net --allow-read --allow-run run.ts", "watch": ["./code"]}}}}
{"tasks": {"dev": "denon run --allow-read --allow-env --allow-net src/main.ts", "test:tebex": "deno test --allow-read --allow-env --allow-net --unstable src/tests/tebex.tests.ts", "test": "deno run --allow-run --allow-read --allow-env --allow-net --unstable src/tests/all.ts", "config": "deno run --allow-read --allow-write --allow-env --allow-net -A src/cli/configure.ts", "start": "deno run --allow-read --allow-env --allow-net --unstable -A src/main.ts"}}
{"fmt": {"indentWidth": 4, "exclude": ["dist/", ".coverage/", "**/*.md"]}, "lint": {"exclude": ["dist/", ".coverage/"]}, "test": {"exclude": ["dist/", ".coverage/"]}, "imports": {"https://deno.land/std/": "https://deno.land/std@0.195.0/", "https://deno.land/x/dnt/": "https://deno.land/x/dnt@0.38.0/", "xoshiro128": "./mod.ts", "xoshiro128/random": "./random.ts"}}
{"lint-staged": {"*": "deno lint && deno fmt", "deno.jsonc": "deno task setup-hooks"}, "tasks": {"run": "deno run --allow-env --allow-read --allow-net", "post": "deno task run post.ts", "chain_feed": "deno task run chain_feed.ts", "debug": "deno task run main.ts debug", "main": "deno task run main.ts", "notifications": "deno task run --allow-run=git handle_notifications.ts", "test": "deno test --allow-env --allow-read --allow-net --allow-none", "cov": "deno task test --coverage=cov_profile; deno coverage cov_profile", "lint": "deno lint --ignore=cov_profile", "fmt": "deno fmt --ignore=cov_profile", "ci": "deno task lint && deno task fmt --check && deno task test", "deps": "deno run --allow-read --allow-write --allow-net --allow-run https://deno.land/x/udd@0.8.2/main.ts --test='deno task test' deno.jsonc deps.ts", "setup-hooks": "deno run --allow-read --allow-run https://pax.deno.dev/kawarimidoll/deno-dev-template@2.0.1/scripts/setup-hooks.ts", "commit-msg": "npx commitlint -x @commitlint/config-conventional -e \"$1\"", "pre-commit": "deno run --allow-read --allow-env --allow-run --allow-write https://pax.deno.dev/kawarimidoll/deno-dev-template@2.0.1/scripts/lint-staged.ts", "pre-push": "deno task ci"}}
{"compilerOptions": {"types": ["https://raw.githubusercontent.com/proudust/deno-gas-types/main/types/index.d.ts"]}, "imports": {}, "exclude": ["dist", "node_modules"], "tasks": {"build": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write _build.ts", "deploy": "deno task build && deno task build deploy"}}
{"lock": false, "tasks": {"upgrade": "deno run --no-lock -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')", "check": "deno check --unstable $(find . -name '*.ts')", "lint": "deno lint --unstable $(find . -name '*.ts')", "format-zsh": "beautysh -t $(find . -name '*.zsh')", "format-ts": "deno fmt --unstable $(find . -name '*.ts')", "format": "deno task format-zsh; deno task format-ts"}}
{"tasks": {"dev": "deno run --watch -A main.ts", "deploy:commands": "deno run -A deploy-commands.ts"}, "imports": {"discord": "npm:discord.js@14.11.0"}}
{"fmt": {"files": {"exclude": ["dist", "node_modules"]}}, "lint": {"files": {"exclude": ["dist", "node_modules"]}}, "test": {"files": {"exclude": ["dist", "node_modules"]}}, "tasks": {"build": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write _build.ts", "deploy": "deno task build && deno task build deploy"}}
{"fmt": {"options": {"indentWidth": 4, "proseWrap": "preserve"}}}
{"compilerOptions": {"strict": true}, "lint": {"rules": {"exclude": ["camelcase", "no-empty-interface"]}}, "fmt": {"files": {"exclude": ["LICENSE.md"]}, "options": {"lineWidth": 100, "indentWidth": 4, "singleQuote": true}}}
{"tasks": {"dev": "deno run --watch -q -A --unstable src/main.ts"}, "fmt": {"options": {"semiColons": false}}}
{"tasks": {"test": "deno test --allow-ffi --unstable", "coverage1": "deno test --allow-ffi --coverage=cov_profile --unstable", "coverage2": "deno coverage cov_profile --include=struct.ts", "coverage3": "deno coverage cov_profile --lcov --output=cov_profile.lcov --include=struct.ts"}, "fmt": {"options": {"semiColons": false, "lineWidth": 240}}}
{"importMap": "import_map.json", "tasks": {"test": "deno test", "dev": "deno run --allow-net --allow-env --allow-read --watch mod.ts"}}
{"lint": {"rules": {"exclude": ["no-namespace", "no-explicit-any"]}}}
{"importMap": "import_map.json", "tasks": {"dev": "deno run --allow-net --allow-read=. --allow-env --watch app.ts", "start": "deno run --allow-net --allow-read=. --allow-env app.ts", "cache": "deno cache app.ts"}}
{"tasks": {"compile": "deno compile -A -o DEBUG-ALL.exe ./all.ts && deno compile -A -o DEBUG-MENU.exe ./menu.ts && deno compile -A -o DEBUG-SUB.exe ./sub.ts "}}
{"tasks": {"dev": "deno run --watch -A main.ts"}, "imports": {"xxhash-wasm-102": "npm:xxhash-wasm@^1.0.2", "crypto": "node:crypto", "minimatch": "npm:minimatch"}}
{"tasks": {"start": "deno run --allow-net --allow-read --allow-env start.ts", "serverless": "deno run --allow-net --allow-read --allow-env start.ts"}, "importMap": "./import_map.json", "fmt": {"options": {"useTabs": false, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}}
{"tasks": {"min-max-sum": "deno run --unstable min-max-sum.ts", "page": "deno run --unstable pagination.ts", "crud": "deno run --unstable crud.ts", "get-many": "deno run --unstable get-many.ts", "sort": "deno run --unstable sort.ts", "sort-dup": "deno run --unstable sort-dup.ts", "lists": "deno run --unstable lists.ts", "sec-index": "deno run --unstable secondary-index.ts", "history": "deno run --unstable record-history.ts", "key-order": "deno run --unstable key-order.ts", "atomic": "deno run --unstable atomic.ts", "queue": "deno run --unstable queue.ts", "count": "deno run --unstable count.ts"}}
{"fmt": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": true, "semiColons": false}, "tasks": {"test": "deno test --coverage=coverage", "cov": "deno coverage coverage --lcov > coverage.lcov"}}
{"tasks": {"schema": "deno run -A schema.ts", "schema:vscode": "deno run -A vscode.ts", "validate": "deno run -A validate.ts"}}
{"lock": false, "tasks": {"test": "deno test --unstable -A --parallel", "check": "deno check --unstable $(find . -name '*.ts')", "upgrade": "deno run -A https://deno.land/x/udd/main.ts $(find . -name '*.ts')"}}
{"tasks": {"dev": "deno run -A --watch src/main.js", "test": "deno test -A"}, "importMap": "./import_map.json"}
{"tasks": {"cli": "deno run -A src/cli.ts"}, "importMap": "deno.json", "imports": {"arg": "https://esm.sh/arg@5.0.2", "cheerio": "https://esm.sh/cheerio@1.0.0-rc.11", "progress": "https://deno.land/x/progress@v1.2.7/mod.ts", "sanitize-filename": "https://esm.sh/sanitize-filename@1.6.3", "std/": "https://deno.land/std@0.140.0/"}}
{"compilerOptions": {"lib": ["deno.window", "deno.ns", "dom"], "jsx": "preserve", "jsxImportSource": "npm:solid-js"}, "tasks": {"build": "deno run --allow-env --allow-write --allow-read --allow-run --allow-sys --allow-net './scripts/build.ts'", "serve": "deno run --allow-env --allow-write --allow-read --allow-net --allow-run './scripts/serve.ts' --watch"}, "importMap": "import_map.json"}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "lock": false, "importMap": "./import_map.json"}
{"imports": {"testing/": "https://deno.land/std@0.198.0/testing/", "dnt": "https://deno.land/x/dnt@0.38.0/mod.ts"}, "fmt": {"include": ["README.md", "deno.json", "dnt.ts", "mod.ts", "test/"], "exclude": ["**/*/hpke*.js", "test/runtimes/bun", "test/runtimes/browsers/node_modules", "test/runtimes/cloudflare"]}, "lint": {"include": ["mod.ts", "test/"], "exclude": ["**/*/hpke*.js", "test/runtimes/bun", "test/runtimes/browsers/node_modules", "test/runtimes/cloudflare"]}, "tasks": {"test": "deno fmt && deno lint && deno test test -A --fail-fast --doc --coverage=coverage --parallel --allow-read", "cov": "deno coverage ./coverage --lcov --exclude='test'", "dnt": "deno run -A dnt.ts $(git describe --tags $(git rev-list --tags --max-count=1))", "minify": "esbuild npm/esm/x/chacha20poly1305/mod.js --bundle --format=esm --minify"}}
{"tasks": {"backend": "cd backend && deno task dev", "frontend": "cd frontend && deno task start", "dev": "deno task backend & deno task frontend", "test_backend": "cd backend && deno task test", "test_actions_backend": "cd backend && deno task test_actions", "test": "deno task clean && deno task test_backend", "test_actions": "deno task test_actions_backend", "clean_backend": "cd backend && deno task clean", "clean": "deno task clean_backend", "postgres": "pgcli -h pharaoh -p 5433 -U postgres", "lint": "deno lint"}}
{"imports": {"std/": "https://deno.land/std@0.181.0/"}, "tasks": {"dev": "watchexec deno task compile", "compile": "deno compile -A -o build/bin/mf src/main.ts"}}
{"fmt": {"options": {"semiColons": false}}, "tasks": {"template": "deno run -A template.ts template.md -o dist/slide.md", "html": "deno run -A npm:@marp-team/marp-cli dist/slide.md -o dist/index.html", "build": "deno task template && deno task html"}}
{"tasks": {"dev": "deno run -A --watch main.ts", "run": "deno run -A main.ts", "cli": "deno run -A cli.ts"}, "imports": {"std/": "https://deno.land/std@0.188.0/", "~/": "./", "deps": "./deps.ts"}, "lint": {"rules": {"exclude": ["no-unused-vars"]}}}
{"tasks": {"start": "deno run -A server.tsx", "dev": "deno run -A --watch=routes/,htmx/,utils/,server.tsx server.tsx"}, "imports": {"$/": "./", "std/": "https://deno.land/std@0.201.0/", "hono/": "https://deno.land/x/hono@v3.5.6/", "hono/jsx-runtime": "https://deno.land/x/hono@v3.5.6/jsx/jsx-runtime.ts", "hono/jsx-dev-runtime": "https://deno.land/x/hono@v3.5.6/jsx/jsx-dev-runtime.ts", "sexy-qr": "https://esm.sh/sexy-qr@0.3.2"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "hono"}, "lock": false}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "compilerOptions": {"strict": true}, "lint": {"files": {"include": ["source_vendor_import_map_fix_up.ts", "src/", "test/"]}, "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"], "exclude": ["ban-ts-comment", "no-unused-vars"]}}, "fmt": {"files": {"include": ["./"], "exclude": ["example/vendor"]}, "options": {"useTabs": true, "lineWidth": 120, "singleQuote": true, "proseWrap": "preserve"}}}
{"tasks": {"dev": "deno run -A --watch main.ts"}}
{"compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "https://cdn.esm.sh/@builder.io/qwik", "lib": ["dom", "dom.asynciterable", "deno.ns"]}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "start:check": "deno run -A --check --watch=static/,routes/ dev.ts", "compile-map": "deno run -A scripts/compileMap.ts", "create-radio-db": "deno run -A --unstable scripts/createRadioDb.ts; deno fmt", "create-radio-db:check-update": "deno run -A --unstable scripts/createRadioDb.ts check-update", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "exclude": ["static_server/db/db.json", "_fresh"], "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"@/": "./", "$fresh/": "https://deno.land/x/fresh@1.4.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@0.16.19", "twind/": "https://esm.sh/twind@0.16.19/"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}}}
{"compilerOptions": {"lib": ["ES2022", "DOM", "DOM.Iterable"]}, "lint": {"rules": {"exclude": ["prefer-const"]}}}
{"compilerOptions": {"allowJs": true, "strict": true}, "lint": {"rules": {"tags": ["recommended"]}}, "fmt": {"options": {"useTabs": false, "lineWidth": 80, "indentWidth": 4, "singleQuote": true, "proseWrap": "never"}, "files": {"exclude": [".github/"]}}, "tasks": {"start": "deno run --allow-net --allow-read --allow-env index.ts", "dev": "export DEV=true && deno run --allow-net --allow-read --allow-env --watch index.ts", "test": "deno task test:lint", "test:lint": "deno fmt --check", "lint:fix": "deno fmt && deno lint"}}
{"tasks": {"dev": "deno run --watch main.ts"}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "compilerOptions": {"strict": true}, "importMap": "./import_map.json", "tasks": {"dev": "deno run --allow-net --allow-read main.ts", "prod": "deno run --allow-net --allow-read --import-map=./vendor/import_map.json --no-remote main.ts", "source_vendor_import_map_fix_up": "deno run --allow-read --allow-write ../source_vendor_import_map_fix_up.ts", "vendor": "deno vendor --force main.ts && deno task source_vendor_import_map_fix_up --write"}}
{"tasks": {"run": "deno run --allow-net --allow-env dist/deno.js"}}
{"tasks": {"install": "deno install -A --node-modules-dir npm:tinro", "dev": "deno run -A --node-modules-dir npm:vite", "build": "deno run -A --node-modules-dir npm:vite build", "preview": "deno run -A --node-modules-dir npm:vite preview", "serve": "deno run --allow-net --allow-read https://deno.land/std@0.157.0/http/file_server.ts dist/", "test": "deno test -A --unstable", "lint": "deno lint", "fmt": "deno fmt"}, "imports": {"tinro": "npm:tinro", "crocks": "npm:crocks", "ramda": "npm:ramda", "arweave": "npm:arweave", "warp-contracts": "npm:warp-contracts", "zod": "https://deno.land/x/zod/mod.ts", "asserts": "https://deno.land/std/testing/asserts.ts", "@permaweb/stampjs": "https://esm.sh/@permaweb/stampjs", "robot3": "npm:robot3", "svelte-robot-factory": "npm:svelte-robot-factory"}}
{"fmt": {"files": {"include": ["."]}, "options": {"useTabs": true, "indentWidth": 4, "singleQuote": false}}, "lint": {"files": {"include": ["."]}, "rules": {"tags": ["recommended"]}}}
{"tasks": {"ci-test": "deno test --doc --no-run --import-map=./tests/import-map.json"}}
{"importMap": "import_map.json", "tasks": {"build": "deno run -A https://deno.land/x/lume@v1.7.4/ci.ts", "serve": "deno task build -- -s"}}
{"tasks": {"lint": "./bin/lint", "e2e": "./bin/e2e"}, "fmt": {"useTabs": true, "singleQuote": true, "lineWidth": 100, "exclude": ["e2e-test"]}, "lint": {"exclude": ["e2e-test"]}, "test": {"exclude": ["e2e-test"]}, "compilerOptions": {"strict": true, "strictPropertyInitialization": true, "strictBindCallApply": true, "strictFunctionTypes": true, "strictNullChecks": true, "noImplicitAny": true, "allowJs": false, "noImplicitReturns": true, "noImplicitOverride": true, "noUncheckedIndexedAccess": true}}
{"importMap": "./import-map/deno.json", "tasks": {"cli:compile": "./tasks/cli/compile", "cli:run": "./tasks/cli/run", "coverage": "./tasks/coverage", "test": "./tasks/test"}, "fmt": {"indentWidth": 2, "lineWidth": 80, "singleQuote": true, "useTabs": false}, "test": {"files": {"exclude": ["www/"]}}}
{"fmt": {"options": {"lineWidth": 160}, "exclude": ["_fresh"]}, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "build": "deno run -A dev.ts build", "preview": "deno run -A main.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}, "imports": {"$flowbite/": "https://deno.land/x/fresh_flowbite@1.0.0-1.7.0/", "$logging/": "https://deno.land/x/fresh_logging@1.1.2/", "$turnstile/": "https://deno.land/x/fresh_turnstile@1.0.0-0/", "$std/": "https://deno.land/std@0.158.0/", "freshwind/": "https://deno.land/x/freshwind@4.0.0/", "$fresh/": "https://deno.land/x/fresh@1.4.2/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "@twind/core": "https://esm.sh/@twind/core@1.1.2", "@twind/core/": "https://esm.sh/@twind/core@1.1.2/", "@twind/preset-tailwind": "https://esm.sh/@twind/preset-tailwind@1.1.2/"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}}
{"fmt": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}, "compilerOptions": {"noUncheckedIndexedAccess": true}}
{"lock": false, "tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"importMap": "./import_map.json", "tasks": {"start": "deno run --allow-net --allow-read --allow-env main.ts", "local": "deno run --allow-net --allow-read --allow-env local.ts"}, "lint": {"include": ["src/", "main.ts"], "rules": {"tags": ["recommended"], "include": ["ban-untagged-todo"]}}, "fmt": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "semiColons": true, "proseWrap": "preserve", "include": ["src/", "main.ts"]}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}}
{"fmt": {"options": {"indentWidth": 4}}}
{"imports": {"dotenv/": "https://deno.land/std@0.198.0/dotenv/", "zstd_wasm": "https://deno.land/x/zstd_wasm@0.0.20/deno/zstd.ts"}}
{"tasks": {"test": "deno test mod.test.ts", "release": "deno run --allow-read --allow-env --allow-write --allow-net --allow-run scripts/build.ts", "lint": "deno lint mod.ts mod.test.ts", "fmt": "deno fmt mod.ts mod.test.ts", "check": "deno check mod.ts mod.test.ts"}}
{"compilerOptions": {}}
{"tasks": {"gen-common-types": "cd ../competition-sheet && node gen_common_types.js ../broadcast/common/common_types.ts", "build": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write build.ts build", "build-watch": "deno run --allow-env --allow-net --allow-read --allow-run --allow-write build.ts watch", "start": "deno run --allow-env --allow-net --allow-read --allow-write main.ts", "start-watch": "deno run --watch --allow-env --allow-net --allow-read --allow-write main.ts", "dev": "deno task build-watch & deno task start-watch", "check": "deno check main.ts build.ts client/dashboard.ts client/competition_scene.ts client/result_scene.ts"}, "compilerOptions": {"lib": ["dom", "deno.ns", "deno.unstable"]}}
{"tasks": {"test": "deno test --allow-net"}, "imports": {"deps": "./deps.ts", "std/": "https://deno.land/std@0.200.0/"}, "test": {"include": ["./test/"]}, "fmt": {"semiColons": false, "singleQuote": true}, "lock": false}
{"tasks": {"dev": "deno run --watch main.ts", "testsub": "deno test -A sub_test.ts", "testmain": "deno test -A main_test.ts"}, "test": {"exclude": ["templates"]}}
{"$schema": "https://deno.land/x/deno/cli/schemas/config-file.v1.json", "fmt": {"lineWidth": 120, "proseWrap": "always"}, "tasks": {"bld": "deno run --allow-read=content,templates --allow-write=static unocss.ts", "dev": "deno run --allow-read=content,templates --allow-write=static --watch=templates unocss.ts", "min": "deno run --allow-read=content,templates --allow-write=static unocss.ts --minify"}}
{"tasks": {"main": "deno run --watch main.ts"}}
{"compilerOptions": {"allowJs": true, "lib": ["deno.window"], "strict": true}, "lint": {"files": {"include": ["src/"]}, "rules": {"tags": ["recommended"], "exclude": ["require-await"]}}, "fmt": {"files": {"include": ["src/"]}, "options": {"useTabs": true, "lineWidth": 80, "indentWidth": 4, "singleQuote": true, "proseWrap": "preserve"}}}
{"compilerOptions": {"lib": ["deno.ns", "dom", "dom.iterable", "dom.asynciterable"]}, "importMap": "./import_map.json", "fmt": {"files": {"include": ["src/", "deno.jsonc"], "exclude": ["dist/"]}, "options": {"useTabs": false, "lineWidth": 120, "indentWidth": 4, "singleQuote": false, "proseWrap": "preserve"}}}
{"tasks": {"start": "deno run -A --watch=static/,routes/ dev.ts", "start-net": "deno run --allow-net -A --watch=static/,routes/ dev.ts"}, "importMap": "./import_map.json", "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact"}}
{"tasks": {"lume": "echo \"import 'lume/cli.ts'\" | deno run --unstable -A -", "build": "deno task lume", "serve": "deno task lume -s"}, "imports": {"lume/": "https://deno.land/x/lume@v1.15.2/", "dayjs/": "https://deno.land/x/dayjs@v1.11.5/", "prism/": "npm:/prismjs@1.29.0/"}}
{"lock": false, "tasks": {"dev": "deno run -A --watch=static/,routes/,content/ dev.ts", "start": "deno run -A dev.ts", "update": "deno run -A -r https://fresh.deno.dev/update .", "log": "deno run --allow-net=www.omdbapi.com,openlibrary.org --allow-read=./static/api --allow-write=./static/api --allow-env src/log/cli.ts", "log:feed": "deno run -A src/log/feed.ts", "read": "deno run --allow-read=./static/api --allow-write=./static/api src/log/read_logs.ts", "blog": "deno run --allow-write=./content/blog src/blog.ts", "setup:hooks": "deno run -A -r https://deno.land/x/githooks/githooks.ts", "check": "deno fmt --check && deno lint", "check:types": "deno check **/*.tsx && deno check **/*.ts"}, "compilerOptions": {"jsx": "react-jsx", "jsxImportSource": "preact", "types": ["./src/types.d.ts", "./src/log/mod.d.ts"]}, "imports": {"$fresh/": "https://deno.land/x/fresh@1.4.2/", "$fresh_charts/": "https://deno.land/x/fresh_charts@0.3.1/", "preact": "https://esm.sh/preact@10.15.1", "preact/": "https://esm.sh/preact@10.15.1/", "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.2.1", "@preact/signals": "https://esm.sh/*@preact/signals@1.1.3", "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.2.3", "twind": "https://esm.sh/twind@1.0.7", "twind/": "https://esm.sh/twind@1.0.7/", "@twind/": "https://esm.sh/@twind/", "$std/": "https://deno.land/std@0.189.0/", "gfm/": "https://deno.land/x/gfm@0.2.5/", "icons/": "https://deno.land/x/tabler_icons_tsx@0.0.3/tsx/"}, "lint": {"rules": {"tags": ["fresh", "recommended"]}, "exclude": ["_fresh"]}, "fmt": {"exclude": ["**/*.md", "_fresh", "**/*.json"], "useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": false, "proseWrap": "preserve"}, "githooks": {"pre-commit": "check", "pre-push": "deno test -A"}}
{"fmt": {"lineWidth": 80, "semiColons": false}}
{"compilerOptions": {"allowJs": true, "allowUnreachableCode": false, "allowUnusedLabels": false, "checkJs": false, "experimentalDecorators": true, "jsx": "react", "jsxFactory": "React.createElement", "jsxFragmentFactory": "React.Fragment", "jsxImportSource": "react", "keyofStringsOnly": false, "lib": ["deno.window"], "noFallthroughCasesInSwitch": false, "noImplicitAny": true, "noImplicitReturns": false, "noImplicitThis": true, "noImplicitUseStrict": true, "noStrictGenericChecks": false, "noUnusedLocals": false, "noUnusedParameters": false, "noUncheckedIndexedAccess": false, "strict": true, "strictBindCallApply": true, "strictFunctionTypes": true, "strictPropertyInitialization": true, "strictNullChecks": true, "suppressExcessPropertyErrors": false, "suppressImplicitAnyIndexErrors": false}, "lint": {"files": {"include": [], "exclude": []}, "rules": {"tags": [], "exclude": [], "include": []}}, "fmt": {"files": {"include": [], "exclude": []}, "options": {"useTabs": false, "lineWidth": 80, "indentWidth": 2, "singleQuote": false, "proseWrap": "always"}}}
{"tasks": {"fmt": "deno fmt --config=deno.json", "lint": "deno lint --config=deno.json", "test": "deno test --config=deno.json", "verify": "deno task lint && deno task test", "ci": "deno fmt --config=deno.json --check && deno task verify", "fix": "deno task fmt && deno task verify"}}
{"fmt": {"files": {"exclude": ["db/"]}}}
