{"dependencies": [{"role": "adduser", "user": "{{ addusers.etcd }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}, {"role": "adduser", "user": "{{ addusers.kube }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}]}
{"dependencies": [{"role": "install_mount_ephemeral_drives_script"}]}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Configure iSCSI Targets using tgt", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "1.7.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["storage", "networking", "iscsi"]}}
{"dependencies": [{"role": "jdk"}]}
{"dependencies": [], "galaxy_info": {"author": "Thomas Woerner", "description": "A role to setup an IPA domain replica", "company": "Red Hat, Inc", "license": "GPLv3", "min_ansible_version": "2.8", "platforms": [{"name": "Fedora", "versions": ["all"]}, {"name": "EL", "versions": ["7", "8"]}], "galaxy_tags": ["identity", "ipa", "freeipa"]}}
{"dependencies": [{"role": "jdk"}]}
{"dependencies": [{"role": "postfix"}]}
{"dependencies": [{"role": "edx_django_service", "edx_django_service_repos": "{{ ANALYTICS_API_REPOS }}", "edx_django_service_name": "{{ analytics_api_service_name }}", "edx_django_service_user": "{{ analytics_api_user }}", "edx_django_service_home": "{{ COMMON_APP_DIR }}/{{ analytics_api_service_name }}", "edx_django_service_config_overrides": "{{ analytics_api_service_config_overrides }}", "edx_django_service_nginx_port": "{{ ANALYTICS_API_NGINX_PORT }}", "edx_django_service_nginx_read_timeout": 300, "edx_django_service_ssl_nginx_port": "{{ ANALYTICS_API_SSL_NGINX_PORT }}", "edx_django_service_default_db_host": "{{ ANALYTICS_API_DEFAULT_HOST }}", "edx_django_service_default_db_name": "{{ ANALYTICS_API_DEFAULT_DB_NAME }}", "edx_django_service_default_db_atomic_requests": false, "edx_django_service_db_user": "{{ ANALYTICS_API_DEFAULT_USER }}", "edx_django_service_db_password": "{{ ANALYTICS_API_DEFAULT_PASSWORD }}", "edx_django_service_debian_pkgs_extra": "{{ analytics_api_debian_pkgs }}", "edx_django_service_gunicorn_port": "{{ analytics_api_gunicorn_port }}", "edx_django_service_django_settings_module": "{{ ANALYTICS_API_DJANGO_SETTINGS_MODULE }}", "edx_django_service_environment_extra": "{{ analytics_api_environment }}", "edx_django_service_secret_key": "{{ ANALYTICS_API_SECRET_KEY }}", "edx_django_service_wsgi_name": "{{ analytics_api_wsgi_name }}", "edx_django_service_hostname": "~^((stage|prod)-)?{{ analytics_api_hostname }}.*", "edx_django_service_newrelic_appname": "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-{{ analytics_api_newrelic_appname }}", "edx_django_service_cors_whitelist": "{{ ANALYTICS_API_CORS_ORIGIN_WHITELIST }}", "edx_django_service_allow_cors_headers": "{{ ANALYTICS_API_ALLOW_CORS_HEADERS }}", "edx_django_service_allow_cors_credentials": "{{ ANALYTICS_API_ALLOW_CORS_CREDENTIALS }}", "edx_django_service_basic_auth_exempted_paths_extra": "{{ ANALYTICS_API_BASIC_AUTH_EXEMPTED_PATHS }}", "edx_django_service_enable_newrelic_distributed_tracing": "{{ ANALYTICS_API_ENABLE_NEWRELIC_DISTRIBUTED_TRACING }}", "edx_django_service_decrypt_config_enabled": "{{ ANALYTICS_API_DECRYPT_CONFIG_ENABLED }}", "edx_django_service_copy_config_enabled": "{{ ANALYTICS_API_COPY_CONFIG_ENABLED }}"}]}
{"dependencies": [{"role": "download", "file": "{{ downloads.kubernetes_kubectl }}"}, {"role": "download", "file": "{{ downloads.kubernetes_apiserver }}"}, {"role": "etcd"}, {"role": "kubernetes/node"}]}
{"dependencies": [{"role": "ambari-repo", "when": "ambari_repo_enabled | default(True) | bool"}]}
{"galaxy_info": {"role_name": "orasw_download_patches", "author": "bartowl <github@bartowl.eu>", "description": "Download all patches from Oracle", "company": "OPITZ CONSULTING", "license": "license (MIT)", "min_ansible_version": "2.9.0", "platforms": [{"name": "EL", "versions": ["6", "7", "8"]}], "galaxy_tags": ["oracle"]}, "dependencies": [{"role": "orasw_meta"}]}
{"galaxy_info": {"author": "Sebastian Gumprich", "description": "This Ansible playbook provides security configuration for mysql.", "company": "Hardening Framework Team", "license": "Apache License 2.0", "min_ansible_version": "2.9.10", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}, {"name": "Ubuntu", "versions": ["bionic", "focal", "jammy"]}, {"name": "Debian", "versions": ["bullseye", "buster"]}, {"name": "Amazon"}, {"name": "opensuse"}], "galaxy_tags": ["system", "security", "hardening", "database", "mysql"]}, "dependencies": []}
{"galaxy_info": {"role_name": "oradb_manage_redo", "author": "Mikael Sandstr\u00f6m", "description": "Manage redolog groups in Oracle", "company": "Mikael Sandstr\u00f6m", "license": "license (MIT)", "min_ansible_version": "2.9.0", "platforms": [{"name": "EL", "versions": ["6", "7", "8"]}], "galaxy_tags": ["database", "oracle"]}, "dependencies": [{"role": "orasw_meta"}]}
{"galaxy_info": {"role_name": "idrac_job_queue", "author": "Kritika Bhateja", "description": "Role to role to manage the iDRAC lifecycle controller job queue Delete a job from the job queue Clear job queue", "company": "Dell Technologies", "license": "GPL-3.0-only", "min_ansible_version": "2.13", "platforms": [{"name": "EL", "versions": ["9", "8"]}, {"name": "Ubuntu", "versions": ["jammy"]}, {"name": "SLES", "versions": ["15SP3", "15SP4"]}], "galaxy_tags": []}, "dependencies": []}
{"dependencies": [{"role": "base"}, {"role": "gnome"}]}
{"dependencies": [{"role": "container-engine/validate-container-engine", "tags": ["container-engine", "validate-container-engine"]}, {"role": "container-engine/kata-containers", "when": ["kata_containers_enabled"], "tags": ["container-engine", "kata-containers"]}, {"role": "container-engine/gvisor", "when": ["gvisor_enabled", "container_manager in ['docker', 'containerd']"], "tags": ["container-engine", "gvisor"]}, {"role": "container-engine/crun", "when": ["crun_enabled"], "tags": ["container-engine", "crun"]}, {"role": "container-engine/youki", "when": ["youki_enabled", "container_manager == 'crio'"], "tags": ["container-engine", "youki"]}, {"role": "container-engine/cri-o", "when": ["container_manager == 'crio'"], "tags": ["container-engine", "crio"]}, {"role": "container-engine/containerd", "when": ["container_manager == 'containerd'"], "tags": ["container-engine", "containerd"]}, {"role": "container-engine/cri-dockerd", "when": ["container_manager == 'docker'"], "tags": ["container-engine", "docker"]}]}
{"dependencies": [{"role": "ansible-apt", "tags": "apt"}, {"role": "ansible-hostname", "tags": "hostname"}, {"role": "Stouts.sudo", "tags": "sudo"}, {"role": "ANXS.openssh", "tags": "openssh"}, {"role": "knopki.locale", "tags": "locale"}]}
{"dependencies": [{"role": "download", "file": "{{ downloads.nothing }}"}, {"role": "kubernetes/secrets"}]}
{"dependencies": [{"role": "kubernetes-apps/ansible", "tags": ["apps"]}, {"role": "kubernetes-apps/efk", "when": "efk_enabled", "tags": ["apps", "efk"]}, {"role": "kubernetes-apps/helm", "when": "helm_enabled", "tags": ["apps", "helm"]}, {"role": "kubernetes-apps/registry", "when": "registry_enabled", "tags": ["apps", "registry"]}, {"role": "kubernetes-apps/persistent_volumes", "when": "persistent_volumes_enabled", "tags": ["apps", "persistent_volumes"]}]}
{"dependencies": [{"role": "systemd"}, {"role": "backitup"}]}
{"dependencies": [{"role": "edx_django_service", "edx_django_service_repos": "{{ ANALYTICS_API_REPOS }}", "edx_django_service_name": "{{ analytics_api_service_name }}", "edx_django_service_user": "{{ analytics_api_user }}", "edx_django_service_home": "{{ COMMON_APP_DIR }}/{{ analytics_api_service_name }}", "edx_django_service_config_overrides": "{{ analytics_api_service_config_overrides }}", "edx_django_service_nginx_port": "{{ ANALYTICS_API_NGINX_PORT }}", "edx_django_service_nginx_read_timeout": 300, "edx_django_service_ssl_nginx_port": "{{ ANALYTICS_API_SSL_NGINX_PORT }}", "edx_django_service_default_db_host": "{{ ANALYTICS_API_DEFAULT_HOST }}", "edx_django_service_default_db_name": "{{ ANALYTICS_API_DEFAULT_DB_NAME }}", "edx_django_service_default_db_atomic_requests": false, "edx_django_service_db_user": "{{ ANALYTICS_API_DEFAULT_USER }}", "edx_django_service_db_password": "{{ ANALYTICS_API_DEFAULT_PASSWORD }}", "edx_django_service_debian_pkgs_extra": "{{ analytics_api_debian_pkgs }}", "edx_django_service_gunicorn_port": "{{ analytics_api_gunicorn_port }}", "edx_django_service_django_settings_module": "{{ ANALYTICS_API_DJANGO_SETTINGS_MODULE }}", "edx_django_service_environment_extra": "{{ analytics_api_environment }}", "edx_django_service_secret_key": "{{ ANALYTICS_API_SECRET_KEY }}", "edx_django_service_use_python3": false, "edx_django_service_wsgi_name": "{{ analytics_api_wsgi_name }}", "edx_django_service_hostname": "~^((stage|prod)-)?{{ analytics_api_hostname }}.*", "edx_django_service_newrelic_appname": "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-{{ analytics_api_newrelic_appname }}", "edx_django_service_cors_whitelist": "{{ ANALYTICS_API_CORS_ORIGIN_WHITELIST }}", "edx_django_service_allow_cors_headers": "{{ ANALYTICS_API_ALLOW_CORS_HEADERS }}", "edx_django_service_allow_cors_credentials": "{{ ANALYTICS_API_ALLOW_CORS_CREDENTIALS }}", "edx_django_service_basic_auth_exempted_paths_extra": "{{ ANALYTICS_API_BASIC_AUTH_EXEMPTED_PATHS }}", "edx_django_service_enable_newrelic_distributed_tracing": "{{ ANALYTICS_API_ENABLE_NEWRELIC_DISTRIBUTED_TRACING }}"}]}
{"galaxy_info": {"author": "Liza Dayoub", "description": "Elastic Stack", "company": "elastic.co", "license": "License (Apache)", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["bionic", "focal"]}], "galaxy_tags": ["elasticsearch", "kibana", "logstash", "beats"]}, "dependencies": [{"role": "common"}, {"role": "elasticsearch"}]}
{"dependencies": [{"role": "container-engine/containerd-common"}, {"role": "container-engine/docker-storage", "when": "docker_container_storage_setup and ansible_os_family == \"RedHat\""}]}
{"dependencies": [{"role": "oraclejdk", "tags": "java", "oraclejdk_version": "{{ GO_AGENT_ORACLEJDK_VERSION }}", "oraclejdk_base": "{{ GO_AGENT_ORACLEJDK_BASE }}", "oraclejdk_build": "{{ GO_AGENT_ORACLEJDK_BUILD }}", "oraclejdk_link": "{{ GO_AGENT_ORACLEJDK_LINK }}"}]}
{"dependencies": [{"role": "easy-build"}]}
{"dependencies": [{"role": "geerlingguy.docker", "when": "ansible_architecture == \"x86_64\""}, {"role": "hypriot.docker", "when": "'{{ ansible_architecture[0:3] }}' == 'arm'"}]}
{"galaxy_info": {"author": "Sebastian Gumprich", "description": "This Ansible role provides numerous security-related ssh configurations, providing all-round base protection.", "company": "Hardening Framework Team", "license": "Apache License 2.0", "min_ansible_version": "2.11", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}, {"name": "Ubuntu", "versions": ["bionic", "focal", "jammy"]}, {"name": "Debian", "versions": ["buster", "bullseye"]}, {"name": "Amazon"}, {"name": "Fedora"}, {"name": "ArchLinux"}, {"name": "SmartOS"}, {"name": "opensuse"}], "galaxy_tags": ["system", "security", "hardening"]}, "dependencies": []}
{"galaxy_info": {"role_name": "oradb_facts", "author": "Thorsten Bruhns", "description": "Gather Ansible Facts from database", "company": "OPITZ CONSULTING Deutschland GmbH", "license": "license (MIT)", "min_ansible_version": "2.9.0", "platforms": [{"name": "EL", "versions": ["6", "7", "8"]}], "galaxy_tags": ["database", "oracle"]}, "dependencies": [{"role": "orasw_meta"}]}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Configure fcgiwrap, a lightweight FastCGI server", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "1.8.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["cgi", "webhosting"]}}
{"galaxy_info": {"author": "Forem Systems Engineering", "description": "Converts Butane files into Ignition files", "company": "Forem", "issue_tracker_url": "https://github.com/selfhost/issues", "license": "AGPL-3.0-only", "min_ansible_version": "4.0.0", "galaxy_tags": ["fedora", "fcos", "ignition", "butane"]}, "dependencies": []}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Robin Schneider", "description": "Setup and manage encrypted filesystems", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.2.3", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["encryption", "security", "filesystem", "cryptsetup", "dmcrypt", "luks"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Prepare a dpkg cleanup hook executed on package removal", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.9.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["cleanup", "system", "dpkg", "apt"]}}
{"dependencies": [{"role": "download", "file": "{{ downloads.hyperkube }}", "tags": ["download", "hyperkube", "kubelet", "network", "canal", "calico", "weave", "kube-controller-manager", "kube-scheduler", "kube-apiserver", "kube-proxy", "kubectl"]}, {"role": "download", "file": "{{ downloads.pod_infra }}", "tags": ["download", "kubelet"]}, {"role": "kubernetes/secrets", "tags": "k8s-secrets"}, {"role": "download", "file": "{{ downloads.nginx }}", "tags": ["download", "nginx"]}, {"role": "download", "file": "{{ downloads.testbox }}", "tags": "download"}, {"role": "download", "file": "{{ downloads.netcheck_server }}", "when": "deploy_netchecker", "tags": ["download", "netchecker"]}, {"role": "download", "file": "{{ downloads.netcheck_agent }}", "when": "deploy_netchecker", "tags": ["download", "netchecker"]}, {"role": "download", "file": "{{ downloads.kubedns }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.dnsmasq_nanny }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.dnsmasq_sidecar }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.kubednsautoscaler }}", "tags": ["download", "dnsmasq"]}]}
{"dependencies": [{"role": "ambari-repo"}]}
{"dependencies": [{"role": "read-secrets"}, {"role": "user-create"}]}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Configure iSCSI Targets using tgt", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "1.7.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["storage", "networking", "iscsi"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Manage the Comprehensive R Archive Network (CRAN) packages", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.3.0", "platforms": [{"name": "Ubuntu", "versions": ["trusty", "xenial"]}, {"name": "Debian", "versions": ["jessie", "stretch"]}], "galaxy_tags": ["cran", "rlang", "rstudio", "programming", "development", "statistics"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"company": "DebOps", "author": "Maciej Delmanowski, Robin Schneider", "description": "Manage kernel modules", "license": "GPL-3.0-only", "min_ansible_version": "2.4.0", "platforms": [{"name": "Ubuntu", "versions": ["xenial", "bionic"]}, {"name": "Debian", "versions": ["jessie", "stretch", "buster"]}], "galaxy_tags": ["system", "kernel", "linux"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Patryk Sciborek, Robin Schneider", "description": "Manage GRUB configuration", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.2.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "trusty"]}, {"name": "Debian", "versions": ["wheezy", "jessie"]}], "galaxy_tags": ["system", "boot", "bootloader"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Install and configure Salt Master service", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.2.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "trusty", "xenial"]}, {"name": "Debian", "versions": ["wheezy", "jessie", "stretch"]}], "galaxy_tags": ["system", "saltstack", "configuration"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski, Robin Schneider", "description": "Configure tinc mesh VPN network", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.0.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "quantal", "raring", "saucy", "trusty"]}, {"name": "Debian", "versions": ["wheezy", "jessie"]}], "galaxy_tags": ["networking", "tinc", "vpn"]}}
{"dependencies": [{"role": "edx_themes", "theme_users": ["{{ ecommerce_user }}"], "when": "ECOMMERCE_ENABLE_COMPREHENSIVE_THEMING"}, {"role": "edx_django_service", "edx_django_service_version": "{{ ECOMMERCE_VERSION }}", "edx_django_service_name": "{{ ecommerce_service_name }}", "edx_django_service_config_overrides": "{{ ecommerce_service_config_overrides }}", "edx_django_service_debian_pkgs_extra": "{{ ecommerce_debian_pkgs }}", "edx_django_service_django_settings_module": "{{ ECOMMERCE_DJANGO_SETTINGS_MODULE }}", "edx_django_service_repos": "{{ ECOMMERCE_REPOS }}", "edx_django_service_environment_extra": "{{ ecommerce_environment }}", "edx_django_service_gunicorn_extra": "{{ ECOMMERCE_GUNICORN_EXTRA }}", "edx_django_service_gunicorn_port": "{{ ecommerce_gunicorn_port }}", "edx_django_service_gunicorn_worker_class": "{{ ECOMMERCE_GUNICORN_WORKER_CLASS }}", "edx_django_service_gunicorn_max_requests": "{{ ECOMMERCE_GUNICORN_MAX_REQUESTS }}", "edx_django_service_gunicorn_workers": "{{ ECOMMERCE_GUNICORN_WORKERS }}", "edx_django_service_nginx_port": "{{ ECOMMERCE_NGINX_PORT }}", "edx_django_service_ssl_nginx_port": "{{ ECOMMERCE_SSL_NGINX_PORT }}", "edx_django_service_use_python3": "{{ ECOMMERCE_USE_PYTHON3 }}", "edx_django_service_language_code": "{{ ECOMMERCE_LANGUAGE_CODE }}", "edx_django_service_secret_key": "{{ ECOMMERCE_SECRET_KEY }}", "edx_django_service_memcache": "{{ ECOMMERCE_MEMCACHE }}", "edx_django_service_databases": {"default": {"ENGINE": "django.db.backends.mysql", "NAME": "{{ ECOMMERCE_DATABASE_NAME}}", "USER": "{{ ECOMMERCE_DATABASE_USER }}", "PASSWORD": "{{ ECOMMERCE_DATABASE_PASSWORD }}", "HOST": "{{ ECOMMERCE_DATABASE_HOST }}", "PORT": 3306, "ATOMIC_REQUESTS": true, "CONN_MAX_AGE": "{{ ECOMMERCE_DATABASE_CONN_MAX_AGE }}", "OPTIONS": {"connect_timeout": 10, "init_command": "SET sql_mode='STRICT_TRANS_TABLES'"}}}, "edx_django_service_social_auth_edx_oauth2_key": "{{ ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_KEY }}", "edx_django_service_social_auth_edx_oauth2_secret": "{{ ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_SECRET }}", "edx_django_service_backend_service_edx_oauth2_key": "{{ ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_KEY }}", "edx_django_service_backend_service_edx_oauth2_secret": "{{ ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_SECRET }}", "edx_django_service_social_auth_redirect_is_https": "{{ ECOMMERCE_SOCIAL_AUTH_REDIRECT_IS_HTTPS }}", "edx_django_service_session_expire_at_browser_close": "{{ ECOMMERCE_SESSION_EXPIRE_AT_BROWSER_CLOSE }}", "edx_django_service_staticfiles_storage": "{{ ECOMMERCE_STATICFILES_STORAGE }}", "edx_django_service_post_migrate_commands": "{{ ecommerce_post_migrate_commands }}", "edx_django_service_basic_auth_exempted_paths_extra": ["payment", "\\.well-known/apple-developer-merchantid-domain-association"], "edx_django_service_automated_users": "{{ ECOMMERCE_AUTOMATED_USERS }}", "edx_django_service_enable_newrelic_distributed_tracing": "{{ ECOMMERCE_ENABLE_NEWRELIC_DISTRIBUTED_TRACING }}", "edx_django_service_decrypt_config_enabled": "{{ ECOMMERCE_DECRYPT_CONFIG_ENABLED }}", "edx_django_service_copy_config_enabled": "{{ ECOMMERCE_COPY_CONFIG_ENABLED }}", "EDX_DJANGO_SERVICE_ENABLE_ADMIN_URLS_RESTRICTION": "{{ ECOMMERCE_ENABLE_ADMIN_URLS_RESTRICTION }}", "EDX_DJANGO_SERVICE_ADMIN_URLS": "{{ ECOMMERCE_ADMIN_URLS }}"}, {"role": "antivirus", "ANTIVIRUS_SCAN_DIRECTORY": "{{ ECOMMERCE_ANTIVIRUS_SCAN_DIRECTORY }}", "when": "ECOMMERCE_ENABLE_ANTIVIRUS"}]}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"company": "DebOps", "author": "Maciej Delmanowski", "description": "Manage kernel /sys filesystem using sysfsutils", "license": "GPL-3.0-only", "min_ansible_version": "2.2.0", "platforms": [{"name": "Debian", "versions": ["jessie", "stretch"]}, {"name": "Ubuntu", "versions": ["trusty", "xenial"]}], "galaxy_tags": ["linux", "kernel", "hardware"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Manage local device and bind mounts", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.6.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "quantal", "raring", "saucy", "trusty", "xenial", "bionic"]}, {"name": "Debian", "versions": ["wheezy", "jessie", "stretch", "buster"]}], "galaxy_tags": ["system", "filesystems", "mount"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Nick Janetakis", "description": "Install and configure Monit service", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "1.7.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "quantal", "raring", "saucy", "trusty"]}, {"name": "Debian", "versions": ["wheezy", "jessie"]}], "galaxy_tags": ["monitoring", "system"]}}
{"dependencies": [{"role": "edx_django_service", "edx_django_service_use_python38": "{{ DESIGNER_USE_PYTHON38 }}", "edx_django_service_use_python3": "{{ not DESIGNER_USE_PYTHON38 }}", "edx_django_service_version": "{{ DESIGNER_VERSION }}", "edx_django_service_name": "{{ designer_service_name }}", "edx_django_service_config_overrides": "{{ designer_service_config_overrides }}", "edx_django_service_debian_pkgs_extra": "{{ designer_debian_pkgs }}", "edx_django_service_gunicorn_port": "{{ designer_gunicorn_port }}", "edx_django_service_repos": "{{ DESIGNER_REPOS }}", "edx_django_service_django_settings_module": "{{ DESIGNER_DJANGO_SETTINGS_MODULE }}", "edx_django_service_environment_extra": "{{ designer_environment }}", "edx_django_service_gunicorn_extra": "{{ DESIGNER_GUNICORN_EXTRA }}", "edx_django_service_nginx_port": "{{ DESIGNER_NGINX_PORT }}", "edx_django_service_ssl_nginx_port": "{{ DESIGNER_SSL_NGINX_PORT }}", "edx_django_service_language_code": "{{ DESIGNER_LANGUAGE_CODE }}", "edx_django_service_secret_key": "{{ DESIGNER_SECRET_KEY }}", "edx_django_service_media_storage_backend": "{{ DESIGNER_MEDIA_STORAGE_BACKEND }}", "edx_django_service_staticfiles_storage": "{{ DESIGNER_STATICFILES_STORAGE }}", "edx_django_service_memcache": "{{ DESIGNER_MEMCACHE }}", "edx_django_service_default_db_host": "{{ DESIGNER_MYSQL_HOST }}", "edx_django_service_default_db_name": "{{ DESIGNER_DEFAULT_DB_NAME }}", "edx_django_service_default_db_atomic_requests": false, "edx_django_service_db_user": "{{ DESIGNER_MYSQL_USER }}", "edx_django_service_db_password": "{{ DESIGNER_MYSQL_PASSWORD }}", "edx_django_service_default_db_conn_max_age": "{{ DESIGNER_MYSQL_CONN_MAX_AGE }}", "edx_django_service_extra_apps": "{{ DESIGNER_EXTRA_APPS }}", "edx_django_service_session_expire_at_browser_close": "{{ DESIGNER_SESSION_EXPIRE_AT_BROWSER_CLOSE }}", "edx_django_service_social_auth_edx_oauth2_key": "{{ DESIGNER_SOCIAL_AUTH_EDX_OAUTH2_KEY }}", "edx_django_service_social_auth_edx_oauth2_secret": "{{ DESIGNER_SOCIAL_AUTH_EDX_OAUTH2_SECRET }}", "edx_django_service_backend_service_edx_oauth2_key": "{{ DESIGNER_BACKEND_SERVICE_EDX_OAUTH2_KEY }}", "edx_django_service_backend_service_edx_oauth2_secret": "{{ DESIGNER_BACKEND_SERVICE_EDX_OAUTH2_SECRET }}", "edx_django_service_automated_users": "{{ DESIGNER_AUTOMATED_USERS }}", "edx_django_service_cors_whitelist": "{{ DESIGNER_CORS_ORIGIN_WHITELIST }}", "edx_django_service_post_migrate_commands": "{{ designer_post_migrate_commands }}", "edx_django_service_enable_newrelic_distributed_tracing": "{{ DESIGNER_ENABLE_NEWRELIC_DISTRIBUTED_TRACING }}", "edx_django_service_decrypt_config_enabled": "{{ DESIGNER_DECRYPT_CONFIG_ENABLED }}", "edx_django_service_copy_config_enabled": "{{ DESIGNER_COPY_CONFIG_ENABLED }}"}]}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Manage Icinga 2 installation", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.4.0", "platforms": [{"name": "Ubuntu", "versions": ["xenial", "bionic"]}, {"name": "Debian", "versions": ["jessie", "stretch", "buster"]}], "galaxy_tags": ["monitoring", "icinga", "nagios"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"company": "DebOps", "author": "Maciej Delmanowski, Robin Schneider", "description": "Manage kernel parameters using sysctl", "license": "GPL-3.0-only", "min_ansible_version": "2.2.0", "platforms": [{"name": "Debian", "versions": ["wheezy", "jessie", "stretch"]}, {"name": "Ubuntu", "versions": ["precise", "trusty"]}], "galaxy_tags": ["security", "hardening", "linux"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Manage Python environment", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.4.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "trusty", "xenial", "bionic"]}, {"name": "Debian", "versions": ["wheezy", "jessie", "stretch", "buster"]}], "galaxy_tags": ["development", "pip", "python", "python2", "python3", "programming", "virtualenv"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Install NodeJS and NPM packages", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.0.0", "platforms": [{"name": "Ubuntu", "versions": ["xenial", "bionic"]}, {"name": "Debian", "versions": ["stretch", "buster", "bullseye"]}], "galaxy_tags": ["development", "nodejs", "npm"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Nick Janetakis, Maciej Delmanowski", "description": "Install Go language support and build Go applications from sources", "company": "DebOps", "license": "GPLv3", "min_ansible_version": "2.7.0", "platforms": [{"name": "Ubuntu", "versions": ["trusty", "xenial", "bionic"]}, {"name": "Debian", "versions": ["jessie", "stretch", "buster"]}], "galaxy_tags": ["development", "programming", "golang", "go"]}}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Deploy and manage NetBox, IPAM/DCIM management tool", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.1.0", "platforms": [{"name": "Ubuntu", "versions": ["bionic", "focal"]}, {"name": "Debian", "versions": ["buster"]}], "galaxy_tags": ["ipam", "dcim", "django", "networking", "datacenter"]}}
{"dependencies": [{"role": "adduser", "user": "{{ addusers.etcd }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}, {"role": "adduser", "user": "{{ addusers.kube }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}]}
{"dependencies": [{"role": "adduser", "user": "{{ addusers.etcd }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}, {"role": "adduser", "user": "{{ addusers.kube }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}]}
{"dependencies": [{"role": "adduser", "user": "{{ addusers.etcd }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}, {"role": "adduser", "user": "{{ addusers.kube }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}]}
{"dependencies": [{"role": "adduser", "user": "{{ addusers.etcd }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}, {"role": "adduser", "user": "{{ addusers.kube }}", "when": "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"}]}
{"dependencies": [], "galaxy_info": {"author": "Thomas Woerner", "description": "A role to setup an IPA domain replica", "company": "Red Hat, Inc", "license": "GPLv3", "min_ansible_version": "2.8", "platforms": [{"name": "Fedora", "versions": ["all"]}, {"name": "EL", "versions": ["7", "8"]}], "galaxy_tags": ["identity", "ipa", "freeipa"]}}
{"dependencies": [{"role": "jdk"}]}
{"dependencies": [{"role": "jdk"}]}
{"dependencies": [{"role": "jdk"}]}
{"dependencies": [{"role": "jdk"}]}
{"dependencies": [{"role": "edx_django_service", "edx_django_service_repos": "{{ ANALYTICS_API_REPOS }}", "edx_django_service_name": "{{ analytics_api_service_name }}", "edx_django_service_user": "{{ analytics_api_user }}", "edx_django_service_home": "{{ COMMON_APP_DIR }}/{{ analytics_api_service_name }}", "edx_django_service_config_overrides": "{{ analytics_api_service_config_overrides }}", "edx_django_service_nginx_port": "{{ ANALYTICS_API_NGINX_PORT }}", "edx_django_service_nginx_read_timeout": 300, "edx_django_service_ssl_nginx_port": "{{ ANALYTICS_API_SSL_NGINX_PORT }}", "edx_django_service_default_db_host": "{{ ANALYTICS_API_DEFAULT_HOST }}", "edx_django_service_default_db_name": "{{ ANALYTICS_API_DEFAULT_DB_NAME }}", "edx_django_service_default_db_atomic_requests": false, "edx_django_service_db_user": "{{ ANALYTICS_API_DEFAULT_USER }}", "edx_django_service_db_password": "{{ ANALYTICS_API_DEFAULT_PASSWORD }}", "edx_django_service_debian_pkgs_extra": "{{ analytics_api_debian_pkgs }}", "edx_django_service_gunicorn_port": "{{ analytics_api_gunicorn_port }}", "edx_django_service_django_settings_module": "{{ ANALYTICS_API_DJANGO_SETTINGS_MODULE }}", "edx_django_service_environment_extra": "{{ analytics_api_environment }}", "edx_django_service_secret_key": "{{ ANALYTICS_API_SECRET_KEY }}", "edx_django_service_wsgi_name": "{{ analytics_api_wsgi_name }}", "edx_django_service_hostname": "~^((stage|prod)-)?{{ analytics_api_hostname }}.*", "edx_django_service_newrelic_appname": "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-{{ analytics_api_newrelic_appname }}", "edx_django_service_cors_whitelist": "{{ ANALYTICS_API_CORS_ORIGIN_WHITELIST }}", "edx_django_service_allow_cors_headers": "{{ ANALYTICS_API_ALLOW_CORS_HEADERS }}", "edx_django_service_allow_cors_credentials": "{{ ANALYTICS_API_ALLOW_CORS_CREDENTIALS }}", "edx_django_service_basic_auth_exempted_paths_extra": "{{ ANALYTICS_API_BASIC_AUTH_EXEMPTED_PATHS }}", "edx_django_service_enable_newrelic_distributed_tracing": "{{ ANALYTICS_API_ENABLE_NEWRELIC_DISTRIBUTED_TRACING }}", "edx_django_service_decrypt_config_enabled": "{{ ANALYTICS_API_DECRYPT_CONFIG_ENABLED }}", "edx_django_service_copy_config_enabled": "{{ ANALYTICS_API_COPY_CONFIG_ENABLED }}"}]}
{"galaxy_info": {"author": "Sebastian Gumprich", "description": "This Ansible playbook provides security configuration for mysql.", "company": "Hardening Framework Team", "license": "Apache License 2.0", "min_ansible_version": "2.9.10", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}, {"name": "Ubuntu", "versions": ["bionic", "focal", "jammy"]}, {"name": "Debian", "versions": ["bullseye", "buster"]}, {"name": "Amazon"}, {"name": "opensuse"}], "galaxy_tags": ["system", "security", "hardening", "database", "mysql"]}, "dependencies": []}
{"dependencies": [{"role": "container-engine/validate-container-engine", "tags": ["container-engine", "validate-container-engine"]}, {"role": "container-engine/kata-containers", "when": ["kata_containers_enabled"], "tags": ["container-engine", "kata-containers"]}, {"role": "container-engine/gvisor", "when": ["gvisor_enabled", "container_manager in ['docker', 'containerd']"], "tags": ["container-engine", "gvisor"]}, {"role": "container-engine/crun", "when": ["crun_enabled"], "tags": ["container-engine", "crun"]}, {"role": "container-engine/youki", "when": ["youki_enabled", "container_manager == 'crio'"], "tags": ["container-engine", "youki"]}, {"role": "container-engine/cri-o", "when": ["container_manager == 'crio'"], "tags": ["container-engine", "crio"]}, {"role": "container-engine/containerd", "when": ["container_manager == 'containerd'"], "tags": ["container-engine", "containerd"]}, {"role": "container-engine/cri-dockerd", "when": ["container_manager == 'docker'"], "tags": ["container-engine", "docker"]}]}
{"dependencies": [{"role": "container-engine/validate-container-engine", "tags": ["container-engine", "validate-container-engine"]}, {"role": "container-engine/kata-containers", "when": ["kata_containers_enabled"], "tags": ["container-engine", "kata-containers"]}, {"role": "container-engine/gvisor", "when": ["gvisor_enabled", "container_manager in ['docker', 'containerd']"], "tags": ["container-engine", "gvisor"]}, {"role": "container-engine/crun", "when": ["crun_enabled"], "tags": ["container-engine", "crun"]}, {"role": "container-engine/youki", "when": ["youki_enabled", "container_manager == 'crio'"], "tags": ["container-engine", "youki"]}, {"role": "container-engine/cri-o", "when": ["container_manager == 'crio'"], "tags": ["container-engine", "crio"]}, {"role": "container-engine/containerd", "when": ["container_manager == 'containerd'"], "tags": ["container-engine", "containerd"]}, {"role": "container-engine/cri-dockerd", "when": ["container_manager == 'docker'"], "tags": ["container-engine", "docker"]}]}
{"dependencies": [{"role": "container-engine/validate-container-engine", "tags": ["container-engine", "validate-container-engine"]}, {"role": "container-engine/kata-containers", "when": ["kata_containers_enabled"], "tags": ["container-engine", "kata-containers"]}, {"role": "container-engine/gvisor", "when": ["gvisor_enabled", "container_manager in ['docker', 'containerd']"], "tags": ["container-engine", "gvisor"]}, {"role": "container-engine/crun", "when": ["crun_enabled"], "tags": ["container-engine", "crun"]}, {"role": "container-engine/youki", "when": ["youki_enabled", "container_manager == 'crio'"], "tags": ["container-engine", "youki"]}, {"role": "container-engine/cri-o", "when": ["container_manager == 'crio'"], "tags": ["container-engine", "crio"]}, {"role": "container-engine/containerd", "when": ["container_manager == 'containerd'"], "tags": ["container-engine", "containerd"]}, {"role": "container-engine/cri-dockerd", "when": ["container_manager == 'docker'"], "tags": ["container-engine", "docker"]}]}
{"dependencies": [{"role": "container-engine/validate-container-engine", "tags": ["container-engine", "validate-container-engine"]}, {"role": "container-engine/kata-containers", "when": ["kata_containers_enabled"], "tags": ["container-engine", "kata-containers"]}, {"role": "container-engine/gvisor", "when": ["gvisor_enabled", "container_manager in ['docker', 'containerd']"], "tags": ["container-engine", "gvisor"]}, {"role": "container-engine/crun", "when": ["crun_enabled"], "tags": ["container-engine", "crun"]}, {"role": "container-engine/youki", "when": ["youki_enabled", "container_manager == 'crio'"], "tags": ["container-engine", "youki"]}, {"role": "container-engine/cri-o", "when": ["container_manager == 'crio'"], "tags": ["container-engine", "crio"]}, {"role": "container-engine/containerd", "when": ["container_manager == 'containerd'"], "tags": ["container-engine", "containerd"]}, {"role": "container-engine/cri-dockerd", "when": ["container_manager == 'docker'"], "tags": ["container-engine", "docker"]}]}
{"dependencies": [{"role": "ansible-apt", "tags": "apt"}, {"role": "ansible-hostname", "tags": "hostname"}, {"role": "Stouts.sudo", "tags": "sudo"}, {"role": "ANXS.openssh", "tags": "openssh"}, {"role": "knopki.locale", "tags": "locale"}]}
{"dependencies": [{"role": "ansible-apt", "tags": "apt"}, {"role": "ansible-hostname", "tags": "hostname"}, {"role": "Stouts.sudo", "tags": "sudo"}, {"role": "ANXS.openssh", "tags": "openssh"}, {"role": "knopki.locale", "tags": "locale"}]}
{"dependencies": [{"role": "ansible-apt", "tags": "apt"}, {"role": "ansible-hostname", "tags": "hostname"}, {"role": "Stouts.sudo", "tags": "sudo"}, {"role": "ANXS.openssh", "tags": "openssh"}, {"role": "knopki.locale", "tags": "locale"}]}
{"dependencies": [{"role": "ansible-apt", "tags": "apt"}, {"role": "ansible-hostname", "tags": "hostname"}, {"role": "Stouts.sudo", "tags": "sudo"}, {"role": "ANXS.openssh", "tags": "openssh"}, {"role": "knopki.locale", "tags": "locale"}]}
{"dependencies": [{"role": "systemd"}, {"role": "backitup"}]}
{"galaxy_info": {"author": "Liza Dayoub", "description": "Elastic Stack", "company": "elastic.co", "license": "License (Apache)", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["bionic", "focal"]}], "galaxy_tags": ["elasticsearch", "kibana", "logstash", "beats"]}, "dependencies": [{"role": "common"}, {"role": "elasticsearch"}]}
{"galaxy_info": {"author": "Liza Dayoub", "description": "Elastic Stack", "company": "elastic.co", "license": "License (Apache)", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["bionic", "focal"]}], "galaxy_tags": ["elasticsearch", "kibana", "logstash", "beats"]}, "dependencies": [{"role": "common"}, {"role": "elasticsearch"}]}
{"galaxy_info": {"author": "Liza Dayoub", "description": "Elastic Stack", "company": "elastic.co", "license": "License (Apache)", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["bionic", "focal"]}], "galaxy_tags": ["elasticsearch", "kibana", "logstash", "beats"]}, "dependencies": [{"role": "common"}, {"role": "elasticsearch"}]}
{"dependencies": [{"role": "container-engine/containerd-common"}, {"role": "container-engine/docker-storage", "when": "docker_container_storage_setup and ansible_os_family == \"RedHat\""}]}
{"dependencies": [{"role": "container-engine/containerd-common"}, {"role": "container-engine/docker-storage", "when": "docker_container_storage_setup and ansible_os_family == \"RedHat\""}]}
{"dependencies": [{"role": "container-engine/containerd-common"}, {"role": "container-engine/docker-storage", "when": "docker_container_storage_setup and ansible_os_family == \"RedHat\""}]}
{"dependencies": [{"role": "container-engine/containerd-common"}, {"role": "container-engine/docker-storage", "when": "docker_container_storage_setup and ansible_os_family == \"RedHat\""}]}
{"dependencies": [{"role": "oraclejdk", "tags": "java", "oraclejdk_version": "{{ GO_AGENT_ORACLEJDK_VERSION }}", "oraclejdk_base": "{{ GO_AGENT_ORACLEJDK_BASE }}", "oraclejdk_build": "{{ GO_AGENT_ORACLEJDK_BUILD }}", "oraclejdk_link": "{{ GO_AGENT_ORACLEJDK_LINK }}"}]}
{"dependencies": [{"role": "easy-build"}]}
{"dependencies": [{"role": "easy-build"}]}
{"galaxy_info": {"author": "Sebastian Gumprich", "description": "This Ansible role provides numerous security-related ssh configurations, providing all-round base protection.", "company": "Hardening Framework Team", "license": "Apache License 2.0", "min_ansible_version": "2.11", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}, {"name": "Ubuntu", "versions": ["bionic", "focal", "jammy"]}, {"name": "Debian", "versions": ["buster", "bullseye"]}, {"name": "Amazon"}, {"name": "Fedora"}, {"name": "ArchLinux"}, {"name": "SmartOS"}, {"name": "opensuse"}], "galaxy_tags": ["system", "security", "hardening"]}, "dependencies": []}
{"dependencies": [{"role": "download", "file": "{{ downloads.hyperkube }}", "tags": ["download", "hyperkube", "kubelet", "network", "canal", "calico", "weave", "kube-controller-manager", "kube-scheduler", "kube-apiserver", "kube-proxy", "kubectl"]}, {"role": "download", "file": "{{ downloads.pod_infra }}", "tags": ["download", "kubelet"]}, {"role": "kubernetes/secrets", "tags": "k8s-secrets"}, {"role": "download", "file": "{{ downloads.nginx }}", "tags": ["download", "nginx"]}, {"role": "download", "file": "{{ downloads.testbox }}", "tags": "download"}, {"role": "download", "file": "{{ downloads.netcheck_server }}", "when": "deploy_netchecker", "tags": ["download", "netchecker"]}, {"role": "download", "file": "{{ downloads.netcheck_agent }}", "when": "deploy_netchecker", "tags": ["download", "netchecker"]}, {"role": "download", "file": "{{ downloads.kubedns }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.dnsmasq_nanny }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.dnsmasq_sidecar }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.kubednsautoscaler }}", "tags": ["download", "dnsmasq"]}]}
{"dependencies": [{"role": "download", "file": "{{ downloads.hyperkube }}", "tags": ["download", "hyperkube", "kubelet", "network", "canal", "calico", "weave", "kube-controller-manager", "kube-scheduler", "kube-apiserver", "kube-proxy", "kubectl"]}, {"role": "download", "file": "{{ downloads.pod_infra }}", "tags": ["download", "kubelet"]}, {"role": "kubernetes/secrets", "tags": "k8s-secrets"}, {"role": "download", "file": "{{ downloads.nginx }}", "tags": ["download", "nginx"]}, {"role": "download", "file": "{{ downloads.testbox }}", "tags": "download"}, {"role": "download", "file": "{{ downloads.netcheck_server }}", "when": "deploy_netchecker", "tags": ["download", "netchecker"]}, {"role": "download", "file": "{{ downloads.netcheck_agent }}", "when": "deploy_netchecker", "tags": ["download", "netchecker"]}, {"role": "download", "file": "{{ downloads.kubedns }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.dnsmasq_nanny }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.dnsmasq_sidecar }}", "tags": ["download", "dnsmasq"]}, {"role": "download", "file": "{{ downloads.kubednsautoscaler }}", "tags": ["download", "dnsmasq"]}]}
{"dependencies": [{"role": "ambari-repo"}]}
{"dependencies": [{"role": "ambari-repo"}]}
{"dependencies": [{"role": "ambari-repo"}]}
{"dependencies": [{"role": "ambari-repo"}]}
{"dependencies": [{"role": "kubernetes-apps/network_plugin/calico", "when": "kube_network_plugin == 'calico'", "tags": ["calico"]}, {"role": "kubernetes-apps/network_plugin/flannel", "when": "kube_network_plugin == 'flannel'", "tags": ["flannel"]}, {"role": "kubernetes-apps/network_plugin/kube-ovn", "when": "kube_network_plugin == 'kube-ovn'", "tags": ["kube-ovn"]}, {"role": "kubernetes-apps/network_plugin/weave", "when": "kube_network_plugin == 'weave'", "tags": ["weave"]}, {"role": "kubernetes-apps/network_plugin/kube-router", "when": "kube_network_plugin == 'kube-router'", "tags": ["kube-router"]}, {"role": "kubernetes-apps/network_plugin/multus", "when": "kube_network_plugin_multus", "tags": ["multus"]}]}
{"galaxy_info": {"author": "OpenStack", "description": "Security hardening role for OpenStack-Ansible", "company": "OpenStack", "license": "Apache", "role_name": "hardening", "namespace": "openstack", "min_ansible_version": "2.10", "platforms": [{"name": "Debian", "versions": ["bullseye"]}, {"name": "EL", "versions": ["8", "9"]}, {"name": "Ubuntu", "versions": ["focal", "jammy"]}], "galaxy_tags": ["cloud", "security", "system"]}, "dependencies": []}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski, Robin Schneider", "description": "Manage service definitions in /etc/services", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.0.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["networking", "system"]}}
{"dependencies": []}
{"galaxy_info": {"role_name": "ee_namespace", "author": "Tom Page", "description": "An Ansible Role to create execution environment namespaces in Automation Hub.", "company": "Red Hat", "license": "GPLv3+", "min_ansible_version": "2.9", "platforms": [{"name": "EL", "versions": ["all"]}], "galaxy_tags": ["automationhub", "galaxy", "configuration", "ee", "namespace"]}, "dependencies": []}
{"dependencies": [], "galaxy_info": {"role_name": "grafana", "author": "Manala", "company": "Manala", "description": "Handle grafana", "license": "MIT", "min_ansible_version": "2.14.0", "issue_tracker_url": "https://github.com/manala/ansible-roles/issues", "platforms": [{"name": "Debian", "versions": ["buster", "bullseye", "bookworm"]}], "galaxy_tags": ["monitoring", "grafana"]}}
{"dependencies": [{"role": "gnome"}, {"role": "chrome"}, {"role": "flash"}, {"role": "dropbox"}, {"role": "skype"}, {"role": "steam"}, {"role": "vagrant"}, {"role": "docker"}]}
{"dependencies": [{"role": "oracle-jdk"}]}
{"galaxy_info": {"author": "vyacheslav voronenko", "description": "installs lynis system security audit utility", "company": "http://www.voronenko.info/", "license": "MIT", "min_ansible_version": "1.9.4", "platforms": [{"name": "Ubuntu", "versions": ["trusty", "xenial", "bionic"]}], "galaxy_tags": ["lynis", "audit", "security", "ubuntu"]}, "dependencies": []}
{"galaxy_info": {"role_name": "snipeit", "namespace": "wiggels", "author": "Hunter Wigelsworth", "description": "Install and Configure Snipe-IT", "license": "MIT", "min_ansible_version": "2.9", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}], "galaxy_tags": ["snipeit", "inventory"]}, "collections": ["nginxinc.nginx_core"], "dependencies": []}
{"galaxy_info": {"standalone": false, "description": "Filter update systems\n"}, "dependencies": []}
{"galaxy_info": {"author": "rcbops", "description": "Installation and setup of keystone", "company": "Rackspace", "license": "Apache2", "role_name": "os_keystone", "namespace": "openstack", "min_ansible_version": "2.10", "platforms": [{"name": "Debian", "versions": ["bullseye"]}, {"name": "Ubuntu", "versions": ["focal", "jammy"]}, {"name": "EL", "versions": ["9"]}], "galaxy_tags": ["cloud", "python", "keystone", "development", "openstack"]}, "dependencies": [{"role": "apt_package_pinning", "when": ["ansible_facts['pkg_mgr'] == 'apt'"]}]}
{"dependencies": [{"role": "create-symlink", "link_name": ".gitconfig", "link_path": "{{ lookup('env', 'HOME') }}", "target": "{{ inventory_dir }}/files/gitconfig"}, {"role": "create-symlink", "link_name": "gitk", "link_path": "{{ lookup('env', 'HOME') }}/.config/git", "target": "{{ inventory_dir }}/files/gitk"}, {"role": "create-symlink", "link_name": ".gitignore", "link_path": "{{ lookup('env', 'HOME') }}", "target": "{{ inventory_dir }}/files/gitignore-home"}, {"role": "create-symlink", "link_name": ".git-hooks", "link_path": "{{ lookup('env', 'HOME') }}", "target": "{{ inventory_dir }}/files/git-hooks"}]}
{"dependencies": [{"role": "core/make", "when": "make is undefined"}]}
{"dependencies": [{"role": "docker_host"}]}
{"dependecies": ["handlers"]}
{"galaxy_info": {"author": "VEXXHOST, Inc.", "description": "Ansible role for OpenStack designate", "license": "Apache-2.0", "min_ansible_version": "5.5.0", "platforms": [{"name": "Ubuntu", "versions": ["focal"]}]}, "dependencies": [{"role": "defaults"}, {"role": "openstacksdk"}, {"role": "openstack_helm_endpoints", "vars": {"openstack_helm_endpoints_chart": "designate"}}, {"role": "vexxhost.kubernetes.upload_helm_chart", "vars": {"upload_helm_chart_src": "{{ designate_helm_chart_path }}", "upload_helm_chart_dest": "{{ designate_helm_chart_ref }}"}}]}
{"dependencies": [{"role": "common-pi"}]}
{"galaxy_info": {"role_name": "nagios", "author": "sdarwin", "description": "Install Nagios 4.x on Ubuntu or CentOS", "license": "BSD", "min_ansible_version": "2.4", "platforms": [{"name": "Ubuntu", "versions": ["precise", "trusty", "xenial", "bionic", "focal", "jammy"]}, {"name": "Debian", "versions": ["jessie", "wheezy", "stretch"]}, {"name": "EL", "versions": ["8", "7"]}, {"name": "Windows", "versions": ["2019"]}], "galaxy_tags": ["monitoring"]}, "dependencies": []}
{"galaxy_info": {"role_name": "timescaledb", "namespace": "enix", "author": "Laurent Corbes", "description": "Ansible role to deploy timescaledb software", "company": "Enix (http://www.enix.io)", "license": "license GPLv2", "min_ansible_version": "3.0", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}, {"name": "Debian", "versions": ["buster", "bullseye"]}], "galaxy_tags": ["timescaledb", "rdbms"]}, "dependencies": [{"role": "enix.postgresql"}]}
{"galaxy_info": {"author": "Punkt.de", "license": "", "description": "Apache role for Proserver", "role_name": "proserver_apache", "namespace": "punktde", "min_ansible_version": "2.15"}, "dependencies": [{"role": "dehydrated"}]}
{"dependencies": [{"role": "common"}, {"role": "ansible"}, {"role": "vagrant"}, {"role": "virtualbox"}]}
{"dependencies": [{"role": "elasticsearch"}]}
{"galaxy_info": {"author": "EOS+ CS", "description": "Role for managing EOS IPv4 interface configuration", "company": "Arista", "license": "BSD-3", "platforms": [{"name": "eos", "versions": ["all"]}], "min_ansible_version": "2.1.0", "galaxy_tags": ["arista", "eos", "eosplusdev", "networking", "role"]}, "dependencies": []}
{"galaxy_info": {"author": "Ramona Rautenberg", "description": "Role osism.commons.sosreport", "company": "OSISM GmbH", "license": "Apache License 2.0", "min_ansible_version": "2.10.0", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}], "galaxy_tags": ["osism", "system"]}, "dependencies": []}
{"galaxy_info": {"role_name": "gateway_launcher", "author": "Renater", "description": "An Ansible role to deploy a SIP Media Gateway Launcher", "company": "Renater", "license": "license (Apache-2.0)", "min_ansible_version": "2.7", "platforms": [{"name": "Ubuntu", "versions": ["jammy"]}], "galaxy_tags": ["gateway", "sip"]}, "dependencies": []}
{"galaxy_info": {"author": "bulula", "role_name": "joomla", "description": "Install and configure Joomla on your systems.", "company": "ShadowNet", "license": "pache-2.0", "min_ansible_version": "2.1", "platforms": [{"name": "Fedora", "versions": ["all"]}], "galaxy_tags": ["joomla"]}, "dependencies": []}
{"galaxy_info": {"author": "buluma", "role_name": "ulimit", "description": "Configure ulimit on your system.", "license": "Apache-2.0", "company": "ShadowNet", "min_ansible_version": "2.10", "platforms": [{"name": "Amazon", "versions": ["Candidate"]}, {"name": "EL", "versions": ["8"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "opensuse", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["ulimit"]}, "dependencies": []}
{"galaxy_info": {"author": "robertdebock", "role_name": "vdo", "description": "Configure VDO devices.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "EL", "versions": ["8", "9"]}], "galaxy_tags": ["vdo"]}, "dependencies": []}
{"dependencies": [{"role": "base-preseed"}, {"role": "lmu.ansible_role.firewalld"}, {"role": "lmu.ansible_role.mariadb"}, {"role": "memcached"}, {"role": "apache_httpd"}, {"role": "lmu.ansible_role.php7"}]}
{"dependencies": [{"role": "elasticsearch", "tags": ["elasticsearch"]}, {"role": "kibana", "tags": ["kibana"]}, {"role": "nginx", "tags": ["nginx"]}]}
{"galaxy_info": {"author": "Lazlo Westerhof", "description": "Install and configure iRODS resource server", "license": "GPLv3", "min_ansible_version": "2.11", "platforms": [{"name": "EL", "version": 7}]}, "dependencies": [{"role": "python_irodsclient"}]}
{"collections": ["purestorage.flasharray", "purestorage.flashblade"]}
{"galaxy_info": {"role_name": "ntp", "author": "l3d", "description": "Install and Configure the Network Time Protocol (NTP) Daemon", "license": "Apache-2.0", "min_ansible_version": "2.13", "platforms": [{"name": "ArchLinux", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}, {"name": "EL", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}], "galaxy_tags": ["system", "packaging", "ntp", "time", "linux"]}, "dependencies": []}
{"dependencies": [{"role": "logistica"}]}
{"galaxy_info": {"author": "buluma", "role_name": "cobbler", "description": "Install Cobbler.", "company": "ShadowNet", "license": "Apache-2.0", "min_ansible_version": "2.1", "platforms": [{"name": "Fedora", "versions": ["all"]}], "galaxy_tags": []}, "dependencies": []}
{"galaxy_info": {"author": "buluma", "role_name": "postman", "description": "Install postman on your systems.", "company": "ShadowNet", "license": "Apache-2.0", "min_ansible_version": "2.1", "platforms": [{"name": "Fedora", "versions": ["all"]}], "galaxy_tags": ["postmane"]}, "dependencies": []}
{"dependencies": [], "galaxy_info": {"role_name": "nfs", "author": "Maciej Delmanowski", "description": "Configure NFS4 client", "company": "DebOps", "license": "GPL-3.0", "min_ansible_version": "2.2.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "quantal", "raring", "saucy", "trusty", "xenial"]}, {"name": "Debian", "versions": ["wheezy", "jessie", "stretch"]}], "galaxy_tags": ["nfs", "filesystem", "networking"]}}
{"galaxy_info": {"role_name": "logstash", "namespace": "boutetnico", "author": "Nicolas Boutet", "description": "Install and configure logstash.", "license": "MIT", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}, {"name": "Debian", "versions": ["bullseye", "bookworm"]}], "galaxy_tags": ["collection", "data", "elastic", "elk", "logs", "logstash", "metrics"]}, "dependencies": []}
{"galaxy_info": {"role_name": "arbiter", "namespace": "rolehippie", "author": "Thomas Boerger", "description": "Ansible role to install and configure an MongoDB cluster arbiter", "license": "Apache-2.0", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["bionic", "focal", "jammy"]}], "galaxy_tags": ["mongodb", "mongo", "cluster", "replicaset"]}, "dependencies": []}
{"galaxy_info": {"role_name": "fail2ban", "namespace": "boutetnico", "author": "Nicolas Boutet", "description": "Install and configure Fail2ban.", "license": "MIT", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}, {"name": "Debian", "versions": ["bookworm", "bullseye"]}], "galaxy_tags": ["attack", "ban", "bruteforce", "fail2ban"]}, "dependencies": []}
{"galaxy_info": {"role_name": "senchacmd", "namespace": "bodsch", "author": "Bodo Schulz", "description": "Sencha Cmd, the cornerstone for building your Ext applications", "license": "Apache", "min_ansible_version": "2.8", "platforms": [{"name": "ArchLinux"}, {"name": "Debian", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}, {"name": "EL", "versions": ["8"]}], "galaxy_tags": ["development", "sencha", "senchacmd"]}, "dependencies": []}
{"galaxy_info": {"author": "dannixon", "description": "Installs and configures GnuPG and friends", "license": "MIT", "min_ansible_version": "2.1", "platforms": [{"name": "ArchLinux"}]}, "dependencies": []}
{"dependencies": [{"role": "nodesource.node", "sudo": true}]}
{"dependencies": [{"role": "PostgreSQL"}, {"role": "nginx"}]}
{"galaxy_info": {"standalone": true, "role_name": "jp", "namespace": "chriscroome", "author": "Chris Croome", "description": "Ansible role for installing jp, the command line interface to JMESPath on Debian and Ubuntu.", "company": "Webarchitects Co-operative", "license": "GNU General Public License v3.0 (GPLv3)", "min_ansible_version": "2.14.3", "platforms": [{"name": "Debian", "versions": ["bookworm", "bullseye"]}, {"name": "Ubuntu", "versions": ["jammy"]}], "galaxy_tags": ["debian", "jp", "jmespath", "ubuntu"]}}
{"galaxy_info": {"standalone": true, "role_name": "users", "namespace": "chriscroome", "author": "Chris Croome", "description": "Ansible role for adding user accounts to Debian servers", "company": "Webarchitects Co-operative", "license": "GNU General Public License v3.0 (GPLv3)", "min_ansible_version": "2.14.3", "platforms": [{"name": "Debian", "versions": ["bookworm", "bullseye", "buster", "stretch"]}], "galaxy_tags": []}}
{"dependencies": [{"role": "onaio.tomcat", "become": true, "become_user": "root", "tomcat_directory": "{{ tomcat_user_home }}", "tomcat_instances": [{"name": "{{ tomcat_instance }}", "description": "{{ tomcat_instance }} Tomcat Service", "version": 9, "shutdown_port": "{{ tomcat_shutdown_port }}", "non_ssl_connector_port": "{{ tomcat_http_port }}", "ssl_connector_port": "{{ tomcat_https_port }}", "ajp_port": "{{ tomcat_ajp_port }}", "user": "{{ tomcat_system_user }}", "service_type": "forking", "group": "{{ tomcat_system_group }}", "start_after": "network.target", "restart_mode": "always", "restart_seconds": "15", "xmx": "{{ tomcat_xmx }}", "xms": "{{ tomcat_xms }}", "java_opts": [{"name": "CATALINA_OPTS", "value": "{{ tomcat_catalina_ops }}"}, {"name": "JAVA_HOME", "value": "/usr/lib/jvm/java-11-openjdk-amd64"}]}], "tags": ["tomcat9"]}, {"role": "collectd", "collectd_deployed_app_name": "tomcat9", "collectd_deployed_app_version": "{{ tomcat_service_version }}", "become": true, "tags": ["collectd"]}]}
{"dependencies": [{"role": "common"}, {"role": "ha-disk"}]}
{"dependencies": [{"role": "xorg"}]}
{"dependencies": [{"role": "apache"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"galaxy_info": {"author": "oefenweb", "role_name": "autossh_tunnel_client", "company": "Oefenweb.nl B.V.", "description": "Set up a persistent tunnel (using autossh) in Ubuntu systems (client side)", "license": "MIT", "min_ansible_version": "2.10.0", "platforms": [{"name": "Ubuntu", "versions": ["xenial", "bionic", "focal"]}], "galaxy_tags": ["system", "networking"]}, "dependencies": []}
{"galaxy_info": {"author": "Dustin Specker", "description": "Installs vim", "role_name": "vim", "namespace": "dustinspecker", "license": "MIT", "min_ansible_version": "1.2", "platforms": [{"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": []}, "dependencies": []}
{"dependencies": [{"role": "sudo"}, {"role": "java"}]}
{"dependencies": [{"role": "kubernetes-apps/network_plugin/calico", "when": "kube_network_plugin == 'calico'", "tags": ["calico"]}, {"role": "kubernetes-apps/network_plugin/flannel", "when": "kube_network_plugin == 'flannel'", "tags": ["flannel"]}, {"role": "kubernetes-apps/network_plugin/kube-ovn", "when": "kube_network_plugin == 'kube-ovn'", "tags": ["kube-ovn"]}, {"role": "kubernetes-apps/network_plugin/weave", "when": "kube_network_plugin == 'weave'", "tags": ["weave"]}, {"role": "kubernetes-apps/network_plugin/kube-router", "when": "kube_network_plugin == 'kube-router'", "tags": ["kube-router"]}, {"role": "kubernetes-apps/network_plugin/multus", "when": "kube_network_plugin_multus", "tags": ["multus"]}]}
{"dependencies": [{"role": "kubernetes-apps/network_plugin/calico", "when": "kube_network_plugin == 'calico'", "tags": ["calico"]}, {"role": "kubernetes-apps/network_plugin/flannel", "when": "kube_network_plugin == 'flannel'", "tags": ["flannel"]}, {"role": "kubernetes-apps/network_plugin/kube-ovn", "when": "kube_network_plugin == 'kube-ovn'", "tags": ["kube-ovn"]}, {"role": "kubernetes-apps/network_plugin/weave", "when": "kube_network_plugin == 'weave'", "tags": ["weave"]}, {"role": "kubernetes-apps/network_plugin/kube-router", "when": "kube_network_plugin == 'kube-router'", "tags": ["kube-router"]}, {"role": "kubernetes-apps/network_plugin/multus", "when": "kube_network_plugin_multus", "tags": ["multus"]}]}
{"dependencies": []}
{"dependencies": []}
{"dependencies": []}
{"dependencies": []}
{"dependencies": [{"role": "oracle-jdk"}]}
{"dependencies": [{"role": "oracle-jdk"}]}
{"dependencies": [{"role": "oracle-jdk"}]}
{"dependencies": [{"role": "oracle-jdk"}]}
{"dependencies": [{"role": "common-pi"}]}
{"dependencies": [{"role": "common-pi"}]}
{"dependencies": [{"role": "common-pi"}]}
{"dependencies": [{"role": "elasticsearch"}]}
{"dependencies": [{"role": "elasticsearch"}]}
{"galaxy_info": {"author": "robertdebock", "role_name": "vdo", "description": "Configure VDO devices.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "EL", "versions": ["8", "9"]}], "galaxy_tags": ["vdo"]}, "dependencies": []}
{"dependencies": [{"role": "logistica"}]}
{"dependencies": [{"role": "common"}, {"role": "ha-disk"}]}
{"dependencies": [{"role": "xorg"}]}
{"dependencies": [{"role": "xorg"}]}
{"dependencies": [{"role": "xorg"}]}
{"dependencies": [{"role": "xorg"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"dependencies": [{"role": "kubernetes/tokens", "when": "kube_token_auth", "tags": ["k8s-secrets"]}, {"role": "adduser", "user": "{{ addusers.etcd }}", "when": ["etcd_deployment_type == \"kubeadm\"", "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"]}]}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Manage rsyslog configuration", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.0.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["system", "logging", "logs", "security", "audit"]}}
{"galaxy_info": {"role_name": "stqge1_rproxy", "author": "Team", "description": "Hashistack Stage 1 - System setup - Reverse proxy (coupled to collections playbooks)", "issue_tracker_url": "https://github.com/wescale/hashistack/issues", "min_ansible_version": "2.14", "license": "MIT", "standalone": false, "platforms": [{"name": "Debian", "versions": ["bullseye"]}], "galaxy_tags": ["iac"]}, "dependencies": []}
{"dependencies": [{"role": "upgrade-server/redhat", "when": "ansible_os_family == 'RedHat'"}, {"role": "upgrade-server/ubuntu", "when": "ansible_os_family == 'Debian'"}]}
{"galaxy_info": {"author": "Brant Evans", "description": "Installs Ansible Automation Platform (AAP) on OpenShift Container Platform (OCP)", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.12", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}], "galaxy_tags": ["aap", "ansible"]}, "dependencies": [], "collections": ["redhat.openshift", "community.okd"]}
{"dependencies": [{"role": "_SWF-CMN"}]}
{"galaxy_info": {"author": "vyacheslav voronenko", "description": "standalone role for php installation in fastcgi mode", "company": "http://www.voronenko.info/", "license": "MIT", "min_ansible_version": "2.1.0.0", "platforms": [{"name": "Ubuntu", "versions": ["xenial", "bionic"]}], "galaxy_tags": ["php", "php5", "php7", "phpfpm", "fpm", "lamp", "lemp", "ubuntu"]}, "dependencies": []}
{"galaxy_info": {"role_name": "postgres", "namespace": "kevincoakley", "author": "Kevin Coakley", "description": "Install Postgres 10, 11, 12, 13, 14, or 15", "license": "BSD", "min_ansible_version": "2.5", "platforms": [{"name": "EL", "versions": ["8"]}, {"name": "Ubuntu", "versions": ["focal", "jammy"]}], "galaxy_tags": ["database", "postgresql"]}, "dependencies": []}
{"dependencies": [{"role": "nginx", "nginx_rtmp_module": false}, {"role": "php"}]}
{"galaxy_info": {"role_name": "bitbucket", "author": "buluma", "description": "Ansible Role for Atlassian Bitbucket Installation", "company": "ShadowNet", "license": "Apache-2.0", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "EL", "versions": ["all"]}, {"name": "opensuse", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}], "galaxy_tags": ["system"]}, "dependencies": []}
{"galaxy_info": {"author": "3DRaven", "description": "Pi hole docker container install", "issue_tracker_url": "https://github.com/3DRaven/pi-hole2vpn", "license": "GPL-3.0-only", "min_ansible_version": "2.1", "platforms": [{"name": "Ubuntu", "versions": ["jammy"]}], "galaxy_tags": []}, "dependencies": []}
{"dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Install a set of Ansible local facts on remote host", "company": "DebOps", "license": "GPL-3.0", "min_ansible_version": "1.9.0", "platforms": [{"name": "Ubuntu", "versions": ["precise", "quantal", "raring", "saucy", "trusty"]}, {"name": "Debian", "versions": ["wheezy", "jessie"]}], "galaxy_tags": ["system"]}}
{"dependencies": [{"role": "packages", "packages": ["npm"]}]}
{"allow_duplicates": true, "dependencies": [{"role": "firewalld", "add_service": "ssh"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"dependencies": [{"role": "user"}]}
{"dependencies": [{"role": "work_dir"}, {"role": "openshift_project", "when": "ACTION is not defined or ACTION is none or ACTION|trim() == \"\" or ACTION|trim() == \"install\"\n", "vars": {"allow_duplicate_param": "nfd"}}]}
{"galaxy_info": {"author": "aminvakil", "role_name": "create_user", "description": "Creates User", "standalone": true, "license": "GPL-3.0-only", "min_ansible_version": "2.1", "platforms": [{"name": "Debian", "versions": ["all"]}, {"name": "EL", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}], "galaxy_tags": ["system", "user"]}}
{"dependencies": [{"role": "azavea.python-security"}, {"role": "azavea.postgresql"}, {"role": "azavea.postgresql-support"}, {"role": "azavea.postgis"}, {"role": "driver.redis"}, {"role": "driver.monit"}]}
{"dependencies": [{"role": "set-kubernetes-assets-directory"}]}
{"dependencies": [{"role": "tmp"}]}
{"dependencies": [{"role": "pip"}]}
{"dependencies": [{"role": "apt_external_package", "external_repository_key_url": "https://rspamd.com/apt-stable/gpg.key", "external_repository_tpls": ["rspamd.list"], "external_packages": ["rspamd"]}]}
{"dependencies": [], "galaxy_info": {"description": "Common configuration for this collection", "author": "alexandermeindl", "company": "AlphaNodes GmbH", "license": "Apache License 2.0", "min_ansible_version": "2.14", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}, {"name": "Debian", "versions": ["buster", "bullseye", "bookworm"]}]}}
{"dependencies": [{"role": "anaconda"}, {"role": "bigtop"}]}
{"dependencies": [{"role": "splunk_common", "vars": {"splunk_install_app": "splunk"}}]}
{"galaxy_info": {"author": "robertdebock", "role_name": "jitsi", "description": "Install and configure jitsi on your system.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "Debian", "versions": ["bullseye"]}], "galaxy_tags": ["jitsi"]}, "dependencies": []}
{"galaxy_info": {"author": "aminvakil", "role_name": "mysql_initial", "description": "Installs and Configures MariaDB on Debian Buster", "standalone": true, "license": "GPL-3.0-only", "min_ansible_version": "2.1", "platforms": [{"name": "Debian", "versions": ["buster"]}], "galaxy_tags": ["debian", "mysql", "mariadb", "lamp"]}}
{"galaxy_info": {"role_name": "screen", "namespace": "bodsch", "author": "Bodo Schulz", "description": "installs, configures screen", "license": "Apache", "min_ansible_version": "2.10", "platforms": [{"name": "ArchLinux"}, {"name": "Debian", "versions": ["buster", "bullseye"]}, {"name": "Ubuntu", "versions": ["focal"]}, {"name": "EL", "versions": ["8"]}], "galaxy_tags": ["screen", "system"]}, "dependencies": []}
{"galaxy_info": {"author": "charlesrocket", "description": "Git installer for Unix/Linux", "role_name": "git", "license": "MIT", "min_ansible_version": "2.9", "platforms": [{"name": "GenericUNIX", "versions": ["all"]}, {"name": "GenericBSD", "versions": ["all"]}, {"name": "GenericLinux", "versions": ["all"]}], "galaxy_tags": ["development", "git", "system"]}}
{"galaxy_info": {"author": "TheDevMinerTV", "role_name": "molecule_http_docker_demo", "namespace": "netresearch", "description": "demo Ansible role to show Molecule testing with Vagrant", "company": "Netresearch", "license": "MIT", "min_ansible_version": "2.14", "platforms": [{"name": "Debian", "versions": ["bullseye"]}], "galaxy_tags": []}, "dependencies": []}
{"galaxy_info": {"standalone": false, "role_name": "conventions", "author": "ibm", "description": "Conventions", "license": "Apache", "min_ansible_version": "2.9", "galaxy_tags": []}, "dependencies": []}
{"galaxy_info": {"author": "Radimir Mikhailov", "description": "Install Ranger", "license": "MIT", "min_ansible_version": "2.7", "platforms": [{"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": []}, "dependencies": [], "argument_specs": {}}
{"galaxy_info": {"author": "RaBe IT-Reaktion", "description": "Defines minimal facts that are not OS specific for use in other roles.", "issue_tracker_url": "https://github.com/radiorabe/ansible-collection-common/issues", "license": "AGPL-3.0-only", "min_ansible_version": "2.9", "platforms": [{"name": "EL", "versions": ["all"]}, {"name": "Fedora", "version": ["all"]}], "galaxy_tags": ["radiorabe", "foreman", "common", "base"]}, "dependencies": []}
{"galaxy_info": {"role_name": "alp_vm", "author": "fmccarthy@suse.com", "description": "Manage ALP VMs using Libvirt", "company": "SUSE", "license": "Apache", "min_ansible_version": "6.0", "platforms": [{"name": "opensuse", "versions": ["15.4"]}, {"name": "Ubuntu", "versions": ["jammy"]}], "galaxy_tags": []}, "dependencies": [{"role": "setup_ssh"}, {"role": "alp_image_details"}]}
{"galaxy_info": {"author": "VEXXHOST, Inc.", "description": "Ansible role for Flux CD", "license": "Apache-2.0", "min_ansible_version": "5.5.0", "standalone": false, "platforms": [{"name": "EL", "versions": ["8", "9"]}, {"name": "Ubuntu", "versions": ["focal", "jammy"]}]}, "dependencies": [{"role": "vexxhost.kubernetes.download_artifact", "download_artifact_url": "{{ flux_download_url }}", "download_artifact_dest": "{{ flux_download_dest }}", "download_artifact_checksum": "sha256:{{ flux_binary_checksum }}", "download_artifact_owner": "root", "download_artifact_mode": "0755", "download_artifact_unarchive": true, "download_artifact_unarchive_dest": "{{ flux_download_unarchive_dest }}"}]}
{"galaxy_info": {"author": "robertdebock", "role_name": "tune2fs", "description": "tune ext3 and ext4 filesystems using tune2fs.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "Alpine", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "EL", "versions": ["8", "9"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "opensuse", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["tune2fs", "system"]}, "dependencies": []}
{"galaxy_info": {"author": "robertdebock", "role_name": "postfix", "description": "Install and configure postfix on your system.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "Amazon", "versions": ["2018.03"]}, {"name": "EL", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["installer", "mailserver", "package", "postfix", "security", "system"]}, "dependencies": []}
{"dependencies": [{"role": "juju4.dnscrypt-proxy", "become": true}]}
{"dependencies": [{"role": "tenant-data"}, {"role": "okapi-get-modules"}, {"role": "mod-notify-data"}]}
{"dependencies": [{"role": "database"}, {"role": "php"}, {"role": "web_server"}]}
{"dependencies": [{"role": "container-engine/containerd-common"}]}
{"galaxy_info": {"author": "devroles", "description": "Configures a basic webserver", "license": "GPLv3", "min_ansible_version": "2.8", "platforms": [{"name": "EL", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}]}, "dependencies": []}
{"dependencies": [{"role": "firmware_mirror"}]}
{"galaxy_info": {"author": "geerlingguy", "role_name": "ecr_container_build", "description": "ECR docker image build and push management role.", "company": "ShadowNet", "license": "Apache-2.0", "min_ansible_version": "2.4", "platforms": [{"name": "EL", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["ecr", "docker", "aws", "registry", "image", "container"]}, "dependencies": []}
{"dependencies": [{"role": "model-my-watershed.base"}, {"role": "azavea.nodejs", "nodejs_version": "{{ tiler_nodejs_version }}", "nodejs_npm_version": "{{ tiler_nodejs_npm_version }}"}, {"role": "azavea.nginx", "nginx_delete_default_site": true}]}
{"galaxy_info": {"role_name": "accounts_policy", "author": "Marko Myllynen <myllynen@redhat.com>", "company": "Red Hat, Inc.", "description": "accounts_policy role", "license": "GPLv3+", "min_ansible_version": "2.9", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}], "galaxy_tags": ["rhel", "centos", "configuration"]}, "dependencies": []}
{"galaxy_info": {"author": "Kevin Carter", "description": "ZFS setup", "company": "cloudnull", "role_name": "zfs_setup", "namespace": "cloudnull", "license": "MIT", "min_ansible_version": "2.10", "platforms": [{"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["zfs"]}, "dependencies": [], "collections": ["community.general"]}
{"dependencies": [{"role": "nginx", "nginx_use_default_vhost": false}, {"role": "php7_fpm"}]}
{"galaxy_info": {"author": "Ken Moini", "description": "Configure Red Hat Subscription Manager for OpenShift 4", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.9", "platforms": [{"name": "EL", "versions": ["8"]}], "galaxy_tags": []}, "dependencies": []}
{"allow_duplicates": true, "dependencies": [{"role": "pylocal", "pylocal_source_dir": "{{ pyapp_source_dir }}", "pylocal_dest_archive_dir": "{{ pyapp_dest_archive_dir }}", "pylocal_venv": "{{ pyapp_local_venv }}"}]}
{"collections": ["kubernetes.core", "ansible.posix"]}
{"dependencies": [{"role": "tls-trust"}, {"role": "tls-vars"}]}
{"dependencies": []}
{"dependencies": [{"role": "devel"}, {"role": "unarchive"}, {"role": "bison", "bison_package": "bison-2.6.tar.xz"}]}
{"dependencies": [{"role": "kubernetes/tokens", "when": "kube_token_auth", "tags": ["k8s-secrets"]}, {"role": "adduser", "user": "{{ addusers.etcd }}", "when": ["etcd_deployment_type == \"kubeadm\"", "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"]}]}
{"dependencies": [{"role": "kubernetes/tokens", "when": "kube_token_auth", "tags": ["k8s-secrets"]}, {"role": "adduser", "user": "{{ addusers.etcd }}", "when": ["etcd_deployment_type == \"kubeadm\"", "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"]}]}
{"dependencies": [{"role": "kubernetes/tokens", "when": "kube_token_auth", "tags": ["k8s-secrets"]}, {"role": "adduser", "user": "{{ addusers.etcd }}", "when": ["etcd_deployment_type == \"kubeadm\"", "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"]}]}
{"dependencies": [{"role": "kubernetes/tokens", "when": "kube_token_auth", "tags": ["k8s-secrets"]}, {"role": "adduser", "user": "{{ addusers.etcd }}", "when": ["etcd_deployment_type == \"kubeadm\"", "not (ansible_os_family in [\"Flatcar\", \"Flatcar Container Linux by Kinvolk\", \"ClearLinux\"] or is_fedora_coreos)"]}]}
{"dependencies": [{"role": "upgrade-server/redhat", "when": "ansible_os_family == 'RedHat'"}, {"role": "upgrade-server/ubuntu", "when": "ansible_os_family == 'Debian'"}]}
{"dependencies": [{"role": "_SWF-CMN"}]}
{"dependencies": [{"role": "_SWF-CMN"}]}
{"dependencies": [{"role": "_SWF-CMN"}]}
{"dependencies": [{"role": "_SWF-CMN"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"dependencies": [{"role": "tls-vars"}]}
{"dependencies": [{"role": "pip"}]}
{"dependencies": [{"role": "pip"}]}
{"dependencies": [{"role": "splunk_common", "vars": {"splunk_install_app": "splunk"}}]}
{"dependencies": [{"role": "splunk_common", "vars": {"splunk_install_app": "splunk"}}]}
{"dependencies": [{"role": "splunk_common", "vars": {"splunk_install_app": "splunk"}}]}
{"dependencies": [{"role": "splunk_common", "vars": {"splunk_install_app": "splunk"}}]}
{"galaxy_info": {"author": "robertdebock", "role_name": "jitsi", "description": "Install and configure jitsi on your system.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "Debian", "versions": ["bullseye"]}], "galaxy_tags": ["jitsi"]}, "dependencies": []}
{"galaxy_info": {"author": "robertdebock", "role_name": "tune2fs", "description": "tune ext3 and ext4 filesystems using tune2fs.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "Alpine", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "EL", "versions": ["8", "9"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "opensuse", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["tune2fs", "system"]}, "dependencies": []}
{"galaxy_info": {"author": "robertdebock", "role_name": "postfix", "description": "Install and configure postfix on your system.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "Amazon", "versions": ["2018.03"]}, {"name": "EL", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["installer", "mailserver", "package", "postfix", "security", "system"]}, "dependencies": []}
{"dependencies": [{"role": "tenant-data"}, {"role": "okapi-get-modules"}, {"role": "mod-notify-data"}]}
{"dependencies": [{"role": "container-engine/containerd-common"}]}
{"dependencies": [{"role": "container-engine/containerd-common"}]}
{"dependencies": [{"role": "container-engine/containerd-common"}]}
{"dependencies": [{"role": "container-engine/containerd-common"}]}
{"galaxy_info": {"author": "geerlingguy", "role_name": "ecr_container_build", "description": "ECR docker image build and push management role.", "company": "ShadowNet", "license": "Apache-2.0", "min_ansible_version": "2.4", "platforms": [{"name": "EL", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["ecr", "docker", "aws", "registry", "image", "container"]}, "dependencies": []}
{"collections": ["kubernetes.core", "ansible.posix"]}
{"dependencies": [{"role": "kubernetes-apps/helm"}]}
{"galaxy_info": {"author": "Sebastian Gumprich", "description": "This Ansible role provides numerous security-related ssh configurations, providing all-round base protection.", "company": "Hardening Framework Team", "license": "Apache License 2.0", "min_ansible_version": "2.9.10", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}, {"name": "Ubuntu", "versions": ["bionic", "focal", "jammy"]}, {"name": "Debian", "versions": ["buster", "bullseye"]}, {"name": "Amazon"}, {"name": "Fedora"}, {"name": "ArchLinux"}, {"name": "SmartOS"}, {"name": "FreeBSD", "versions": ["12.2"]}, {"name": "OpenBSD", "versions": ["7.0"]}], "galaxy_tags": ["system", "security", "hardening"]}, "dependencies": []}
{"dependencies": [{"role": "edx_django_service", "edx_django_service_use_python38": "{{ REGISTRAR_USE_PYTHON38 }}", "edx_django_service_version": "{{ REGISTRAR_VERSION }}", "edx_django_service_name": "{{ registrar_service_name }}", "edx_django_service_home": "{{ COMMON_APP_DIR }}/{{ registrar_service_name }}", "edx_django_service_user": "{{ registrar_user }}", "edx_django_service_config_overrides": "{{ registrar_service_config_overrides }}", "edx_django_service_debian_pkgs_extra": "{{ registrar_debian_pkgs }}", "edx_django_service_gunicorn_port": "{{ registrar_gunicorn_port }}", "edx_django_service_django_settings_module": "{{ REGISTRAR_DJANGO_SETTINGS_MODULE }}", "edx_django_service_environment_extra": "{{ registrar_environment }}", "edx_django_service_gunicorn_extra": "{{ REGISTRAR_GUNICORN_EXTRA }}", "edx_django_service_nginx_port": "{{ REGISTRAR_NGINX_PORT }}", "edx_django_service_ssl_nginx_port": "{{ REGISTRAR_SSL_NGINX_PORT }}", "edx_django_service_language_code": "{{ REGISTRAR_LANGUAGE_CODE }}", "edx_django_service_secret_key": "{{ REGISTRAR_SECRET_KEY }}", "edx_django_service_media_storage_backend": "{{ REGISTRAR_MEDIA_STORAGE_BACKEND }}", "edx_django_service_staticfiles_storage": "{{ REGISTRAR_STATICFILES_STORAGE }}", "edx_django_service_memcache": "{{ REGISTRAR_MEMCACHE }}", "edx_django_service_default_db_host": "{{ REGISTRAR_MYSQL_HOST }}", "edx_django_service_default_db_name": "{{ REGISTRAR_DEFAULT_DB_NAME }}", "edx_django_service_default_db_atomic_requests": false, "edx_django_service_db_user": "{{ REGISTRAR_MYSQL_USER }}", "edx_django_service_db_password": "{{ REGISTRAR_MYSQL_PASSWORD }}", "edx_django_service_default_db_conn_max_age": "{{ REGISTRAR_MYSQL_CONN_MAX_AGE }}", "edx_django_service_extra_apps": "{{ REGISTRAR_EXTRA_APPS }}", "edx_django_service_session_expire_at_browser_close": "{{ REGISTRAR_SESSION_EXPIRE_AT_BROWSER_CLOSE }}", "edx_django_service_social_auth_edx_oauth2_key": "{{ REGISTRAR_SOCIAL_AUTH_EDX_OAUTH2_KEY }}", "edx_django_service_social_auth_edx_oauth2_secret": "{{ REGISTRAR_SOCIAL_AUTH_EDX_OAUTH2_SECRET }}", "edx_django_service_backend_service_edx_oauth2_key": "{{ REGISTRAR_BACKEND_SERVICE_EDX_OAUTH2_KEY }}", "edx_django_service_backend_service_edx_oauth2_secret": "{{ REGISTRAR_BACKEND_SERVICE_EDX_OAUTH2_SECRET }}", "edx_django_service_automated_users": "{{ REGISTRAR_AUTOMATED_USERS }}", "edx_django_service_cors_whitelist": "{{ REGISTRAR_CORS_ORIGIN_WHITELIST }}", "edx_django_service_post_migrate_commands": "{{ registrar_post_migrate_commands }}", "edx_django_service_enable_newrelic_distributed_tracing": "{{ REGISTRAR_ENABLE_NEWRELIC_DISTRIBUTED_TRACING }}", "edx_django_service_api_root": "{{ REGISTRAR_API_ROOT }}", "edx_django_service_decrypt_config_enabled": "{{ REGISTRAR_DECRYPT_CONFIG_ENABLED }}", "edx_django_service_copy_config_enabled": "{{ REGISTRAR_COPY_CONFIG_ENABLED }}", "edx_django_service_migration_check_services": "{{ registrar_service_name }},{{ registrar_service_name }}-workers", "edx_django_service_enable_celery_workers": true, "edx_django_service_workers": "{{ registrar_workers }}", "EDX_DJANGO_SERVICE_ENABLE_ADMIN_URLS_RESTRICTION": "{{ REGISTRAR_ENABLE_ADMIN_URLS_RESTRICTION }}", "EDX_DJANGO_SERVICE_ADMIN_URLS": "{{ REGISTRAR_ADMIN_URLS }}"}]}
{"collections": ["debops.debops"], "dependencies": [], "galaxy_info": {"author": "Fabio Bonelli", "description": "Manage the root account", "company": "DebOps", "license": "GPL-3.0-only", "min_ansible_version": "2.2.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["system"]}}
{"galaxy_info": {"role_name": "oradb_manage_users", "author": "Mikael Sandstr\u00f6m", "description": "Manage Users in Oracle", "company": "Mikael Sandstr\u00f6m", "license": "license (MIT)", "min_ansible_version": "2.9.0", "platforms": [{"name": "EL", "versions": ["6", "7", "8"]}], "galaxy_tags": ["database", "oracle"]}, "dependencies": [{"role": "orasw_meta"}, {"role": "oradb_facts"}]}
{"galaxy_info": {"author": "VMware", "description": "VMware vCenter 8.0 Appliance UI Service STIG Role", "company": "VMware", "license": "Apache", "min_ansible_version": "2.9", "galaxy_tags": ["vcenter", "vmware", "stig"]}}
{"galaxy_info": {"role_name": "logstash", "author": "netways", "description": "Logstash for Linux", "company": "Netways GmbH", "license": "license (GPL-3.0-or-later)", "min_ansible_version": "2.4", "platforms": [{"name": "EL", "versions": ["8"]}, {"name": "Debian", "versions": ["bullseye"]}, {"name": "Ubuntu", "versions": ["focal", "jammy"]}], "galaxy_tags": ["elk", "logstash", "logging", "system"]}, "dependencies": []}
{"dependencies": [], "galaxy_info": {"role_name": "ntp", "author": "Manala", "company": "Manala", "description": "Handle ntp", "license": "MIT", "min_ansible_version": "2.14.0", "issue_tracker_url": "https://github.com/manala/ansible-roles/issues", "platforms": [{"name": "Debian", "versions": ["buster", "bullseye", "bookworm"]}], "galaxy_tags": ["system", "ntp"]}}
{"galaxy_info": {"author": "robertdebock", "role_name": "phpmyadmin", "description": "Install and configure phpmyadmin on your system.", "license": "Apache-2.0", "company": "none", "min_ansible_version": "2.12", "platforms": [{"name": "EL", "versions": ["8", "9"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["php", "installer", "package"]}, "dependencies": [{"role": "robertdebock.httpd"}]}
{"dependencies": [{"role": "pip", "become": true}]}
{"dependencies": [{"role": "zookeeper-variables"}]}
{"dependencies": [{"role": "project", "when": "configure_only == 'false'", "project": "{{ namespace }}", "display_name": "3scale API Management"}]}
{"galaxy_info": {"role_name": "etebase", "author": "do1jlr", "description": "Ansible role to Setup and Confugure Etebase - The Backend from EteSync 2.0.", "license": "MIT", "min_ansible_version": "2.12", "platforms": [{"name": "Debian", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "EL", "versions": ["all"]}, {"name": "ArchLinux", "versions": ["all"]}], "galaxy_tags": ["etebase", "etesync", "synchronisation", "encryption", "e2eencryption", "endtoend", "tasks", "calendar"]}, "dependencies": []}
{"galaxy_info": {"namespace": "oefenweb", "role_name": "supervisor", "author": "Mischa ter Smitten", "company": "Oefenweb.nl B.V.", "description": "Set up the latest or a specific version of supervisor in Ubuntu systems", "license": "MIT", "min_ansible_version": "2.10.0", "platforms": [{"name": "Ubuntu", "versions": ["xenial", "bionic", "focal"]}, {"name": "Debian", "versions": ["jessie", "stretch", "buster"]}], "galaxy_tags": ["web", "system", "networking", "monitoring"]}, "dependencies": []}
{"dependencies": [{"role": "utilities/usbmodeswitch"}]}
{"dependencies": [{"role": "certificate", "when": "myproxycakey is not defined", "dest_dir": "{{ ansible_env.HOME }}", "key_dest": "{{ ansible_env.HOME }}/myproxycakey.pem", "csr_dest": "{{ ansible_env.HOME }}/myproxycacsr.csr", "common_name": "{{ hostname.self }}-CA", "csr": true}, {"role": "certificate", "when": "myproxycakey is defined and new_csr is defined and new_csr", "dest_dir": "{{ ansible_env.HOME }}", "key_dest": "{{ myproxycakey }}", "csr_dest": "{{ ansible_env.HOME }}/myproxycacsr.csr", "common_name": "{{ hostname.self }}-CA", "csr": true}]}
{"dependencies": [{"role": "debian"}]}
{"dependencies": [], "galaxy_info": {"role_name": "grafana_agent", "author": "nleiva", "description": "Grafana Cloud Agent installation for Linux.", "license": "license (GPLv3)", "min_ansible_version": "2.9", "platforms": [{"name": "EL", "versions": ["8"]}, {"name": "Debian", "versions": ["buster"]}], "galaxy_tags": ["grafana", "prometheus"]}}
{"galaxy_info": {"author": "buluma", "role_name": "alternatives", "description": "Set alternatives", "company": "ShadowNet", "license": "Apache-2.0", "min_ansible_version": "2.10", "platforms": [{"name": "Alpine", "versions": ["all"]}, {"name": "Amazon", "versions": ["Candidate"]}, {"name": "EL", "versions": ["8"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "opensuse", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["alternatives"]}, "dependencies": []}
{"galaxy_info": {"role_name": "keycloak", "namespace": "sedona_solutions", "author": "S\u00e9bastien Collado", "description": "An Ansible Role that installs et configure Keycloak on Linux.", "company": "Sedona Solutions", "license": "MIT", "min_ansible_version": "2.6", "platforms": [{"name": "Ubuntu", "version": [20.04, 22.04, 22.1]}, {"name": "Debian", "version": [11, 10]}], "galaxy_tags": ["system", "web", "identity", "keycloak", "sso"]}, "dependencies": []}
{"dependencies": [{"role": "driver.docker"}, {"role": "driver.monit"}]}
{"galaxy_info": {"role_name": "ansible_tower_genie_virtual_environments", "author": "Andrew J. Huffman", "description": "An Ansible Role to manage virtual environments in Ansible Tower.", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.4", "galaxy_tags": ["ansibletower", "tower", "awx", "genie", "virtualenvironment", "python", "environment"]}, "dependencies": []}
{"galaxy_info": {"author": "Usman Iqbal", "namespace": "usmanatron", "role_name": "monica", "description": "Run Monica CRM via Docker", "license": "MIT", "min_ansible_version": "2.10", "platforms": [{"name": "Debian", "versions": ["bullseye"]}], "galaxy_tags": ["docker"]}, "dependencies": []}
{"dependencies": [], "galaxy_info": {"author": "Maciej Delmanowski", "description": "Manage custom file resources through Ansible inventory", "company": "DebOps", "license": "GNU General Public License v3", "min_ansible_version": "2.0.0", "platforms": [{"name": "Ubuntu", "versions": ["all"]}, {"name": "GenericLinux", "versions": ["all"]}, {"name": "Debian", "versions": ["all"]}], "galaxy_tags": ["files", "directories", "urls", "paths", "archives"]}}
{"galaxy_info": {"author": "Nico Bellack", "description": "Set up a Mastodon instance", "license": "MIT", "min_ansible_version": "2.10.6", "platforms": [{"name": "Ubuntu", "versions": ["focal"]}], "galaxy_tags": ["mastodon"]}, "dependencies": [{"role": "geerlingguy.pip", "version": "2.0.0", "vars": {"pip_install_packages": ["docker", "docker-compose"]}}, {"role": "geerlingguy.docker", "version": "3.0.0"}]}
{"dependencies": [{"role": "common"}, {"role": "python3"}]}
{"dependencies": [{"role": "lsb"}, {"role": "monit"}]}
{"dependencies": [{"role": "packages", "packages": ["cronie"]}, {"role": "services", "services": ["cronie"]}]}
{"dependencies": [{"role": "keystone-common"}, {"role": "FND-AP2"}]}
{"dependencies": [{"role": "hostnames", "when": "gluster_hostnames"}, {"role": "repo-epel", "when": "gluster_epel and not gluster_client"}]}
{"galaxy_info": {"author": "devroles", "description": "Installs and configures EPEL on compatible distributions", "company": "Red Hat, Inc.", "license": "GPLv3", "min_ansible_version": "2.8", "platforms": [{"name": "EL", "versions": ["7", "8"]}]}, "dependencies": []}
{"dependencies": [{"role": "awscli"}, {"role": "sqlite3"}, {"role": "b2"}]}
{"galaxy_info": {"role_name": "rstudio_connect", "author": "shmileee", "company": "Appsilon", "description": "Set up (the latest version of) RStudio/Posit Connect", "license": "MIT", "min_ansible_version": "2.11.1", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}, {"name": "EL", "versions": ["8"]}], "galaxy_tags": ["development", "system"]}, "dependencies": []}
{"galaxy_info": {"role_name": "cven", "author": "Duncan Sommerville", "description": "Install CVEN instances to container orchestration platforms", "company": "Illumio", "license": "license (Apache)", "min_ansible_version": "2.12", "platforms": [{"name": "Amazon", "versions": ["all"]}, {"name": "Amazon Linux", "versions": ["all"]}, {"name": "Debian", "versions": ["bullseye", "buster", "stretch"]}, {"name": "EL", "versions": ["8", "7"]}, {"name": "Ubuntu", "versions": ["hirsute", "groovy", "focal", "bionic", "xenial"]}], "galaxy_tags": ["illumio", "cven", "network", "security"]}, "dependencies": [{"role": "kubelink"}]}
{"galaxy_info": {"role_name": "ipv6_setup", "author": "Marko Myllynen <myllynen@redhat.com>", "company": "Red Hat, Inc.", "description": "ipv6_setup role", "license": "GPLv3+", "min_ansible_version": "2.9", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}], "galaxy_tags": ["rhel", "centos", "configuration"]}, "dependencies": []}
{"dependencies": []}
{"dependencies": [{"role": "common"}, {"role": "openjdk-8"}, {"role": "maven-3"}, {"role": "sdkman"}]}
{"galaxy_info": {"role_name": "job_templates", "author": "Sean Sulivan", "description": "An Ansible Role to create Job Templates in Ansible Controller.", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.8", "platforms": [{"name": "EL", "versions": ["all"]}], "galaxy_tags": ["controller", "aap", "awx", "configuration", "jobtemplates"]}, "collections": ["ansible.controller", "awx.awx"], "dependencies": []}
{"allow_duplicates": false, "dependencies": [{"role": "named/facts", "tags": ["makeconf"], "connection": "local"}, {"role": "named/generate", "tags": ["makeconf"], "connection": "local"}, {"role": "named/remove", "when": "connection is not defined or connection != local"}, {"role": "named/provision", "when": "connection is not defined or connection != local"}, {"role": "named/push", "when": "connection is not defined or connection != local"}]}
{"galaxy_info": {"author": "VEXXHOST, Inc.", "description": "Ansible role for migrating databases from OSA", "license": "Apache-2.0", "min_ansible_version": "5.5.0", "standalone": false, "platforms": [{"name": "Ubuntu", "versions": ["focal"]}]}}
{"dependencies": [{"name": "ernestas-poskus.prometheus", "prometheus_node_exporter_install": false}, {"name": "nginx-proxy", "NGINX_PROXY_CONFIG_PATH": "/etc/nginx/sites-available/prometheus", "NGINX_PROXY_PUBLIC_PORT": 443, "NGINX_PROXY_INTERNAL_PORT": 9090, "NGINX_PROXY_USERNAME": "{{ PROMETHEUS_BASIC_AUTH_USERNAME }}", "NGINX_PROXY_PASSWORD": "{{ PROMETHEUS_BASIC_AUTH_PASSWORD }}"}, {"name": "nginx-proxy", "NGINX_PROXY_CONFIG_PATH": "/etc/nginx/sites-available/alertmanager", "NGINX_PROXY_PUBLIC_PORT": 19093, "NGINX_PROXY_INTERNAL_PORT": 9093, "NGINX_PROXY_USERNAME": "{{ PROMETHEUS_BASIC_AUTH_USERNAME }}", "NGINX_PROXY_PASSWORD": "{{ PROMETHEUS_BASIC_AUTH_PASSWORD }}"}, {"name": "nginx-proxy", "NGINX_PROXY_CONFIG_PATH": "/etc/nginx/sites-available/grafana", "NGINX_PROXY_PUBLIC_PORT": 3443, "NGINX_PROXY_INTERNAL_PORT": 3000}]}
{"dependencies": []}
{"dependencies": [{"role": "check_deps", "vars": {"check_deps_needs_cluster": false}}]}
{"galaxy_info": {"role_name": "hosts", "author": "Tom Page", "description": "An Ansible Role to create hosts in Ansible Controller.", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.8", "platforms": [{"name": "EL", "versions": ["all"]}], "galaxy_tags": ["controller", "aap", "awx", "host", "hosts"]}, "collections": ["ansible.controller", "awx.awx"], "dependencies": []}
{"galaxy_info": {"standalone": false, "role_name": "validate", "author": "ibm", "description": "Validate", "license": "Apache", "min_ansible_version": "2.9", "galaxy_tags": []}, "dependencies": []}
{"dependencies": [{"role": "common", "leofs_module": "leo_gateway"}]}
{"galaxy_info": {"author": "Christian Berendt", "description": "Role osism.services.phpmyadmin", "company": "OSISM GmbH", "license": "Apache License 2.0", "min_ansible_version": "2.10.0", "platforms": [{"name": "Ubuntu", "versions": ["focal", "jammy"]}], "galaxy_tags": ["osism", "system"]}, "dependencies": []}
{"dependencies": []}
{"galaxy_info": {"role_name": "s1_agent_common", "namespace": "s1community", "author": "Nate Gerhart", "description": "Ansible role to return info about installed agents", "company": "SentinelOne", "license": "license (GPL-3.0-or-later)", "min_ansible_version": "2.9", "platforms": [{"name": "EL", "versions": ["6", "7", "8"]}, {"name": "Ubuntu", "versions": ["trusty", "xenial", "bionic", "disco", "eoan", "hirsute"]}, {"name": "Windows", "versions": ["2016", "2019", "2022"]}], "galaxy_tags": ["edr", "linux", "security", "sentinelagent", "sentinelone", "singularity", "windows", "xdr"]}, "dependencies": []}
{"dependencies": [{"role": "yavdr-remote"}]}
{"dependencies": [{"role": "hostapd"}]}
{"dependencies": [{"role": "load_secrets"}]}
{"galaxy_info": {"role_name": "bind9", "author": "systemli", "description": "Role to install and maintain the Bind9 nameserver on Debian", "company": "systemli.org", "license": "GPLv3", "min_ansible_version": "2.4", "galaxy_tags": ["bind9", "dns", "nameserver", "recursor"], "platforms": [{"name": "Debian", "versions": ["bookworm", "bullseye"]}]}}
{"allow_duplicates": false, "dependencies": [{"role": "firewalld", "add_service": "http"}, {"role": "firewalld", "add_service": "https"}]}
{"dependencies": [{"role": "xbps"}]}
{"dependencies": [{"role": "runit", "runit_service_name": "prometheus", "runit_service_user": "{{ prometheus_user }}", "runit_service_command": "/{{ prometheus_base_dir}}/{{ prometheus_dir }}/prometheus", "runit_service_params": "-config.file=/etc/prometheus/prometheus.yml -storage.local.path={{ prometheus_data_dir }} -alertmanager.url=\"{{ prometheus_alertmanager_url }}\" -storage.local.retention={{ prometheus_storage_local_retention }}{{ ' -web.external-url=' + prometheus_web_external_url if prometheus_web_external_url is defined else ''}} -web.console.templates=/{{ prometheus_base_dir}}/{{ prometheus_dir }}/consoles -web.console.libraries=/{{ prometheus_base_dir}}/{{ prometheus_dir }}/console_libraries", "when": "prometheus_supervisor == \"runit\"", "tags": "runit"}, {"role": "systemd-service-unit", "systemd_service_name": "prometheus", "systemd_service_user": "{{ prometheus_user }}", "systemd_service_command": "/{{ prometheus_base_dir}}/{{ prometheus_dir }}/prometheus", "systemd_service_params": "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path={{ prometheus_data_dir }} --storage.tsdb.retention={{ prometheus_storage_local_retention }}{{ ' --web.external-url=' + prometheus_web_external_url if prometheus_web_external_url is defined else ''}} --web.console.templates=/{{ prometheus_base_dir}}/{{ prometheus_dir }}/consoles --web.console.libraries=/{{ prometheus_base_dir}}/{{ prometheus_dir }}/console_libraries", "when": "prometheus_supervisor == \"systemd\""}]}
{"galaxy_info": {"author": "Ken Moini", "description": "Deploy the community Shipwright Operator", "company": "Red Hat", "issue_tracker_url": "https://github.com/Red-Hat-SE-RTO/openshift-ztp/issues", "license": "MIT", "min_ansible_version": "2.9", "platforms": [{"name": "Fedora", "versions": ["all"]}, {"name": "EL", "versions": ["8", "9"]}], "galaxy_tags": ["openshift", "ztp"]}, "dependencies": []}
{"dependencies": [{"role": "common"}, {"role": "firewall"}, {"role": "security"}]}
{"galaxy_info": {"standalone": false, "role_name": "stop_cics", "author": "ibm", "description": "Stop CICS", "license": "Apache", "min_ansible_version": "2.9", "galaxy_tags": []}, "dependencies": []}
{"galaxy_info": {"author": "Radimir Mikhailov", "description": "Install bash script for ssh connections", "license": "MIT", "min_ansible_version": "2.7", "platforms": [{"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": []}, "dependencies": [], "argument_specs": {"main": {"options": {"connections_dir": {"description": "\u041a\u0430\u0442\u0430\u043b\u043e\u0433, \u0433\u0434\u0435 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0444\u0430\u0439\u043b\u044b-\u043f\u0440\u043e\u0444\u0438\u043b\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439", "required": true, "type": "str"}}}}}
{"dependencies": [{"role": "nvidia", "when": "superfan_gpu_enabled|bool", "tags": ["dependencies", "deps"]}]}
{"dependencies": [{"role": "common/homebrew"}, {"role": "common/python"}, {"role": "common/ruby"}, {"role": "common/nodejs"}, {"role": "common/golang"}, {"role": "common/nginx"}, {"role": "common/dnsmasq"}]}
{"dependencies": []}
{"dependencies": [{"role": "consul"}]}
{"dependencies": [{"role": "kubernetes-apps/helm"}]}
{"dependencies": [{"role": "kubernetes-apps/helm"}]}
{"galaxy_info": {"author": "Sebastian Gumprich", "description": "This Ansible role provides numerous security-related ssh configurations, providing all-round base protection.", "company": "Hardening Framework Team", "license": "Apache License 2.0", "min_ansible_version": "2.9.10", "platforms": [{"name": "EL", "versions": ["7", "8", "9"]}, {"name": "Ubuntu", "versions": ["bionic", "focal", "jammy"]}, {"name": "Debian", "versions": ["buster", "bullseye"]}, {"name": "Amazon"}, {"name": "Fedora"}, {"name": "ArchLinux"}, {"name": "SmartOS"}, {"name": "FreeBSD", "versions": ["12.2"]}, {"name": "OpenBSD", "versions": ["7.0"]}], "galaxy_tags": ["system", "security", "hardening"]}, "dependencies": []}
{"dependencies": [{"role": "zookeeper-variables"}]}
{"dependencies": [{"role": "project", "when": "configure_only == 'false'", "project": "{{ namespace }}", "display_name": "3scale API Management"}]}
{"dependencies": [{"role": "project", "when": "configure_only == 'false'", "project": "{{ namespace }}", "display_name": "3scale API Management"}]}
{"dependencies": [{"role": "project", "when": "configure_only == 'false'", "project": "{{ namespace }}", "display_name": "3scale API Management"}]}
{"dependencies": [{"role": "project", "when": "configure_only == 'false'", "project": "{{ namespace }}", "display_name": "3scale API Management"}]}
{"galaxy_info": {"author": "buluma", "role_name": "alternatives", "description": "Set alternatives", "company": "ShadowNet", "license": "Apache-2.0", "min_ansible_version": "2.10", "platforms": [{"name": "Alpine", "versions": ["all"]}, {"name": "Amazon", "versions": ["Candidate"]}, {"name": "EL", "versions": ["8"]}, {"name": "Debian", "versions": ["all"]}, {"name": "Fedora", "versions": ["all"]}, {"name": "opensuse", "versions": ["all"]}, {"name": "Ubuntu", "versions": ["all"]}], "galaxy_tags": ["alternatives"]}, "dependencies": []}
{"dependencies": [{"role": "driver.docker"}, {"role": "driver.monit"}]}
{"galaxy_info": {"role_name": "ansible_tower_genie_virtual_environments", "author": "Andrew J. Huffman", "description": "An Ansible Role to manage virtual environments in Ansible Tower.", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.4", "galaxy_tags": ["ansibletower", "tower", "awx", "genie", "virtualenvironment", "python", "environment"]}, "dependencies": []}
{"galaxy_info": {"role_name": "ansible_tower_genie_virtual_environments", "author": "Andrew J. Huffman", "description": "An Ansible Role to manage virtual environments in Ansible Tower.", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.4", "galaxy_tags": ["ansibletower", "tower", "awx", "genie", "virtualenvironment", "python", "environment"]}, "dependencies": []}
{"dependencies": [{"role": "awscli"}, {"role": "sqlite3"}, {"role": "b2"}]}
{"dependencies": [{"role": "common"}, {"role": "openjdk-8"}, {"role": "maven-3"}, {"role": "sdkman"}]}
{"galaxy_info": {"role_name": "job_templates", "author": "Sean Sulivan", "description": "An Ansible Role to create Job Templates in Ansible Controller.", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.8", "platforms": [{"name": "EL", "versions": ["all"]}], "galaxy_tags": ["controller", "aap", "awx", "configuration", "jobtemplates"]}, "collections": ["ansible.controller", "awx.awx"], "dependencies": []}
{"galaxy_info": {"author": "VEXXHOST, Inc.", "description": "Ansible role for migrating databases from OSA", "license": "Apache-2.0", "min_ansible_version": "5.5.0", "standalone": false, "platforms": [{"name": "Ubuntu", "versions": ["focal"]}]}}
{"galaxy_info": {"role_name": "hosts", "author": "Tom Page", "description": "An Ansible Role to create hosts in Ansible Controller.", "company": "Red Hat", "license": "MIT", "min_ansible_version": "2.8", "platforms": [{"name": "EL", "versions": ["all"]}], "galaxy_tags": ["controller", "aap", "awx", "host", "hosts"]}, "collections": ["ansible.controller", "awx.awx"], "dependencies": []}
