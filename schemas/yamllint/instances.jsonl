{"ignore": "azure-*.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"rules": {"line-length": "disable", "document-start": "disable"}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint", "*.yaml.*", "*.yml.*"], "ignore": "#### Files ####\n\n# Contains ruby code\nconfig/mail_room.yml\ngenerator_templates/snowplow_event_definition/event_definition.yml\ngenerator_templates/usage_metric_definition/metric_definition.yml\n\n# Contains ERB code that keeps throwing syntax errors\n.rubocop.yml\n\n# Has some special indentation\ndoc/user/project/integrations/samples/cloudwatch.yml\n\n# Broken on purpose (for testing)\nspec/fixtures/lib/gitlab/metrics/dashboard/broken_yml_syntax.yml\n\n# Dynamic YAML files have syntax errors sometimes.\n*.erb\n\n# Vim temporary files.\n*.sw[pon]\n\n# Zipped files (by e.g. asset pipeline)\n*.gz\n*.bz2\n\n#### Folders ####\nnode_modules/\ntmp/\ngenerator_templates/gitlab_internal_events/\n", "rules": {"braces": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": "disable", "comments-indentation": "disable", "comments": "disable", "document-start": "disable", "empty-lines": "disable", "indentation": "disable", "key-duplicates": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"max": 130}}}
{"yaml-files": ["*.yaml", "*.yml"], "ignore": "vendor/**/*\ndist/*.yaml\n", "rules": {"comments": {"require-starting-space": true}, "comments-indentation": "enable", "document-start": {"present": true}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "line-length": {"max": 100, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "key-duplicates": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"anchors": "enable", "braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": "disable", "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "float-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"level": "warning", "max": 200, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"line-length": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}}}
{"yaml-files": ["area_metadata.yaml"], "extends": "default", "rules": {"line-length": "disable", "commas": {"max-spaces-before": 0, "min-spaces-after": 0, "max-spaces-after": 0}, "indentation": {"spaces": 1, "indent-sequences": false}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}}, "ignore": ".github/workflows/stale.yml\n"}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "comments-indentation": "disable", "colons": {"ignore": "# need the paths to work as /test/test.yaml as well as /pylib/test/test.yaml\ntest.yaml\n"}, "indentation": {"ignore": "calico.yaml\n"}, "empty-lines": {"ignore": "calico.yaml\n"}}}
{"extends": "default", "ignore": ".tox/\n", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2}, "line-length": {"max": 120, "level": "warning", "allow-non-breakable-words": true}, "document-start": "disable", "document-end": "disable"}}
{"extends": "default", "rules": {"braces": "disable", "brackets": "disable", "line-length": "disable", "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "document-start": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "comments-indentation": {"level": "error"}, "document-end": {"present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"max": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "quoted-strings": {"quote-type": "single", "required": "only-when-needed"}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}}, "ignore": "/deps/\nnode_modules/\n/test/fixtures/wpt/\n/tools/gyp/\n/tools/pip/\n"}
{"ignore": "/vendor\ntest/**/**\n/chart/templates/**\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}, "indentation": {"indent-sequences": "whatever"}}}
{"ignore": "/.tox/\n/.venv/\n/.github/\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "truthy": {"allowed-values": ["yes", "no", "true", "false", "True", "False"], "level": "error"}, "line-length": {"max": 160}, "indentation": "disable", "comments": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 80, "level": "warning"}, "document-start": {"present": false}}}
{"ignore": "vendor/\ntest-data/\n", "extends": "default", "rules": {"indentation": "disable", "document-start": "disable", "comments": "disable", "line-length": "disable", "empty-lines": {"max-start": 1, "max-end": 1}}}
{"extends": "default"}
{"extends": "default", "rules": {"line-length": "disable", "indentation": "disable", "document-start": "disable", "truthy": "disable"}}
{"rules": {"line-length": {"max": 95, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "truthy": "disable"}}
{"ignore": "/vendor\n", "extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"truthy": "disable", "line-length": "disable", "document-start": "disable"}}
{"extends": "default", "rules": {"colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "line-length": {"max": 1000}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "comments": {"level": "error", "require-starting-space": true}, "comments-indentation": {"level": "error"}, "document-start": {"level": "error", "present": false}, "new-line-at-end-of-file": "disable", "empty-lines": "disable", "trailing-spaces": "enable"}}
{"extends": "default", "rules": {"line-length": {"max": 150}}, "ignore": "k8s/contiv-vpp/templates/vpp.yaml\nk8s/contiv-vpp-ui/templates/ui.yaml\ntests/\nvendor/\nui/node_modules/\nvagrant/calico-vpp/\n"}
{"extends": "default", "rules": {"line-length": {"level": "warning", "max": 120}, "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"ignore": "assets/*\n.travis.yml\n", "extends": "default", "rules": {"line-length": {"max": 500}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": {"spaces": 2}, "truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": {"max": 120140}}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"max-spaces-inside": 1}, "brackets": {"max-spaces-inside": 1}, "colons": "enable", "commas": "enable", "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"line-length": "disable"}, "ignore": ".direnv\n.tox\n"}
{"extends": "default", "rules": {"line-length": {"max": 100, "level": "warning"}, "document-start": false, "document-end": false, "indentation": {"spaces": "consistent", "indent-sequences": true}}}
{"extends": "default", "rules": {"line-length": {"max": 120}, "comments-indentation": "disable", "braces": {"max-spaces-inside": 1}}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "document-end": "disable", "new-line-at-end-of-file": "disable", "indentation": "disable"}}
{"document-start": "disable"}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "document-start": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 100}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"line-length": "disable", "trailing-spaces": "disable", "empty-lines": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 160, "level": "warning"}, "truthy": "disable", "indentation": {"spaces": 2, "indent-sequences": false}}, "ignore": "default/roles\n"}
{"extends": "default", "ignore": "test/bin/\ntest/asset/\n", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 120}, "truthy": {"check-keys": false}}}
"<Project Sdk=\"Microsoft.NET.Sdk\">\n<PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>net5.0</TargetFramework> <OutputPath>..\\bin\\Content.YAMLLinter\\</OutputPath> <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath> </PropertyGroup>\n<ItemGroup> <ProjectReference Include=\"..\\Content.Client\\Content.Client.csproj\" /> <ProjectReference Include=\"..\\Content.Server\\Content.Server.csproj\" /> <ProjectReference Include=\"..\\Content.Shared\\Content.Shared.csproj\" /> <ProjectReference Include=\"..\\Content.IntegrationTests\\Content.IntegrationTests.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Client\\Robust.Client.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Server\\Robust.Server.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Shared.Maths\\Robust.Shared.Maths.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Shared\\Robust.Shared.csproj\" /> </ItemGroup> </Project>"
{"ignore": ".venv/lib\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "ignore": ".tox\ntest/data/definition_files/bad.yml\ntest/data/definition_files/invalid.yml\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "document-start": "disable", "indentation": {"spaces": "consistent", "indent-sequences": "consistent"}, "truthy": {"allowed-values": ["True", "true", "Yes", "yes", "On", "on", "False", "false", "No", "no", "Off", "off"]}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}, "ignore": ".github/stale.yml\nvenv/\n"}
{"extends": "default", "rules": {"line-length": {"max": 100, "ignore": "/src/tests/ftest/\n/src/vos/storage_estimator/\n"}, "indentation": {"spaces": 2}, "commas": {"ignore": "/src/tests/ftest/"}, "truthy": {"allowed-values": ["true", "false", "True", "False"], "check-keys": false}, "document-start": {"present": false}, "document-end": {"present": false}, "comments": {"ignore": "/src/tests/ftest/\n/utils/config/\n"}}, "ignore": "/src/control/vendor/\n/.git/\n/src/rdb/raft/\n/venv/\n/build/\n/install/\n"}
{"extends": "default", "rules": {"line-length": {"max": 500, "level": "error"}, "document-start": "disable", "indentation": {"indent-sequences": false}}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 120}}}
{"extends": "default", "ignore": ".travis/\n.travis.yml\n.github/\nmeta/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "ignore": "/config/crd/bases/*\n", "rules": {"line-length": "disable", "comments": {"min-spaces-from-content": 1}, "trailing-spaces": {"level": "warning"}, "truthy": {"ignore": "/.github/workflows\n"}}}
{"extends": "default", "rules": {"indentation": {"indent-sequences": false}, "line-length": {"max": 999}, "comments": {"min-spaces-from-content": 1}}, "ignore": "node_modules/\n"}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"level": "warning", "max": 120}}, "ignore": "vendor/\ndata/data/install.openshift.io_installconfigs.yaml\ndata/data/manifests/openshift/cluster-networkconfig-crd.yaml\n"}
{"extends": "default", "rules": {"line-length": {"max": 115, "level": "warning"}}}
{"extends": "default", "rules": {"document-start": {"present": false}, "line-length": {"max": 130}, "truthy": {"check-keys": false}}}
{"extends": "default", "ignore": ".cache/\nkustomization.yaml\nawx-operator.clusterserviceversion.yaml\nbundle\n.helm/starter\nhacking/\n", "rules": {"truthy": "disable", "line-length": {"max": 170}, "document-start": "disable", "comments-indentation": "disable", "indentation": {"level": "warning", "indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 255, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"line-length": {"max": 140}, "truthy": {"ignore": ".github/workflows/*.yml"}}, "ignore": "**/vendor\n"}
{"extends": "default", "rules": {"document-start": "disable", "indentation": "disable", "line-length": {"max": 200}}}
"molecule/travis/yamllint.yml"
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 250, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "ignore": "changelogs\n", "rules": {"line-length": "disable", "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "document-end": {"present": true}, "indentation": {"level": "error", "indent-sequences": true}, "truthy": {"level": "error", "allowed-values": ["true", "false"]}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 1}, "empty-values": "disable", "float-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 128}, "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "ignore": "*node_modules*\n", "rules": {"document-end": {"present": false}, "document-start": {"present": true}, "indentation": {"spaces": 4}, "line-length": "disable"}}
{"extends": "default", "ignore": "/.venv\nvendor/\n/common/defs/ethereum/chains/\n/common/defs/ethereum/tokens/\n", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": "disable", "document-start": "disable", "comments-indentation": "disable", "indentation": {"spaces": 2}}}
{"ignore": "venv\nbuild\n.github/workflows\n", "rules": {"braces": {"forbid": true}, "brackets": {"forbid": true}, "colons": {"max-spaces-after": 1, "max-spaces-before": 0}, "comments": {"ignore-shebangs": true, "min-spaces-from-content": 2, "require-starting-space": true}, "comments-indentation": "enable", "empty-lines": {"max": 1}, "hyphens": {"max-spaces-after": 1}, "indentation": {"check-multi-line-strings": true, "indent-sequences": true, "spaces": "consistent"}, "key-duplicates": "enable", "key-ordering": {"ignore": ".pre-commit-config.yaml\n.github\n"}, "line-length": {"allow-non-breakable-words": true, "max": 80}, "new-lines": {"type": "unix"}, "octal-values": {"forbid-explicit-octal": true, "forbid-implicit-octal": true}, "quoted-strings": {"extra-required": ["\\d\\d:\\d\\d"], "quote-type": "single", "required": "only-when-needed"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable"}, "ignore": "venv/\n.molecule/\n"}
{"ignore": "config/custom_components/\nconfig/ip_bans.yaml\nconfig/esphomeyaml/*/\nconfig/notebooks/\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true, "ignore": "config/known_devices.yaml\n"}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"ignore": ".github/support.yml\n.github/settings.yml\n", "level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}, "ignore": "zuul.d/*.yaml\ntemplates/*.yaml\n"}
{"ignore": "custom_components/\nip_bans.yaml\n.github/workflows/*\n", "rules": {"line-length": "disable"}}
{"ignore": "/vendor\ntest/**/*-chart/**\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}, "indentation": {"indent-sequences": "whatever"}}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}}, "ignore": ".github/workflows/stale.yml\n"}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable"}}
{"rules": {"document-start": "disable", "indentation": {"level": "error", "indent-sequences": "consistent"}}, "ignore": ".tox\n"}
{"extends": "default", "rules": {"line-length": "disable", "new-lines": {"type": "unix"}, "new-line-at-end-of-file": {"level": "warning"}, "trailing-spaces": {"level": "warning"}}}
{"extends": "default", "ignore-from-file": ".gitignore", "rules": {"document-start": {"present": false}, "line-length": {"max": 80, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "comments": {"require-starting-space": true}}}
{"extends": "default", "ignore": "env/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Content.Shared.CCVar; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility;\nnamespace Content.YAMLLinter { internal class Program { private static int Main(string[] args) { return new Program().Run(); }\nprivate int Run() { var stopwatch = new Stopwatch(); stopwatch.Start();\nvar errors = RunValidation().Result;\nif (errors.Count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nConsole.WriteLine($\"{errors.Count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return -1; }\nprivate async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var client = pairTracker.Pair.Client;\nvar cPrototypeManager = client.ResolveDependency<IPrototypeManager>(); var clientErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait client.WaitPost(() => { clientErrors = cPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn clientErrors; }\nprivate async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var server = pairTracker.Pair.Server;\nvar sPrototypeManager = server.ResolveDependency<IPrototypeManager>(); var serverErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait server.WaitPost(() => { serverErrors = sPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn serverErrors; }\npublic async Task<Dictionary<string, HashSet<ErrorNode>>> RunValidation() { var allErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (clientErrors.TryGetValue(key, out var clientVal)) { newErrors.UnionWith(val.Intersect(clientVal)); newErrors.UnionWith(clientVal.Where(n => n.AlwaysRelevant)); }\nif (newErrors.Count == 0) continue; allErrors[key] = newErrors; }\nreturn allErrors; } } }"
{"ignore-from-file": [".gitignore", ".yamlignore"], "extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "ignore": ".imported_roles/\n", "rules": {"line-length": {"max": 80, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": true, "level": "warning"}, "braces": {"max-spaces-inside": 1}}}
{"extends": "default", "ignore": "molecule/\n.travis/\n.travis.yml\nmeta/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "ignore": "venv/\nVagrant\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"document-end": {"present": false}, "document-start": {"present": false}, "truthy": "disable", "line-length": "disable", "comments": {"min-spaces-from-content": 1}}, "ignore": "/third_party/*"}
{"extends": "relaxed", "rules": {"line-length": "disable"}}
{"extends": "default", "ignore": "files/\ntemplates/\n", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 300, "allow-non-breakable-inline-mappings": true}}}
{"extends": "relaxed", "ignore": "vendor/**\n", "rules": {"line-length": "disable", "trailing-spaces": {"ignore": "Tests/**\n"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable"}, "ignore": ".github/stale.yml\n"}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"allow-non-breakable-inline-mappings": true}}}
{"ignore": "/vendor\n/etc\n.git\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable", "indentation": {"indent-sequences": "whatever"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": {"present": false}, "line-length": "disable"}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 175, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"truthy": {"check-keys": false}, "document-start": "disable", "line-length": {"max": 85}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": ".esphome/\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 2, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 90}}}
{"extends": "default", "rules": {"indentation": {"indent-sequences": false}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}, "comments-indentation": "disable", "document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 80, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": true}, "comments-indentation": "disable"}}
{"ignore": "/node_modules/\n/test/node_modules/\n", "extends": "default", "rules": {"line-length": {"max": 240}, "indentation": {"indent-sequences": "consistent"}, "brackets": {"max-spaces-inside": 1}, "document-start": "disable", "truthy": {"check-keys": false}, "comments": {"min-spaces-from-content": 1}}}
{"ignore": "blueprint.yaml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": {"level": "warning", "max": 120}, "braces": "disable"}}
{"ignore": "azure-*.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": "azure-*.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": "azure-*.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": "azure-*.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"rules": {"line-length": "disable", "document-start": "disable"}}
{"rules": {"line-length": "disable", "document-start": "disable"}}
{"rules": {"line-length": "disable", "document-start": "disable"}}
{"rules": {"line-length": "disable", "document-start": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"max": 130}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"max": 130}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"max": 130}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"max": 130}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}}, "ignore": ".github/workflows/stale.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}}, "ignore": ".github/workflows/stale.yml\n"}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "comments-indentation": "disable", "colons": {"ignore": "# need the paths to work as /test/test.yaml as well as /pylib/test/test.yaml\ntest.yaml\n"}, "indentation": {"ignore": "calico.yaml\n"}, "empty-lines": {"ignore": "calico.yaml\n"}}}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "comments-indentation": "disable", "colons": {"ignore": "# need the paths to work as /test/test.yaml as well as /pylib/test/test.yaml\ntest.yaml\n"}, "indentation": {"ignore": "calico.yaml\n"}, "empty-lines": {"ignore": "calico.yaml\n"}}}
{"extends": "default", "ignore": ".tox/\n", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2}, "line-length": {"max": 120, "level": "warning", "allow-non-breakable-words": true}, "document-start": "disable", "document-end": "disable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2}, "line-length": {"max": 120, "level": "warning", "allow-non-breakable-words": true}, "document-start": "disable", "document-end": "disable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2}, "line-length": {"max": 120, "level": "warning", "allow-non-breakable-words": true}, "document-start": "disable", "document-end": "disable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2}, "line-length": {"max": 120, "level": "warning", "allow-non-breakable-words": true}, "document-start": "disable", "document-end": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "comments-indentation": {"level": "error"}, "document-end": {"present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"max": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "quoted-strings": {"quote-type": "single", "required": "only-when-needed"}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}}, "ignore": "/deps/\nnode_modules/\n/test/fixtures/wpt/\n/tools/gyp/\n/tools/pip/\n"}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "comments-indentation": {"level": "error"}, "document-end": {"present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"max": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "quoted-strings": {"quote-type": "single", "required": "only-when-needed"}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}}, "ignore": "/deps/\nnode_modules/\n/test/fixtures/wpt/\n/tools/gyp/\n/tools/pip/\n"}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "comments-indentation": {"level": "error"}, "document-end": {"present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"max": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "quoted-strings": {"quote-type": "single", "required": "only-when-needed"}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}}, "ignore": "/deps/\nnode_modules/\n/test/fixtures/wpt/\n/tools/gyp/\n/tools/pip/\n"}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "comments-indentation": {"level": "error"}, "document-end": {"present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"max": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "quoted-strings": {"quote-type": "single", "required": "only-when-needed"}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}}, "ignore": "/deps/\nnode_modules/\n/test/fixtures/wpt/\n/tools/gyp/\n/tools/pip/\n"}
{"ignore": "/.tox/\n/.venv/\n/.github/\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "truthy": {"allowed-values": ["yes", "no", "true", "false", "True", "False"], "level": "error"}, "line-length": {"max": 160}, "indentation": "disable", "comments": "disable"}}
{"ignore": "/.tox/\n/.venv/\n/.github/\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "truthy": {"allowed-values": ["yes", "no", "true", "false", "True", "False"], "level": "error"}, "line-length": {"max": 160}, "indentation": "disable", "comments": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 80, "level": "warning"}, "document-start": {"present": false}}}
{"extends": "default", "rules": {"line-length": {"max": 80, "level": "warning"}, "document-start": {"present": false}}}
{"extends": "default"}
{"extends": "default"}
{"extends": "default"}
{"extends": "default"}
{"extends": "default", "rules": {"line-length": "disable", "indentation": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "indentation": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "indentation": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "indentation": "disable", "document-start": "disable", "truthy": "disable"}}
{"ignore": "/vendor\n", "extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"truthy": "disable", "line-length": "disable", "document-start": "disable"}}
{"ignore": "/vendor\n", "extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"truthy": "disable", "line-length": "disable", "document-start": "disable"}}
{"ignore": "/vendor\n", "extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"truthy": "disable", "line-length": "disable", "document-start": "disable"}}
{"ignore": "/vendor\n", "extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"truthy": "disable", "line-length": "disable", "document-start": "disable"}}
{"extends": "default", "rules": {"line-length": {"level": "warning", "max": 120}, "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"max-spaces-inside": 1}, "brackets": {"max-spaces-inside": 1}, "colons": "enable", "commas": "enable", "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"max-spaces-inside": 1}, "brackets": {"max-spaces-inside": 1}, "colons": "enable", "commas": "enable", "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 120}, "comments-indentation": "disable", "braces": {"max-spaces-inside": 1}}}
{"extends": "default", "rules": {"line-length": {"max": 120}, "comments-indentation": "disable", "braces": {"max-spaces-inside": 1}}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "document-start": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 100}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "document-start": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 100}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "document-start": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 100}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"document-start": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 160, "level": "warning"}, "truthy": "disable", "indentation": {"spaces": 2, "indent-sequences": false}}, "ignore": "default/roles\n"}
{"extends": "default", "rules": {"document-start": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 160, "level": "warning"}, "truthy": "disable", "indentation": {"spaces": 2, "indent-sequences": false}}, "ignore": "default/roles\n"}
{"extends": "default", "ignore": "test/bin/\ntest/asset/\n", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 120}, "truthy": {"check-keys": false}}}
{"extends": "default", "ignore": "test/bin/\ntest/asset/\n", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 120}, "truthy": {"check-keys": false}}}
{"ignore": ".venv/lib\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": ".venv/lib\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": ".venv/lib\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": ".venv/lib\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 500, "level": "error"}, "document-start": "disable", "indentation": {"indent-sequences": false}}}
{"extends": "default", "rules": {"line-length": {"max": 500, "level": "error"}, "document-start": "disable", "indentation": {"indent-sequences": false}}}
{"extends": "default", "rules": {"line-length": {"max": 500, "level": "error"}, "document-start": "disable", "indentation": {"indent-sequences": false}}}
{"extends": "default", "rules": {"line-length": {"max": 500, "level": "error"}, "document-start": "disable", "indentation": {"indent-sequences": false}}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "ignore": ".travis/\n.travis.yml\n.github/\nmeta/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"indentation": {"indent-sequences": false}, "line-length": {"max": 999}, "comments": {"min-spaces-from-content": 1}}, "ignore": "node_modules/\n"}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"level": "warning", "max": 120}}, "ignore": "vendor/\ndata/data/install.openshift.io_installconfigs.yaml\ndata/data/manifests/openshift/cluster-networkconfig-crd.yaml\n"}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"level": "warning", "max": 120}}, "ignore": "vendor/\ndata/data/install.openshift.io_installconfigs.yaml\ndata/data/manifests/openshift/cluster-networkconfig-crd.yaml\n"}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 255, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": "disable", "line-length": {"max": 200}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": "disable", "line-length": {"max": 200}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": "disable", "line-length": {"max": 200}}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 250, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 250, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 250, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 250, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "ignore": "changelogs\n", "rules": {"line-length": "disable", "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "document-end": {"present": true}, "indentation": {"level": "error", "indent-sequences": true}, "truthy": {"level": "error", "allowed-values": ["true", "false"]}}}
{"extends": "default", "ignore": "changelogs\n", "rules": {"line-length": "disable", "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "document-end": {"present": true}, "indentation": {"level": "error", "indent-sequences": true}, "truthy": {"level": "error", "allowed-values": ["true", "false"]}}}
{"extends": "default", "ignore": "changelogs\n", "rules": {"line-length": "disable", "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "document-end": {"present": true}, "indentation": {"level": "error", "indent-sequences": true}, "truthy": {"level": "error", "allowed-values": ["true", "false"]}}}
{"extends": "default", "ignore": "/.venv\nvendor/\n/common/defs/ethereum/chains/\n/common/defs/ethereum/tokens/\n", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": "disable", "document-start": "disable", "comments-indentation": "disable", "indentation": {"spaces": 2}}}
{"extends": "default", "ignore": "/.venv\nvendor/\n/common/defs/ethereum/chains/\n/common/defs/ethereum/tokens/\n", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": "disable", "document-start": "disable", "comments-indentation": "disable", "indentation": {"spaces": 2}}}
{"extends": "default", "ignore": "/.venv\nvendor/\n/common/defs/ethereum/chains/\n/common/defs/ethereum/tokens/\n", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": "disable", "document-start": "disable", "comments-indentation": "disable", "indentation": {"spaces": 2}}}
{"extends": "default", "ignore": "/.venv\nvendor/\n/common/defs/ethereum/chains/\n/common/defs/ethereum/tokens/\n", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": "disable", "document-start": "disable", "comments-indentation": "disable", "indentation": {"spaces": 2}}}
{"ignore": "venv\nbuild\n.github/workflows\n", "rules": {"braces": {"forbid": true}, "brackets": {"forbid": true}, "colons": {"max-spaces-after": 1, "max-spaces-before": 0}, "comments": {"ignore-shebangs": true, "min-spaces-from-content": 2, "require-starting-space": true}, "comments-indentation": "enable", "empty-lines": {"max": 1}, "hyphens": {"max-spaces-after": 1}, "indentation": {"check-multi-line-strings": true, "indent-sequences": true, "spaces": "consistent"}, "key-duplicates": "enable", "key-ordering": {"ignore": ".pre-commit-config.yaml\n.github\n"}, "line-length": {"allow-non-breakable-words": true, "max": 80}, "new-lines": {"type": "unix"}, "octal-values": {"forbid-explicit-octal": true, "forbid-implicit-octal": true}, "quoted-strings": {"extra-required": ["\\d\\d:\\d\\d"], "quote-type": "single", "required": "only-when-needed"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"ignore": "venv\nbuild\n.github/workflows\n", "rules": {"braces": {"forbid": true}, "brackets": {"forbid": true}, "colons": {"max-spaces-after": 1, "max-spaces-before": 0}, "comments": {"ignore-shebangs": true, "min-spaces-from-content": 2, "require-starting-space": true}, "comments-indentation": "enable", "empty-lines": {"max": 1}, "hyphens": {"max-spaces-after": 1}, "indentation": {"check-multi-line-strings": true, "indent-sequences": true, "spaces": "consistent"}, "key-duplicates": "enable", "key-ordering": {"ignore": ".pre-commit-config.yaml\n.github\n"}, "line-length": {"allow-non-breakable-words": true, "max": 80}, "new-lines": {"type": "unix"}, "octal-values": {"forbid-explicit-octal": true, "forbid-implicit-octal": true}, "quoted-strings": {"extra-required": ["\\d\\d:\\d\\d"], "quote-type": "single", "required": "only-when-needed"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"ignore": "config/custom_components/\nconfig/ip_bans.yaml\nconfig/esphomeyaml/*/\nconfig/notebooks/\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true, "ignore": "config/known_devices.yaml\n"}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"ignore": ".github/support.yml\n.github/settings.yml\n", "level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}}, "ignore": ".github/workflows/stale.yml\n"}
{"rules": {"document-start": "disable", "indentation": {"level": "error", "indent-sequences": "consistent"}}, "ignore": ".tox\n"}
{"extends": "default", "rules": {"line-length": "disable", "new-lines": {"type": "unix"}, "new-line-at-end-of-file": {"level": "warning"}, "trailing-spaces": {"level": "warning"}}}
{"extends": "default", "ignore": "env/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Content.Shared.CCVar; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility;\nnamespace Content.YAMLLinter { internal class Program { private static int Main(string[] args) { return new Program().Run(); }\nprivate int Run() { var stopwatch = new Stopwatch(); stopwatch.Start();\nvar errors = RunValidation().Result;\nif (errors.Count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nConsole.WriteLine($\"{errors.Count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return -1; }\nprivate async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var client = pairTracker.Pair.Client;\nvar cPrototypeManager = client.ResolveDependency<IPrototypeManager>(); var clientErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait client.WaitPost(() => { clientErrors = cPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn clientErrors; }\nprivate async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var server = pairTracker.Pair.Server;\nvar sPrototypeManager = server.ResolveDependency<IPrototypeManager>(); var serverErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait server.WaitPost(() => { serverErrors = sPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn serverErrors; }\npublic async Task<Dictionary<string, HashSet<ErrorNode>>> RunValidation() { var allErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (clientErrors.TryGetValue(key, out var clientVal)) { newErrors.UnionWith(val.Intersect(clientVal)); newErrors.UnionWith(clientVal.Where(n => n.AlwaysRelevant)); }\nif (newErrors.Count == 0) continue; allErrors[key] = newErrors; }\nreturn allErrors; } } }"
{"ignore-from-file": [".gitignore", ".yamlignore"], "extends": "default", "rules": {"line-length": "disable"}}
{"ignore-from-file": [".gitignore", ".yamlignore"], "extends": "default", "rules": {"line-length": "disable"}}
{"ignore-from-file": [".gitignore", ".yamlignore"], "extends": "default", "rules": {"line-length": "disable"}}
{"ignore-from-file": [".gitignore", ".yamlignore"], "extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"document-end": {"present": false}, "document-start": {"present": false}, "truthy": "disable", "line-length": "disable", "comments": {"min-spaces-from-content": 1}}, "ignore": "/third_party/*"}
{"extends": "relaxed", "rules": {"line-length": "disable"}}
{"extends": "default", "ignore": "files/\ntemplates/\n", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 300, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "files/\ntemplates/\n", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 300, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "files/\ntemplates/\n", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 300, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "files/\ntemplates/\n", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 300, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable"}, "ignore": ".github/stale.yml\n"}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"allow-non-breakable-inline-mappings": true}}}
{"ignore": "/vendor\n/etc\n.git\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable", "indentation": {"indent-sequences": "whatever"}}}
{"ignore": "/vendor\n/etc\n.git\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable", "indentation": {"indent-sequences": "whatever"}}}
{"ignore": "/vendor\n/etc\n.git\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable", "indentation": {"indent-sequences": "whatever"}}}
{"ignore": "/vendor\n/etc\n.git\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable", "indentation": {"indent-sequences": "whatever"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": {"present": false}, "line-length": "disable"}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 175, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 175, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"truthy": {"check-keys": false}, "document-start": "disable", "line-length": {"max": 85}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": ".esphome/\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 2, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": ".esphome/\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 2, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"indentation": {"indent-sequences": false}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}, "comments-indentation": "disable", "document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"indentation": {"indent-sequences": false}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}, "comments-indentation": "disable", "document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"rules": {"quoted-strings": {"required": true}}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 1}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": "whatever", "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"level": "warning"}}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "enable", "document-end": "disable", "document-start": {"present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 80, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "relaxed", "rules": {"line-length": {"max": 120}, "hyphens": "disable"}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on", "yes"]}, "line-length": {"max": 120, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "document-start": {"present": true, "level": "error"}, "comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "rules": {"document-start": {"present": false}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 180, "level": "warning"}, "truthy": "disable"}}
{"ignore": ".direnv\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"spaces": 2}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning", "allowed-values": ["true", "false", "on"]}}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "document-start": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "brackets": {"max-spaces-inside": 1}, "line-length": {"ignore": ".github/*\n"}, "truthy": {"ignore": ".github/*\n"}}}
{"ignore": "molecule/*/tests/\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"rules": {"indentation": {"spaces": 2, "indent-sequences": false}, "new-line-at-end-of-file": "enable"}}
".github/workflows/fixtures/test.yaml"
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint.yaml"], "ignore": ".venv\n", "rules": {"line-length": {"max": 120}}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": {"max": 160}}}
{"extends": "relaxed", "rules": {"braces": {"min-spaces-inside": 1, "max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "comments": {"min-spaces-from-content": 1}, "line-length": "disable", "truthy": {"allowed-values": ["true", "false", "on"]}}, "ignore": ".direnv/\n.venv/\n.git/\n.tox\n.cache\nroles/\n.ansible-lint\n.github/\n.pre-commit-config.yaml\n"}
{"extends": "default", "rules": {"line-length": {"max": 220, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "document-start": {"level": "error"}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 170, "level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "error"}}, "ignore": ".github/workflows/main.yml\n"}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable", "truthy": {"ignore": ".github/workflows/*.yml\n"}}}
{"extends": "default", "rules": {"line-length": {"max": 200, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\nsite.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 350}}}
{"extends": "default", "yaml-files": ["*.yaml"], "rules": {"empty-values": "enable", "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "line-length": {"max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "octal-values": "enable"}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}, "indentation": {"indent-sequences": "whatever"}, "truthy": {"check-keys": false}, "document-start": {"present": false}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "extends": "default", "rules": {"indentation": "disable", "document-start": "disable", "comments": "disable", "line-length": "disable", "trailing-spaces": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 1, "max-spaces-inside": 1}, "line-length": false}}
{"extends": "default", "rules": {"document-start": {"present": true}, "colons": "disable", "empty-lines": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable", "skip_list": ["role-name"]}}
{"extends": "default", "rules": {"comments-indentation": {"ignore": "playbook.yml\n"}}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false}, "indentation": {"check-multi-line-strings": true, "spaces": "consistent", "indent-sequences": true}, "line-length": "disable", "truthy": "enable", "key-duplicates": "enable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable", "comments-indentation": "disable"}, "ignore": "roles\nvirtenv\nvenv\n"}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "comments-indentation": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": {"max": 160}}}
{"extends": "default", "ignore": "tests/roles/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 2}, "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "float-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"truthy": false}
{"extends": "default", "ignore": "/defaults/main.yaml\n"}
{"extends": "default", "rules": {"line-length": {"max": 180, "level": "warning"}, "document-start": {"level": "error"}, "comments": {"level": "error"}, "truthy": {"level": "error"}}, "ignore": ".github/stale.yml\n.cache\nroles\n"}
".config/yamllint/config.symlink"
{"extends": "default", "ignore": ".github/workflows/\n", "rules": {"document-start": "disable", "comments": {"min-spaces-from-content": 1}}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"present": false}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 160, "allow-non-breakable-words": false, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable"}, "ignore": ".tox/\n"}
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility; using Robust.UnitTesting;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] _) { PoolManager.Startup(null); var stopwatch = new Stopwatch(); stopwatch.Start();\nvar (errors, fieldErrors) = await RunValidation();\nvar count = errors.Count + fieldErrors.Count;\nif (count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nforeach (var error in fieldErrors) { Console.WriteLine(error); }\nConsole.WriteLine($\"{count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); PoolManager.Shutdown(); return -1; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(); var client = pairTracker.Pair.Client; var result = await ValidateInstance(client); await pairTracker.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(); var server = pairTracker.Pair.Server; var result = await ValidateInstance(server); await pairTracker.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>>, List<string>)> ValidateInstance( RobustIntegrationTest.IntegrationInstance instance) { var protoMan = instance.ResolveDependency<IPrototypeManager>(); Dictionary<string, HashSet<ErrorNode>> yamlErrors = default!; List<string> fieldErrors = default!;\nawait instance.WaitPost(() => { yamlErrors = protoMan.ValidateDirectory(new ResPath(\"/Prototypes\"), out var prototypes); fieldErrors = protoMan.ValidateFields(prototypes); });\nreturn (yamlErrors, fieldErrors); }\npublic static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors , List<string> FieldErrors)> RunValidation() { var yamlErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors.YamlErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.Item1.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) yamlErrors[key] = newErrors; }\n// Next add any always-relevant client errors. foreach (var (key, val) in clientErrors.YamlErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (yamlErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else yamlErrors[key] = newErrors; }\n// Finally, combine the prototype ID field errors. var fieldErrors = serverErrors.FieldErrors .Concat(clientErrors.FieldErrors) .Distinct() .ToList();\nreturn (yamlErrors, fieldErrors); } } }"
{"extends": "default", "rules": {"line-length": {"max": 350, "level": "warning"}}, "ignore": ".github/stale.yml\nvenv\nroles\n"}
{"extends": "default", "rules": {"comments": {"level": "error"}, "comments-indentation": {"level": "error"}, "document-start": {"level": "error"}, "line-length": {"max": 400, "level": "error"}, "quoted-strings": {"level": "error"}, "truthy": {"check-keys": false, "allowed-values": ["False", "True", "false", "true"], "level": "error"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "enable", "comments-indentation": "enable", "document-start": "enable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "enable", "key-duplicates": "enable", "line-length": {"max": 120}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"rules": {"line-length": {"max": 120, "level": "warning"}}, "ignore": ".github\n"}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable", "new-lines": "disable", "new-line-at-end-of-file": "disable", "truthy": "disable", "comments-indentation": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": false}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"indentation": {"spaces": 2, "indent-sequences": false}, "braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"braces": {"forbid": "non-empty"}, "brackets": {"forbid": "non-empty"}, "comments": {"min-spaces-from-content": 1}, "document-end": "disable", "document-start": "disable", "line-length": {"max": 300}, "truthy": {"check-keys": false}}}
{"extends": "default", "ignore": "build/\ntarget/\n.databend/\n", "rules": {"line-length": {"max": 120, "level": "warning"}, "braces": "disable", "brackets": "disable", "document-start": "disable", "truthy": {"check-keys": false}}}
{"extends": "default", "ignore": ".bundle/\n.cache/\n.git/\nnode_modules/\ntest/**/states/**/*.sls\n.kitchen/\nkitchen.vagrant.yml\npillar.example\n", "yaml-files": ["*.yaml", "*.yml", ".salt-lint", ".yamllint", "*.example", "test/**/*.sls"], "rules": {"empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "line-length": {"max": 88}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": true}}}
{"ignore": "azure-*.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false, "ignore": "**/issue_templates.yml\n"}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"line-length": false}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml"}
{"ignore": "custom_components/\nip_bans.yaml\nesphomeyaml/*/\nnotebooks/\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true, "ignore": "config/known_devices.yaml\n"}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"ignore": ".github/support.yml\n.github/settings.yml\n.gitlab-ci.yml\nconfig/packages/alarm_clock.yaml\nconfig/packages/finance_tracker.yaml\nconfig/packages/weather.yaml\n", "level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "min-spaces-inside-empty": 0, "min-spaces-inside": 1}, "comments": {"min-spaces-from-content": 1}, "line-length": {"max": 120}}}
{"ignore": "/vendor/**\n/spec/manageiq/**\n/spec/tools/vim_data/**\n/spec/vcr_cassettes/**\n", "extends": "relaxed", "rules": {"indentation": {"indent-sequences": false}, "line-length": {"max": 120}}}
{"extends": "default", "rules": {"line-length": {"level": "warning", "max": 90}}}
{"extends": "default", "rules": {"indentation": "disable", "document-start": "disable", "new-line-at-end-of-file": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"document-start": {"present": false}, "line-length": {"max": 132, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "ignore": "/.github/workflows/lint.yaml\n/.github/workflows/build.yaml\n"}, "truthy": {"ignore": "/.github/workflows/\n"}, "indentation": {"indent-sequences": "consistent"}}}
{"extends": "default", "ignore": "_tmp/\n.bitrise.secrets.yml\n.git/\n.github/\nvendor/\n_examples/\n_lessons/\n", "rules": {"empty-lines": {"max": 1}, "line-length": "disable", "document-start": "disable", "indentation": {"indent-sequences": false}, "comments-indentation": "disable", "comments": {"level": "error"}, "octal-values": "enable", "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}, "braces": {"min-spaces-inside": 1, "max-spaces-inside": 1}}}
{"extends": "default", "rules": {"line-length": false, "truthy": false, "indentation": {"spaces": 2}}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": {"level": "warning", "allow-non-breakable-inline-mappings": true}, "truthy": "enable", "trailing-spaces": "disable", "new-line-at-end-of-file": "disable"}}
{"extends": "default", "ignore": "cookiecutter/**/buildspec.yml\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"spaces": 2, "level": "warning", "indent-sequences": "consistent"}, "line-length": "disable", "truthy": "disable"}, "ignore": "/.ddev/\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": "venv\n", "extends": "default", "rules": {"braces": {"forbid": "non-empty", "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "comments-indentation": {}, "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-flow-mappings": true, "forbid-in-block-mappings": false}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": false}, "quoted-strings": {"quote-type": "any", "required": "only-when-needed", "extra-allowed": ["\\d{2,2}:\\d{2,2}"]}, "trailing-spaces": "enable", "truthy": {"level": "error", "allowed-values": ["true", "false"], "check-keys": false}}}
{"locale": "en_US.UTF-8", "rules": {"colons": {"max-spaces-after": 1, "max-spaces-before": 1}, "key-ordering": {}, "line-length": {"allow-non-breakable-inline-mappings": true}}, "yaml-files": ["*.yaml", "*.yml", ".yamllint"]}
{"extends": "default", "ignore": ".bundle/\n.cache/\n.git/\nnode_modules/\ntest/**/states/**/*.sls\n.kitchen/\nsalt/\npillar/users/init.sls\n", "yaml-files": ["*.yaml", "*.yml", ".salt-lint", ".yamllint", "*.example", "test/**/*.sls", "*.sls"], "rules": {"empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "line-length": {"max": 88}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": true}, "comments": "disable", "comments-indentation": "disable"}}
{"extends": "default", "rules": {"comments": "enable", "empty-values": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": "disable", "quoted-strings": {"quote-type": "double"}}, "ignore": ".venv/\nnautobot_ssot/integrations/aci/diffsync/device-types/\ncompose.yaml\n"}
{"extends": "default", "ignore": "build/\n", "rules": {"document-start": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 130, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"max": 200, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "True", "False", "yes", "no", "Yes", "No"]}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "disable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": {"level": "warning"}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "comments-indentation": "disable"}}
{"ignore": ".github/*\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 2, "max-end": 2}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": {"max": 2480, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"brackets": {"max-spaces-inside": 1}, "document-start": {"ignore": "*.sops.yaml\n*.sops.yml\n"}, "empty-lines": {"max": 1}, "line-length": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent", "level": "warning", "ignore": "*.sops.yaml\n*.sops.yml\n"}, "new-line-at-end-of-file": "disable", "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": "consistent"}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}, "comments-indentation": "disable", "document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 140}}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}, "ignore": "venv/\n.cache/\n"}
{"rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"document-end": {"present": false}, "document-start": {"present": true}, "indentation": {"spaces": 4}, "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}, "truthy": {"allowed-values": ["yes", "no", "true", "false"]}}, "ignore": ".github/workflows/*.yml\n"}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "line-length": "disable", "key-duplicates": {"level": "warning"}, "truthy": "disable"}}
{"extends": "default", "rules": {"comments": {"level": "error", "require-starting-space": true}, "comments-indentation": "disable", "document-start": "disable", "indentation": {"level": "error", "spaces": 2, "indent-sequences": true}, "line-length": "disable", "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": ".ansible/\n.cache/\n.idea/\n.mac_maker/\ncollections/\nroles/\n", "rules": {"braces": {"max-spaces-inside": 0, "level": "error"}, "brackets": {"max-spaces-inside": 0, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "indentation": {"spaces": "consistent", "indent-sequences": true, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": {"level": "error"}, "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"type": "unix"}, "octal-values": {"forbid-implicit-octal": true}, "trailing-spaces": {"level": "error"}, "truthy": "disable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2}, "line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "rules": {"document-start": "disable", "truthy": {"check-keys": false}, "line-length": {"max": 120}}}
{"extends": "default", "rules": {"braces": "disable", "line-length": {"max": 120, "level": "warning"}}, "ignore": ".github/\n"}
{"rules": {"braces": {"forbid": "non-empty"}, "brackets": {"forbid": "non-empty"}, "comments": {"min-spaces-from-content": 1, "require-starting-space": true}, "document-end": {"present": false}, "document-start": {"present": false}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "float-values": {"forbid-inf": true, "forbid-nan": true, "forbid-scientific-notation": true, "require-numeral-before-decimal": true}, "key-duplicates": "enable", "new-lines": "enable", "octal-values": {"forbid-explicit-octal": true, "forbid-implicit-octal": true}, "quoted-strings": {"allow-quoted-quotes": true, "quote-type": "double", "required": true}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": {"level": "warning", "allow-non-breakable-inline-mappings": true}, "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "empty-lines": "disable", "trailing-spaces": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "disable", "empty-values": "disable", "float-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "disable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"ignore": "REST APIs/Postman/cvp-openapi.yaml\n"}
{"rules": {"line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": ".github/workflows/*\ntests/roles/\n", "rules": {"document-start": "disable", "comments-indentation": "disable", "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"max-spaces-inside": 1}, "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": -1}, "line-length": {"max": 180, "ignore": "defaults/main.yml\n"}, "new-lines": {"type": "unix"}, "indentation": {"spaces": 2, "indent-sequences": true}, "new-line-at-end-of-file": "disable", "truthy": "disable", "comments": "disable", "empty-lines": {"max": 3, "max-start": 0, "max-end": 1}}}
{"extends": "default", "rules": {"line-length": {"max": 160, "allow-non-breakable-inline-mappings": true, "level": "warning"}, "document-start": {"present": true}}}
{"line-length": "disable"}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"level": "warning", "max": 120}}}
{"rules": {"truthy": "enable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning", "present": true}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 200, "allow-non-breakable-words": true}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "octal-values": {"forbid-explicit-octal": true}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": ".github/workflows/*.yml\ntmp*\n", "rules": {"line-length": {"max": 150}}}
{"rules": {"line-length": "disable"}}
{"ignore": "*.sops.*\n*kustomizeconfig.yaml*\n*storage-test-pods.yaml*\n*values.yaml*\n", "extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "comments": {"min-spaces-from-content": 1}, "line-length": "disable", "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": "enable"}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": {"max": 88, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"spaces": "consistent", "indent-sequences": "consistent", "check-multi-line-strings": false}}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "comments": {"min-spaces-from-content": 1}, "line-length": "disable", "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": {"max": 89, "level": "warning"}}}
{"extends": "default", "ignore": "context\nroles/*\ncollections/*\n.pre-commit-config.yaml\n", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": {"level": "warning", "allow-non-breakable-inline-mappings": true}, "truthy": "disable"}}
{"extends": "default", "ignore": "node_modules\n", "rules": {"comments-indentation": "disable", "line-length": "disable", "document-start": "disable", "brackets": "disable", "truthy": "disable"}}
{"rules": {"document-end": "disable", "document-start": "disable"}}
{"extends": "default", "ignore": "venv/\n.github/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": ".tox\nchangelogs/*\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 80, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "truthy": {"allowed-values": ["on", "true", "false"]}}}
{"yaml-files": ["*.yaml", "*.yml", "*.tkape", "*.mkape"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "disable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"check-keys": false, "level": "warning"}}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": {}, "document-end": "disable", "document-start": {"present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "key-duplicates": false, "line-length": {"max": 100, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": {}}}
{"extends": "default", "ignore": "known_devices.yaml\n", "rules": {"braces": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "document-end": {"present": false}, "document-start": {"present": false}, "empty-values": "enable", "indentation": {"check-multi-line-strings": false, "indent-sequences": true, "spaces": 2}, "line-length": "disable", "quoted-strings": {"quote-type": "double", "required": false, "extra-required": [], "extra-allowed": []}}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"forbid": "non-empty", "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "disable", "float-values": {"forbid-inf": true, "forbid-nan": true, "forbid-scientific-notation": true, "require-numeral-before-decimal": true}, "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "error", "check-keys": false}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}, "comments": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 200, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": false}}}
{"extends": "default", "ignore": ".vim/bundle/\n"}
{"extends": "default", "ignore": ".venv/\nsrc/\nweb/\n"}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 150}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"line-length": {"max": 256, "level": "warning"}, "document-start": "disable", "braces": {"forbid": false, "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}}}
{"locale": "en_US.UTF-8", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 95}, "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning", "allowed-values": ["true", "false"], "check-keys": false}}}
{"extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": true}, "document-start": {"present": true, "ignore": "examples/*.yaml\n"}, "line-length": "disable", "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "truthy": {"ignore": "*.yml\n*.yaml\n"}}}
{"extends": "default", "ignore": "molecule/default/tests", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 300, "level": "warning"}}}
{"ignore": "**/cassettes/*.yaml\n", "extends": "default", "rules": {"line-length": {"max": 88}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"document-start": "disable", "line-length": {"max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "key-duplicates": "enable", "line-length": "disable", "new-lines": {"type": "unix"}, "new-line-at-end-of-file": "disable", "truthy": "disable", "trailing-spaces": "disable"}}
{"extends": "default", "ignore": ".github/\n.tox/\n", "rules": {"truthy": "disable", "line-length": "disable", "indentation": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 200, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "themes\n", "rules": {"braces": {"forbid": true}, "brackets": {"forbid": true}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 2}, "document-start": {"present": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": false, "check-multi-line-strings": true}, "line-length": {"max": 120, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}, "trailing-spaces": "enable"}}
{"extends": "default", "ignore": "docker/**/*.yml\n", "rules": {"line-length": {"max": 120, "level": "warning", "ignore": "docker-compose.yml\n"}, "truthy": {"ignore": "?appveyor.yml\n.github/workflows/*.yml\n"}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}}
{"ignore": ".cargo\n.pyenv\n"}
{"extends": "default", "ignore-from-file": ".gitignore"}
{"extends": "default", "rules": {"line-length": {"max": 120}}}
{"extends": "default", "rules": {"line-length": {"max": 100}}, "ignore-from-file": ".gitignore"}
{"extends": "default", "rules": {"comments": "enable"}, "ignore": "archive/\n"}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": {"level": "warning"}, "braces": {"max-spaces-inside": 1}}}
{"extends": "default", "rules": {"colons": {"max-spaces-before": 0, "max-spaces-after": 60}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "upstream-*\nipxe-*\n", "rules": {"braces": {"max-spaces-inside": 1}, "brackets": {"max-spaces-inside": 1}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "line-length": {"level": "warning", "max": 160, "allow-non-breakable-inline-mappings": true}, "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 160, "level": "warning"}, "truthy": "disable"}}
{"extends": "default", "ignore": "roles/matrix-synapse/vars/workers.yml\n", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable"}}
{"rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": ".yamllint.yml\n*.enc.*\n*.sops.*\n", "extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on", "yes"]}, "comments": {"min-spaces-from-content": 1}, "line-length": "disable", "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "hyphens": {"max-spaces-after": 1}, "document-start": "disable"}}
{"rules": {"braces": "disable", "brackets": "disable", "colons": "enable", "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": "disable", "empty-values": "enable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 175, "level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 160, "level": "warning"}}}
{"extends": "default", "ignore": ".venv\n", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 200}}}
{"ignore": ".pre-commit-config.yaml\n.yamllint"}
{"extends": "default", "rules": {"line-length": {"max": 200, "level": "warning"}, "truthy": "disable"}, "ignore": ".github\nmolecule\nroles/contrib\n.galaxy.yml\n"}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning", "max": 3}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": {"max": 140, "level": "warning", "allow-non-breakable-inline-mappings": true}, "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "yes", "no"]}}, "ignore": "./venv/"}
{"extends": "default", "rules": {"line-length": {"max": 125}}}
{"extends": "default", "ignore": "/tests/config/dbAuth/badDbAuth2.yaml\n", "rules": {"document-start": {"present": false}, "line-length": {"max": 132, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "ignore": "/.github/workflows/lint.yaml\n"}, "truthy": {"ignore": "/.github/workflows/\n"}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "ignore": ".storage/\nappdaemon/\ncustom_components/\ndeps/\nnotebooks/\nthemes/\nesphome/\nnode-red/\nthemes/\nwww/\nzigbee2mqtt/\n.ip_authenticated.yaml\nip_bans.yaml\nknown_devices.yaml\nsecrets.yaml\nsecrets_example.yaml\ngoogle_calendars.yaml\n", "rules": {"document-start": {"level": "error", "present": false}, "line-length": {"level": "error", "max": 120}, "comments": {"level": "error", "min-spaces-from-content": 1}}}
{"rules": {"document-start": "disable", "line-length": "disable"}}
{"ignore": "", "extends": "relaxed", "rules": {"line-length": {"max": 120}}}
{"404": "Not Found"}
{"extends": "default", "ignore": "/.travis.yml\n/tests\n", "rules": {"line-length": {"max": 120}}}
{"yaml-files": ["themes/midnight.yaml"], "rules": {"braces": {"level": "error", "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "empty-values": {"level": "error", "forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "key-ordering": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"line-length": {"max": 150}}
{"rules": {"line-length": {"max": 100, "level": "error"}}}
{"rules": {"line-length": {"max": 280, "level": "warning"}}}
{"extends": "relaxed", "rules": {"line-length": {"max": 200, "allow-non-breakable-inline-mappings": true}}}
{"ignore-from-file": [".gitignore", ".yamlignore"], "extends": "default", "rules": {"document-start": "disable", "float-values": "enable", "line-length": "disable", "octal-values": "enable", "truthy": {"check-keys": false}}}
{"ignore": "rendered/\n", "extends": "default", "rules": {"document-start": "disable", "line-length": "disable", "braces": {"max-spaces-inside": 1}, "indentation": {"spaces": "consistent", "indent-sequences": "whatever"}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "comments-indentation": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 190, "level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 120}, "comments": {"min-spaces-from-content": 1}, "truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"line-length": {"max": 135, "allow-non-breakable-words": true}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "extends": "default", "rules": {"line-length": {"max": 120}}, "ignore": "/tests/*.yaml\ngating.yaml\n"}
{"yaml-files": ["*.yaml", "*.yml"], "ignore": "vendor/**/*\n.rubocop_todo.yml\n", "rules": {"comments": {"require-starting-space": true}, "comments-indentation": "enable", "document-start": {"present": true}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "line-length": {"max": 100, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "key-duplicates": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}}}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"document-start": {"present": false}, "indentation": {"indent-sequences": false}, "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"rules": {"quoted-strings": {"required": true}}}
{"rules": {"quoted-strings": {"required": true}}}
{"rules": {"quoted-strings": {"required": true}}}
{"rules": {"quoted-strings": {"required": true}}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 1}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": "whatever", "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"level": "warning"}}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 2, "max-start": 0, "max-end": 1}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": "whatever", "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"level": "warning"}}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "enable", "document-end": "disable", "document-start": {"present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 80, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "enable", "document-end": "disable", "document-start": {"present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 80, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "enable", "document-end": "disable", "document-start": {"present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 80, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": "enable", "document-end": "disable", "document-start": {"present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 80, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "relaxed", "rules": {"line-length": {"max": 120}, "hyphens": "disable"}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on", "yes"]}, "line-length": {"max": 120, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "document-start": {"present": true, "level": "error"}, "comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on", "yes"]}, "line-length": {"max": 120, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "document-start": {"present": true, "level": "error"}, "comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on", "yes"]}, "line-length": {"max": 120, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "document-start": {"present": true, "level": "error"}, "comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on", "yes"]}, "line-length": {"max": 120, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "document-start": {"present": true, "level": "error"}, "comments": {"min-spaces-from-content": 1}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"spaces": 2}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning", "allowed-values": ["true", "false", "on"]}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"spaces": 2}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning", "allowed-values": ["true", "false", "on"]}}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true}}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true}}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true}}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "error"}}, "ignore": ".github/workflows/main.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 200, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\nsite.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 200, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\nsite.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 200, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\nsite.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 200, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\nsite.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 350}}}
{"extends": "default", "rules": {"line-length": {"max": 350}}}
{"extends": "default", "yaml-files": ["*.yaml"], "rules": {"empty-values": "enable", "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "line-length": {"max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "octal-values": "enable"}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}, "indentation": {"indent-sequences": "whatever"}, "truthy": {"check-keys": false}, "document-start": {"present": false}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable", "skip_list": ["role-name"]}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false}, "indentation": {"check-multi-line-strings": true, "spaces": "consistent", "indent-sequences": true}, "line-length": "disable", "truthy": "enable", "key-duplicates": "enable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false}, "indentation": {"check-multi-line-strings": true, "spaces": "consistent", "indent-sequences": true}, "line-length": "disable", "truthy": "enable", "key-duplicates": "enable"}}
{"extends": "default", "rules": {"line-length": {"max": 180, "level": "warning"}, "document-start": {"level": "error"}, "comments": {"level": "error"}, "truthy": {"level": "error"}}, "ignore": ".github/stale.yml\n.cache\nroles\n"}
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility; using Robust.UnitTesting;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] _) { PoolManager.Startup(null); var stopwatch = new Stopwatch(); stopwatch.Start();\nvar (errors, fieldErrors) = await RunValidation();\nvar count = errors.Count + fieldErrors.Count;\nif (count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nforeach (var error in fieldErrors) { Console.WriteLine(error); }\nConsole.WriteLine($\"{count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); PoolManager.Shutdown(); return -1; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(); var client = pairTracker.Pair.Client; var result = await ValidateInstance(client); await pairTracker.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(); var server = pairTracker.Pair.Server; var result = await ValidateInstance(server); await pairTracker.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>>, List<string>)> ValidateInstance( RobustIntegrationTest.IntegrationInstance instance) { var protoMan = instance.ResolveDependency<IPrototypeManager>(); Dictionary<string, HashSet<ErrorNode>> yamlErrors = default!; List<string> fieldErrors = default!;\nawait instance.WaitPost(() => { yamlErrors = protoMan.ValidateDirectory(new ResPath(\"/Prototypes\"), out var prototypes); fieldErrors = protoMan.ValidateFields(prototypes); });\nreturn (yamlErrors, fieldErrors); }\npublic static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors , List<string> FieldErrors)> RunValidation() { var yamlErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors.YamlErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.Item1.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) yamlErrors[key] = newErrors; }\n// Next add any always-relevant client errors. foreach (var (key, val) in clientErrors.YamlErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (yamlErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else yamlErrors[key] = newErrors; }\n// Finally, combine the prototype ID field errors. var fieldErrors = serverErrors.FieldErrors .Concat(clientErrors.FieldErrors) .Distinct() .ToList();\nreturn (yamlErrors, fieldErrors); } } }"
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility; using Robust.UnitTesting;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] _) { PoolManager.Startup(null); var stopwatch = new Stopwatch(); stopwatch.Start();\nvar (errors, fieldErrors) = await RunValidation();\nvar count = errors.Count + fieldErrors.Count;\nif (count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nforeach (var error in fieldErrors) { Console.WriteLine(error); }\nConsole.WriteLine($\"{count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); PoolManager.Shutdown(); return -1; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(); var client = pairTracker.Pair.Client; var result = await ValidateInstance(client); await pairTracker.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(); var server = pairTracker.Pair.Server; var result = await ValidateInstance(server); await pairTracker.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>>, List<string>)> ValidateInstance( RobustIntegrationTest.IntegrationInstance instance) { var protoMan = instance.ResolveDependency<IPrototypeManager>(); Dictionary<string, HashSet<ErrorNode>> yamlErrors = default!; List<string> fieldErrors = default!;\nawait instance.WaitPost(() => { yamlErrors = protoMan.ValidateDirectory(new ResPath(\"/Prototypes\"), out var prototypes); fieldErrors = protoMan.ValidateFields(prototypes); });\nreturn (yamlErrors, fieldErrors); }\npublic static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors , List<string> FieldErrors)> RunValidation() { var yamlErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors.YamlErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.Item1.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) yamlErrors[key] = newErrors; }\n// Next add any always-relevant client errors. foreach (var (key, val) in clientErrors.YamlErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (yamlErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else yamlErrors[key] = newErrors; }\n// Finally, combine the prototype ID field errors. var fieldErrors = serverErrors.FieldErrors .Concat(clientErrors.FieldErrors) .Distinct() .ToList();\nreturn (yamlErrors, fieldErrors); } } }"
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "enable", "comments-indentation": "enable", "document-start": "enable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "enable", "key-duplicates": "enable", "line-length": {"max": 120}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"rules": {"line-length": {"max": 120, "level": "warning"}}, "ignore": ".github\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"truthy": {"check-keys": false}}}
{"extends": "default", "rules": {"truthy": {"check-keys": false}}}
{"extends": "default", "ignore": ".bundle/\n.cache/\n.git/\nnode_modules/\ntest/**/states/**/*.sls\n.kitchen/\nkitchen.vagrant.yml\npillar.example\n", "yaml-files": ["*.yaml", "*.yml", ".salt-lint", ".yamllint", "*.example", "test/**/*.sls"], "rules": {"empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "line-length": {"max": 88}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml"}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml"}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}}}
{"extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": "consistent"}, "truthy": {"allowed-values": ["true", "false", "on", "off"]}, "comments-indentation": "disable", "document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "truthy": "disable"}}
{"rules": {"line-length": "disable"}}
{"rules": {"line-length": "disable"}}
{"rules": {"line-length": "disable"}}
{"rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"document-end": {"present": false}, "document-start": {"present": true}, "indentation": {"spaces": 4}, "line-length": "disable"}}
{"extends": "default", "rules": {"document-end": {"present": false}, "document-start": {"present": true}, "indentation": {"spaces": 4}, "line-length": "disable"}}
{"extends": "default", "rules": {"document-end": {"present": false}, "document-start": {"present": true}, "indentation": {"spaces": 4}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "line-length": "disable", "key-duplicates": {"level": "warning"}, "truthy": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": {"level": "warning", "allow-non-breakable-inline-mappings": true}, "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "empty-lines": "disable", "trailing-spaces": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "empty-lines": "disable", "trailing-spaces": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "empty-lines": "disable", "trailing-spaces": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"line-length": {"max": 140, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"rules": {"truthy": "enable"}}
{"rules": {"truthy": "enable"}}
{"rules": {"truthy": "enable"}}
{"rules": {"truthy": "enable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning", "present": true}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "key-duplicates": "enable", "line-length": {"max": 200, "allow-non-breakable-words": true}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "octal-values": {"forbid-explicit-octal": true}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": {"max": 89, "level": "warning"}}}
{"extends": "default", "ignore": "context\nroles/*\ncollections/*\n.pre-commit-config.yaml\n", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": {"level": "warning", "allow-non-breakable-inline-mappings": true}, "truthy": "disable"}}
{"extends": "default", "ignore": "node_modules\n", "rules": {"comments-indentation": "disable", "line-length": "disable", "document-start": "disable", "brackets": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "node_modules\n", "rules": {"comments-indentation": "disable", "line-length": "disable", "document-start": "disable", "brackets": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "node_modules\n", "rules": {"comments-indentation": "disable", "line-length": "disable", "document-start": "disable", "brackets": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "node_modules\n", "rules": {"comments-indentation": "disable", "line-length": "disable", "document-start": "disable", "brackets": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 200, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": false}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 200, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": false}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 200, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": false}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 200, "level": "warning"}, "indentation": {"spaces": 2, "indent-sequences": false}}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 150}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 150}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 150}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}, "line-length": {"max": 150}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"line-length": {"max": 256, "level": "warning"}, "document-start": "disable", "braces": {"forbid": false, "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}}}
{"extends": "default", "rules": {"line-length": {"max": 256, "level": "warning"}, "document-start": "disable", "braces": {"forbid": false, "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}}}
{"extends": "default", "rules": {"line-length": {"max": 256, "level": "warning"}, "document-start": "disable", "braces": {"forbid": false, "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}}}
{"extends": "default", "rules": {"line-length": {"max": 256, "level": "warning"}, "document-start": "disable", "braces": {"forbid": false, "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}}}
{"extends": "default", "rules": {"line-length": {"max": 300, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": "disable", "comments": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 200, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "docker/**/*.yml\n", "rules": {"line-length": {"max": 120, "level": "warning", "ignore": "docker-compose.yml\n"}, "truthy": {"ignore": "?appveyor.yml\n.github/workflows/*.yml\n"}}}
{"extends": "default", "ignore": "docker/**/*.yml\n", "rules": {"line-length": {"max": 120, "level": "warning", "ignore": "docker-compose.yml\n"}, "truthy": {"ignore": "?appveyor.yml\n.github/workflows/*.yml\n"}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "ignore": "roles/matrix-synapse/vars/workers.yml\n", "rules": {"line-length": "disable"}}
{"extends": "default", "ignore": "roles/matrix-synapse/vars/workers.yml\n", "rules": {"line-length": "disable"}}
{"rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"comments-indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 160, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 160, "level": "warning"}}}
{"extends": "default", "ignore": ".venv\n", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "ignore": ".venv\n", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "ignore": ".venv\n", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "ignore": ".venv\n", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 200}}}
{"extends": "default", "rules": {"line-length": {"max": 200}}}
{"extends": "default", "rules": {"line-length": {"max": 200}}}
{"extends": "default", "rules": {"line-length": {"max": 200}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}}
{"ignore": "", "extends": "relaxed", "rules": {"line-length": {"max": 120}}}
{"ignore": "", "extends": "relaxed", "rules": {"line-length": {"max": 120}}}
{"ignore": "", "extends": "relaxed", "rules": {"line-length": {"max": 120}}}
{"ignore": "", "extends": "relaxed", "rules": {"line-length": {"max": 120}}}
{"yaml-files": ["themes/midnight.yaml"], "rules": {"braces": {"level": "error", "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "empty-values": {"level": "error", "forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "key-ordering": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"rules": {"line-length": {"max": 280, "level": "warning"}}}
{"rules": {"line-length": {"max": 280, "level": "warning"}}}
{"rules": {"line-length": {"max": 280, "level": "warning"}}}
{"rules": {"line-length": {"max": 280, "level": "warning"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": "disable", "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "truthy": "disable"}}
{"extends": "relaxed", "rules": {"line-length": {"max": 180, "level": "warning"}}}
{"ignore": "/vendor\ntest/**/*-chart/**\nrest/scm-resolver/gitea.yaml\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}, "indentation": {"indent-sequences": "whatever"}}}
{"extends": "relaxed", "rules": {"comments": {"min-spaces-from-content": 1}, "comments-indentation": "disable", "line-length": {"max": 140, "level": "error"}, "indentation": {"level": "error", "indent-sequences": "consistent"}}}
{"extends": "relaxed"}
{"extends": "default", "rules": {"truthy": "disable", "comments": {"min-spaces-from-content": 1}, "line-length": "disable", "braces": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1}}}
{"extends": "default", "rules": {"line-length": {"level": "error", "max": 120}, "document-start": {"level": "error", "present": false}, "comments": {"level": "error", "min-spaces-from-content": 1}, "braces": {"level": "error", "max-spaces-inside": 1}, "quoted-strings": {"level": "error", "required": "only-when-needed"}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "ignore": ".github/\nmicrolith/alertmanager/config.yml\n", "rules": {"line-length": {"max": 160}}}
{"extends": "default", "rules": {"line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 132, "level": "warning"}, "indentation": {"indent-sequences": "whatever"}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "yes", "no"]}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 132, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "ignore": "/.github/workflows/lint.yaml\n"}, "truthy": {"ignore": "/.github/workflows/\n"}, "indentation": {"indent-sequences": "consistent"}}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "truthy": "disable"}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"], "check-keys": true}}, "ignore": ".tox/\n"}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": "disable", "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
"<Project Sdk=\"Microsoft.NET.Sdk\"> <PropertyGroup> <OutputType>Exe</OutputType> <TargetFramework>$(TargetFramework)</TargetFramework> <OutputPath>..\\bin\\Content.YAMLLinter\\</OutputPath> <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath> </PropertyGroup>\n<ItemGroup> <ProjectReference Include=\"..\\Content.Client\\Content.Client.csproj\" /> <ProjectReference Include=\"..\\Content.Server\\Content.Server.csproj\" /> <ProjectReference Include=\"..\\Content.Shared\\Content.Shared.csproj\" /> <ProjectReference Include=\"..\\Content.IntegrationTests\\Content.IntegrationTests.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Client\\Robust.Client.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Server\\Robust.Server.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Shared.Maths\\Robust.Shared.Maths.csproj\" /> <ProjectReference Include=\"..\\RobustToolbox\\Robust.Shared\\Robust.Shared.csproj\" /> </ItemGroup>\n<ItemGroup> <PackageReference Include=\"NUnit\" Version=\"3.13.3\" /> </ItemGroup>\n<Import Project=\"..\\RobustToolbox\\MSBuild\\Robust.Properties.targets\" /> </Project>"
{"extends": "default", "rules": {"braces": {"forbid": true}, "brackets": {"forbid": true}, "empty-lines": {"max": 1}, "empty-values": "enable", "float-values": {"forbid-nan": true, "require-numeral-before-decimal": true}, "indentation": {"check-multi-line-strings": true, "indent-sequences": true, "spaces": 2}, "key-duplicates": "disable", "line-length": {"allow-non-breakable-inline-mappings": true}, "octal-values": "enable"}}
{"yaml-files": ["themes/midnight_blue.yaml"], "rules": {"braces": {"level": "error", "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "empty-values": {"level": "error", "forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "key-ordering": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "relaxed", "rules": {"line-length": {"max": 550, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 180, "level": "warning"}}, "ignore": "roles/\ncollections/\nansible/\n"}
{"extends": "default", "rules": {"line-length": {"max": 160, "level": "warning"}, "comments-indentation": "disable"}}
{"extends": "default", "ignore": ".build/\n.docker/\nvendor/\nnode_modules/\n.yarnrc.yml\n.yarn/\n.pnpm-lock.yaml\n.pnpm-workspaces.yaml\n*lock.yaml\n*workspace.yaml\nchromatic.yml\n__fixtures__/\n", "rules": {"braces": {"max-spaces-inside-empty": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "min-spaces-inside": 1}, "brackets": {"max-spaces-inside-empty": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "min-spaces-inside": 0}, "colons": {"max-spaces-after": 1, "max-spaces-before": 0}, "commas": {"max-spaces-after": 1, "max-spaces-before": 0, "min-spaces-after": 1}, "comments": {"ignore-shebangs": true, "min-spaces-from-content": 1, "require-starting-space": true}, "comments-indentation": "enable", "document-end": {"present": false}, "document-start": {"present": false}, "indentation": {"check-multi-line-strings": false, "indent-sequences": true, "spaces": 4}, "empty-lines": {"max-end": 0, "max-start": 0, "max": 1}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 4}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "octal-values": {"forbid-implicit-octal": true}, "quoted-strings": {"quote-type": "double"}, "trailing-spaces": "enable", "truthy": {"allowed-values": ["false", "true"]}}, "yaml-files": ["*.yaml", "*.yml"]}
{"extends": "default", "rules": {"trailing-spaces": "disable", "line-length": "disable"}}
{"extends": "default", "ignore": "node_modules/\nsandbox/\n", "rules": {"document-start": "disable", "quoted-strings": {"required": "only-when-needed"}, "line-length": {"max": 120}, "new-lines": "disable"}}
{"extends": "default", "ignore": "/.git\n/.github\n/venv\n", "rules": {"document-start": "disable", "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": "consistent"}, "quoted-strings": {"quote-type": "single", "required": "only-when-needed"}, "truthy": {"allowed-values": ["true", "false", "yes", "no", "on"]}}}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml"], "rules": {"truthy": "disable", "line-length": "disable", "document-start": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2}, "key-duplicates": "enable", "line-length": {"max": 195, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}, "ignore": "molecule/\n.github\n"}
{"ignore": ".github/workflows\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": "disable", "line-length": "disable", "truthy": "disable"}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"line-length": {"max": 160, "level": "warning", "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": ".git/\n", "rules": {"braces": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "document-start": false, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": {"min-spaces-from-content": 1}, "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"max-spaces-after": 1, "level": "error"}, "indentation": {"spaces": 2, "indent-sequences": "whatever", "level": "error"}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments": "enable", "empty-values": "enable", "indentation": {"indent-sequences": "consistent"}, "line-length": "disable", "quoted-strings": {"quote-type": "double"}}, "ignore": ".github/\nclab-files\nclab-arista-testing.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 90, "level": "warning"}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable", "comments-indentation": "disable", "new-line-at-end-of-file": "disable", "indentation": {"indent-sequences": "whatever", "ignore": "kludgeops/"}, "braces": {"ignore": "grafana-operator/base/instance/grafana.yaml"}, "truthy": "disable", "trailing-spaces": "enable"}}
{"extends": "default", "ignore": ".cache/\nkustomization.yaml\nawx-playbook-integrity-operator.clusterserviceversion.yaml\nbundle\nconfig/testing/kustomization.yaml\n", "rules": {"truthy": "disable", "line-length": {"max": 170, "level": "warning"}}}
{"extends": "default", "locale": "en_US.UTF-8", "rules": {"braces": {"level": "error", "max-spaces-inside": 1, "min-spaces-inside": 1}, "comments-indentation": "disable", "comments": {"min-spaces-from-content": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "line-length": "disable", "quoted-strings": {"quote-type": "any", "required": false, "extra-required": ["^http://", "^https://", "ftp://", "ssh \\w.*", "{{"], "extra-allowed": []}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "colons": "disable", "line-length": "disable", "braces": {"max-spaces-inside": 3}, "key-duplicates": "disable", "comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "ignore": "node_modules\n", "rules": {"line-length": "disable", "document-start": "disable", "brackets": "disable", "truthy": "disable"}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "key-duplicates": "enable", "line-length": "disable", "new-lines": {"type": "unix"}}}
{"rules": {"braces": "disable", "brackets": "disable", "colons": "enable", "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": "disable", "empty-values": "enable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "files/crds/\n", "rules": {"line-length": {"max": 300, "level": "warning"}, "comments-indentation": "disable"}}
{"extends": "default", "ignore": "app1/upstream/cert-manager.yml\n", "rules": {"indentation": {"indent-sequences": false}, "document-start": {"level": "error"}, "comments": {"level": "error"}, "comments-indentation": {"level": "error"}, "line-length": {"max": 175}, "truthy": {"check-keys": false}}}
{"extends": "default", "ignore": "**/.github/**\n", "rules": {"line-length": {"max": 120, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "yes", "no"]}}}
{"extends": "default", "ignore": "node_modules/\n"}
{"extends": "default", "ignore": ".kitchen*\nvendor/\ntest/\n", "rules": {"line-length": {"max": 120, "level": "warning"}, "truthy": false}}
{"rules": {"line-length": {"max": 1000, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2, "indent-sequences": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "document-start": "disable"}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "line-length": {"max": 100, "level": "warning"}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": "dist/\n*/swagger.yaml\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "ignore": "changelogs\n", "rules": {"line-length": "disable", "colons": {"max-spaces-before": 0, "max-spaces-after": -1}, "document-end": {"present": true}, "indentation": {"level": "error", "indent-sequences": true}, "truthy": {"level": "error", "allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"rules": {"line-length": {"max": 160, "allow-non-breakable-words": true}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 88}, "truthy": "disable"}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "float-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "enable", "comments-indentation": "enable", "document-start": "enable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "enable", "key-duplicates": "enable", "line-length": "enable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "rules": {"comments": "enable", "line-length": "disable"}, "ignore": "contrib/rally/tests/\n.git\nenvironments/infrastructure/secrets.yml\n.tox\n"}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": {"max": 160}, "truthy": "disable"}}
{"rules": {"braces": "disable", "brackets": "disable", "colons": "enable", "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": "disable", "empty-values": "enable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "molecule/\n.travis.yml\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"empty-lines": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"document-start": {"ignore": "releases/*.yaml\nrosdep/*.yaml\n"}, "indentation": {"spaces": "consistent", "indent-sequences": false}, "key-duplicates": "enable", "line-length": {"max": 125, "allow-non-breakable-words": true, "ignore": "rosdep/*.yaml\n"}}}
{"extends": "default", "rules": {"line-length": {"max": 130, "level": "warning", "allow-non-breakable-words": true}, "document-start": "disable", "comments-indentation": "disable"}}
{"extends": "default", "rules": {"line-length": {"ignore": ".gitlab-ci.yml\n.github/\n", "level": "warning"}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": ".github/\nroles/data-tier/templates/pvc-db.yaml.j2\nroles/data-tier/templates/pvc-dt.yaml.j2\nroles/data-tier/templates/serviceaccount.yaml.j2\nroles/data-tier/templates/statefulset-db.yaml.j2\nroles/data-tier/templates/statefulset-dt.yaml.j2\n", "rules": {"indentation": {"spaces": 2, "indent-sequences": false}, "trailing-spaces": {}, "truthy": {"allowed-values": ["yes", "no", "true", "false"]}, "new-lines": {"type": "unix"}, "new-line-at-end-of-file": "enable", "key-duplicates": {}, "hyphens": {"max-spaces-after": 1}, "empty-lines": {"max": 1}, "document-start": {"present": true}, "document-end": {"present": false}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": ".github/\nroles/fragnet/templates/deployment-depict.yaml.j2\nroles/fragnet/templates/deployment-search.yaml.j2\nroles/fragnet/templates/deployment-ui.yaml.j2\nroles/fragnet/templates/ingress.yaml.j2\nroles/fragnet/templates/serviceaccount.yaml.j2\n", "rules": {"indentation": {"spaces": 2, "indent-sequences": false}, "trailing-spaces": {}, "truthy": {"allowed-values": ["yes", "no", "true", "false"]}, "new-lines": {"type": "unix"}, "new-line-at-end-of-file": "enable", "key-duplicates": {}, "hyphens": {"max-spaces-after": 1}, "empty-lines": {"max": 1}, "document-start": {"present": true}, "document-end": {"present": false}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 100}, "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}, "ignore": "tests/\n.travis.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\n"}
{"extends": "default", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"document-start": false, "line-length": false, "truthy": false, "indentation": false}}
{"extends": "default", "ignore": "/helm/templates/\n", "rules": {"document-start": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 140}, "truthy": {"ignore": ".github/workflows/*.yml"}}, "ignore": "/submariner-k8s-broker/crds\n/submariner-operator/crds\n/submariner-k8s-broker/templates\n/submariner-operator/templates\n"}
{"extends": "default", "rules": {"line-length": {"max": 160}}, "level": "warning"}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": {"present": false}, "document-start": {"present": false}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": {}, "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"level": "warning", "max": 180}, "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 140}, "truthy": {"ignore": ".github/workflows/*.yml"}}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": false}, "line-length": {"max": 999, "level": "warning"}, "truthy": {"ignore": ".github/workflows/*.yml\n"}}}
{"rules": {"line-length": {"max": 200, "level": "warning"}}, "ignore": ".github"}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 10, "max-end": 1}, "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}, "line-length": {"max": 120, "level": "warning"}}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"line-length": "disable"}}
{"ignore": "roles\n.travis.yml\nopenio_venv\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"level": "error", "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": false, "min-spaces-from-content": 2}, "comments-indentation": "disable", "document-end": {"level": "error", "present": true}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 2, "max-start": 0, "max-end": 0}, "empty-values": {"level": "error", "forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"level": "error", "max": 300, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"level": "error", "type": "unix"}, "octal-values": {"level": "error", "forbid-implicit-octal": false, "forbid-explicit-octal": false}, "trailing-spaces": "enable", "truthy": {"level": "error"}}}
{"extends": "default", "ignore": "docker/\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": "consistent", "indent-sequences": "consistent"}, "key-duplicates": {"ignore": "config/testdata/section_key_dup.bad.yml\n"}, "line-length": "disable", "truthy": {"ignore": ".github/workflows/codeql-analysis.yml\n.github/workflows/funcbench.yml\n.github/workflows/fuzzing.yml\n.github/workflows/prombench.yml\n.github/workflows/golangci-lint.yml\n"}}}
{"extends": "default", "ignore": "venv\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "yaml-files": ["*.ksy"], "ignore": "outputs/\n", "rules": {"document-start": "disable", "line-length": "disable", "indentation": {"spaces": 4}, "brackets": {"max-spaces-inside": 1}, "braces": {"max-spaces-inside": 1}, "empty-lines": {"max": 2}, "new-lines": "disable", "comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "ignore": "node_modules/\ntest/**/states/**/*.sls\n.kitchen/\ninsomnia/osfamilymap.yaml\n", "yaml-files": ["*.yaml", "*.yml", ".salt-lint", ".yamllint", "*.example", "test/**/*.sls"], "rules": {"empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "line-length": {"max": 88}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": true}}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true}}}
{"extends": "relaxed", "rules": {"truthy": "enable", "indentation": "disable", "line-length": "disable"}}
{"extends": "default", "ignore": "node_modules/\ntest/**/states/**/*.sls\n.kitchen/\nrlang/osfamilymap.yaml\npillar.example\nrlang/osmap.yaml\n", "yaml-files": ["*.yaml", "*.yml", ".salt-lint", ".yamllint", "*.example", "test/**/*.sls"], "rules": {"empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "line-length": {"max": 88}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": true}}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"ignore": "templates/\n", "extends": "default", "rules": {"document-start": "disable", "line-length": "disable", "braces": {"level": "warning", "max-spaces-inside": 1}}}
{"extends": "default", "rules": {"line-length": {"max": 195, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2}, "comments": "disable", "comments-indentation": "disable", "truthy": "disable"}, "ignore": "tests/\nmolecule/\n.tox\n.github\n"}
{"extends": "default", "rules": {"line-length": {"max": 256, "level": "warning"}, "document-start": "disable", "braces": {"forbid": false, "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": "consistent"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}, "ignore": "venv\n"}
{"extends": "default", "ignore": "src/*.yml\n", "rules": {"comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "line-length": {"max": 200, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "trailing-spaces": "enable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": false}, "line-length": {"max": 120}}}
{"extends": "default", "rules": {"line-length": "disable", "braces": "disable", "truthy": "disable", "new-lines": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "key-duplicates": "enable", "line-length": "disable", "new-lines": {"type": "unix"}, "truthy": "disable"}}
"/usr/lib/python3.9/site-packages/pathspec /usr/lib/python3.9/site-packages/yaml /usr/lib/python3.9/site-packages/yamllint"
{"extends": "default", "rules": {"line-length": {"max": 100, "ignore": ".circleci/config.yml\nstandards/\n"}}}
{"extends": "default", "ignore": ".drone.yml", "rules": {"line-length": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}}}
{"extends": "default", "rules": {"indentation": {"level": "error", "indent-sequences": false}}}
{"extends": "default", "ignore": "charts/image-registry-metrics-exporter/templates/\npkg/conf/tests\n", "rules": {"comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "line-length": {"max": 160, "allow-non-breakable-words": true}}}
{"extends": "default", "rules": {"comments": "enable", "line-length": "disable"}, "ignore": "kolla-loadbalancer-*.yml\nkolla-ovn.yml\n"}
{"extends": "default", "ignore": "*/dbt_packages/\n", "rules": {"document-start": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "venv/\n.gitlab/\n.tox\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": ".github/stale.yml\n", "rules": {"line-length": {"max": 180, "level": "error"}, "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": {"present": false}, "document-start": {"present": false}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": {}, "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"ignore": "/bin/*\n./venv/*\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}, "ignore": "node_modules/\nshrinkwrap.yaml\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "line-length": {"max": 160, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "True", "False"]}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"line-length": "disable", "brackets": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1}}, "ignore": "secrets.yml\nhost_vars/*\n"}
{"extends": "default", "rules": {"line-length": {"max": 195, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2}, "comments": "disable", "comments-indentation": "disable", "truthy": "disable"}, "ignore": "tests/\nmolecule/\n.molecule/\n.travis.yml\n.tox\n.github\n"}
{"extends": "default", "rules": {"truthy": "disable", "comments-indentation": "disable", "line-length": {"max": 250, "level": "warning"}}}
{"rules": {"commas": {"max-spaces-after": -1}, "colons": {"max-spaces-after": -1}, "line-length": "disable"}}
{"extends": "default", "rules": {"comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "rules": {"line-length": {"max": 100, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"line-length": {"max": 180, "level": "warning"}}, "ignore": "host_vars/mail01.l3d.space/vault.yml\nhost_vars/web01.l3d.space/vault.yml\nhost_vars/luna.l3d.ch/vault.yml\nhost_vars/services.l3d.space/vault.yml\ngroup_vars/all/vault.yml\nroles/\nansible/\ncollections/\n"}
{"extends": "default", "rules": {"line-length": {"max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 200, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "error"}}}
{"ignore": ".history\n"}
{"yaml-files": ["themes/material_dark_green.yaml"], "rules": {"braces": {"level": "error", "min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "empty-values": {"level": "error", "forbid-in-block-mappings": false, "forbid-in-flow-mappings": true}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "key-ordering": {"level": "error"}, "line-length": {"level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "yes", "no"]}, "line-length": {"max": 180}}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2}, "truthy": {"level": "error"}, "line-length": {"max": 150, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "*venv*\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "indentation": {"spaces": "consistent", "indent-sequences": false, "check-multi-line-strings": false}, "truthy": {"level": "warning", "allowed-values": ["true", "false", "True", "False"]}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": {"indent-sequences": false}, "line-length": {"max": 100, "level": "warning"}}}
{"extends": "default", "rules": {"braces": "disable", "brackets": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": "disable", "key-duplicates": "disable", "indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 160}, "indentation": {"indent-sequences": "whatever"}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": -1}, "commas": {"max-spaces-after": -1}, "colons": {"max-spaces-after": -1}, "truthy": "disable"}}
{"extends": "default", "ignore": "molecule/**/tests/\n.ansible-lint\n*.travis.yml\ntest_*.yml\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "key-duplicates": "enable", "line-length": "disable", "new-lines": {"type": "unix"}, "truthy": "disable"}}
{"extends": "default", "ignore": ".tox\nchangelogs/*\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable", "truthy": "disable"}}
{"ignore": "**/cassettes/*.yaml"}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"level": "warning", "indent-sequences": "consistent"}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 110, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 120, "allow-non-breakable-inline-mappings": true}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}}}
{"rules": {"line-length": "disable"}}
{"ignore": ".*/\ntests/playbooks\n", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning", "present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": false}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 120, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"ignore": "config/custom_components/\nconfig/ip_bans.yaml\nconfig/esphomeyaml/*/\nconfig/notebooks/\nconfig/automations.yaml\nconfig/scenes.yaml\nconfig/themes/*/\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true, "ignore": "config/known_devices.yaml\n"}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"ignore": ".github/support.yml\n.github/settings.yml\n", "level": "warning", "max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"rules": {"line-length": {"max": 999, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "key-duplicates": "enable"}, "ignore": ".tox\n"}
{"extends": "default", "ignore": "*.molecule/\nmolecule/cookiecutter/\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"ignore": "azure-*.yml\n.yamllint\naction.yml\nmain.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"line-length": {"max": 1000, "level": "error"}, "indentation": {"spaces": "consistent", "indent-sequences": "consistent", "level": "warning"}}, "ignore": "venv\nlambda_functions/v1/openapi/template-openapi.yml\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable", "comments": "disable"}, "ignore": ".tox/\n.cache/\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable", "line-length": {"max": 200, "level": "warning"}}}
{"ignore": ".tox\n.pre-commit-config.yaml\n"}
{"extends": "default", "rules": {"comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "line-length": "disable"}, "ignore": ".vscode/\ncontext/\n"}
{"extends": "default", "rules": {"line-length": {"max": 200, "level": "warning"}, "truthy": "disable", "comments-indentation": "disable"}}
{"extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": false}, "empty-lines": {"max": 2, "max-start": 1, "max-end": 2}, "line-length": {"max": 150}, "braces": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}}, "ignore": ".github/workflows/linux.yaml\n"}
{"extends": "default", "ignore": ".tox\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": "disable", "line-length": {"allow-non-breakable-words": true, "max": 160}, "truthy": {"allowed-values": ["true", "false", "on"]}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 999, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "key-duplicates": "enable"}, "ignore": ".tox\nedpm/scripts/additional_commands_between_makefile_target.yaml\nedpm/roles/use_install_yamls/defaults/main.yaml\n"}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": ".github/\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"truthy": {"ignore": ["/.github/*"]}, "line-length": {"ignore": ["/.github/*"]}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 160}}}
{"extends": "default"}
{"extends": "default", "ignore": "node_modules/\n"}
{"extends": "default", "rules": {"line-length": {"max": 190, "level": "warning"}}}
{"extends": "default", "rules": {"comments": "enable", "line-length": "disable", "indentation": {"indent-sequences": "whatever"}}}
{"extends": "default", "rules": {"comments": "enable", "empty-values": "enable", "indentation": {"indent-sequences": "consistent"}, "line-length": "disable", "quoted-strings": {"quote-type": "double"}}, "ignore": ".github\n"}
{"extends": "default", "ignore": "vendor/\n.tox\n", "rules": {"document-start": "disable", "line-length": {"max": 100, "level": "warning"}}}
{"rules": {"braces": {"forbid": "non-empty"}, "brackets": {"forbid": "non-empty"}, "colons": "enable", "comments": "enable", "comments-indentation": "enable", "empty-lines": {"max": 1}, "empty-values": "enable", "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": false}, "key-duplicates": "enable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"ignore": ".git/\nvenv/\n", "extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": "*/ansible/*\n*/playbooks/*\n*/cassettes/*\n*/fixtures/*\n", "rules": {"braces": "disable", "brackets": "disable", "colons": "disable", "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": "disable", "hyphens": "disable", "indentation": "disable", "trailing-spaces": "disable", "new-line-at-end-of-file": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}, "indentation": {"indent-sequences": "whatever"}, "truthy": {"check-keys": false}, "document-start": {"present": false}}}
{"ignore": "tests/\nmolecule/\n.github/\n.gitlab-ci.yml\n*molecule.yml\n", "extends": "default", "rules": {"indentation": {"indent-sequences": "consistent", "level": "error"}, "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "key-duplicates": "enable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": {"allowed-values": ["true", "false"], "check-keys": false}}}
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Content.Shared.CCVar; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] args) { var stopwatch = new Stopwatch(); stopwatch.Start();\nvar errors = await RunValidation();\nif (errors.Count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nConsole.WriteLine($\"{errors.Count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return -1; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var client = pairTracker.Pair.Client;\nvar cPrototypeManager = client.ResolveDependency<IPrototypeManager>(); var clientErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait client.WaitPost(() => { clientErrors = cPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn clientErrors; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var server = pairTracker.Pair.Server;\nvar sPrototypeManager = server.ResolveDependency<IPrototypeManager>(); var serverErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait server.WaitPost(() => { serverErrors = sPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn serverErrors; }\npublic static async Task<Dictionary<string, HashSet<ErrorNode>>> RunValidation() { var allErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) allErrors[key] = newErrors; }\n// Finally add any always-relevant client errors. foreach (var (key, val) in clientErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (allErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else allErrors[key] = newErrors; }\nreturn allErrors; } } }"
{"rules": {"colons": {"max-spaces-after": -1}, "quoted-strings": {"quote-type": "single", "allow-quoted-quotes": true}}}
{"extends": "default", "ignore": "molecule/\n", "rules": {"indentation": {"spaces": 2, "indent-sequences": false}, "comments": {"min-spaces-from-content": 2}, "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}}}
{"extends": "default", "ignore-from-file": ".gitignore", "yaml-files": ["*.yaml", "*.yml", ".yamllint.yml"], "rules": {"line-length": {"max": 300, "level": "warning"}, "truthy": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "octal-values": "enable", "truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": {"max": 200}, "indentation": {"check-multi-line-strings": false, "indent-sequences": "consistent"}, "brackets": {"max-spaces-inside": 1, "max-spaces-inside-empty": 0}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "max-spaces-inside-empty": 1}, "brackets": {"max-spaces-inside": 1, "max-spaces-inside-empty": 1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 2}, "empty-lines": {"max": 1}, "empty-values": {"level": "error", "forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "line-length": {"max": 120, "allow-non-breakable-words": true}, "truthy": {"allowed-values": ["true", "false", "yes", "no"], "check-keys": false}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"line-length": "disable", "indentation": {"level": "warning", "indent-sequences": "consistent"}}}
{"ignore": "tests/\nmolecule/\n.gitlab-ci.yml\n*molecule.yml\n", "extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": "consistent"}, "truthy": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "ignore": "node_modules/\ntest/**/states/**/*.sls\n.kitchen/\n", "yaml-files": ["*.yaml", "*.yml", ".salt-lint", ".yamllint", "*.example", "test/**/*.sls"], "rules": {"empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {"ignore": "pillar.example\n"}, "line-length": {"max": 88}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": true}}}
{"extends": "default", "ignore": "pyenv\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable"}, "ignore": ".tox/\n.cache/\nmolecule/alternative/\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "min-spaces-inside": 1, "level": "warning"}, "brackets": {"max-spaces-inside": 1, "min-spaces-inside": 1, "level": "warning"}, "line-length": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"ignore": ".*/\n", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning", "present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": false}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 350, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "ignore": ".git\n.tox\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 120}, "truthy": {"level": "error", "allowed-values": ["true", "false", "on"]}}}
{"yaml-files": ["*.yml", "*.yaml", ".yamllint"], "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 1, "level": "error"}, "brackets": {"min-spaces-inside": 1, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 1, "level": "error"}, "colons": {"max-spaces-before": 0, "max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": -1, "level": "warning"}, "comments": {"require-starting-space": true, "min-spaces-from-content": 2, "level": "error"}, "comments-indentation": {"level": "warning"}, "document-start": "disable", "empty-lines": {"max": 2, "max-start": 1, "max-end": 1, "level": "warning"}, "hyphens": {"max-spaces-after": 1, "level": "error"}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false, "level": "error"}, "key-duplicates": {"level": "warning"}, "line-length": {"max": 120, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "level": "warning"}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"type": "unix", "level": "warning"}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": false, "level": "warning"}, "quoted-strings": {"quote-type": "any", "required": "only-when-needed", "extra-allowed": ["^.*,.*$", "^.*:.*$"], "level": "error"}, "trailing-spaces": {"level": "error"}}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 120}, "indentation": {"indent-sequences": "whatever"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": {"max": 120, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"line-length": 120}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": "disable", "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": "disable", "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": "disable", "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "document-start": "disable", "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2}, "line-length": "disable", "truthy": "disable"}}
{"ignore": "/vendor\ntest/**/*-chart/**\nrest/scm-resolver/gitea.yaml\n", "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": "enable", "empty-values": "enable", "hyphens": "enable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}, "indentation": {"indent-sequences": "whatever"}}}
{"extends": "relaxed"}
{"extends": "relaxed"}
{"extends": "relaxed"}
{"extends": "relaxed"}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"], "check-keys": true}}, "ignore": ".tox/\n"}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"], "check-keys": true}}, "ignore": ".tox/\n"}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"], "check-keys": true}}, "ignore": ".tox/\n"}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false", "on"], "check-keys": true}}, "ignore": ".tox/\n"}
{"extends": "default", "rules": {"line-length": {"max": 160, "level": "warning"}, "comments-indentation": "disable"}}
{"extends": "default", "ignore": "/.git\n/.github\n/venv\n", "rules": {"document-start": "disable", "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "/.git\n/.github\n/venv\n", "rules": {"document-start": "disable", "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "/.git\n/.github\n/venv\n", "rules": {"document-start": "disable", "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "ignore": "/.git\n/.github\n/venv\n", "rules": {"document-start": "disable", "line-length": {"allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2}, "key-duplicates": "enable", "line-length": {"max": 195, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}, "ignore": "molecule/\n.github\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2}, "key-duplicates": "enable", "line-length": {"max": 195, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}, "ignore": "molecule/\n.github\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2}, "key-duplicates": "enable", "line-length": {"max": 195, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}, "ignore": "molecule/\n.github\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2}, "key-duplicates": "enable", "line-length": {"max": 195, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}, "ignore": "molecule/\n.github\n"}
{"extends": "default", "ignore": ".git/\n", "rules": {"braces": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "document-start": false, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable"}}
{"extends": "default", "ignore": ".git/\n", "rules": {"braces": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "document-start": false, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable"}}
{"extends": "default", "ignore": ".git/\n", "rules": {"braces": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "document-start": false, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable"}}
{"extends": "default", "ignore": ".git/\n", "rules": {"braces": {"forbid": false, "min-spaces-inside": 1, "max-spaces-inside": 1}, "comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "document-start": false, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable"}}
{"extends": "default", "locale": "en_US.UTF-8", "rules": {"braces": {"level": "error", "max-spaces-inside": 1, "min-spaces-inside": 1}, "comments-indentation": "disable", "comments": {"min-spaces-from-content": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "line-length": "disable", "quoted-strings": {"quote-type": "any", "required": false, "extra-required": ["^http://", "^https://", "ftp://", "ssh \\w.*", "{{"], "extra-allowed": []}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2, "indent-sequences": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2, "indent-sequences": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2, "indent-sequences": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": {"spaces": 2, "indent-sequences": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "document-start": "disable"}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "line-length": {"max": 100, "level": "warning"}}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "line-length": {"max": 100, "level": "warning"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 88}, "truthy": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 88}, "truthy": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 88}, "truthy": "disable"}}
{"extends": "default", "rules": {"comments-indentation": "disable", "line-length": {"allow-non-breakable-inline-mappings": true, "max": 88}, "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "enable", "comments-indentation": "enable", "document-start": "enable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "enable", "key-duplicates": "enable", "line-length": "enable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "enable", "comments-indentation": "enable", "document-start": "enable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "enable", "key-duplicates": "enable", "line-length": "enable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "enable", "comments-indentation": "enable", "document-start": "enable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "enable", "key-duplicates": "enable", "line-length": "enable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "enable", "comments-indentation": "enable", "document-start": "enable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "enable", "key-duplicates": "enable", "line-length": "enable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": {"max": 160}, "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": {"max": 160}, "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": {"max": 160}, "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": {"max": 160}, "truthy": "disable"}}
{"rules": {"braces": "disable", "brackets": "disable", "colons": "enable", "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": "disable", "empty-values": "enable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"rules": {"braces": "disable", "brackets": "disable", "colons": "enable", "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": "disable", "empty-values": "enable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"rules": {"braces": "disable", "brackets": "disable", "colons": "enable", "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": "disable", "empty-values": "enable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "disable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"document-start": {"ignore": "releases/*.yaml\nrosdep/*.yaml\n"}, "indentation": {"spaces": "consistent", "indent-sequences": false}, "key-duplicates": "enable", "line-length": {"max": 125, "allow-non-breakable-words": true, "ignore": "rosdep/*.yaml\n"}}}
{"extends": "default", "rules": {"document-start": {"ignore": "releases/*.yaml\nrosdep/*.yaml\n"}, "indentation": {"spaces": "consistent", "indent-sequences": false}, "key-duplicates": "enable", "line-length": {"max": 125, "allow-non-breakable-words": true, "ignore": "rosdep/*.yaml\n"}}}
{"extends": "default", "rules": {"document-start": {"ignore": "releases/*.yaml\nrosdep/*.yaml\n"}, "indentation": {"spaces": "consistent", "indent-sequences": false}, "key-duplicates": "enable", "line-length": {"max": 125, "allow-non-breakable-words": true, "ignore": "rosdep/*.yaml\n"}}}
{"extends": "default", "rules": {"line-length": {"ignore": ".gitlab-ci.yml\n.github/\n", "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"ignore": ".gitlab-ci.yml\n.github/\n", "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"ignore": ".gitlab-ci.yml\n.github/\n", "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 100}, "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 100}, "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 100}, "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\n"}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}}, "ignore": ".github/stale.yml\n.travis.yml\n"}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": {"present": false}, "document-start": {"present": false}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": {}, "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": {"present": false}, "document-start": {"present": false}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": {}, "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": {"present": false}, "document-start": {"present": false}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": {}, "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": {"present": false}, "document-start": {"present": false}, "empty-lines": {"max": 1, "max-start": 0, "max-end": 0}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": true}, "key-duplicates": "enable", "line-length": "disable", "new-line-at-end-of-file": {}, "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"level": "warning", "max": 180}, "truthy": "disable"}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": false}, "line-length": {"max": 999, "level": "warning"}, "truthy": {"ignore": ".github/workflows/*.yml\n"}}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": false}, "line-length": {"max": 999, "level": "warning"}, "truthy": {"ignore": ".github/workflows/*.yml\n"}}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": false}, "line-length": {"max": 999, "level": "warning"}, "truthy": {"ignore": ".github/workflows/*.yml\n"}}}
{"extends": "default", "rules": {"comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": false}, "line-length": {"max": 999, "level": "warning"}, "truthy": {"ignore": ".github/workflows/*.yml\n"}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 10, "max-end": 1}, "empty-values": "disable", "hyphens": "enable", "indentation": "enable", "key-duplicates": "enable", "key-ordering": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": {"level": "warning"}, "line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": "consistent", "indent-sequences": "consistent"}, "key-duplicates": {"ignore": "config/testdata/section_key_dup.bad.yml\n"}, "line-length": "disable", "truthy": {"ignore": ".github/workflows/codeql-analysis.yml\n.github/workflows/funcbench.yml\n.github/workflows/fuzzing.yml\n.github/workflows/prombench.yml\n.github/workflows/golangci-lint.yml\n"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": "consistent", "indent-sequences": "consistent"}, "key-duplicates": {"ignore": "config/testdata/section_key_dup.bad.yml\n"}, "line-length": "disable", "truthy": {"ignore": ".github/workflows/codeql-analysis.yml\n.github/workflows/funcbench.yml\n.github/workflows/fuzzing.yml\n.github/workflows/prombench.yml\n.github/workflows/golangci-lint.yml\n"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": "consistent", "indent-sequences": "consistent"}, "key-duplicates": {"ignore": "config/testdata/section_key_dup.bad.yml\n"}, "line-length": "disable", "truthy": {"ignore": ".github/workflows/codeql-analysis.yml\n.github/workflows/funcbench.yml\n.github/workflows/fuzzing.yml\n.github/workflows/prombench.yml\n.github/workflows/golangci-lint.yml\n"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "commas": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": "consistent", "indent-sequences": "consistent"}, "key-duplicates": {"ignore": "config/testdata/section_key_dup.bad.yml\n"}, "line-length": "disable", "truthy": {"ignore": ".github/workflows/codeql-analysis.yml\n.github/workflows/funcbench.yml\n.github/workflows/fuzzing.yml\n.github/workflows/prombench.yml\n.github/workflows/golangci-lint.yml\n"}}}
{"extends": "default", "ignore": "venv\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": {"max": 120, "level": "warning"}}}
{"extends": "default", "ignore": "src/*.yml\n", "rules": {"comments-indentation": "disable", "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "line-length": {"max": 200, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "trailing-spaces": "enable"}}
{"extends": "default", "rules": {"line-length": "disable", "braces": "disable", "truthy": "disable", "new-lines": "disable"}}
{"extends": "default", "ignore": ".drone.yml", "rules": {"line-length": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}}}
{"extends": "default", "ignore": ".drone.yml", "rules": {"line-length": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "line-length": {"max": 160, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "True", "False"]}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "line-length": {"max": 160, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "True", "False"]}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "line-length": {"max": 160, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "True", "False"]}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "line-length": {"max": 160, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "True", "False"]}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "rules": {"line-length": {"max": 195, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2}, "comments": "disable", "comments-indentation": "disable", "truthy": "disable"}, "ignore": "tests/\nmolecule/\n.molecule/\n.travis.yml\n.tox\n.github\n"}
{"rules": {"commas": {"max-spaces-after": -1}, "colons": {"max-spaces-after": -1}, "line-length": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": {"indent-sequences": false}, "line-length": {"max": 100, "level": "warning"}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": {"indent-sequences": false}, "line-length": {"max": 100, "level": "warning"}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": {"indent-sequences": false}, "line-length": {"max": 100, "level": "warning"}}}
{"extends": "default", "rules": {"document-start": "disable", "indentation": {"indent-sequences": false}, "line-length": {"max": 100, "level": "warning"}}}
{"extends": "default", "rules": {"braces": "disable", "brackets": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": "disable", "key-duplicates": "disable", "indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": "disable", "brackets": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": "disable", "key-duplicates": "disable", "indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": "disable", "brackets": "disable", "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": "disable", "key-duplicates": "disable", "indentation": "disable", "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": ".tox\nchangelogs/*\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "ignore": ".tox\nchangelogs/*\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "ignore": ".tox\nchangelogs/*\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "ignore": ".tox\nchangelogs/*\n", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 120, "allow-non-breakable-inline-mappings": true}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 120, "allow-non-breakable-inline-mappings": true}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 120, "allow-non-breakable-inline-mappings": true}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}}}
{"extends": "default", "rules": {"comments": {"require-starting-space": false, "min-spaces-from-content": 1}, "comments-indentation": "disable", "indentation": {"indent-sequences": "consistent"}, "line-length": {"max": 120, "allow-non-breakable-inline-mappings": true}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}}}
{"rules": {"line-length": "disable"}}
{"rules": {"line-length": "disable"}}
{"rules": {"line-length": "disable"}}
{"rules": {"line-length": "disable"}}
{"ignore": "azure-*.yml\n.yamllint\naction.yml\nmain.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": "azure-*.yml\n.yamllint\naction.yml\nmain.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"ignore": "azure-*.yml\n.yamllint\naction.yml\nmain.yml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": false}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": "disable", "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"comments": {"require-starting-space": true, "ignore-shebangs": true, "min-spaces-from-content": 1}, "line-length": "disable"}, "ignore": ".vscode/\ncontext/\n"}
{"extends": "default", "ignore": "node_modules/\n"}
{"extends": "default", "ignore": "node_modules/\n"}
{"extends": "default", "ignore": "node_modules/\n"}
{"extends": "default", "rules": {"line-length": {"max": 190, "level": "warning"}}}
{"rules": {"braces": {"forbid": "non-empty"}, "brackets": {"forbid": "non-empty"}, "colons": "enable", "comments": "enable", "comments-indentation": "enable", "empty-lines": {"max": 1}, "empty-values": "enable", "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": false}, "key-duplicates": "enable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"rules": {"braces": {"forbid": "non-empty"}, "brackets": {"forbid": "non-empty"}, "colons": "enable", "comments": "enable", "comments-indentation": "enable", "empty-lines": {"max": 1}, "empty-values": "enable", "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": false}, "key-duplicates": "enable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}, "indentation": {"indent-sequences": "whatever"}, "truthy": {"check-keys": false}, "document-start": {"present": false}}}
{"extends": "default", "rules": {"line-length": {"max": 150, "level": "warning"}, "indentation": {"indent-sequences": "whatever"}, "truthy": {"check-keys": false}, "document-start": {"present": false}}}
{"ignore": "tests/\nmolecule/\n.github/\n.gitlab-ci.yml\n*molecule.yml\n", "extends": "default", "rules": {"indentation": {"indent-sequences": "consistent", "level": "error"}, "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "key-duplicates": "enable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": {"allowed-values": ["true", "false"], "check-keys": false}}}
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Content.Shared.CCVar; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] args) { var stopwatch = new Stopwatch(); stopwatch.Start();\nvar errors = await RunValidation();\nif (errors.Count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nConsole.WriteLine($\"{errors.Count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return -1; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var client = pairTracker.Pair.Client;\nvar cPrototypeManager = client.ResolveDependency<IPrototypeManager>(); var clientErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait client.WaitPost(() => { clientErrors = cPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn clientErrors; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var server = pairTracker.Pair.Server;\nvar sPrototypeManager = server.ResolveDependency<IPrototypeManager>(); var serverErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait server.WaitPost(() => { serverErrors = sPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn serverErrors; }\npublic static async Task<Dictionary<string, HashSet<ErrorNode>>> RunValidation() { var allErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) allErrors[key] = newErrors; }\n// Finally add any always-relevant client errors. foreach (var (key, val) in clientErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (allErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else allErrors[key] = newErrors; }\nreturn allErrors; } } }"
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Content.Shared.CCVar; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] args) { var stopwatch = new Stopwatch(); stopwatch.Start();\nvar errors = await RunValidation();\nif (errors.Count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nConsole.WriteLine($\"{errors.Count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return -1; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var client = pairTracker.Pair.Client;\nvar cPrototypeManager = client.ResolveDependency<IPrototypeManager>(); var clientErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait client.WaitPost(() => { clientErrors = cPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn clientErrors; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var server = pairTracker.Pair.Server;\nvar sPrototypeManager = server.ResolveDependency<IPrototypeManager>(); var serverErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait server.WaitPost(() => { serverErrors = sPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn serverErrors; }\npublic static async Task<Dictionary<string, HashSet<ErrorNode>>> RunValidation() { var allErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) allErrors[key] = newErrors; }\n// Finally add any always-relevant client errors. foreach (var (key, val) in clientErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (allErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else allErrors[key] = newErrors; }\nreturn allErrors; } } }"
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Content.Shared.CCVar; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] args) { var stopwatch = new Stopwatch(); stopwatch.Start();\nvar errors = await RunValidation();\nif (errors.Count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nConsole.WriteLine($\"{errors.Count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); return -1; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateClient() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var client = pairTracker.Pair.Client;\nvar cPrototypeManager = client.ResolveDependency<IPrototypeManager>(); var clientErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait client.WaitPost(() => { clientErrors = cPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn clientErrors; }\nprivate static async Task<Dictionary<string, HashSet<ErrorNode>>> ValidateServer() { await using var pairTracker = await PoolManager.GetServerClient(new PoolSettings{DummyTicker = true, Disconnected = true}); var server = pairTracker.Pair.Server;\nvar sPrototypeManager = server.ResolveDependency<IPrototypeManager>(); var serverErrors = new Dictionary<string, HashSet<ErrorNode>>();\nawait server.WaitPost(() => { serverErrors = sPrototypeManager.ValidateDirectory(new ResourcePath(\"/Prototypes\")); });\nawait pairTracker.CleanReturnAsync();\nreturn serverErrors; }\npublic static async Task<Dictionary<string, HashSet<ErrorNode>>> RunValidation() { var allErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) allErrors[key] = newErrors; }\n// Finally add any always-relevant client errors. foreach (var (key, val) in clientErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (allErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else allErrors[key] = newErrors; }\nreturn allErrors; } } }"
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "octal-values": "enable", "truthy": {"allowed-values": ["true", "false", "on"]}, "line-length": {"max": 200}, "indentation": {"check-multi-line-strings": false, "indent-sequences": "consistent"}, "brackets": {"max-spaces-inside": 1, "max-spaces-inside-empty": 0}}}
{"ignore": "tests/\nmolecule/\n.gitlab-ci.yml\n*molecule.yml\n", "extends": "default", "rules": {"indentation": {"spaces": 2, "indent-sequences": "consistent"}, "truthy": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "min-spaces-inside": 1, "level": "warning"}, "brackets": {"max-spaces-inside": 1, "min-spaces-inside": 1, "level": "warning"}, "line-length": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "min-spaces-inside": 1, "level": "warning"}, "brackets": {"max-spaces-inside": 1, "min-spaces-inside": 1, "level": "warning"}, "line-length": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"ignore": ".*/\n", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning", "present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": false}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 350, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"ignore": ".*/\n", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning", "present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": false}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 350, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"ignore": ".*/\n", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": {"level": "warning", "present": true}, "empty-lines": {"max": 2, "max-start": 0, "max-end": 0}, "empty-values": {"forbid-in-block-mappings": false, "forbid-in-flow-mappings": false}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 350, "level": "warning", "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": false}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"document-start": "disable", "line-length": {"max": 120}, "indentation": {"indent-sequences": "whatever"}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": {"max": 120, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": {"max": 120, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": {"max": 120, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": {"max": 120, "level": "warning"}, "new-line-at-end-of-file": "disable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "disable"}}
{"ignore": "venv/\n"}
{"extends": "default", "ignore": "#  Ignore folders\n**/chart/kubeapps/\n**/integration/charts/simplechart/\n**/integration/charts/simplechart-customvalues/\n**/integration/charts/simplechart-multicustomvalues/\n**/dashboard/node_modules/\n**/devel/\n#  Ignore files\n**/cmd/kubeapps-apis/plugins/fluxv2/packages/v1alpha1/testdata/charts/single-package-template.yaml\n", "rules": {"line-length": "disable", "comments": "disable", "truthy": {"check-keys": false}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": "wandb\n*\n", "rules": {"braces": {"forbid": "non-empty"}, "brackets": {"forbid": false}, "colons": "enable", "commas": "enable", "comments": {"level": "warning"}, "comments-indentation": "enable", "document-end": {"present": false}, "document-start": {"present": false}, "empty-lines": "enable", "empty-values": "disable", "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 200, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "enable", "quoted-strings": {"quote-type": "double", "required": false}, "trailing-spaces": "enable", "truthy": "disable"}}
{"extends": "default", "rules": {"indentation": "disable", "document-start": "disable", "comments": "disable", "line-length": "disable"}, "ignore": ".golangci.yml"}
"using System; using System.Collections.Generic; using System.Linq; using System.Threading.Tasks; using Content.IntegrationTests; using Robust.Shared.Prototypes; using Robust.Shared.Serialization.Markdown.Validation; using Robust.Shared.Timing; using Robust.Shared.Utility; using Robust.UnitTesting;\nnamespace Content.YAMLLinter { internal static class Program { private static async Task<int> Main(string[] _) { PoolManager.Startup(null); var stopwatch = new Stopwatch(); stopwatch.Start();\nvar (errors, fieldErrors) = await RunValidation();\nvar count = errors.Count + fieldErrors.Count;\nif (count == 0) { Console.WriteLine($\"No errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); PoolManager.Shutdown(); return 0; }\nforeach (var (file, errorHashset) in errors) { foreach (var errorNode in errorHashset) { Console.WriteLine($\"::error file={file},line={errorNode.Node.Start.Line},col={errorNode.Node.Start.Column}::{file}({errorNode.Node.Start.Line},{errorNode.Node.Start.Column})  {errorNode.ErrorReason}\"); } }\nforeach (var error in fieldErrors) { Console.WriteLine(error); }\nConsole.WriteLine($\"{count} errors found in {(int) stopwatch.Elapsed.TotalMilliseconds} ms.\"); PoolManager.Shutdown(); return -1; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateClient() { await using var pair = await PoolManager.GetServerClient(); var client = pair.Client; var result = await ValidateInstance(client); await pair.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors, List<string> FieldErrors)> ValidateServer() { await using var pair = await PoolManager.GetServerClient(); var server = pair.Server; var result = await ValidateInstance(server); await pair.CleanReturnAsync(); return result; }\nprivate static async Task<(Dictionary<string, HashSet<ErrorNode>>, List<string>)> ValidateInstance( RobustIntegrationTest.IntegrationInstance instance) { var protoMan = instance.ResolveDependency<IPrototypeManager>(); Dictionary<string, HashSet<ErrorNode>> yamlErrors = default!; List<string> fieldErrors = default!;\nawait instance.WaitPost(() => { yamlErrors = protoMan.ValidateDirectory(new ResPath(\"/Prototypes\"), out var prototypes); fieldErrors = protoMan.ValidateFields(prototypes); });\nreturn (yamlErrors, fieldErrors); }\npublic static async Task<(Dictionary<string, HashSet<ErrorNode>> YamlErrors , List<string> FieldErrors)> RunValidation() { var yamlErrors = new Dictionary<string, HashSet<ErrorNode>>();\nvar serverErrors = await ValidateServer(); var clientErrors = await ValidateClient();\nforeach (var (key, val) in serverErrors.YamlErrors) { // Include all server errors marked as always relevant var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet();\n// We include sometimes-relevant errors if they exist both for the client & server if (clientErrors.Item1.TryGetValue(key, out var clientVal)) newErrors.UnionWith(val.Intersect(clientVal));\nif (newErrors.Count != 0) yamlErrors[key] = newErrors; }\n// Next add any always-relevant client errors. foreach (var (key, val) in clientErrors.YamlErrors) { var newErrors = val.Where(n => n.AlwaysRelevant).ToHashSet(); if (newErrors.Count == 0) continue;\nif (yamlErrors.TryGetValue(key, out var errors)) errors.UnionWith(val.Where(n => n.AlwaysRelevant)); else yamlErrors[key] = newErrors; }\n// Finally, combine the prototype ID field errors. var fieldErrors = serverErrors.FieldErrors .Concat(clientErrors.FieldErrors) .Distinct() .ToList();\nreturn (yamlErrors, fieldErrors); } } }"
{"extends": "default", "rules": {"line-length": "disable", "truthy": "disable"}, "ignore": "/cache/\n/pkg/\n!/bin/*.lint-me-anyway.yaml\n"}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning", "max-spaces-after": 3}}}
{"extends": "default", "rules": {"line-length": {"max": 132, "level": "warning"}, "comments": {"min-spaces-from-content": 1}}}
{"rules": {"quoted-strings": {"required": "only-when-needed", "extra-allowed": ["{|}"]}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "key-duplicates": {}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": false}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "key-duplicates": "enable", "new-lines": {"type": "unix"}, "truthy": "disable"}}
{"ignore": "**/.terraform/**\n", "extends": "default", "rules": {"line-length": "disable", "document-start": "disable", "indentation": "disable", "new-line-at-end-of-file": "disable", "comments": "disable", "empty-lines": {"max": 3, "max-start": 3, "max-end": 3}, "brackets": {"max-spaces-inside": 1}, "comments-indentation": "disable"}}
{"extends": "default", "rules": {"braces": {"level": "error", "max-spaces-inside": 1, "min-spaces-inside": 1}, "brackets": {"level": "error", "max-spaces-inside": 1, "min-spaces-inside": 1}, "document-start": {"present": true}, "empty-lines": {"max": 1}, "indentation": {"spaces": 2}, "key-duplicates": {}, "line-length": {"max": 120, "allow-non-breakable-inline-mappings": true}, "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}, "trailing-spaces": {}, "truthy": {}}}
{"extends": "default", "rules": {"line-length": {"ignore": "docker-compose-metadata.yaml\n"}}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "ignore": "automations.yaml\nblueprints/*/homeassistant/*.yaml\ncustom_components/\nesphomeyaml/*/\nesphome/.esphome/\nip_bans.yaml\nnotebooks/\nscenes.yaml\nscripts.yaml\nthemes/*.yaml\n", "rules": {"braces": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "brackets": {"level": "error", "min-spaces-inside": 0, "max-spaces-inside": 0, "min-spaces-inside-empty": -1, "max-spaces-inside-empty": -1}, "colons": {"level": "error", "max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"level": "error", "max-spaces-before": 0, "min-spaces-after": 1, "max-spaces-after": 1}, "comments": {"level": "error", "require-starting-space": true, "min-spaces-from-content": 2}, "comments-indentation": {"level": "error"}, "document-end": {"level": "error", "present": false}, "document-start": {"level": "error", "present": true, "ignore": "config/known_devices.yaml\n"}, "empty-lines": {"level": "error", "max": 1, "max-start": 0, "max-end": 1}, "hyphens": {"level": "error", "max-spaces-after": 1}, "indentation": {"level": "error", "spaces": 2, "indent-sequences": true, "check-multi-line-strings": false}, "key-duplicates": {"level": "error"}, "line-length": {"ignore": ".github/support.yml\n.github/settings.yml\n", "level": "warning", "max": 88, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true}, "new-line-at-end-of-file": {"level": "error"}, "new-lines": {"level": "error", "type": "unix"}, "trailing-spaces": {"level": "error"}, "truthy": {"level": "error"}}}
{"extends": "default", "rules": {"comments-indentation": "disable", "document-start": {"present": false}, "line-length": {"max": 200}}}
{"locale": "en_US.UTF-8", "yaml-files": ["*.yaml", "*.yml"], "ignore": ".helmwave/\ntests/\n.changie.yaml\n.github\n", "rules": {"braces": {"forbid": "non-empty", "min-spaces-inside": 0, "max-spaces-inside": 2, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 2}, "brackets": {"forbid": false, "min-spaces-inside": 0, "max-spaces-inside": 2, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 2}, "colons": "enable", "commas": "enable", "comments": "disable", "comments-indentation": {"level": "warning"}, "document-end": "disable", "document-start": "disable", "empty-lines": {"max": 10, "max-end": 10, "max-start": 10}, "empty-values": "enable", "float-values": "enable", "octal-values": "disable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": {"max": 120}, "new-line-at-end-of-file": "enable", "new-lines": "enable", "quoted-strings": "disable", "trailing-spaces": "disable", "truthy": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 205, "level": "error"}}}
{"extends": "default", "rules": {"document-start": {"ignore": "/.github/workflows/\n"}, "line-length": {"max": 132, "allow-non-breakable-words": true, "allow-non-breakable-inline-mappings": true, "ignore": "/.github/workflows/lint.yaml\n"}, "truthy": {"ignore": "/.github/workflows/\n"}}}
{"extends": "default", "rules": {"line-length": {"max": 160}}, "ignore": ".zuul.yaml\n"}
{"extends": "default", "rules": {"commas": {"max-spaces-after": -1}, "comments-indentation": "disable", "document-start": "disable", "line-length": "disable", "truthy": {"check-keys": false}}}
{"yaml-files": ["*.yaml", "*.yml"], "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1, "min-spaces-inside-empty": 0, "max-spaces-inside-empty": 0}, "colons": {"max-spaces-before": 0, "max-spaces-after": 1}, "commas": {"max-spaces-before": 0}, "comments": {"level": "warning", "require-starting-space": true, "min-spaces-from-content": 1}, "comments-indentation": "disable", "document-end": "disable", "document-start": "disable", "empty-lines": {"level": "warning", "max": 2, "max-start": 0, "max-end": 1}, "empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "hyphens": {"max-spaces-after": 1}, "indentation": {"spaces": "consistent", "indent-sequences": false}, "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "octal-values": "disable", "quoted-strings": {"quote-type": "any", "required": false}, "trailing-spaces": "enable", "truthy": "disable"}}
{"rules": {"anchors": {"forbid-duplicated-anchors": true}, "braces": {"forbid": "non-empty"}, "brackets": {"forbid": "non-empty"}, "colons": "enable", "comments": "enable", "comments-indentation": "enable", "empty-lines": {"max": 1}, "empty-values": "enable", "float-values": {"require-numeral-before-decimal": true}, "hyphens": "enable", "indentation": {"spaces": 2, "indent-sequences": false}, "key-duplicates": "enable", "line-length": "enable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": {"forbid-explicit-octal": false}, "quoted-strings": {"quote-type": "double", "required": "only-when-needed"}, "trailing-spaces": "enable", "truthy": "enable"}}
{"extends": "default", "rules": {"comments": "enable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 100}, "indentation": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"line-length": 120}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint", ".ansible-lint"], "extends": "default", "rules": {"braces": {"min-spaces-inside": 1, "max-spaces-inside": 1}, "brackets": {"max-spaces-inside": 1}, "colons": {"max-spaces-after": -1}, "commas": {"min-spaces-after": 1, "max-spaces-after": -1}, "comments": {"require-starting-space": true, "min-spaces-from-content": 1}, "document-start": {"present": true, "ignore": ".github/dependabot.yml"}, "document-end": {"present": true, "ignore": ".github/dependabot.yml"}, "empty-lines": {"max": 1}, "key-duplicates": "enable", "line-length": "disable", "new-lines": {"type": "unix"}, "truthy": {"allowed-values": ["yes", "no"], "check-keys": false}}}
{"ignore": ".github/\n", "extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}, "empty-lines": {"max": 2, "max-start": 1, "max-end": 1}}}
{"ignore": ".autodoc/\n.cache/\n.common/\n.git/\n.husky/\n.modules/\n.npm/\n.pnpm-store/\n.shared/\n.task/\n.venv/\n.vscode/\n.tox\n.travis.yml\n*.hbs.yml\nbuild/\ndist/\nnode_modules/\npnpm-lock.yaml\nroles/\nvenv/\nworkspace/\ntemplates/\nmkdocs.yml\n", "extends": "default", "rules": {"document-start": "disable", "line-length": "disable"}}
{"extends": "default", "rules": {"line-length": "disable", "trailing-spaces": "disable", "new-line-at-end-of-file": "disable"}}
{"extends": "default", "rules": {"line-length": {"max": 220, "level": "warning"}}, "ignore": ".github/workflows/stale.yml\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "colons": {"max-spaces-after": -1, "level": "error"}, "commas": {"max-spaces-after": -1, "level": "error"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"max": 3, "level": "error"}, "hyphens": {"level": "error"}, "indentation": "disable", "key-duplicates": "enable", "line-length": {"max": 120, "level": "warning"}, "new-line-at-end-of-file": "enable", "new-lines": {"type": "unix"}, "trailing-spaces": "disable", "truthy": "enable"}}
{"yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"anchors": "enable", "braces": "enable", "brackets": "enable", "colons": "enable", "commas": "enable", "comments": "disable", "comments-indentation": "disable", "document-end": "disable", "document-start": {"level": "warning"}, "empty-lines": "enable", "empty-values": "enable", "float-values": "disable", "hyphens": "enable", "indentation": "disable", "key-duplicates": "enable", "key-ordering": "disable", "line-length": "disable", "new-line-at-end-of-file": "enable", "new-lines": "enable", "octal-values": "disable", "quoted-strings": "disable", "trailing-spaces": "enable", "truthy": "disable"}}
"yamllint.yaml"
{"extends": "default", "rules": {"line-length": {"max": 99}}}
{"extends": "default", "rules": {"line-length": {"max": 160, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "yes", "no"]}}}
{"extends": "default", "rules": {"line-length": "disable", "comments": {"require-starting-space": false, "ignore-shebangs": true, "min-spaces-from-content": 1}, "comments-indentation": "disable", "truthy": {"level": "warning"}}, "ignore": ".markdownlint-cli2.yaml\n.licenses/\n.chlog\nCHANGELOG.md\n"}
{"extends": "default", "rules": {"line-length": "disable", "braces": "disable", "truthy": "disable"}}
{"extends": "default", "ignore": ".github/\n.tox/\ntmp/\n", "rules": {"line-length": "disable"}}
{"extends": "default", "rules": {"line-length": "disable"}}
{"ignore": "*node_modules*\n", "extends": "default"}
{"extends": "default", "ignore": "node_modules/\ntest/**/states/**/*.sls\n.kitchen/\npillar.example\ntest/salt/default/pillar.sls\ncharles/osfamilymap.yaml\n", "yaml-files": ["*.yaml", "*.yml", ".salt-lint", ".yamllint", "*.example", "test/**/*.sls"], "rules": {"empty-values": {"forbid-in-block-mappings": true, "forbid-in-flow-mappings": true}, "line-length": {"max": 88}, "octal-values": {"forbid-implicit-octal": true, "forbid-explicit-octal": true}}}
{"extends": "default", "rules": {"line-length": {"max": 80, "level": "warning"}}, "ignore": "dependencies/\nhelmcharts/\nmanifests/\nvendor/\ncompiled/\ntests/golden/\n"}
{"extends": "../../../tests/static/.yamllint"}
{"extends": "default", "rules": {"line-length": {"max": 200}, "indentation": {"spaces": 2, "indent-sequences": true}}}
{"extends": "default", "ignore": "charts/\ncluster/flux-system/*.yaml\n", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "comments": {"min-spaces-from-content": 1}, "document-start": "disable", "indentation": {"spaces": 2, "indent-sequences": "consistent"}, "line-length": "disable"}}
{"extends": "default", "rules": {"truthy": {"allowed-values": ["true", "false"]}, "line-length": {"max": 120, "level": "warning"}, "braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 0}, "indentation": {"spaces": 2, "indent-sequences": "consistent", "check-multi-line-strings": false}, "document-start": {"present": true, "level": "warning"}, "comments": {"min-spaces-from-content": 1}}}
{"extends": "default", "rules": {"line-length": "disable"}, "ignore": "*.venv/\n*.mypy_cache/\n*.eggs/\n"}
{"rules": {"line-length": "disable"}}
"../../.yamllint.yml"
{"extends": "relaxed", "rules": {"line-length": {"max": 180, "level": "warning"}, "empty-lines": {"max": 1}}}
{"extends": "default", "ignore": "contrib\n.venv\n", "rules": {"braces": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "brackets": {"min-spaces-inside": 0, "max-spaces-inside": 1}, "colons": {"max-spaces-after": -1}, "commas": {"max-spaces-after": -1}, "comments": {"require-starting-space": true, "min-spaces-from-content": 1}, "line-length": {"max": 180, "level": "warning"}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}, "indentation": {"indent-sequences": false}, "comments": {"require-starting-space": false}}}
{"extends": "relaxed", "ignore": "vendor/", "rules": {"line-length": {"max": 140}}}
{"extends": "default", "ignore": "templates/*.yaml\nrepository-metadata.yaml\n", "rules": {"document-start": "disable", "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "empty-lines": {"max": 1}, "indentation": {"spaces": 2}, "line-length": {"max": 200}}}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable", "truthy": "disable", "new-line-at-end-of-file": "disable", "colons": "disable"}, "ignore": ".tox/\n.cache/"}
{"extends": "default", "ignore": "roles/alphanodes.mongodb/\n", "rules": {"line-length": "disable", "new-lines": {"type": "unix"}, "braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "comments-indentation": "disable"}}
{"ignore": "vendor/\ndeploy/svc/\nconfig/svc/\ntests/\n", "extends": "default", "rules": {"indentation": "disable", "document-start": "disable", "comments": "disable", "line-length": "disable", "empty-lines": {"max-start": 1, "max-end": 1}}}
{"extends": "default", "rules": {"braces": {"level": "warning", "max-spaces-inside": 1}, "brackets": {"level": "warning", "max-spaces-inside": 1}, "colons": {"level": "warning"}, "commas": {"level": "warning"}, "comments": "disable", "comments-indentation": "disable", "document-start": "disable", "empty-lines": {"level": "warning"}, "hyphens": {"level": "warning"}, "indentation": {"level": "warning", "indent-sequences": "consistent"}, "line-length": "disable", "truthy": "disable"}}
{"ignore": "venv/\n.yamllint.yaml\n", "extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}, "trailing-spaces": "disable"}}
{"extends": "relaxed", "rules": {"indentation": {"indent-sequences": false}, "line-length": {"max": 1000}}}
{"extends": "default", "rules": {"line-length": {"max": 260}, "truthy": {"allowed-values": ["yes", "no", "true", "false"], "check-keys": true}, "braces": {"min-spaces-inside": 1, "max-spaces-inside": 3}, "comments": {"min-spaces-from-content": 1}}, "ignore": "/.github\n/collections/\n.pre-commit-config.yaml\n"}
{"extends": "default", "rules": {"braces": {"max-spaces-inside": 1, "level": "error"}, "brackets": {"max-spaces-inside": 1, "level": "error"}, "line-length": "disable"}, "ignore": ".tox/\n"}
{"extends": "default", "yaml-files": ["*.yaml", "*.yml", ".yamllint"], "rules": {"document-start": "disable", "line-length": {"max": 120}}}
{"extends": "default", "rules": {"line-length": {"max": 120, "level": "warning"}, "truthy": {"allowed-values": ["true", "false", "yes", "no"]}}, "ignore": ".github/stale.yml\n.travis.yml\n"}
