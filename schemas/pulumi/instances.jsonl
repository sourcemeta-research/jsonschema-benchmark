{"name": "<%= projectName %>", "runtime": "nodejs"}
{"name": "production", "runtime": "nodejs", "description": "Gitcoin production environment"}
{"name": "orion", "runtime": "nodejs", "description": "A Pulumi program to deploy Orion service to Kubernetes", "template": {"config": {"aws:profile": {"default": "joystream-user"}, "aws:region": {"default": "us-east-1"}, "isMinikube": {"description": "Whether you are deploying to minikube", "default": false}, "queryNodeEndpoint": {"description": "Full URL for Query node endpoint"}, "isLoadBalancerReady": {"description": "Whether the load balancer service is ready and has been assigned an IP", "default": false}, "storage": {"description": "Amount of storage in gigabytes for ipfs volume", "default": 40}, "orionImage": {"description": "The Orion image to use for running the orion node", "default": "joystream/orion:latest"}, "contentSecret": {"description": "Orion featured content secret"}, "adminSecret": {"description": "Orion admin secret"}, "appPrivateKey": {"description": "Orion app private key"}}}}
{"name": "alb-lambda-pulumi-yaml", "runtime": "yaml", "description": "A minimal AWS Pulumi YAML program", "outputs": {"url": "${loadBalancer.dnsName}"}, "resources": {"vpc": {"type": "awsx:ec2:Vpc", "properties": {"cidrBlock": "10.0.0.0/16", "numberOfAvailabilityZones": 2, "subnetSpecs": [{"type": "Public", "name": "public-lb-subnet"}], "natGateways": {"strategy": "None"}}}, "securityGroup": {"type": "aws:ec2:SecurityGroup", "properties": {"vpcId": "${vpc.vpcId}", "ingress": [{"protocol": "tcp", "fromPort": 80, "toPort": 80, "cidrBlocks": ["0.0.0.0/0"]}]}}, "loadBalancer": {"type": "aws:lb:LoadBalancer", "properties": {"securityGroups": ["${securityGroup.id}"], "subnets": "${vpc.publicSubnetIds}"}}, "targetGroup": {"type": "aws:lb:TargetGroup", "properties": {"targetType": "lambda", "vpcId": "${vpc.vpcId}"}}, "listener": {"type": "aws:lb:Listener", "properties": {"loadBalancerArn": "${loadBalancer.arn}", "port": 80, "defaultActions": [{"type": "forward", "targetGroupArn": "${targetGroup.arn}"}]}}, "lambdaRole": {"type": "aws:iam:Role", "properties": {"assumeRolePolicy": {"fn::toJSON": {"Version": "2012-10-17", "Statement": [{"Action": "sts:AssumeRole", "Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}}]}}, "managedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]}}, "fn": {"type": "aws:lambda:Function", "properties": {"runtime": "nodejs18.x", "handler": "index.handler", "role": "${lambdaRole.arn}", "code": {"fn::fileArchive": "./lambda"}}}, "lambdaPermission": {"type": "aws:lambda:Permission", "properties": {"action": "lambda:InvokeFunction", "principal": "elasticloadbalancing.amazonaws.com", "function": "${fn.arn}", "sourceArn": "${targetGroup.arn}"}}, "targetGroupAttachment": {"type": "aws:lb:TargetGroupAttachment", "properties": {"targetGroupArn": "${targetGroup.arn}", "targetId": "${fn.arn}"}, "options": {"dependsOn": ["${lambdaPermission}"]}}}}
{"name": "s3-lambda-pulumi", "runtime": "nodejs", "description": "A simple example that uploads a file to an S3 bucket using a Lambda function", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name": "fanout.io-lambda-demo", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "macos_quickstart", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "aws-eks", "runtime": "yaml", "description": "An EKS cluster", "variables": {"vpcId": {"fn::invoke": {"function": "aws:ec2:getVpc", "arguments": {"default": true}, "Return": "id"}}, "subnetIds": {"fn::invoke": {"function": "aws:ec2:getSubnets", "arguments": {"filters": [{"name": "vpc-id", "values": ["${vpcId}"]}]}, "Return": "ids"}}}, "resources": {"cluster": {"type": "eks:Cluster", "properties": {"vpcId": "${vpcId}", "subnetIds": "${subnetIds}", "instanceType": "t2.medium", "desiredCapacity": 2, "minSize": 1, "maxSize": 2}}}, "outputs": {"kubeconfig": "${cluster.kubeconfig}"}}
{"name": "aws-go-fargate", "runtime": "go", "description": "An end-to-end AWS ECS Fargate infrastructure as code project."}
{"name": "dagger-pulumi-demo-ecs", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "wordpress-ecs-rds", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploys WordPress in ECS Fargate with RDS backend."}
{"name": "iac", "runtime": "dotnet", "description": "A minimal Azure C# Pulumi program"}
{"name": "kubernetes-go-crontabs", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "google-rails", "runtime": "nodejs", "description": "A containerized Ruby on Rails app using managed Kubernetes and PostgreSQL"}
{"name": "ok-api", "runtime": "nodejs", "description": "API for the OK? programming language"}
{"name": "azure-cs-sqlserver", "runtime": "dotnet", "description": "An example of a SQLServer on Azure PaaS"}
{"name": "webserver-linode", "runtime": "nodejs", "description": "Basic example of an Linode web server accessible over HTTP"}
{"name": "serverless-topic", "runtime": "nodejs", "description": "Simple topic examples"}
{"name": "test-aws-1655-pf", "runtime": "yaml", "description": "Add a resource specific tag: `foo: buzz`\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux"}}}}, "app": {"type": "aws:appconfig:Application", "properties": {"name": "pf-tags-test-app"}}, "res": {"type": "aws:appconfig:Environment", "properties": {"applicationId": "${app.id}", "name": "pf-tags-test", "tags": {"fizz": "buzz"}}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "frontdoor", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program with the classic Azure provider"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "java", "template": {"description": "A minimal Java Pulumi program with Maven builds"}}
{"name": "metrics", "runtime": "nodejs", "description": "A simple example of how to hook up to CloudWatch metrics."}
{"name": "alb", "runtime": "nodejs", "description": "A simple application load balancer example."}
{"name": "test-aws-1655-bucket", "runtime": "yaml", "description": "Don't specify any default tags (should be empty)\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws"}, "res": {"type": "aws:s3:BucketV2", "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "api", "runtime": "nodejs", "description": "API-related resources"}
{"name": "azure-ts-vm-scaleset", "runtime": "nodejs", "description": "Basic example of nginx deployed in Azure VM Scale Sets", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}}}}
{"name": "appservice-cs", "description": "Creates Azure App Service serving a static file", "runtime": "dotnet"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "go", "template": {"description": "A minimal Civo Go Pulumi program", "config": {"civo:token": {"description": "The token that allows you access your CIVO account", "secret": true}}}}
{"name": "cloudtrail-dotnet", "runtime": "dotnet", "description": "A minimal C# Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Google Cloud Pulumi YAML program", "important": true, "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}}}, "resources": {"my-bucket": {"type": "gcp:storage:Bucket", "properties": {"location": "US"}}}, "outputs": {"bucketName": "${my-bucket.url}"}}
{"name": "guestbook", "runtime": "nodejs", "description": "Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/", "template": {"config": {"isMinikube": {"description": "Whether you are deploying to minikube", "default": true}}}}
{"name": "kx-k8s-demo", "runtime": "nodejs", "description": "A Kubernetes App - Deployment, Service, Ingress"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "java", "template": {"description": "A minimal Azure Native Java Pulumi program", "important": true, "config": {"azure-native:location": {"description": "The Azure location to use", "default": "WestUS2"}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal Google Cloud Python Pulumi program", "important": true, "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}}}}
{"name": "aws-py-stackreference-department", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources in Python", "template": {"config": {"departmentName": {"description": "The department name to use"}}}}
{"runtime": "nodejs", "name": "example", "description": "example"}
{"name": "ngrok", "runtime": "yaml", "description": "Run ngrok to tunnel webhooks to Flux", "variables": {"appLabels": {"app": "ngrok"}}, "resources": {"deployment": {"type": "kubernetes:apps/v1:Deployment", "properties": {"spec": {"selector": {"matchLabels": "${appLabels}"}, "replicas": 1, "template": {"metadata": {"labels": "${appLabels}"}, "spec": {"containers": [{"name": "ngrok", "image": "ngrok/ngrok:2.3.40-alpine", "args": ["http", "webhook-receiver.flux-system:80"]}]}}}}}, "service": {"type": "kubernetes:core/v1:Service", "properties": {"spec": {"selector": "${appLabels}", "ports": [{"port": 80, "targetPort": 4040}]}}}}, "outputs": {"deployment": "${deployment.metadata.name}", "service": "${service.metadata.name}"}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal VB.NET Pulumi program"}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "java", "template": {"description": "A minimal Java Pulumi program with Gradle builds"}}
{"name": "azure-multi-callback-all", "runtime": "nodejs", "description": "An Azure Function App with all types of functions"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal Auth0 Python Pulumi program", "config": {"auth0:clientId": {"description": "The Auth0 client ID", "secret": true}, "auth0:clientSecret": {"description": "The Auth0 client secret", "secret": true}, "auth0:domain": {"description": "The Auth0 domain"}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal Azure Native C# Pulumi program", "important": true, "config": {"azure-native:location": {"description": "The Azure location to use", "default": "WestUS2"}}}}
{"name": "m3o", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name": "alb-ec2-instance", "runtime": "nodejs", "description": "A simple application load balancer example using ec2 instances."}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal Random C# Pulumi program."}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Scaleway Pulumi YAML program", "config": {"scaleway:project_id": {"description": "The Scaleway project ID"}, "scaleway:region": {"description": "The Scaleway region to deploy into", "default": "fr-par"}}}, "resources": {"my-bucket": {"type": "scaleway:ObjectBucket"}}, "outputs": {"bucketName": "${my-bucket.id}"}}
{"name": "localstate-go", "runtime": "go", "description": "An example demonstrating the Terraform Remote State resource in Go"}
{"name": "kubernetes-go-helm-release-wordpress", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"name": "azure-linux-virtual-machine", "runtime": "nodejs", "description": "Create a linux virtual machine resource"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Kubernetes Pulumi YAML program", "important": true}, "variables": {"appLabels": {"app": "nginx"}}, "resources": {"deployment": {"type": "kubernetes:apps/v1:Deployment", "properties": {"spec": {"selector": {"matchLabels": "${appLabels}"}, "replicas": 1, "template": {"metadata": {"labels": "${appLabels}"}, "spec": {"containers": [{"name": "nginx", "image": "nginx"}]}}}}}}, "outputs": {"name": "${deployment.metadata.name}"}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal GCP VB.NET Pulumi program", "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "go", "template": {"description": "A Go program to deploy a containerized service on Google Cloud", "config": {"gcp:region": {"description": "The Google Cloud region to deploy into", "default": "us-central1"}, "gcp:project": {"description": "The Google Cloud project to deploy into"}, "appPath": {"description": "The path to the container application to deploy", "default": "app"}, "containerPort": {"description": "The port to expose on the container", "default": 8080}, "cpu": {"description": "The number of virtual CPUs to allocate per container instance", "default": 1}, "memory": {"description": "The amount of memory to allocate per container instance", "default": "1Gi"}, "concurrency": {"description": "The maximum number of concurrent requests to serve per container instance", "default": 50}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal RedisCloud Python Pulumi program", "config": {"cardType": {"description": "Credit card type (Visa, Mastercard) of the card on file with Rediscloud"}, "lastFourNumbers": {"description": "Last four numbers of the card on file with RedisCloud"}, "rediscloud:apiKey": {"description": "RedisCloud access key", "secret": true}, "rediscloud:secretKey": {"description": "RedisCloud secret key", "secret": true}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal DigitalOcean Pulumi YAML program"}, "resources": {"domain": {"type": "digitalocean:Domain", "properties": {"name": "my-domain.io"}}}, "outputs": {"domainName": "${domain.name}"}}
{"name": "azure-cosmosdb-logicapp", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "An example of creating a CosmosDB container through a Azure's Cosmos SDK and deploying a Logic App and an API Connection"}
{"name": "conference", "runtime": "go", "description": "conference platform pulumi app"}
{"name": "vpc-typescript", "runtime": "nodejs", "description": "A minimal AliCloud TypeScript project for a VPC"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Pulumi YAML program with the classic Azure provider", "config": {"azure:location": {"description": "The Azure location to use", "default": "WestUS2"}}}, "resources": {"resourceGroup": {"type": "azure:core:ResourceGroup"}, "account": {"type": "azure:storage:Account", "properties": {"resourceGroupName": "${resourceGroup.name}", "accountTier": "Standard", "accountReplicationType": "LRS"}}}, "outputs": {"connectionString": "${account.primaryConnectionString}"}}
{"name": "azure-go-aks", "description": "Creates an Azure Kubernetes Service (AKS) cluster", "runtime": "go", "template": {"config": {"azure:location": {"description": "The Azure location to use", "default": "westus"}, "kubernetesVersion": {"description": "The Kubernetes version to deploy", "default": "1.16.9"}}}}
{"name": "azure-go-aci", "description": "Deploys a docker container to Azure Container Instances", "runtime": "go"}
{"name": "azure-py-aks", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Azure Python Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A Pulumi YAML program to deploy a serverless application on Google Cloud", "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}, "gcp:region": {"description": "The Google Cloud region to deploy into", "default": "us-central1"}, "sitePath": {"description": "The path to the folder containing the website", "default": "./www"}, "appPath": {"description": "The path to the folder containing the functions to be deployed", "default": "./app"}, "indexDocument": {"description": "The file to use for top-level pages", "default": "index.html"}, "errorDocument": {"description": "The file to use for error pages", "default": "error.html"}}}, "config": {"sitePath": {"type": "string", "default": "./www"}, "appPath": {"type": "string", "default": "./app"}, "indexDocument": {"type": "string", "default": "index.html"}, "errorDocument": {"type": "string", "default": "error.html"}}, "variables": {"appArchive": {"fn::fileArchive": "${appPath}"}, "configJSON": {"fn::toJSON": {"api": "${data-function.httpsTriggerUrl}"}}, "configFile": {"fn::stringAsset": "${configJSON}"}}, "resources": {"site-bucket": {"type": "gcp:storage:Bucket", "properties": {"location": "US", "website": {"mainPageSuffix": "${indexDocument}", "notFoundPage": "${errorDocument}"}}}, "site-bucket-iam-binding": {"type": "gcp:storage:BucketIAMBinding", "properties": {"bucket": "${site-bucket.name}", "role": "roles/storage.objectViewer", "members": ["allUsers"]}}, "synced-folder": {"type": "synced-folder:index:GoogleCloudFolder", "properties": {"path": "${sitePath}", "bucketName": "${site-bucket.name}"}}, "app-bucket": {"type": "gcp:storage:Bucket", "properties": {"location": "US"}}, "app-archive": {"type": "gcp:storage:BucketObject", "properties": {"bucket": "${app-bucket.name}", "source": "${appArchive}"}}, "data-function": {"type": "gcp:cloudfunctions:Function", "properties": {"sourceArchiveBucket": "${app-bucket.name}", "sourceArchiveObject": "${app-archive.name}", "runtime": "python310", "entryPoint": "data", "triggerHttp": true}}, "invoker": {"type": "gcp:cloudfunctions:FunctionIamMember", "properties": {"project": "${data-function.project}", "region": "${data-function.region}", "cloudFunction": "${data-function.name}", "role": "roles/cloudfunctions.invoker", "member": "allUsers"}}, "site-config": {"type": "gcp:storage:BucketObject", "properties": {"name": "config.json", "bucket": "${site-bucket.name}", "contentType": "application/json", "source": "${configFile}"}}}, "outputs": {"siteURL": "https://storage.googleapis.com/${site-bucket.name}/index.html", "apiURL": "${data-function.httpsTriggerUrl}"}}
{"name": "repo-ts", "runtime": "nodejs", "description": "Creating a GitHub Repository in TypeScript"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": {"name": "nodejs", "options": {"typescript": false}}, "template": {"description": "A minimal RedisCloud JavaScript Pulumi program", "config": {"cardType": {"description": "Credit card type (Visa, Mastercard) of the card on file with Rediscloud"}, "lastFourNumbers": {"description": "Last four numbers of the card on file with RedisCloud"}, "rediscloud:apiKey": {"description": "RedisCloud access key", "secret": true}, "rediscloud:secretKey": {"description": "RedisCloud secret key", "secret": true}}}}
{"name": "production", "runtime": "nodejs", "description": "Gitcoin production environment"}
{"name": "production", "runtime": "nodejs", "description": "Gitcoin production environment"}
{"name": "s3-lambda-pulumi", "runtime": "nodejs", "description": "A simple example that uploads a file to an S3 bucket using a Lambda function", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name": "s3-lambda-pulumi", "runtime": "nodejs", "description": "A simple example that uploads a file to an S3 bucket using a Lambda function", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name": "s3-lambda-pulumi", "runtime": "nodejs", "description": "A simple example that uploads a file to an S3 bucket using a Lambda function", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name": "macos_quickstart", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "aws-go-fargate", "runtime": "go", "description": "An end-to-end AWS ECS Fargate infrastructure as code project."}
{"name": "aws-go-fargate", "runtime": "go", "description": "An end-to-end AWS ECS Fargate infrastructure as code project."}
{"name": "aws-go-fargate", "runtime": "go", "description": "An end-to-end AWS ECS Fargate infrastructure as code project."}
{"name": "dagger-pulumi-demo-ecs", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "dagger-pulumi-demo-ecs", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "wordpress-ecs-rds", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploys WordPress in ECS Fargate with RDS backend."}
{"name": "wordpress-ecs-rds", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploys WordPress in ECS Fargate with RDS backend."}
{"name": "wordpress-ecs-rds", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploys WordPress in ECS Fargate with RDS backend."}
{"name": "kubernetes-go-crontabs", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "kubernetes-go-crontabs", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "webserver-linode", "runtime": "nodejs", "description": "Basic example of an Linode web server accessible over HTTP"}
{"name": "webserver-linode", "runtime": "nodejs", "description": "Basic example of an Linode web server accessible over HTTP"}
{"name": "webserver-linode", "runtime": "nodejs", "description": "Basic example of an Linode web server accessible over HTTP"}
{"name": "alb", "runtime": "nodejs", "description": "A simple application load balancer example."}
{"name": "alb", "runtime": "nodejs", "description": "A simple application load balancer example."}
{"name": "azure-ts-vm-scaleset", "runtime": "nodejs", "description": "Basic example of nginx deployed in Azure VM Scale Sets", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}}}}
{"name": "azure-ts-vm-scaleset", "runtime": "nodejs", "description": "Basic example of nginx deployed in Azure VM Scale Sets", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}}}}
{"name": "cloudtrail-dotnet", "runtime": "dotnet", "description": "A minimal C# Pulumi program"}
{"name": "guestbook", "runtime": "nodejs", "description": "Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/", "template": {"config": {"isMinikube": {"description": "Whether you are deploying to minikube", "default": true}}}}
{"name": "guestbook", "runtime": "nodejs", "description": "Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/", "template": {"config": {"isMinikube": {"description": "Whether you are deploying to minikube", "default": true}}}}
{"name": "guestbook", "runtime": "nodejs", "description": "Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/", "template": {"config": {"isMinikube": {"description": "Whether you are deploying to minikube", "default": true}}}}
{"name": "aws-py-stackreference-department", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources in Python", "template": {"config": {"departmentName": {"description": "The department name to use"}}}}
{"name": "aws-py-stackreference-department", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources in Python", "template": {"config": {"departmentName": {"description": "The department name to use"}}}}
{"runtime": "nodejs", "name": "example", "description": "example"}
{"runtime": "nodejs", "name": "example", "description": "example"}
{"runtime": "nodejs", "name": "example", "description": "example"}
{"name": "m3o", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal DigitalOcean Pulumi YAML program"}, "resources": {"domain": {"type": "digitalocean:Domain", "properties": {"name": "my-domain.io"}}}, "outputs": {"domainName": "${domain.name}"}}
{"name": "azure-go-aks", "description": "Creates an Azure Kubernetes Service (AKS) cluster", "runtime": "go", "template": {"config": {"azure:location": {"description": "The Azure location to use", "default": "westus"}, "kubernetesVersion": {"description": "The Kubernetes version to deploy", "default": "1.16.9"}}}}
{"name": "azure-go-aci", "description": "Deploys a docker container to Azure Container Instances", "runtime": "go"}
{"name": "azure-py-aks", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Azure Python Pulumi program"}
{"name": "aws-cs-eks", "runtime": "dotnet", "description": "An ASP.NET application running a simple container in a EKS Cluster"}
{"name": "api-bmpi-dev", "runtime": "nodejs", "description": "API for BMPI.dev"}
{"name": "<%= layerName %>", "runtime": "nodejs", "description": "<%= layerDescription %>", "main": "src/index.ts"}
{"name": "dogecoin", "runtime": "nodejs", "description": "coin stack indexer, ingestion and interface"}
{"name": "python_explicit_provider", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "aws-classic-ts-lakeformation", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "monitoring", "runtime": "go", "description": "o11y infrastructure"}
{"name": "ciem-aws-public-ecr-repository", "runtime": "go", "description": "Creates a public ECR repository. It is recommended to alert on the creation of public ECR repositories, and only allow public repositories when necessary.", "cnappgoat-params": {"module": "ciem", "platform": "aws", "id": "ciem-aws-public-ecr-repository", "friendlyName": "Public ECR Repository", "description": "Creates a public ECR repository. It is recommended to alert on the creation of public ECR repositories, and only allow public repositories when necessary.", "scenarioType": "native"}}
{"name": "nginx-fluentd-infra", "runtime": "nodejs", "description": "IaC for nginx-fluentd-demo"}
{"name": "ps-app", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "sparkpost-consumer", "runtime": "nodejs", "description": "Creates a webhook consumer for SparkPost events"}
{"name": "nginx", "runtime": "nodejs", "description": "A minimal Azure Native TypeScript Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal AWS Python Pulumi program", "config": {"aws-native:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "demo-static-website", "runtime": "nodejs", "description": "A Pulumi program to create a static website in Azure blob storage fronted by Azure CDN."}
{"name": "import-api", "runtime": "nodejs", "description": "API for import"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Pulumi YAML program"}, "configuration": {}, "variables": {}, "resources": {}, "outputs": {}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A Python program to deploy a static website on AWS", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}, "path": {"description": "The path to the folder containing the website", "default": "./www"}, "indexDocument": {"description": "The file to use for top-level pages", "default": "index.html"}, "errorDocument": {"description": "The file to use for error pages", "default": "error.html"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Recorder Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "deployment-output", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getAlias Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSubnet Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RegexPatternSet Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS ClusterSnapshot C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS FileSystemPolicy C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS UsagePlan C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSites TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS AvailabilityZoneGroup Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS BgpPeer Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS EventTarget C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSelection TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS SpotInstanceRequest C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS TrafficMirrorSession Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS UserPolicyAttachment C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Enable Logging", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "ol-infrastructure-keycloak-application", "runtime": "python", "description": "A project to manage the resources and deployment of Keycloak", "backend": {"url": "s3://mitol-pulumi-state/"}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS HaproxyLayer TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS OpenIdConnectProvider C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "factorio-sites", "runtime": "nodejs", "description": "Factorio blueprints mono repo"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS MemberAccountAssociation Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Basic", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ServiceQuota Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalDisk C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Without CSR", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Redirect Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnGatewayAttachment TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Target", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "command-test", "description": "A Command Test.", "runtime": "nodejs", "backend": {"url": "file://."}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Name", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getAuthorizationToken TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "CloudFront Origin", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcAttachment C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "cloudrun", "runtime": "nodejs", "description": "Eventuous sample application deployment to Google Cloud Run"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS LogSubscriptionFilter C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcPeeringConnectionAccepter C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcEndpointConnectionNotification Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS LoadBalancerCookieStickinessPolicy Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Logging", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS OrganizationConfiguration C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Create protection", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "lab-1", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Non-AWS Service", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Redis Instance", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "vpn-layer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Pulumi program for setting up vpn resources"}
{"name": "app-redirect", "runtime": {"name": "python", "options": {"virtualenv": "../../.env"}}, "description": "App - redirect"}
{"name": "pulumi", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS NetworkInterfaceSecurityGroupAttachment Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Enabling Logging", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "vultr-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "static-website", "runtime": "yaml", "description": "Example of a Pulumi program deploying a static website using the YAML provider.", "resources": {"web": {"type": "aws-static-website:index:Website", "properties": {"sitePath": "../website/build"}}}, "outputs": {"websiteURL": "${web.websiteURL}", "bucketName": "${web.bucketName}"}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Virtual Node Provider", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Using replication configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "AWS Organization", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "demo-site", "runtime": "go", "description": "Prometheus Kubernetes Demo Site"}
{"name": "vunk.dev", "runtime": {"name": "python"}, "main": "infrastructure", "description": "Infrastructure for vunk.dev"}
{"name": "pulumi-challenge-august-22", "description": "Pulumi Challenge August 2022", "runtime": "nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Automation Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Regional (ACM Certificate)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "channel", "runtime": "nodejs", "description": "A sample Slack Pulumi program"}
{"name": "ad-hoc-app", "runtime": "nodejs", "description": "Ad hoc app infrastructure"}
{"name": "yaml_kubernetes_tailscalebastion", "runtime": "yaml", "resources": {"bastion": {"type": "tailscale-bastion:kubernetes:Bastion", "properties": {"createNamespace": true, "routes": ["10.100.0.0/16", "172.16.0.0/24"]}}}, "outputs": {"name": "${bastion.deploymentName}"}}
{"name": "awskms-encrypted-stack", "runtime": "go", "description": "An example stack encrypted with AWS KMS"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS LocalGatewayRouteTableVpcAssociation TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "job-python-1", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Creating a Ketch Job from Python"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Alias Name", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Automation Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Alarm Check", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "myapp", "runtime": "go", "description": "Example GCP Docker Konlet VM"}
{"name": "ol-infrastructure-tika-server", "runtime": "python", "description": "Manage deployment of a tika server", "backend": {"url": "s3://mitol-pulumi-state/"}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Lookup by DHCP Options ID", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "aws-go-slackbot", "runtime": "go", "description": "Example application for building a slack bot with Pulumi and Go"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Volume Gateway (Stored)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Index Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Guest Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "go-webserver", "runtime": "go", "description": "Basic example of an AWS web server accessible over HTTP", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "gcp-py-webserver", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Basic example of a Google Cloud web server accessible over HTTP", "template": {"config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}, "gcp:zone": {"description": "The Google Cloud zone", "default": "us-central1-a"}}}}
{"name": "fly-go", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"name": "aws-js-containers", "description": "NGINX container example", "runtime": "nodejs", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name": "aws-native-ts-ecs", "runtime": "nodejs", "description": "A TypeScript Pulumi program with AWS Native provider that provisions an ECS Cluster"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS HostedPublicVirtualInterfaceAccepter Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Virtual Router Provider", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "aws-ts-lambda-mks", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "alb-ingress-controller", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "AWS Cognito User Pool Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Redis Cluster Mode Enabled", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Testing Glacier Vault Lock Policy", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Conditional Trigger with Crawler Condition", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "confluentcloud-ts-patch", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A Python program to deploy a serverless application on Azure", "config": {"azure-native:location": {"description": "The Azure region to deploy into", "default": "WestUS"}, "sitePath": {"description": "The path to the folder containing the website", "default": "./www"}, "appPath": {"description": "The path to the folder containing the functions to be deployed", "default": "./app"}, "indexDocument": {"description": "The file to use for top-level pages", "default": "index.html"}, "errorDocument": {"description": "The file to use for error pages", "default": "error.html"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Function Version", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "aws-python-substrate", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "deploy polkadot / kusama validator nodes"}
{"name": "app-nginx", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A pulumi stack to manage nginx deployments to kubernetes"}
{"name": "cloudguruchallenge-azure-resume", "runtime": {"name": "yaml", "options": {"compiler": "cue export"}}}
{"name": "simple-vpc", "runtime": "nodejs", "description": "Provisions a simple VPC"}
{"name": "helloworld", "runtime": "dotnet", "description": "helloworld function in .NET 5"}
{"name": "go-lambda-gateway", "runtime": "go", "description": "Basic example of an AWS lambda With API Gateway", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-2"}, "go-lambda:accountid": {"description": "The AWS account ID to use"}, "go-lambda:gateway-region": {"description": "The AWS region to deploy the AWS API Gateway to", "default": "us-east-2"}}}}
{"name": "kubernetes-py-jenkins", "description": "Jenkins deployment on Kubernetes", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "template": {"config": {"username": {"description": "Your desired username for the Jenkins instance"}, "password": {"description": "Your desired password for the Jenkins instance", "secret": true}}}}
{"name": "pulum", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal OpenStack Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Redshift Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "AWS Cloud Map Service Discovery", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "aws-native-ts-s3-folder", "runtime": "nodejs", "description": "A static website hosted on AWS S3"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Apple Push Notification Service (APNS)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Conditional Trigger with Crawler Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "automation", "description": "A minimal Kubernetes Go Pulumi program", "runtime": "go"}
{"name": "pulumi-ansible-wordpress-py", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploy an EC2 Wordpress server using Pulumi and Ansible."}
{"name": "azure-py-loadbalancer-vm", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Basic example of an Azure Load Balancer fronting an Azure VM accessible over HTTP", "template": {"config": {"location": {"description": "The Azure location to deploy to", "default": "westus"}, "username": {"description": "The username used to configure the Virtual Machine"}, "password": {"description": "The password used to configure the Virtual Machine", "secret": true}}}}
{"name": "iac-demo", "runtime": "python", "description": "A Demo for DigitalOcean"}
{"name": "asterion-wordpress", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A kubernetes pulumi program to deploy wordpress.", "stackConfigDir": "config/"}
{"name": "bug-npm-install", "runtime": "nodejs", "description": "Bug with npm install and operator - fixed"}
{"name": "pulumi-repro", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Add metrics configuration for entire S3 bucket", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Organization Based Aggregation", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "azure-go-appservice-docker", "runtime": "go", "description": "Creates Azure App Service and Deploys Docker images to it"}
{"name": "equinix-metal-py-webserver", "description": "A simple server on Equinix Metal.", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Eip Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "03-health-checker-kms", "runtime": "nodejs", "description": "A simple HTTP health checker."}
{"name": "aws-quarkus-lambda-pulumi-plain", "runtime": "java", "description": "Quarkus as Lambda provisioned with Pulumi"}
{"name": "auto-deploy-demo", "runtime": "python", "description": "A simple auto-deploy example"}
{"name": "secure-cloud-access-aws-ts", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "stack_basics", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Stack basics exercises"}
{"name": "assume-role-v2", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Demonstrate use of AWS AssumeRole Functionality"}
{"name": "database-layer", "runtime": "nodejs", "description": "Database layer for the aws-stackreference-architecture", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-west-2"}, "dbUsername": {"description": "(Required) The username to use for the database"}, "dbPassword": {"description": "(Required) The password to use for the database- stored as a secret"}, "dbName": {"description": "(Required) The name of the database to create when the DB instance is created"}, "networkingStack": {"description": "(Required) The reference to the networking stack on which the database will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Example IAM Role for EKS Fargate Profile", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "kraken-ci-aws-ecs", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Kraken CI on AWS ECS"}
{"name": "aws-eks-pulumi", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "datadog-alerts", "runtime": "nodejs", "description": "for creating and maintaining datadog alerts"}
{"name": "hello-pulumi", "runtime": "nodejs", "description": "First example with pulumi"}
{"name": "pulumi-setup-aws-iam-with-golang", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name": "module-metallb", "runtime": "nodejs", "description": "Module: MetalLB"}
{"name": "provider-aws-flavoured-credentials", "runtime": "nodejs", "description": "Provider: AWS-flavoured credentials"}
{"name": "heroku", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program. Used to create a heroku clone to provision new VMs with flexibility and deploy static websites."}
{"name": "muehlbachler-io_global-dns", "description": "muehlbachler.io: Global DNS", "runtime": {"name": "nodejs", "options": {"typescript": false}}}
{"name": "pulumi-k8s-runner", "runtime": "nodejs", "description": "A Pulumi program to deploy dusty deck Kubernetes YAML", "template": {"config": {"path": {"description": "A relative path to the Kubernetes YAML files to deploy.", "default": "."}, "glob": {"description": "A glob pattern for the Kubernetes YAML files to deploy.", "default": "*.yaml"}}}}
{"name": "azure-test", "runtime": "nodejs"}
{"name": "cluster-transforms", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Retrieve Specific Secret Version", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "refract-cms", "runtime": "nodejs", "description": "refract-cms website"}
{"name": "pulumi-challenge", "description": "Pulumi Challenge Startup-in-a-box on GCP,\nwritten in TypeScript.\n", "runtime": "nodejs"}
{"name": "sourcegraph-deploy-kubernetes-helper", "runtime": "nodejs", "description": "A small helper program to aid in creating a test cluster for https://github.com/sourcegraph/deploy-sourcegraph."}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Error Handling Configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "databricks_cluster", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"name": "webserver", "runtime": "nodejs", "description": "Basic example of an Azure web server accessible over HTTP."}
{"name": "eks-vpc", "runtime": "nodejs", "description": "Stands up VPC."}
{"name": "py-many-resources", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A benchmark to test performance of stacks with many resources"}
{"name": "time-rotating", "runtime": "nodejs", "description": "A simple example of generating a time rotating resource"}
{"name": "nginx", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program", "template": {"description": "A minimal TypeScript Pulumi program"}}
{"name": "azure-http-multi", "runtime": "nodejs", "description": "An http Azure Function App with multiple functions"}
{"name": "gcp-typescript-cloudrun", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name": "job-nodejs-1", "runtime": "nodejs", "description": "Creating a job with Pulumi"}
{"name": "learn-pulumi-aws-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "cscontainerapp", "runtime": "dotnet", "description": "A minimal Azure Native C# Pulumi program"}
{"name": "pk8syaml-guestbook-aws-elasticache", "description": "The standard Kubernetes Guestbook, provisioned using Pulumi, using AWS ElastiCache for Redis.", "runtime": "nodejs"}
{"name": "plam", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Create Cached iSCSI Volume From Snapshot", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "cicd-demo-pipeline", "runtime": "nodejs", "description": "CICD pipeline for cicd demo", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}, "github:organization": {"description": "Account name", "default": "ikovac"}, "github:repo": {"description": "Repository name", "default": "CICD-pipeline-with-pulumi"}, "github:branch": {"description": "Branch name", "default": "master"}, "github:token": {"description": "Personal access tokens to access the GitHub API", "secret": true}, "github:webhookSecret": {"description": "The shared secret for the GitHub repository webhook", "secret": true}}}}
{"name": "metabase-yaml", "runtime": "yaml", "resources": {"metabaseService": {"type": "metabase:index:Metabase"}}, "outputs": {"url": "${metabaseService.dnsName}"}}
{"name": "test-aws-1655-legacy", "runtime": "yaml", "description": "Add new tag: `thwomp: pow`\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux", "thwomp": "pow"}}}}, "res": {"type": "aws:s3:Bucket", "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "test-aws-1655-legacy", "runtime": "yaml", "description": "Add a resource specific tag: `foo: buzz`\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux"}}}}, "res": {"type": "aws:s3:Bucket", "properties": {"tags": {"fizz": "buzz"}}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "stack-advanced-topics", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Pulumi Workshop - AWS Python stack advanced topics"}
{"name": "ec2-asg-lb", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "s3", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "environment", "runtime": "nodejs", "description": "Sample environment"}
{"name": "espresso-chronicle", "runtime": "go", "description": "Espresso Chronicle"}
{"name": "policies-policy-aws-ts-webserver", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "aws-cs-eks", "runtime": "dotnet", "description": "An ASP.NET application running a simple container in a EKS Cluster"}
{"name": "aws-cs-eks", "runtime": "dotnet", "description": "An ASP.NET application running a simple container in a EKS Cluster"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getAlias Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RegexPatternSet Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RegexPatternSet Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS ClusterSnapshot C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS ClusterSnapshot C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Basic", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Basic", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Basic", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Basic", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Redirect Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Redirect Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Redirect Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "cloudrun", "runtime": "nodejs", "description": "Eventuous sample application deployment to Google Cloud Run"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS LoadBalancerCookieStickinessPolicy Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "lab-1", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "go-webserver", "runtime": "go", "description": "Basic example of an AWS web server accessible over HTTP", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "go-webserver", "runtime": "go", "description": "Basic example of an AWS web server accessible over HTTP", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "gcp-py-webserver", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Basic example of a Google Cloud web server accessible over HTTP", "template": {"config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}, "gcp:zone": {"description": "The Google Cloud zone", "default": "us-central1-a"}}}}
{"name": "gcp-py-webserver", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Basic example of a Google Cloud web server accessible over HTTP", "template": {"config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}, "gcp:zone": {"description": "The Google Cloud zone", "default": "us-central1-a"}}}}
{"name": "helloworld", "runtime": "dotnet", "description": "helloworld function in .NET 5"}
{"name": "helloworld", "runtime": "dotnet", "description": "helloworld function in .NET 5"}
{"name": "go-lambda-gateway", "runtime": "go", "description": "Basic example of an AWS lambda With API Gateway", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-2"}, "go-lambda:accountid": {"description": "The AWS account ID to use"}, "go-lambda:gateway-region": {"description": "The AWS region to deploy the AWS API Gateway to", "default": "us-east-2"}}}}
{"name": "kubernetes-py-jenkins", "description": "Jenkins deployment on Kubernetes", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "template": {"config": {"username": {"description": "Your desired username for the Jenkins instance"}, "password": {"description": "Your desired password for the Jenkins instance", "secret": true}}}}
{"name": "kubernetes-py-jenkins", "description": "Jenkins deployment on Kubernetes", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "template": {"config": {"username": {"description": "Your desired username for the Jenkins instance"}, "password": {"description": "Your desired password for the Jenkins instance", "secret": true}}}}
{"name": "pulumi-ansible-wordpress-py", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploy an EC2 Wordpress server using Pulumi and Ansible."}
{"name": "iac-demo", "runtime": "python", "description": "A Demo for DigitalOcean"}
{"name": "azure-go-appservice-docker", "runtime": "go", "description": "Creates Azure App Service and Deploys Docker images to it"}
{"name": "azure-go-appservice-docker", "runtime": "go", "description": "Creates Azure App Service and Deploys Docker images to it"}
{"name": "azure-go-appservice-docker", "runtime": "go", "description": "Creates Azure App Service and Deploys Docker images to it"}
{"name": "equinix-metal-py-webserver", "description": "A simple server on Equinix Metal.", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name": "equinix-metal-py-webserver", "description": "A simple server on Equinix Metal.", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name": "stack_basics", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Stack basics exercises"}
{"name": "database-layer", "runtime": "nodejs", "description": "Database layer for the aws-stackreference-architecture", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-west-2"}, "dbUsername": {"description": "(Required) The username to use for the database"}, "dbPassword": {"description": "(Required) The password to use for the database- stored as a secret"}, "dbName": {"description": "(Required) The name of the database to create when the DB instance is created"}, "networkingStack": {"description": "(Required) The reference to the networking stack on which the database will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)"}}}}
{"name": "database-layer", "runtime": "nodejs", "description": "Database layer for the aws-stackreference-architecture", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-west-2"}, "dbUsername": {"description": "(Required) The username to use for the database"}, "dbPassword": {"description": "(Required) The password to use for the database- stored as a secret"}, "dbName": {"description": "(Required) The name of the database to create when the DB instance is created"}, "networkingStack": {"description": "(Required) The reference to the networking stack on which the database will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)"}}}}
{"name": "s3", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "dagger-pulumi-demo-ecr", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "gcp-cs-gke", "runtime": "dotnet", "description": "A GCP C# Pulumi program with Kubernetes"}
{"name": "review", "runtime": "nodejs", "description": "Review environment for PR"}
{"name": "infrastructure", "runtime": "go", "description": "A minimal Packet.net Go Pulumi program", "main": "src/main.go"}
{"name": "pulumi-databricks", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Azure Native & Databricks Python Pulumi program"}
{"name": "example-cluster-cs", "description": "EKS cluster example", "runtime": "dotnet"}
{"name": "vpc_eks_go", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name": "loadbalancing-layer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "IaC for load balancing layer and some security group and network cleanup in ml-workflows", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-east-2"}, "network-layer-stack": {"description": "(Required) The reference to the networking stack defining the staffolding on which the project will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)", "default": "dev"}, "user-account": {"description": "(Required) The user account name you are using for Pulumi.", "default": "Brontomerus"}}}}
{"name": "localstack-ecs-test", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "gcp-mb-car", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"name": "infrastructure", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi for serverless"}
{"name": "equinix-metal-reserved-ip-block", "runtime": "dotnet", "description": "An Equinix Metal Reserved IP Block resource", "config": {"metro": {"type": "string", "default": "FR"}, "projectId": {"type": "string"}, "quantity": {"type": "integer", "default": 1}, "type": {"type": "string", "default": "public_ipv4"}}}
{"name": "s3", "description": "Create S3 Bucket", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name": "cloudflare-core", "runtime": {"name": "python", "options": {"virtualenv": "../.env"}}, "description": "Cloudflare Core Infrastructure"}
{"name": "pulumi-k8s-ts-eks", "runtime": "nodejs", "description": "Pulumi Typescript AWS EKS Cluster"}
{"name": "retrosync-signalling-server", "runtime": "nodejs", "description": "A TypeScript program to deploy a serverless application on AWS"}
{"name": "pulumi-challenge-september", "description": "A serverless app on AWS API Gateway and Lambda", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name": "aws-ebs-failure-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Grant Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "dev_account", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name": "cowweb-helidon", "runtime": "nodejs", "description": "A Kubernetes TypeScript Pulumi program for cowweb-helidon"}
{"name": "equinor-trading-plotly-dash-template", "runtime": {"name": "python", "options": {"virtualenv": ".venv"}}, "description": "A minimal Azure Native Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Fleet TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS NatGateway C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Resource Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS HaproxyLayer Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Custom Rules", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-scaleway-examples-go-server", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ReceiptRuleSet Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getZone TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getHostedZoneId Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalGateway Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getOutposts C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getDefaultKmsKey C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS TrafficMirrorSession Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS UserLoginProfile Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS GlobalTable Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnGatewayAttachment Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS LocalGatewayRoute Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Gateway C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "CloudEng.Pipelines.Infrastructure.Azure", "runtime": "dotnet", "description": "Infrastructure project for CloudEng.Pipelines project"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS IdentityPolicy TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getOutpost TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Route53 Record", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS AmiLaunchPermission C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Analyzer C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "kube-ts", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"name": "lambda-layers", "description": "Example of building Lambda Layers with Pulumi on LocalStack", "runtime": "nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS SslNegotiationPolicy Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS CatalogDatabase TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS IdentityProvider Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "command-test", "description": "A Command Test.", "runtime": "go", "backend": {"url": "file://."}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "TCP Routing", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "builder", "runtime": "go", "description": "An awesome Pulumi infrastructure-as-code Stack"}
{"name": "ecs", "description": "A minimal AWS TypeScript Pulumi program", "runtime": "nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Forward Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "HTTP Routing", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getEncryptionByDefault Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getEncryptionByDefault C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS OrganizationManagedRule C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcEndpointSubnetAssociation Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "qs-gke", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "pitoco", "runtime": "java", "description": "A minimal AWS Java Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS MainRouteTableAssociation C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "By Filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "With Schema", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-azure", "runtime": "go", "description": "A minimal Azure Go Pulumi program", "main": "cmd/pulumi"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Alias record", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ResolverRuleAssociation Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcIpv4CidrBlockAssociation C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS TrafficMirrorFilterRule TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS ConnectionAssociation Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "home-k8s-apps-ping", "runtime": "nodejs", "description": "Home K8s - Apps Ping"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Aurora MySQL 1.x (MySQL 5.6)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Application TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Conditional Trigger", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "warmup-bootstrap", "runtime": "nodejs", "description": "Bootstrap a self-syncing Pulumi Kubernetes operator"}
{"name": "inno-graph", "description": "Innovation graph", "runtime": "nodejs"}
{"name": "pulumi-serverless-combined", "description": "Serverless REST API with Lambda defined inline.", "runtime": "nodejs"}
{"name": "azureiot-typescript", "runtime": "nodejs", "description": "A minimal Azure TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Non-VPC Connection", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Standard usage", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Non-VPC Connection", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "my-eks-cluster", "runtime": "nodejs", "description": "A TypeScript program to deploy a Kubernetes cluster on AWS"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "GitHub Enterprise", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "AWS Account ID", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS PublicDnsNamespace C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "blackcandy", "runtime": "nodejs", "description": "DevOps interview"}
{"name": "stepfunctions-py", "description": "Basic example of AWS Step Functions in Python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalGatewayVirtualInterfaceGroup Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS SnapshotScheduleAssociation C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Storage Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getOrganizationalUnits Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS TransitGateway TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "diy-gcs-with-replication", "runtime": "nodejs", "description": "Creates 2 GCS buckets with Cloud Function to perform DIY replication"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Public Subdomain Zone", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Alarm Check", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Creating A New Domain", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "port-go", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"name": "antares-idl-aws", "description": "AWS Components for Antares iDL", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "config": {"antares-idl-aws:components.efs-eks": true, "antares-idl-aws:components.ecr": true, "antares-idl-aws:components.msk": true, "antares-idl-aws:components.msk-snowflake-connector": true, "antares-idl-aws:components.msk-s3-connector": true, "antares-idl-aws:config.msk.default-snowflake-kafka-connector": "https://repo1.maven.org/maven2/com/snowflake/snowflake-kafka-connector/1.8.2/snowflake-kafka-connector-1.8.2.jar", "antares-idl-aws:config.msk.default-s3-kafka-connector": "https://d1i4a15mxbxib1.cloudfront.net/api/plugins/confluentinc/kafka-connect-s3/versions/10.4.1/confluentinc-kafka-connect-s3-10.4.1.zip"}}
{"name": "pulumi-github-test", "runtime": "dotnet", "description": "A minimal GitHub C# Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS PeeringAttachment TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcAttachmentAccepter C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Aurora MySQL 2.x (MySQL 5.7)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Mixed Instances Policy", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Search By Allocation ID (VPC only)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Account Access", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Virtual Private Gateway", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-demo-go", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "pulumi-demo-ts", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS HostedPublicVirtualInterface Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Automation Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcEndpointServiceAllowedPrinciple TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-demo", "runtime": "dotnet", "description": "A minimal Azure Native C# Pulumi program"}
{"name": "neuronek", "runtime": "nodejs", "description": "\ud83e\uddec Intelligent dosage tracker application with purpose to monitor supplements, nootropics and psychoactive substances along with their long-term influence on one's mind and body.", "main": "infrastructure/", "stackConfigDir": "infrastructure/stacks"}
{"name": "do-k8s-cluster", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "react-frontend", "description": "A static react website on AWS", "runtime": "nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Subnets In Secondary VPC CIDR Blocks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "confluentcloud-basic-kafka-acls", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Example IAM Role for EKS Cluster", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Volume Gateway (Stored)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Add inventory configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "benchmark-rest-frameworks", "runtime": "nodejs", "description": "Fun project on Drag racing restful frameworks"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Step Function Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Listener Health Check", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Selecting Backups By Tag", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "S3 Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "test-aws-1655-sdkv2", "runtime": "yaml", "description": "Add first default tag: `foo: bar``\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "bar"}}}}, "res": {"type": "aws:cognito:UserPool", "properties": {"aliasAttributes": ["email"]}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "01-iam-roles", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Create and Assume Roles in AWS"}
{"name": "pulumi-azure-container-apps", "runtime": "go", "description": "A minimal Azure Native Go Pulumi program"}
{"name": "data", "runtime": "nodejs", "description": "Data layer", "config": {"aws:region": "eu-west-2"}}
{"name": "pulumi-typescript-aws-fargate", "runtime": "nodejs", "description": "Example project showing how to run Dockerized spring-boot-vuejs with Pulumi on AWS Fargate based on AWS ECS"}
{"name": "scmbreakoutpulumi", "runtime": "nodejs", "description": "azuredevcollege/trainingdays scm breakout app infrastructure with Pulumi"}
{"name": "deploy", "runtime": "nodejs", "description": "Infrastructure as code for D&D 5e REST API.", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "poltwittex", "runtime": "nodejs", "description": "The voice of people"}
{"name": "async-power-dialer", "runtime": "nodejs", "description": "Power Dialer using Twilio", "main": "src/resources"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS NetworkInterfaceSecurityGroupAttachment TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "1-cluster", "description": "A minimal Civo Pulumi YAML program", "runtime": "yaml", "resources": {"firewall": {"type": "civo:Firewall", "properties": {"region": "NYC1", "createDefaultRules": true}}, "cluster": {"type": "civo:KubernetesCluster", "properties": {"region": "NYC1", "firewallId": "${firewall.id}", "pools": {"nodeCount": 3, "size": "g4s.kube.medium"}}}}, "outputs": {"clusterName": "${cluster.name}"}}
{"name": "platform-infra-chart", "runtime": "nodejs", "description": "platform chart"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Table Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Policy on untagged image", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Index Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "serverless", "description": "Basic example of a serverless AWS application.", "runtime": "nodejs"}
{"name": "regression", "description": "Regression tests", "runtime": "nodejs"}
{"name": "example-one", "runtime": {"name": "python"}, "description": "Example of Unit Testing"}
{"name": "aws-py-s3-folder", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "dockercon-step2", "runtime": "nodejs", "description": "Step 2 of my DockerCon EU 2018 talk.", "template": {"description": "A minimal TypeScript Pulumi program"}}
{"name": "my-app", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "S3 Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Bitbucket Server Usage", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Step Function Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Example IAM Role for EKS Node Group", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "ok-site", "runtime": "nodejs", "description": "Website for the OK? programming language"}
{"name": "aks", "runtime": "nodejs", "description": "Deploy our kubernetes infrastructure"}
{"name": "aws-ansible-config-bucket", "description": "Site builder config", "runtime": "nodejs"}
{"name": "quickstart", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "go-aws-eks", "runtime": "go", "description": "AWS EKS deployment"}
{"name": "trailcatalog", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Trails and paths oh my"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Subnets In Secondary VPC CIDR Blocks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Logging Individual S3 Bucket Events", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "VPN Gateway Association", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "az-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Azure Native Python Pulumi program"}
{"name": "pulumi-test", "runtime": "nodejs", "description": "Pulumi Typescript Librodo Test"}
{"name": "aws-peered-network", "runtime": "nodejs", "description": "A peered AWS network with VPCs in the given regions"}
{"name": "gcp-go-functions-raw", "description": "A minimal Go Pulumi program using Google Cloud Functions.", "runtime": "go"}
{"name": "hls-lpdaac-orchestration", "runtime": "nodejs", "description": "A minimal AWS JavaScript Pulumi program"}
{"name": "bjerk-bot", "runtime": "nodejs", "description": "The Bjerk Bot", "config": {"pulumi:disable-default-providers": ["*"]}}
{"name": "ts", "description": "A minimal TypeScript Pulumi program", "runtime": "nodejs"}
{"name": "aws-coldstart-js", "description": "A simple Lambda to test AWS cold starts", "runtime": "nodejs"}
{"name": "docz-app-gatsby", "runtime": "nodejs", "description": "An documentation site boilerplate made with Gatsby, Docz and Mermaid.", "main": "infra/"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Aurora Read Replica Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Splunk Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Aurora Read Replica Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "bucket-website-v2", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "MagicBus.Deploy", "runtime": "dotnet", "description": "deploy magicBus to azure with pulumi"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS HostedPublicVirtualInterfaceAccepter TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "DNS Validation with Route 53", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "hlidac-shopu", "runtime": "nodejs", "description": "Hl\u00edda\u010d shop\u016f AWS infrastructure"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Active Directory Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "web-app", "runtime": "nodejs", "description": "A Lambda quick deployment project", "template": {"config": {"kubernetes:context": {"description": "On which context will it run", "default": "lambda"}, "namespace": {"description": "The k8s namespace used for every resource"}, "project": {"description": "The project name used in metadata"}, "component": {"description": "The component name used in metadata"}, "container-image": {"description": "The full image path containing the web-app setup without version"}, "registry-secret": {"description": "The credentials used to connect to the container registry", "secret": true}, "environment": {"description": "The environment of the project", "default": "dev"}, "version": {"description": "The version used for the container image", "default": "latest"}, "url": {"description": "The url used for the deployment, default: ({project}.app.lambda-it.ch)"}}}}
{"name": "simple", "runtime": "nodejs", "description": "A simple concourse example"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "With Latest Version Of Launch Template", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "access-finland", "runtime": "nodejs", "description": "Access Finland app", "config": {"aws:region": "eu-north-1", "testbed:gatewayUrl": "https://gateway.testbed.fi", "testbed:defaultDataSource": "accessfinland:development"}}
{"name": "pulumiTest", "runtime": {"name": "python"}, "description": "A minimal AWS Python Pulumi program"}
{"name": "vultr-csharp", "runtime": "dotnet", "description": "A minimal C# Pulumi program"}
{"name": "taskrouter-contact-center", "runtime": "nodejs", "description": "Skill based routing with Twilio Taskrouter"}
{"name": "kubernetes-go", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "marie", "runtime": "nodejs", "description": "Set up Hasura and PostgreSQL and populate it with a schema"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Active Directory Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "dagger-pulumi-demo-ecr", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "dagger-pulumi-demo-ecr", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "gcp-cs-gke", "runtime": "dotnet", "description": "A GCP C# Pulumi program with Kubernetes"}
{"name": "gcp-cs-gke", "runtime": "dotnet", "description": "A GCP C# Pulumi program with Kubernetes"}
{"name": "review", "runtime": "nodejs", "description": "Review environment for PR"}
{"name": "review", "runtime": "nodejs", "description": "Review environment for PR"}
{"name": "equinor-trading-plotly-dash-template", "runtime": {"name": "python", "options": {"virtualenv": ".venv"}}, "description": "A minimal Azure Native Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Fleet TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getHostedZoneId Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS SslNegotiationPolicy Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Forward Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Forward Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Forward Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "By Filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "By Filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "By Filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "By Filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "do-k8s-cluster", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "async-power-dialer", "runtime": "nodejs", "description": "Power Dialer using Twilio", "main": "src/resources"}
{"name": "platform-infra-chart", "runtime": "nodejs", "description": "platform chart"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Table Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Table Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "serverless", "description": "Basic example of a serverless AWS application.", "runtime": "nodejs"}
{"name": "serverless", "description": "Basic example of a serverless AWS application.", "runtime": "nodejs"}
{"name": "serverless", "description": "Basic example of a serverless AWS application.", "runtime": "nodejs"}
{"name": "regression", "description": "Regression tests", "runtime": "nodejs"}
{"name": "aws-py-s3-folder", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "aws-py-s3-folder", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "aws-py-s3-folder", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "dockercon-step2", "runtime": "nodejs", "description": "Step 2 of my DockerCon EU 2018 talk.", "template": {"description": "A minimal TypeScript Pulumi program"}}
{"name": "quickstart", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "quickstart", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "quickstart", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "gcp-go-functions-raw", "description": "A minimal Go Pulumi program using Google Cloud Functions.", "runtime": "go"}
{"name": "gcp-go-functions-raw", "description": "A minimal Go Pulumi program using Google Cloud Functions.", "runtime": "go"}
{"name": "ts", "description": "A minimal TypeScript Pulumi program", "runtime": "nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Aurora Read Replica Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Aurora Read Replica Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "simple", "runtime": "nodejs", "description": "A simple concourse example"}
{"name": "kubernetes-go", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "kubernetes-go", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "random", "runtime": "yaml", "resources": {"randomPassword": {"type": "random:RandomPassword", "properties": {"length": 16, "special": true, "overrideSpecial": "_%@"}}}, "outputs": {"password": "${randomPassword.result}"}}
{"name": "Reeplace_Project_Name_to_Create", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Reeplace_Description_for_the_Project_to_Create"}
{"name": "dpopp", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "node-network", "runtime": "nodejs", "description": "Kubernetes IaC for Joystream RPC and Validator nodes", "template": {"config": {"aws:profile": {"default": "joystream-user"}, "aws:region": {"default": "us-east-1"}, "isMinikube": {"description": "Whether you are deploying to minikube", "default": false}, "numberOfValidators": {"description": "Number of validators as starting nodes", "default": 2}, "networkSuffix": {"description": "Suffix to attach to the network id and name", "default": 8129}, "isLoadBalancerReady": {"description": "Whether the load balancer service is ready and has been assigned an IP", "default": false}, "nodeImage": {"description": "Docker image with tag to be used as validator and RPC nodes", "default": "joystream/node:latest"}, "encryptionKey": {"description": "Key to encrypt the 7z containing secrets with", "default": "1234"}}}}
{"name": "ol-infrastructure-concourse-application", "runtime": "python", "description": "A project to manage the resources and deployment for the Concourse CI/CD system", "backend": {"url": "s3://mitol-pulumi-state/"}}
{"name": "webserver-py", "runtime": "python", "description": "Basic example of an Azure web server accessible over HTTP."}
{"name": "eks_cluster_python", "runtime": "python", "description": "An EKS cluster"}
{"name": "codefresh-example", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"name": "web-app", "runtime": "nodejs", "description": "A Lambda quick deployment project", "template": {"config": {"kubernetes:context": {"description": "On which context will it run", "default": "lambda"}, "namespace": {"description": "The k8s namespace used for every resource"}, "project": {"description": "The project name used in metadata"}, "component": {"description": "The component name used in metadata"}, "container-image": {"description": "The full image path containing the web-app setup without version"}, "registry-secret": {"description": "The credentials used to connect to the container registry", "secret": true}, "onepassword-basic-auth": {"description": "The 1Password URL used to connect to get the 1Password Basic Auth Item"}, "environment": {"description": "The environment of the project", "default": "dev"}, "version": {"description": "The version used for the container image", "default": "latest"}, "url": {"description": "The url used for the deployment, default: ({project}.app.lambda-it.ch)"}, "certificate-common-name": {"description": "The common name (CN) used for the certificate, default: ({url})"}}}}
{"name": "template", "runtime": "nodejs", "description": "Deploy from ARM templates"}
{"name": "ss-dotnet-api", "runtime": "dotnet", "description": "A minimal Azure Native C# Pulumi program"}
{"name": "tokens", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "go-k8s-apps", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RecorderStatus Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Repository C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS ConfigurationSet C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS EmailChannel Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getContainerDefinition Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS BucketPublicAccessBlock TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalDisk TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Using object lifecycle", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS TransitVirtualInterface Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Interface Endpoint Type", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS TransitGatewayPeeringAttachmentAccepter Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Using launch specifications", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "AWS IAM Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pinterestClone", "runtime": "nodejs", "description": "Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.", "main": "pulumi/"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "With Latest Version Of Launch Template", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "cloud-native-turkiye", "description": "A minimal AWS Go Pulumi program", "runtime": "go"}
{"name": "service-koyeb", "runtime": "nodejs", "description": "A simple service on Koyeb."}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DNS Validation with Route 53", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Redis Cluster Mode Enabled", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Error Handling Configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Enable Certificate Revocation List", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "bitcoin", "runtime": "nodejs", "description": "coin stack indexer, ingestion and interface"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Configuration for Alias Name", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "A Pulumi program for Kafka on EKS", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}, "desiredCapacity": {"description": "The desired number of worker nodes", "default": 10}, "instanceType": {"description": "The type of EC2 instance for your worker nodes", "default": "t2.medium"}, "maxSize": {"description": "The max number of woker nodes", "default": 10}, "minSize": {"description": "The minimum number of worker nodes", "default": 10}, "numOfAvailZones": {"description": "The number of availability zones for the VPC", "default": 3}, "eksClusterName": {"description": "Name for the eks cluster", "default": "kafka-cluster"}, "vpcName": {"description": "Name for the vpc", "default": "kafka-vpc"}, "ownerTag": {"description": "Owner tag to be applied to all created resources. Should be your name or team name"}}}}
{"name": "kind-cluster", "runtime": "python", "description": "A kind cluster"}
{"name": "aws-js-apigateway-gatsby", "runtime": "nodejs", "description": "Using API Gateway to host a Gatsby Blog"}
{"name": "getting-started-pulumi-aws-csharp", "runtime": "dotnet", "description": "A minimal AWS C# Pulumi program"}
{"name": "WarmLambda", "description": null, "runtime": "nodejs", "template": {"description": "A minimal AWS TypeScript program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "aws-classic-py-vpc-msk-kafka-client-part2", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "hexhive-db", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "homelab-apps-kurtflix", "runtime": "go"}
{"name": "pulumi-miniflux-examples-typescript", "runtime": "nodejs", "description": "An example of using the pulumi-miniflux component."}
{"name": "lambda-at-edge", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "FunctionApp", "runtime": "dotnet", "backend": {"url": "file://~/.pulumi/project-stacks/FunctionApp"}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Microsoft Active Directory (MicrosoftAD)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "ciem-aws-iam-privesc-ec2-passrole", "runtime": "go", "description": "The scenario creates an IAM role with EC2 passrole permissions which could lead to unauthorized access. To remediate, restrict the permissions to the necessary resources only.", "cnappgoat-params": {"description": "The scenario deployed by the code creates an IAM role with EC2 and passrole permissions. The issue is that it lacks restrictions, specifically in the role policy where it allows 'ec2:RunInstances' and 'iam:PassRole' on all resources. This could potentially grant malicious users too much access. A remediation would be to enforce a stringent policy, narrowing down the resources the role has access to, thereby reducing the permissions to necessary ones only.", "friendlyName": "IAM Role With EC2 Passrole Permissions", "id": "ciem-aws-iam-privesc-ec2-passrole", "module": "ciem", "scenarioType": "native", "platform": "aws"}}
{"name": "ciem-aws-iam-user-mfa-not-enabled", "runtime": "go", "description": "This scenario creates an AWS IAM user with console access, but without Multi-Factor Authentication (MFA) enabled, posing a security risk. To remediate, modify the script to include enabling MFA while creating the user profile.", "cnappgoat-params": {"description": "This scenario creates an AWS Identity and Access Management (IAM) user without Multi-Factor Authentication (MFA) and a login profile, using Pulumi's AWS and SDK libraries. The issue with this is it does not follow security best practices as IAM users with console access should have MFA enabled for security reasons. To remedy this situation, the program should be modified to include steps for enabling MFA during or after the user creation process.", "friendlyName": "User MFA Not Enabled", "id": "ciem-aws-iam-user-mfa-not-enabled", "module": "ciem", "scenarioType": "native", "platform": "aws"}}
{"name": "cloud", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getAmiIds Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnConnectionRoute Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Table TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "image-resize", "runtime": "nodejs", "description": "resize images when a new jpeg/png file is added"}
{"name": "eks-explorer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A projet to explore eks, gitlab and pulumi stack"}
{"name": "My.Hr.Infra", "runtime": "dotnet", "description": "Infrastructure for CoreEx sample application", "template": {"config": {"azure-native:location": {"description": "The Azure region to deploy into", "default": "EastUs"}, "My.Hr.Infra:isAppsDeploymentEnabled": {"description": "Whether Application code should be deployed", "default": true}, "My.Hr.Infra:isDBSchemaDeploymentEnabled": {"description": "Whether Database schema should be deployed", "default": true}}}}
{"name": "rocketpool-cluster", "runtime": "nodejs", "description": "A GKE autopilot cluster for staking with Rocket Pool"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "JDBC Target", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "equinix-metal-device", "runtime": "go", "description": "An Equinix Metal device resource", "config": {"projectId": {"type": "string"}}}
{"name": "spring-boot-pulumi-azure", "runtime": "nodejs", "description": "A minimal Azure Native TypeScript Pulumi program"}
{"name": "webapp-customdomain", "description": "A minimal Azure Native Python Pulumi program", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Add metrics configuration with S3 bucket object filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "core-pipeline", "runtime": "nodejs", "description": "Core pipeline to deploy GCP components"}
{"name": "chadort-site", "description": "The personal website of Chad Ort.", "runtime": {"name": "nodejs", "options": {"typescript": false}}}
{"name": "lambda-containers", "runtime": "nodejs", "description": "An AWS Lambda function packaged as a Docker container"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "List all account IDs for the organization", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Create a user pool client with no SRP authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "quickstart", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name": "component-deps-multi-lang", "description": "Dependencies on multi-language Component Resources", "runtime": {"name": "python", "options": {"virtualenv": ".venv"}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ReplicationInstance Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getZone Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Key TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "python-fargate-example", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "pulumi-validating-admission-policy", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program", "config": {"scaleway:region": "fr-par", "scaleway:zone": "fr-par-1", "cluster:version": "1.27", "cluster:auto_upgrade": true, "node:node_type": "PLAY2-NANO", "node:auto_scale": false, "node:node_count": 1, "node:auto_heal": true}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Create Cached iSCSI Volume From Source Volume", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi_eks_py", "runtime": "python", "description": "Pulumi EKS Python"}
{"name": "pulumi-serverless", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "s3-op-project", "runtime": "nodejs", "description": "A simple S3 bucket to deploy"}
{"name": "sadsadas", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "tinkerbell-on-equinix-metal", "runtime": "nodejs", "description": "A minimal Equinix Metal TypeScript Pulumi program", "main": "src/index.ts"}
{"name": "infrastructure", "runtime": "nodejs", "description": "wasmcloud k8s"}
{"name": "equinix-networkedge-device-cisco-C8KV", "runtime": "python", "description": "An Equinix Network Edge virtual network device - Cisco Catalyst 8000V Router", "config": {"accountName": {"type": "string"}, "aclTemplateId": {"type": "string"}, "additionalBandwidth": {"type": "integer", "default": 5}, "devicePackageCode": {"type": "string", "default": "network-essentials"}, "deviceVersion": {"type": "string", "default": "17.06.01a"}, "licenseToken": {"type": "string"}, "metro": {"type": "string", "default": "SV"}, "sizeInCores": {"type": "integer", "default": 2}, "sshKeyName": {"type": "string"}, "sshUserName": {"type": "string"}, "termLength": {"type": "integer", "default": 6}}}
{"name": "cwpp-aws-vulnerable-container-tomcat-on-ecr", "runtime": "go", "description": "The script deploys a vulnerable Tomcat container in an ECR, posing security risks. Problems arise due to outdated security patches on the Tomcat container.", "cnappgoat-params": {"module": "cwpp", "platform": "aws", "id": "cwpp-aws-vulnerable-container-tomcat-on-ecr", "friendlyName": "Vulnerable Container Tomcat On ECR", "description": "The scenario builds an Elastic Container Repository (ECR) containing a vulnerable Tomcat version, a situation that poses security risks. The problem lies in the vulnerabilities within the Tomcat. Remedying this issue requires upgrading to a safer, newer Tomcat version and initiating a thorough security audit to find and eliminate other system weaknesses. Implementing a secure development process can help prevent potential vulnerabilities in the future.", "scenarioType": "native"}}
{"name": "monorepo-k8s-base", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Base infrastructure"}
{"name": "sentry", "description": "Manage Sentry using Pulumi", "runtime": "dotnet"}
{"name": "debug-stack", "description": "A minimal AWS TypeScript Pulumi program", "runtime": "nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Storage Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-farmer", "runtime": "dotnet", "description": "F# Pulumi program that deploys a minimal Farmer template"}
{"name": "aws-acm-import-existing-ts", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "julianjanine-grpc", "description": "A minimal AWS Go Pulumi program", "runtime": "go"}
{"name": "expapp", "runtime": "nodejs", "description": "A minimal Google Cloud JavaScript Pulumi program"}
{"name": "aws_ec2", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A simple AWS EC2 instance"}
{"name": "equinix-networkedge-device-link", "runtime": "yaml", "description": "An Equinix Network Edge virtual network device link resource", "config": {"accountName": {"type": "string"}, "accountMetro": {"type": "string"}, "device1Id": {"type": "string"}, "device2Id": {"type": "string"}}, "variables": {"accountfNum": {"fn::invoke": {"function": "equinix:networkedge:getAccount", "arguments": {"name": "${accountName}", "metroCode": "${accountMetro}"}, "return": "number"}}, "device1Metro": {"fn::invoke": {"function": "equinix:networkedge:getDevice", "arguments": {"uuid": "${device1Id}"}, "return": "metroCode"}}, "device2Metro": {"fn::invoke": {"function": "equinix:networkedge:getDevice", "arguments": {"uuid": "${device2Id}"}, "return": "metroCode"}}}, "resources": {"deviceLink": {"type": "equinix:networkedge:DeviceLink", "properties": {"name": "test-link", "subnet": "192.168.40.64/27", "devices": [{"id": "device1Id", "asn": 22111, "interfaceId": 6}, {"id": "device2Id", "asn": 22333, "interfaceId": 7}], "links": [{"accountNumber": "${accountfNum}", "srcMetroCode": "${device1Metro}", "dstMetroCode": "${device2Metro}", "throughput": "50", "throughputUnit": "Mbps"}]}}}, "outputs": {"status": "${deviceLink.status}", "devices": "${deviceLink.devices}"}}
{"name": "pulumi-azure-fluxcd-komodor", "runtime": "yaml", "description": "A minimal Azure Native Pulumi YAML program", "config": {"apiKey": {"type": "string", "secret": true}}, "variables": {"name": "komodor", "location": "westeurope", "kubeconfig": {"fn::invoke": {"function": "azure-native:containerservice/v20220301:listManagedClusterUserCredentials", "arguments": {"resourceGroupName": "${komodor-rg.name}", "resourceName": "${komodor-mc.name}"}}}}, "resources": {"komodor-rg": {"type": "azure-native:resources:ResourceGroup", "properties": {"location": "${location}", "resourceGroupName": "${name}"}}, "komodor-mc": {"type": "azure-native:containerservice/v20220301:ManagedCluster", "properties": {"kubernetesVersion": "1.25.2", "location": "${komodor-rg.location}", "resourceGroupName": "${komodor-rg.name}", "resourceName": "komodor-mc", "nodeResourceGroup": "komodor-mc-nodepool", "dnsPrefix": "${komodor-rg.name}", "networkProfile": {"networkPlugin": "azure", "networkPolicy": "calico"}, "servicePrincipalProfile": null, "identity": {"type": "SystemAssigned"}, "agentPoolProfiles": [{"name": "agentpool", "count": 3, "vmSize": "Standard_B2ms", "osType": "Linux", "osDiskSizeGB": 30, "type": "VirtualMachineScaleSets", "mode": "System"}]}}, "flux-extension": {"type": "azure-native:kubernetesconfiguration/v20220301:Extension", "properties": {"clusterName": "${komodor-mc.name}", "clusterResourceName": "managedClusters", "clusterRp": "Microsoft.ContainerService", "extensionName": "flux", "extensionType": "microsoft.flux", "resourceGroupName": "${komodor-rg.name}", "configurationSettings": {"helm-controller.enabled": "true", "source-controller.enabled": "true", "kustomize-controller.enabled": "true", "notification-controller.enabled": "false", "image-automation-controller.enabled": "false", "image-reflector-controller.enabled": "false"}, "scope": {"cluster": {"releaseNamespace": "flux-system"}}, "autoUpgradeMinorVersion": true, "releaseTrain": "Stable"}}, "flux-configuration": {"type": "azure-native:kubernetesconfiguration/v20221101:FluxConfiguration", "properties": {"clusterName": "${komodor-mc.name}", "clusterResourceName": "managedClusters", "clusterRp": "Microsoft.ContainerService", "fluxConfigurationName": "flux-configuration", "resourceGroupName": "${komodor-rg.name}", "sourceKind": "GitRepository", "namespace": "flux-system", "gitRepository": {"url": "https://github.com/dirien/pulumi-azure-flux.git", "repositoryRef": {"branch": "main"}}, "scope": "cluster", "kustomizations": {"deploy": {"path": "./clusters/azure", "prune": true}}}}, "k8s-provider": {"type": "pulumi:providers:kubernetes", "properties": {"kubeconfig": {"fn::fromBase64": "${kubeconfig.kubeconfigs[0].value}"}, "enableServerSideApply": true}}, "komodor-namespace": {"type": "kubernetes:core/v1:Namespace", "properties": {"metadata": {"name": "${name}"}}, "options": {"provider": "${k8s-provider}"}}, "komodor-apikey-secret": {"type": "kubernetes:core/v1:Secret", "properties": {"metadata": {"name": "${name}-apikey", "namespace": "${komodor-namespace.metadata.name}"}, "stringData": {"apiKey": "${apiKey}"}}, "options": {"provider": "${k8s-provider}", "dependsOn": ["${komodor-namespace}"]}}}, "outputs": {"aks-cred-command": "az aks get-credentials -g ${komodor-rg.name}  -n ${komodor-mc.name}", "kubeconfig": {"fn::secret": {"fn::fromBase64": "${kubeconfig.kubeconfigs[0].value}"}}}}
{"name": "equinix-networkedge-device-cisco-C8KV", "runtime": "nodejs", "description": "An Equinix Network Edge virtual network device - Cisco Catalyst 8000V Router", "config": {"accountName": {"type": "string"}, "aclTemplateId": {"type": "string"}, "additionalBandwidth": {"type": "integer", "default": 5}, "devicePackageCode": {"type": "string", "default": "network-essentials"}, "deviceVersion": {"type": "string", "default": "17.06.01a"}, "licenseToken": {"type": "string"}, "metro": {"type": "string", "default": "SV"}, "sizeInCores": {"type": "integer", "default": 2}, "sshKeyName": {"type": "string"}, "sshUserName": {"type": "string"}, "termLength": {"type": "integer", "default": 6}}}
{"name": "pulumi-Strongdmsvcs", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "JSON Classifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "equinix-metal-ip-attachment", "runtime": "dotnet", "description": "An Equinix Metal Ip Attachment resource to attach elastic IP subnets to devices", "config": {"deviceId": {"type": "string"}, "subnetCidr": {"type": "string", "default": "147.229.10.152/31"}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS CustomerGateway Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "ubuntu-s3", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "azure-reference-architecture", "runtime": "dotnet", "description": "Reference architecture for azure in csharp"}
{"name": "awesome-azure", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name": "quickstart", "description": "A minimal Google Cloud Go Pulumi program", "runtime": "go"}
{"name": "bot", "runtime": "nodejs", "main": "src/index.ts", "backend": {"url": "gs://pulumi-backend-ux08"}, "config": {"pulumi:disable-default-providers": ["*"]}}
{"name": "test-manager", "runtime": {"name": "python"}, "description": "Deploy EC2 Instance running Test Manager"}
{"name": "test-aws-1655-sdkv2", "runtime": "yaml", "description": "Shadow the default tag with a resource specific tag\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux"}}}}, "res": {"type": "aws:cognito:UserPool", "properties": {"aliasAttributes": ["email"], "tags": {"fizz": "buzz", "foo": "bar"}}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "aeons.dk", "runtime": "nodejs", "description": "Website for aeons.dk"}
{"name": "equinix-metal-virtual-circuit", "runtime": "dotnet", "description": "An Equinix Metal Virtual Circuit resource", "config": {"connectionId": {"type": "string"}, "projectId": {"type": "string"}, "vlanId": {"type": "string"}}}
{"name": "11-secret-manager", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getTable TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "next-openai", "runtime": "nodejs", "main": "infra", "template": {"description": "Vercel AI SDK, Next.js, and OpenAI Chat Example", "config": {"openAIKey": {"description": "OpenAI API Key (https://platform.openai.com/account/api-keys)", "requried": true, "secret": true}, "aws:region": {"description": "The AWS region to deploy into", "requried": true, "default": "us-east-1"}}}}
{"name": "nftcom", "runtime": "nodejs", "description": "NFT.com substream infra"}
{"name": "provisioning", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "home-lab", "runtime": "python", "description": "A minimal Linode Python Pulumi program"}
{"name": "SEP6", "runtime": "nodejs", "description": "SEP6 AT VIAUC A2022"}
{"name": "hackercamp", "runtime": "nodejs", "description": "Infrastructure of HackerCamp.cz"}
{"name": "infra", "description": "A minimal Google Cloud TypeScript Pulumi program", "runtime": "nodejs"}
{"name": "Infrastructure", "runtime": "go", "description": "Deploy kinesis, lambda and put data to an S3"}
{"name": "aws-apigateway-labmda-multiroute-py", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "equinix-metal-project-api-key", "runtime": "nodejs", "description": "An Equinix Metal Project API Key resource", "config": {"projectId": {"type": "string"}, "readOnly": {"type": "boolean", "default": false}}}
{"name": "mms-flex-chat", "runtime": "nodejs", "description": "Adds agent to agent outbound call and external number transfer to Twilio Flex native dialpad", "main": "src/resources"}
{"name": "pulumi-demo", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program", "main": "src/index.ts"}
{"name": "loadchecker", "runtime": "go", "description": "Generic load testing tool used for testing autoscaler"}
{"name": "grpc-test", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getRegion Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-ecs-example", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "base-builderimage-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "k8s-autoscaling-nodes", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"name": "azure-py-functions-raw", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Azure Functions created from raw deployment packages in C# (written in Python)", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}, "azure:location": {"description": "The Azure location to deploy resources to (e.g., `eastus` or `westeurope`)"}}}}
{"name": "gofunction", "description": "A minimal AWS Go Pulumi program", "runtime": "go"}
{"name": "lambda_api_gateway", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Ledger Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "Xamarin.Bookshelf.Infrastructure", "runtime": "dotnet", "description": "Tracinha's Infrastructure"}
{"name": "website", "runtime": "nodejs"}
{"name": "boris-site", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "spark_emr_serverless", "description": "Spark in AWS using EMR Serverless", "runtime": {"name": "python"}}
{"name": "pulumi-k8s-report", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "pulumi_demo", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Google Cloud Python Pulumi program"}
{"name": "pulumi-challenge", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "quickstart", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "3-namespace-init", "runtime": "nodejs", "description": "A minimal Kubernetes Pulumi YAML program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Alias C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Thing C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "after", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "kubelumi", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name": "pulumi-typescript-aws-template", "runtime": "nodejs", "description": null, "main": "./src/index.ts"}
{"name": "azure-py-appservice-docker", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Creates Azure App Service running Docker containers on Linux in Python", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}, "azure:location": {"description": "The Azure location to use", "default": "WestUS"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCluster Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getRegions Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RouteTable Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "bastion", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name": "my-ecs", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Model Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "phac-garden-cloudrun", "runtime": "nodejs", "description": "Provision Custom Domains for CloudRun"}
{"name": "project_factory", "runtime": {"name": "python"}, "description": "Pulumi GCP project factory"}
{"name": "jubilant-journey", "runtime": "yaml", "backend": {"url": "file://."}, "resources": {"password": {"type": "random:RandomPassword", "properties": {"length": 16, "special": true, "overrideSpecial": "!#$%&*()-_=+[]{}<>:?"}}, "postgres-image": {"type": "docker:RemoteImage", "properties": {"name": "postgres:15-alpine"}}, "postgres-container": {"type": "docker:Container", "properties": {"image": "${postgres-image.imageId}", "name": "postgres", "restart": "always", "wait": true, "healthcheck": {"tests": ["CMD-SHELL", "pg_isready", "-d", "postgres"], "interval": "30s", "retries": 3, "startPeriod": "0s", "timeout": "5s"}, "envs": ["POSTGRES_PASSWORD=${password.result}"], "ports": [{"internal": 5432, "external": 5432}]}}, "postgres-provider": {"type": "pulumi:providers:postgresql", "properties": {"host": "localhost", "port": 5432, "username": "postgres", "password": "${password.result}", "database": "postgres", "sslmode": "disable"}, "options": {"dependsOn": ["${postgres-container}"]}}, "my_role": {"type": "postgresql:Role", "properties": {"name": "my_role", "login": true, "password": "mypass"}, "options": {"provider": "${postgres-provider}"}}}}
{"name": "gcp", "runtime": "go", "description": "Talos on GCP"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "HTTP Header Routing", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Configuration Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Template C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Document Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getQueue Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "flux-sync", "description": "A simple nodejs example using flux-sync", "runtime": {"name": "nodejs", "options": {"nodeargs": "--loader ts-node/esm --no-warnings"}}}
{"name": "users-api", "description": "Users API Infrastructure Definitions", "runtime": "dotnet", "config": {"aws:region": "eu-north-1", "users-api:dbAdmin": "apiDbAdmin", "users-api:dbName": "usersapidb", "users-api:name": "users-api", "users-api:infraStackReferenceName": "infrastructure", "users-api:appArtifactPath": "../VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI/bin/Release/net6.0/VirtualFinland.UsersAPI.zip", "users-api:dbMigratorArtifactPath": "../VirtualFinland.UsersAPI.DatabaseMigrationRunner/bin/Release/net6.0/VirtualFinland.UsersAPI.DatabaseMigrationRunner.zip", "users-api:useRdsProxy": false, "acl:accessfinland-isEnabled": false, "acl:dataspace-isEnabled": false, "acl:dataspace-agent": "", "auth:testbed-isEnabled": true, "auth:sinuna-isEnabled": true, "auth:suomifi-isEnabled": false}}
{"name": "grafana.go", "runtime": "go", "description": "Run Grafana in Fargate"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Broker TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS EmailIdentity Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCipherText Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RateBasedRule Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getPrefixList C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ThingType Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "azure", "runtime": "go", "description": "Talos on Azure"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Non-AWS Service", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "create-role", "runtime": "dotnet", "description": "Demonstrate use of AWS AssumeRole Functionality in C#"}
{"name": "aws-classic-py-dynamodb", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "rsc-single-server", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploy a single server RSC instance."}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Repository Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Hsm Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSnapshotIds Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS JobQueue Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS RolePolicy C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnGateway Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Account Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "Phone number lib example", "runtime": "python"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getProduct Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "demo-repo.core", "runtime": "nodejs", "description": "A minimal Azure Native TypeScript Pulumi program"}
{"name": "aws-eks-alb-controller-helm-x509-selfsigned-ts", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "k8s-working-with-pods-hands-on", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "platform-api-java", "runtime": "java", "description": "A minimal Kubernetes Java Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "By Transit Gateway and Direct Connect Gateway Identifiers", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "random", "runtime": "yaml", "resources": {"randomPassword": {"type": "random:RandomPassword", "properties": {"length": 16, "special": true, "overrideSpecial": "_%@"}}}, "outputs": {"password": "${randomPassword.result}"}}
{"name": "dpopp", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Repository C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pinterestClone", "runtime": "nodejs", "description": "Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.", "main": "pulumi/"}
{"name": "pinterestClone", "runtime": "nodejs", "description": "Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.", "main": "pulumi/"}
{"name": "pinterestClone", "runtime": "nodejs", "description": "Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.", "main": "pulumi/"}
{"name": "pinterestClone", "runtime": "nodejs", "description": "Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.", "main": "pulumi/"}
{"name": "bitcoin", "runtime": "nodejs", "description": "coin stack indexer, ingestion and interface"}
{"name": "kind-cluster", "runtime": "python", "description": "A kind cluster"}
{"name": "s3-op-project", "runtime": "nodejs", "description": "A simple S3 bucket to deploy"}
{"name": "s3-op-project", "runtime": "nodejs", "description": "A simple S3 bucket to deploy"}
{"name": "s3-op-project", "runtime": "nodejs", "description": "A simple S3 bucket to deploy"}
{"name": "monorepo-k8s-base", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Base infrastructure"}
{"name": "azure-py-functions-raw", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Azure Functions created from raw deployment packages in C# (written in Python)", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}, "azure:location": {"description": "The Azure location to deploy resources to (e.g., `eastus` or `westeurope`)"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Alias C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Alias C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "azure-py-appservice-docker", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Creates Azure App Service running Docker containers on Linux in Python", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}, "azure:location": {"description": "The Azure location to use", "default": "WestUS"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCluster Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCluster Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCluster Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCluster Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RouteTable Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Model Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Configuration Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RateBasedRule Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Non-AWS Service", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "create-role", "runtime": "dotnet", "description": "Demonstrate use of AWS AssumeRole Functionality in C#"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Repository Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Account Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Account Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "azure-cs-aci", "runtime": "dotnet", "description": "Creates Azure Container Instance with a public IP"}
{"name": "ec2instance", "runtime": "nodejs", "description": "Basic example of an AWS EC2 instance", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name": "ceramic", "runtime": "nodejs", "description": "Ceramic nodes used with dpopp projects"}
{"name": "pulumi-azure-logic-apps", "runtime": "go", "description": "A minimal Azure Native Go Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal AliCloud Python Pulumi program", "config": {"alicloud:region": {"description": "The AliCloud region to deploy into", "default": "cn-beijing"}}}}
{"name": "antares-idl-snowflake", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Antares Snowflake Db deployment for MSK/Kafka ingestion", "config": {"antares-idl-snowflake:components.kafka-schema": true, "antares-idl-snowflake:components.hvr-schema": true, "antares-idl-snowflake:components.datamart-schema": true}}
{"name": "wait-for-loadbalancer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "twingate-example-ts", "runtime": "nodejs", "description": "Typescript example for twingate"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "nodejs", "template": {"description": "A minimal SakuraCloud JavaScript Pulumi program"}}
{"name": "aws-classic-py-eks-spot-mg", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "pyvms", "runtime": "python", "description": "Vms using python"}
{"name": "pulumi-k8s-scaffold--app-httpbin", "runtime": "nodejs", "description": "A base construction for pulumi k8s projects."}
{"name": "react-admin-cognito-ui", "runtime": "nodejs", "description": "AWS S3 Website"}
{"name": "content-platform-shared", "runtime": "nodejs", "description": "Shared infrastructure for the content platform"}
{"name": "browserhack-demo", "description": "Website for hosting BrowserHack, NetHack in your browser!", "runtime": "nodejs"}
{"name": "poc-pulumi-aws", "runtime": "nodejs", "description": "poc for pulmi"}
{"name": "asciigram", "runtime": "nodejs", "description": "An example of an event-driven, serverless, database-backed website and API service.", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-west-2"}}}}
{"name": "pulumi-external-dns", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name": "gitpod-pulumi-digitalocean", "description": "Pulumi configuration to setup Gitpod in DigitalOcan", "runtime": "go"}
{"name": "lambda", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "k8s-aws-apps-svcs", "description": "Deploys common EKS app services.", "runtime": "nodejs"}
{"name": "cloudfront-log-forwarder", "runtime": "nodejs", "description": "Setup for delivering Cloud Front logs from S3 to CloudWatch", "config": {"aws:region": "eu-north-1"}}
{"name": "networking", "runtime": "nodejs", "description": "Define the VPC for this project"}
{"name": "pulumi-playground", "runtime": {"name": "python"}, "description": "A pulumi project used as a playground for testing."}
{"name": "ecs-component", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getRole Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Plan Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "azure-nextgen-cs-synapse", "runtime": "dotnet", "description": "Creates Azure Synapse workspace with SQL and Spark pools"}
{"name": "js-aks-test", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Python CDKTF app that is building an Azure Resource Group with an AKS cluster as well as a container image for a web API."}
{"name": "gnosis", "runtime": "nodejs", "description": "coin stack"}
{"name": "folio", "runtime": "nodejs", "description": "FOLIO deployment"}
{"name": "ngx", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Kubernetes Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getFileSystem Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RegexMatchSet Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS NetworkAclRule Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getIpSet Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
