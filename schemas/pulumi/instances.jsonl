{"description":"A minimal Go Pulumi program","name":"volume-go","runtime":"go"}
{"description":"Features used:\n- ConfigFile and ConfigGroup resources\n- provider customization\n- namespace defaulting\n- implicit and explicit dependencies\n","variables":{},"outputs":{"resources":"${test.resources}"},"runtime":"yaml","name":"yamlv2","resources":{"ns":{"type":"kubernetes:core/v1:Namespace"},"install":{"options":{"provider":"${provider}"},"type":"kubernetes:yaml/v2:ConfigFile","properties":{"file":"./crds.yaml"}},"provider":{"properties":{"namespace":"${ns.metadata.name}"},"type":"pulumi:providers:kubernetes"},"test":{"properties":{"objs":[{"spec":{"cronSpec":"* * * * */5"},"apiVersion":"yamlv2.pulumi.com/v1","kind":"CronTab","metadata":{"name":"foo"}},{"spec":{"cronSpec":"* * * * */5"},"kind":"CronTab","metadata":{"annotations":{"config.kubernetes.io/depends-on":"yamlv2.pulumi.com/namespaces/${ns.metadata.name}/CronTab/foo"},"name":"bar"},"apiVersion":"yamlv2.pulumi.com/v1"}]},"options":{"provider":"${provider}","dependsOn":["${install}"]},"type":"kubernetes:yaml/v2:ConfigGroup"}}}
{"name":"ossstate-dotnet","runtime":"dotnet","description":"An example demonstrating the Terraform Remote State resource"}
{"description":"An examples that deploys a simple public facing Nginx server","name":"aws-ec2-sg-nginx-server-python","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":"nodejs","name":"qcon-k8s-step2","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"name":"foyle-dev","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/e78f074f-075f-46b9-a774-9a3a97e41815.zip"}}},"runtime":"go","description":"Resources for developing foyle"}
{"name": "aws-py-s3-folder", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name":"awsx-ecr-image-typescript","runtime":"nodejs"}
{"description":"EKS self managed nodegroups with AL2023 and Bottlerocket OS","name":"self-managed-ng-os","runtime":"nodejs"}
{"name": "s3-lambda-pulumi", "runtime": "nodejs", "description": "A simple example that uploads a file to an S3 bucket using a Lambda function", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"resources":{"res":{"type":"aws:appconfig:Environment","options":{"provider":"${aws-provider}"},"properties":{"name":"pf-tags-test","applicationId":"${app.id}"}},"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}},"aws-provider":{"properties":{"defaultTags":{"tags":{"thwomp":"pow"}}},"type":"pulumi:providers:aws"}},"description":"Remove foo tag (foo and thwomp)\n","runtime":"yaml","name":"test-aws-1655-pf","outputs":{"actual":"${res.tags}"}}
{"name": "provisioning", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"python","name":"py-user-assigned-identity","description":"A demonstration of specifying user assigned identities"}
{"name":"construct_component_output_values_nodejs","description":"A program that constructs remote component resources with output values.","runtime":"nodejs"}
{"name": "lab-1", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "pulumi-challenge", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"python","description":"Pulumi project for deploying the stack of services needed by the ECS","name":"ol-infrastructure-ecs-test-application"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "JSON Classifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv","toolchain":"pip"}},"name":"pulumi-external-secret-operator","description":"A minimal DigitalOcean Python Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"digitalocean-python"}}}}
{"description":"Work with Azure Storage Queue","name":"azure-queue","runtime":"nodejs"}
{"runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"description":"Basic example of creating a slackbot","name":"aws-ts-slack"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"azure-py-static-website","description":"An example of a static website hosted on Azure Blob Storage + Azure CDN."}
{"name":"bucket-py","runtime":"python","description":"Basic example of a GCP Storage Bucket (in Python!)"}
{"name": "import-api", "runtime": "nodejs", "description": "API for import"}
{"name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","runtime":"nodejs","main":"pulumi/"}
{"name":"retype_component_child","runtime":"go","description":"A program that retypes a component child with an alias."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Resource Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs","name":"pulumi-k8s-test"}
{"runtime":"go","description":"A minimal Go Pulumi program","template":{"description":"A minimal Go Pulumi program"},"name":"dockerfile-go"}
{"name":"environments_merge","description":"A simple Node.js program that uses merged environments.","runtime":"nodejs"}
{"description":"A minimal installation of the latest version of the Wordpress Helm chart","runtime":"scala","name":"kubernetes-helm-release-wordpress"}
{"description":"An example that provides the code to import an existing resource group from Azure.","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"azure-typescript"}}},"name":"azure-native-import-resource-group-typescript"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ReplicationInstance Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"An example of an ApplicationLoadBalancer with multiple listeners and a custom redirect action.","name":"awsx-elb-multi-listener-redirect-typescript"}
{"variables":{"sharedKey":{"fn::invoke":{"function":"azure-native:apimanagement:listSubscriptionSecrets","arguments":{"resourceGroupName":"${rg.name}","serviceName":"${apim.name}","sid":"master"}}}},"description":"API-related resources","name":"api","runtime":"yaml","resources":{"api":{"type":"azure-native:apimanagement:Api","properties":{"resourceGroupName":"${rg.name}","protocols":["https"],"path":"api","apiRevision":"1","displayName":"Drone Delivery API","apiVersionSetId":"${versionSet.id}","description":"Drone Delivery API","serviceName":"${apim.name}","apiVersion":"v1"}},"rg":{"type":"azure-native:resources:ResourceGroup"},"apim":{"type":"azure-native:apimanagement:ApiManagementService","properties":{"resourceGroupName":"${rg.name}","publisherEmail":"drones@contoso.com","sku":{"capacity":"0","name":"Consumption"},"publisherName":"contoso"}},"productApi":{"type":"azure-native:apimanagement:ProductApi","properties":{"serviceName":"${apim.name}","productId":"${product.name}","resourceGroupName":"${rg.name}","apiId":"${api.name}"}},"versionSet":{"properties":{"resourceGroupName":"${rg.name}","serviceName":"${apim.name}","versioningScheme":"Segment","displayName":"Drone Delivery API"},"type":"azure-native:apimanagement:ApiVersionSet"},"product":{"type":"azure-native:apimanagement:Product","properties":{"subscriptionRequired":"","resourceGroupName":"${rg.name}","displayName":"drone delivery product api","state":"published","serviceName":"${apim.name}","description":"drone delivery product api","terms":"terms for example product"}},"webConnection":{"properties":{"resourceGroupName":"${rg.name}","location":"${rg.location}","properties":{"api":{"id":"/subscriptions/0282681f-7a9e-424b-80b2-96babd57a8a1/providers/Microsoft.Web/locations/westus2/managedApis/office365"},"displayName":"office365"},"connectionName":"office365"},"type":"azure-native:web:Connection"}}}
{"name": "pulumi-typescript-aws-fargate", "runtime": "nodejs", "description": "Example project showing how to run Dockerized spring-boot-vuejs with Pulumi on AWS Fargate based on AWS ECS"}
{"name":"k8s-azure-01-infrastructure","description":"Infrastructure required for Pulumi self hosted","runtime":"nodejs"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"https://github.com/pulumi/examples/tree/master/dockerbuildcloud-ts"}}},"name":"hello-dbc-done","description":"An example that builds a Dockerfile in Docker Build Cloud.","runtime":"nodejs"}
{"template":{"description":"A minimal Pinecone C# Pulumi program"},"runtime":"dotnet","description":"${DESCRIPTION}","name":"${PROJECT}"}
{"runtime":"yaml","description":"An example that creates a new VPC and configuring availability zones.","resources":{"vpc":{"properties":{"numberOfAvailabilityZones":"4"},"type":"awsx:ec2:Vpc"}},"name":"awsx-vpc-azs-yaml","outputs":{"vpcId":"${vpc.vpcId}"}}
{"name":"${PROJECT}","runtime":"dotnet","template":{"description":"A minimal AWS VB.NET Pulumi program","config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"description":"${DESCRIPTION}"}
{"runtime":"python","description":"A program that tests Helm chart creation from a local directory","name":"helm-local"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"description":"Creates a simple ACM certificate resource","name":"aws-acm-certificate-go","runtime":"go"}
{"runtime":"dotnet","name":"storage-cs","description":"A Google Cloud C# Pulumi program to provision storage"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A minimal Scaleway JavaScript program","config":{"scaleway:project_id":{"description":"The Scaleway project ID"},"scaleway:region":{"description":"The Scaleway region to deploy into","default":"fr-par"}}}}
{"description":"${DESCRIPTION}","runtime":"python","template":{"description":"A Python program to deploy a Kubernetes cluster on AWS","config":{"minClusterSize":{"description":"Minimum size (number of nodes) of cluster","default":"3"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"vpcNetworkCidr":{"default":"10.0.0.0/16","description":"Network CIDR to use for new VPC"},"desiredClusterSize":{"description":"Desired number of nodes in the cluster","default":"3"},"eksNodeInstanceType":{"description":"Instance type to use for worker nodes","default":"t3.medium"},"maxClusterSize":{"default":"6","description":"Maximum size (number of nodes) of cluster"}}},"name":"${PROJECT}"}
{"name":"awsx-elb-multi-listener-redirect-go","runtime":"go","description":"An example of an ApplicationLoadBalancer with multiple listeners and a custom redirect action."}
{"runtime":"java","name":"aws-iam-user-group-grouppolicy-java","description":"An example that deploys an IAM user, group, and group policy on AWS.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}}}
{"name":"pulumi-python-uv","runtime":{"options":{"virtualenv":"my-venv","toolchain":"uv"},"name":"python"},"description":"A Python project that uses the uv toolchain where the pyproject.toml is in a parent folder."}
{"name":"workshop-aws-proton-base-infra","runtime":"nodejs","description":"Base infrastructure for the AWS Proton workshop demo (IAM, S3 bucket, etc.)"}
{"name":"l2-resource-asset-archive","runtime":{"options":{"virtualenv":"venv","typechecker":"mypy"},"name":"python"},"main":"subdir"}
{"name":"l1-builtin-info","runtime":"yaml"}
{"runtime":"dotnet","description":"Example of managing the secrets and permissions via services and features like KeyVault, AD Managed Identity, AD RBAC","name":"azure-cs-msi-keyvault-rbac"}
{"description":"A minimal Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"hack-pulumi-command-examples"}
{"name":"test","resources":{"default":{"type":"gcp:compute:ForwardingRule","properties":{"region":"us-central1","serviceDirectoryRegistrations":[{"service":"${sdservice.serviceId}","namespace":"${sdnamespace.namespaceId}"}],"backendService":"${backend.id}","name":"website-forwarding-rule","portRange":"80"}},"backend":{"properties":{"region":"us-central1","loadBalancingScheme":"EXTERNAL","healthChecks":"${hc.id}","name":"website-backend"},"type":"gcp:compute:RegionBackendService"},"hc":{"type":"gcp:compute:RegionHealthCheck","properties":{"tcpHealthCheck":{"port":"80"},"name":"check-website-backend","checkIntervalSec":"1","region":"us-central1","timeoutSec":"1"}},"sdnamespace":{"properties":{"location":"us-central1","namespaceId":"example-namespace"},"type":"gcp:servicedirectory:Namespace"},"sdservice":{"properties":{"namespace":"${sdnamespace.id}","serviceId":"example-service","metadata":{"region":"us-central1","stage":"prod"}},"type":"gcp:servicedirectory:Service","name":"example"}},"runtime":{"name":"yaml"}}
{"runtime":"go","name":"${PROJECT}","template":{"config":{"nodesPerZone":{"default":"1","description":"The desired number of nodes PER ZONE in the nodepool"},"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"},"gcp:project":{"description":"The Google Cloud project to deploy into"}},"description":"A Go program to deploy a Kubernetes cluster on Google Cloud"},"description":"${DESCRIPTION}"}
{"name":"test-pulumi-app","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"description":"A minimal TypeScript Pulumi program","name":"runtime_error","runtime":"nodejs"}
{"description":"An example of configuring request validators for an API Gateway instance.","name":"awsx-apigateway-validation-types-typescript","runtime":"nodejs"}
{"runtime":"dotnet","name":"awsx-elb-multi-listener-redirect-csharp","description":"An example of an ApplicationLoadBalancer with multiple listeners and a custom redirect action."}
{"description":"An example that deploys multiple load-balanced VMs in Amazon EC2.","runtime":{"name":"nodejs","options":{"typescript":""}},"name":"awsx-load-balanced-ec2-instances-javascript"}
{"name":"acm","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"description":"sbt executor test","runtime":{"name":"scala","options":{"logtostderr":"1","v":"0"}},"name":"language-plugin-test"}
{"description":"A minimal Go Pulumi program","name":"pulumi-scaleway-kapsule","runtime":"go"}
{"runtime":"go","name":"command-random-go","description":"A simple command example"}
{"description":"Serving infrastructure for ml_pipeline","runtime":"nodejs","name":"ml_pipeline-infra"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "HTTP Header Routing", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"azure-fs-aks","description":"Creates an Azure Kubernetes Service (AKS) cluster using F#","runtime":"dotnet"}
{"description":"Set up AWS services for Ving","main":"Pulumi.mjs","name":"ving","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name": "aws-ansible-config-bucket", "description": "Site builder config", "runtime": "nodejs"}
{"description":"A Python project that uses the uv toolchain where the pyproject.toml is in a parent folder.","runtime":{"name":"python","options":{"toolchain":"uv","virtualenv":"my-venv"}},"name":"pulumi-python-uv"}
{"description":"A minimal TypeScript Pulumi program","name":"fargate-service-with-firelens","runtime":"nodejs"}
{"description":"A minimal Azure Native Python Pulumi program","name":"azure_storage_account","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"template":{"config":{"isLoadBalancerReady":{"description":"Whether the load balancer service is ready and has been assigned an IP","default":""},"nodeImage":{"default":"joystream/node:latest","description":"Docker image with tag to be used as validator and RPC nodes"},"encryptionKey":{"default":"1234","description":"Key to encrypt the 7z containing secrets with"},"numberOfValidators":{"default":"2","description":"Number of validators as starting nodes"},"aws:profile":{"default":"joystream-user"},"aws:region":{"default":"us-east-1"},"networkSuffix":{"description":"Suffix to attach to the network id and name","default":"8129"},"isMinikube":{"default":"","description":"Whether you are deploying to minikube"}}},"name":"node-network","description":"Kubernetes IaC for Joystream RPC and Validator nodes","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS SpotInstanceRequest C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A program that ensures invoking 'pulumi:pulumi:getResource' returns resource refs","runtime":"go","name":"resource_refs_get_resource_go"}
{"runtime":"dotnet","name":"helm-kubernetes-part-one-csharp","config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-csharp"}}},"description":"Demo Code Part 1 of the Tutorial around Helm in Kubernetes"}
{"description":"Demonstration of API Gateway routes","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"aws-apigateway-py-routes"}
{"description":"A program that constructs remote component resources with methods.","name":"construct_component_methods_nodejs","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS ConfigurationSet C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"coin stack indexer, ingestion and interface","name":"bitcoin"}
{"name": "aws-go-slackbot", "runtime": "go", "description": "Example application for building a slack bot with Pulumi and Go"}
{"resources":{"default":{"type":"gcp:compute:ForwardingRule","properties":{"region":"us-central1","backendService":"${backend.id}","portRange":"80","name":"website-forwarding-rule","serviceDirectoryRegistrations":{"namespace":"${sdnamespace.namespaceId}","service":"${sdservice.serviceId}"}}},"sdservice":{"properties":{"metadata":{"region":"us-central1","stage":"prod"},"serviceId":"example-service","namespace":"${sdnamespace.id}"},"type":"gcp:servicedirectory:Service","name":"example"},"sdnamespace":{"type":"gcp:servicedirectory:Namespace","properties":{"location":"us-central1","namespaceId":"example-namespace"}},"backend":{"type":"gcp:compute:RegionBackendService","properties":{"name":"website-backend","healthChecks":"${hc.id}","region":"us-central1","loadBalancingScheme":"EXTERNAL"}},"hc":{"properties":{"tcpHealthCheck":{"port":"80"},"checkIntervalSec":"1","timeoutSec":"1","region":"us-central1","name":"check-website-backend"},"type":"gcp:compute:RegionHealthCheck"}},"runtime":{"name":"yaml"},"name":"test"}
{"runtime":"nodejs","description":"A program that replaces a resource with a new name and alias.","name":"aliases_adopt_into_component"}
{"name":"l1-output-map","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"deploy-cloud-functions-on-gcp-with-pulumi","description":"Example of deploying a Cloud Function on GCP with Pulumi","runtime":"python"}
{"description":"A minimal AWS Go Pulumi program","runtime":"go","name":"aws-ec2-go"}
{"runtime":"java","name":"random","description":"An example of using pulumi-random with Java"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-csharp"}}},"description":"An example that deploys a Deployment and Service for Minikube on Kubernetes.","name":"k8s-deployment-service-for-minikube-csharp","runtime":"dotnet"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal Langserve AWS Python Pulumi program","name":"aws-py-langserve"}
{"runtime":"nodejs","description":"A program that retypes a component child with an alias.","name":"aliases_retype_component_child"}
{"name":"construct_component_unknown_nodejs","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"runtime":"nodejs","description":"A program that constructs remote component resources with unknowns during preview."}
{"name": "confluentcloud-basic-kafka-acls", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "kubernetes-py-jenkins", "description": "Jenkins deployment on Kubernetes", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "template": {"config": {"username": {"description": "Your desired username for the Jenkins instance"}, "password": {"description": "Your desired password for the Jenkins instance", "secret": true}}}}
{"name":"nginx","template":{"description":"A minimal TypeScript Pulumi program"},"description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"name": "bucket-website-v2", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"description":"An example that deploys an IAM user, group, and group policy on AWS.","name":"aws-iam-user-group-grouppolicy-yaml","resources":{"devs":{"type":"aws:iam:Group","properties":{"path":"/users/","name":"devs"}},"myDeveloperPolicy":{"name":"my_developer_policy","properties":{"policy":{"fn::toJSON":{"Statement":[{"Resource":"*","Action":["ec2:Describe*"],"Effect":"Allow"}],"Version":"2012-10-17"}},"group":"${devs.name}","name":"my_developer_policy"},"type":"aws:iam:GroupPolicy"},"devTeam":{"type":"aws:iam:GroupMembership","properties":{"users":["${jane.id}","${mary.id}"],"group":"${devs.name}","name":"dev-team"}},"jane":{"type":"aws:iam:User","properties":{"name":"jane"}},"mary":{"type":"aws:iam:User","properties":{"name":"mary"}}},"runtime":"yaml"}
{"description":"defining an AWS AppSync endpoint from Pulumi in Golang","runtime":"go","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"aws-go-appsync"}
{"runtime":"nodejs","description":"A minimal TypeScript Pulumi program","name":"self_signed_cert"}
{"name":"l1-main","main":"subdir","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name":"azure-ts-cosmosapp-component","runtime":"nodejs","template":{"config":{"locations":{"default":"westus,westeurope","description":"Comma-separated list of Azure regions"},"azure:environment":{"description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)","default":"public"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}},"description":"Reusable Component to Create Globally-distributed Applications with Azure Cosmos DB"}
{"name":"azure-ts-functions","runtime":"nodejs","description":"Creates and deploys an Azure Function App"}
{"runtime":"dotnet","name":"provider-xyz-native","plugins":{"providers":[{"path":"../../bin","name":"xyz"}]}}
{"name":"l2-ref-ref","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"name": "provider-aws-flavoured-credentials", "runtime": "nodejs", "description": "Provider: AWS-flavoured credentials"}
{"name":"remote-backend-ts","description":"An example demonstrating the Terraform Remote State resource","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Lookup by DHCP Options ID", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "appservice-cs", "description": "Creates Azure App Service serving a static file", "runtime": "dotnet"}
{"name":"construct_component_unknown_py","description":"A program that constructs remote component resources with unknowns during preview.","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"runtime":"python"}
{"runtime":"nodejs","description":"A TypeScript program to deploy a VPC and EC2 instance on AWS.","name":"aws-cdk-adaptor"}
{"variables":{},"outputs":{"namespace":"${ns.metadata.name}","deployment":"${deployment.metadata.name}"},"runtime":"yaml","description":"Creates a simple deployment object using SSA and a field change.\n","resources":{"ns":{"type":"kubernetes:core/v1:Namespace","options":{"provider":"${provider}"}},"provider":{"type":"pulumi:providers:kubernetes","properties":{"enableServerSideApply":"1"}},"deployment":{"properties":{"spec":{"selector":{"matchLabels":{"app":"nginx"}},"template":{"spec":{"containers":[{"image":"nginx:1.14.1","name":"nginx"}]},"metadata":{"labels":{"app":"nginx"}}},"replicas":"1"},"metadata":{"namespace":"${ns.metadata.name}","labels":{"app":"nginx"}}},"options":{"provider":"${provider}"},"type":"kubernetes:apps/v1:Deployment"}},"name":"yamlv2"}
{"name": "ps-app", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"nativelink","runtime":"go","description":"NativeLink development cluster for rules_mojo.","org":"rules_mojo","organization":{"pulumi:tags":{"company":"rules_mojo"}},"backend":{"url":"file://~"}}
{"runtime":"nodejs","description":"Validates the interaction between config and capturing","name":"config_capture_e2e"}
{"description":"A minimal Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"macos_quickstart"}
{"runtime":"nodejs","description":"A simple application load balancer example.","name":"alb"}
{"description":"A program that constructs remote component resources with first class provider.","name":"construct_component_provider_propagation_go","runtime":"go","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]}}
{"name": "aws-ts-lambda-mks", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","name":"l1-empty"}
{"name":"keplr-chain-registry-aws-lambda","runtime":"nodejs"}
{"name":"ol-infrastructure-grafana-cloud","description":"Manage AWS resources needed by Grafana Cloud. Primarily to allow GC -> CloudWatch","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python"}
{"name":"pulumi-selfhosted-local-docker","description":"A Pulumi project for provisioning Pulumi Self-Hosted to a local Docker Engine","runtime":"nodejs"}
{"name":"l2-resource-simple","runtime":"nodejs"}
{"description":"A static website hosted on AWS S3","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"aws-js-s3-folder"}
{"name":"google-native-simple","runtime":"nodejs","description":"A simple example"}
{"name":"aws-s3websitebucket-oai-bucketpolicy-go","description":"An example that creates a website S3 bucket, a CloudFront Origin Access Identity, and a bucket policy.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"runtime":"go"}
{"name":"awsx-vpc-yaml","outputs":{"publicSubnetIds":"${vpc.publicSubnetIds}","vpcId":"${vpc.vpcId}","privateSubnetIds":"${vpc.privateSubnetIds}"},"resources":{"vpc":{"type":"awsx:ec2:Vpc"}},"runtime":"yaml","description":"An example that creates a new VPC using the default settings."}
{"description":"A program to test policy configuration.","runtime":"nodejs","name":"config"}
{"name":"acm","runtime":"yaml","resources":{"certificateValidation":{"type":"aws:acm:CertificateValidation","properties":{"certificateArn":"${certificate.arn}"}},"certificate":{"type":"aws:acm:Certificate","options":{"customTimeouts":{"create":"30m"}},"properties":{"domainName":"example.com","subjectAlternativeNames":["www.example.com"],"validationMethod":"EMAIL"}}}}
{"description":"An example of integrating an Azure SDK call to a Pulumi program.","name":"azure-ts-call-azure-sdk","runtime":"nodejs"}
{"name":"azure-py-aks-managed-identity","description":"A minimal Azure Native Pulumi Python program","runtime":"python"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Bitbucket Server Usage", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"${PROJECT}","runtime":"dotnet","description":"${DESCRIPTION}","template":{"description":"A C# program to deploy a static website on Google Cloud","config":{"path":{"description":"The path to the folder containing the website","default":"./www"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"}}}}
{"runtime":"yaml","name":"aws_iam_openIdConnectProvider_OpenIdConnectProvider_1","resources":{"default":{"properties":{"clientIdLists":["266362248691-342342xasdasdasda-apps.googleusercontent.com"],"url":"https://accounts.google.com","thumbprintLists":["cf23df2207d99a74fbe169e3eba035e633b65d94"]},"type":"aws:iam:OpenIdConnectProvider"}}}
{"name":"pulumi-python-asyncio-tasks","description":"A Python program that tests waiting for outputs and tasks.","runtime":"python"}
{"description":"${DESCRIPTION}","runtime":"dotnet","name":"${PROJECT}","template":{"description":"A C# program to deploy a web application onto a Kubernetes cluster","config":{"replicas":{"description":"The number of replicas to deploy","default":"1"},"namespace":{"default":"default","description":"The Kubernetes namespace to deploy into"}}}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l2-large-string"}
{"runtime":"go","description":"A Go Pulumi program to stand up a Fedora CoreOS (FCOS) instance on AWS","name":"fcos-pulumi-aws"}
{"name":"azure-http","description":"Work with an http Azure FunctionApp","runtime":"nodejs"}
{"runtime":"yaml","resources":{"patch-rsc-namespace":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Namespace"},"deployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${provider}"},"properties":{"metadata":{"namespace":"${patch-rsc-namespace.metadata.name}","labels":{"app":"nginx"}},"spec":{"replicas":"1","template":{"spec":{"containers":[{"image":"nginx:1.14.2","ports":[{"containerPort":"80"}],"name":"nginx"}]},"metadata":{"labels":{"app":"nginx"}}},"selector":{"matchLabels":{"app":"nginx"}}}}},"provider":{"type":"pulumi:providers:kubernetes"}},"outputs":{"nsName":"${patch-rsc-namespace.metadata.name}","depName":"${deployment.metadata.name}"},"name":"patch-resources"}
{"name":"automation_runbook","runtime":"yaml","resources":{"exampleAccount":{"properties":{"skuName":"Basic","resourceGroupName":"${example.name}","location":"${example.location}"},"type":"azure:automation:Account","name":"example"},"exampleRunBook":{"type":"azure:automation:RunBook","name":"example","properties":{"description":"This is an example runbook","automationAccountName":"${exampleAccount.name}","name":"Get-AzureVMTutorial","publishContentLink":{"uri":"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/c4935ffb69246a6058eb24f54640f53f69d3ac9f/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1"},"location":"${example.location}","logProgress":"1","runbookType":"PowerShellWorkflow","logVerbose":"1","resourceGroupName":"${example.name}"}},"example":{"properties":{"location":"West Europe"},"type":"azure:core:ResourceGroup"}}}
{"description":"An integration test showing the use of a a local plugin","runtime":"yaml","resources":{"res1":{"type":"testprovider:index:Random","properties":{"length":"10"}},"res2":{"type":"testprovider:index:Echo"}},"name":"local"}
{"runtime":"dotnet","name":"gameserviceapi","description":"A minimal AWS C# Pulumi program"}
{"runtime":"go","name":"emptygorun","description":"An empty Go Pulumi program."}
{"name":"aws-s3bucket-bucketpolicy-java","description":"An example that deploys an S3 bucket and bucket policy on AWS.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}},"runtime":"java"}
{"name":"aws-native-ecs","description":"A TypeScript Pulumi program with AWS Cloud Control provider that provisions an ECS Cluster","runtime":"nodejs"}
{"name": "channel", "runtime": "nodejs", "description": "A sample Slack Pulumi program"}
{"description":"A minimal Go Pulumi program","name":"databricks_cluster","runtime":"go"}
{"description":"Provision and maintain the infrastructure required to run the Apache Leek celery montoring application.","runtime":"python","name":"ol-infrastructure-celery-monitoring-application","backend":{"url":"s3://mitol-pulumi-state/"}}
{"description":"An example that deploys a VPC with an internet gateway, public subnet, route table, and security group, and launches an Amazon Linux EC2 instance with Nginx.","name":"aws-ec2-vpc-resources-javascript","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"name":"about","description":"An empty project","runtime":"java"}
{"runtime":"dotnet","name":"awsx-ecr-image-csharp"}
{"runtime":"nodejs","name":"LogGroup","description":"A simple example of using the `LogGroup` APIs."}
{"name":"gitops","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"hack-pulumi-command-examples","description":"A minimal Python Pulumi program"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"description":"Manage deployment of a Vault server cluster using autoscale groups and AWS KMS auto-unseal","runtime":"python","name":"ol-infrastructure-vault-server"}
{"name":"protect_resources","runtime":"nodejs","description":"A program that ensures we cannot delete protected resources."}
{"name":"index_volumeLQgNONpDdMfI","runtime":"yaml","resources":{"my-volume":{"type":"digitalocean:Volume","properties":{"description":"My DigitalOcean volume","filesystemType":"ext4","region":"nyc3","size":"5"}}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/376be1ab-ac8d-424c-8817-241263068b66.zip"}}},"description":"A minimal DigitalOcean volume setup"}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"fargate"}
{"name":"01-infrastructure-selfhosted-gke","runtime":"nodejs","description":"Infrastructure required for Pulumi self hosted"}
{"name":"no-check","runtime":"nodejs"}
{"name":"l2-explicit-provider","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"name":"test","runtime":{"name":"yaml"},"resources":{"provider":{"options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]},"properties":{"project":"${gcp:project}"},"type":"pulumi:providers:gcp"},"tested-resource":{"type":"gcp:cloudrunv2:Service","options":{"provider":"${provider}"},"properties":{"template":{"vpcAccess":{"networkInterfaces":[{"subnetwork":"default","network":"default","tags":["tag1","tag2","tag3"]}],"egress":"ALL_TRAFFIC"},"containers":[{"image":"us-docker.pkg.dev/cloudrun/container/hello"}]},"location":"us-central1","launchStage":"BETA"}}}}
{"description":"Voting app that uses containers","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"voting-app","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":"yaml","description":"","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/8b1dcb31-a243-4b1e-ad01-7b73f7dd51a6.zip"}}},"resources":{"my_project_resources":{"properties":{"project":"${my_project.id}","resources":[]},"type":"digitalocean:ProjectResources"},"my_project":{"properties":{"environment":"Development","description":"A sample DigitalOcean project created with Pulumi"},"type":"digitalocean:Project"}},"name":"index_projectresourcesCw2V4oH4GyFL"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Google Cloud Pulumi YAML program", "important": true, "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}}}, "resources": {"my-bucket": {"type": "gcp:storage:Bucket", "properties": {"location": "US"}}}, "outputs": {"bucketName": "${my-bucket.url}"}}
{"name":"vsphere-webserver","description":"asic example of an VSphere web server accessible over HTTP.","runtime":"nodejs"}
{"runtime":"nodejs","name":"explicit_provider","description":"A minimal TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Alarm Check", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"aws-eks","description":"EKS cluster example","runtime":"scala"}
{"description":"Deploys the NGINX Ingress Controller in the App Services Namespace.","runtime":"nodejs","name":"k8s-app-svcs-nginx"}
{"runtime":"go","name":"l2-ref-ref"}
{"resources":{"nginx":{"properties":{"taskDefinitionArgs":{"container":{"portMappings":[{"targetGroup":"${lb.defaultTargetGroup}","containerPort":"80"}],"image":"nginx:latest","memory":"128","cpu":"512"}},"cluster":"${cluster.arn}"},"type":"awsx:ecs:FargateService","options":{"version":"1.0.0-beta.5"}},"lb":{"options":{"version":"1.0.0-beta.5"},"type":"awsx:lb:ApplicationLoadBalancer"},"cluster":{"options":{"version":"5.16.2"},"type":"aws:ecs:Cluster"}},"outputs":{"url":"${lb.loadBalancer.dnsName}"},"runtime":"yaml","name":"awsx"}
{"runtime":"nodejs","name":"2-cs-typescript","description":"A minimal TypeScript Pulumi program"}
{"runtime":"python","name":"encrypted-bucket-object","description":"Create an S3 bucket"}
{"name":"aliases_extract_component_child","description":"A program that extracts a component child with an alias.","runtime":"python"}
{"description":"Azure Container Apps example","outputs":{"endpoint":"https://${containerapp.configuration.ingress.fqdn}"},"config":{"retentionInDays":{"type":"integer","default":"30"},"sqlAdmin":{"type":"string","default":"pulumi"}},"runtime":"yaml","resources":{"provider":{"type":"pulumi:providers:docker","properties":{"registryAuth":[{"address":"${registry.loginServer}","username":"${adminUsername}","password":"${adminPasswords[0].value}"}]}},"kubeEnv":{"type":"azure-native:web:KubeEnvironment","properties":{"appLogsConfiguration":{"logAnalyticsConfiguration":{"customerId":"${workspace.customerId}","sharedKey":"${sharedKey}"},"destination":"log-analytics"},"resourceGroupName":"${resourceGroup.name}"}},"registry":{"properties":{"resourceGroupName":"${resourceGroup.name}","adminUserEnabled":"1","sku":{"name":"Basic"}},"type":"azure-native:containerregistry:Registry"},"myImage":{"type":"docker:RegistryImage","properties":{"build":{"context":"${pulumi.cwd}/node-app"},"name":"${registry.loginServer}/node-app:v1.0.0"},"options":{"provider":"${provider}"}},"resourceGroup":{"type":"azure-native:resources:ResourceGroup"},"workspace":{"properties":{"retentionInDays":"${retentionInDays}","sku":{"name":"PerGB2018"},"resourceGroupName":"${resourceGroup.name}"},"type":"azure-native:operationalinsights:Workspace"},"containerapp":{"properties":{"kubeEnvironmentId":"${kubeEnv}","configuration":{"registries":[{"passwordSecretRef":"pwd","server":"${registry.loginServer}","username":"${adminUsername}"}],"secrets":[{"value":"${adminPasswords[0].value}","name":"pwd"}],"ingress":{"external":"1","targetPort":"80"}},"template":{"containers":[{"image":"${myImage.name}","name":"myapp"}]},"resourceGroupName":"${resourceGroup.name}"},"type":"azure-native:web:ContainerApp"}},"name":"azure-container-apps","variables":{"adminRegistryCreds":{"fn::azure-native:containerregistry:listRegistryCredentials":{"resourceGroupName":"${resourceGroup.name}","registryName":"${registry.name}"}},"sharedKey":{"fn::secret":{"fn::invoke":{"function":"azure-native:operationalinsights:getSharedKeys","return":"primarySharedKey","arguments":{"resourceGroupName":"${resourceGroup.name}","workspaceName":"${workspace.name}"}}}},"adminUsername":"${adminRegistryCreds.username}","adminPasswords":{"fn::secret":"${adminRegistryCreds.passwords}"}}}
{"name":"example-cluster","description":"EKS cluster example","runtime":"nodejs"}
{"name":"simple-go","description":"A minimal Go Pulumi program using Pulumi.Random.","runtime":"go"}
{"runtime":"scala","name":"aws-apigatewayv2-eventbridge","description":"An example that integrates API Gateway, EventBridge, and Lambda."}
{"runtime":"yaml","name":"aws-acm-certificate-yaml","resources":{"cert":{"type":"aws:acm:Certificate","properties":{"domainName":"example.com","validationMethod":"DNS"}}}}
{"runtime":"python","name":"py-nsg","description":"A Python Pulumi program that creates a network security group along with a security group rule, defined as a separate resource."}
{"name":"${PROJECT}","template":{"description":"A minimal VB.NET Pulumi program"},"runtime":"dotnet","description":"${DESCRIPTION}"}
{"description":"An example that deploys an API Gateway REST API with an AWS Lambda authorizer.","name":"awsx-apigateway-auth-lambda-typescript","runtime":"nodejs"}
{"description":"Enum outputs in TS","name":"enum_output_ts","runtime":"nodejs"}
{"template":{"config":{"osImage":{"description":"The Azure URN of the base image to use for the VM","default":"Debian:debian-11:11:latest"},"servicePort":{"description":"The HTTP service port to expose on the VM","default":"80"},"azure-native:location":{"description":"The Azure location to deploy into","default":"WestUS2"},"vmSize":{"default":"Standard_A1_v2","description":"The machine size to use for the VM"},"adminUsername":{"default":"pulumiuser","description":"The user account to create on the VM"},"vmName":{"description":"The DNS hostname prefix to use for the VM","default":"my-server"}},"description":"A Python program to deploy a virtual machine on Azure"},"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"python"}
{"description":"Trace Infrastructure as Code","resources":{"app-service":{"properties":{"metadata":{"namespace":"trace","name":"app"},"spec":{"ports":[{"port":"7403","targetPort":"7403","protocol":"TCP"}],"selector":{"app":"app"}}},"type":"kubernetes:core/v1:Service"},"space-track-job":{"type":"kubernetes:batch/v1:Job","properties":{"metadata":{"namespace":"trace","name":"space-track-feed-job"},"spec":{"template":{"spec":{"restartPolicy":"Never","containers":[{"env":[{"name":"SPACE_TRACK_IDENTITY","valueFrom":{"secretKeyRef":{"key":"space-track-email","name":"trace-space-track"}}},{"valueFrom":{"secretKeyRef":{"key":"space-track-password","name":"trace-space-track"}},"name":"SPACE_TRACK_PASSWORD"},{"value":"http://app:7403","name":"BASE_URL"}],"image":"${trace-space-track-feed}","name":"space-track"}]}},"backoffLimit":"2"}}},"envoy-deployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"spec":{"template":{"metadata":{"labels":"${envoyLabels}"},"spec":{"containers":[{"name":"envoy","ports":[{"containerPort":"7400"}],"image":"${trace-envoy}"}]}},"selector":{"matchLabels":"${envoyLabels}"},"replicas":"1"},"metadata":{"namespace":"trace","name":"envoy"}}},"app-deployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"spec":{"selector":{"matchLabels":"${appLabels}"},"template":{"metadata":{"labels":"${appLabels}"},"spec":{"containers":[{"ports":[{"containerPort":"7403"}],"name":"app","env":[{"valueFrom":{"secretKeyRef":{"key":"app-database-url","name":"database-urls"}},"name":"APP_DATABASE_URL"}],"image":"${trace-server}"}],"initContainers":[{"image":"${trace-db-migrations}","env":[{"valueFrom":{"secretKeyRef":{"key":"migrations-database-url","name":"database-urls"}},"name":"DATABASE_URL"}],"name":"server-init"}]}},"replicas":"1"},"metadata":{"namespace":"trace","name":"app"}}},"auth-service":{"properties":{"metadata":{"name":"auth","namespace":"trace"},"spec":{"ports":[{"port":"9090","protocol":"TCP","targetPort":"9090"}],"selector":{"app":"auth"}}},"type":"kubernetes:core/v1:Service"},"auth-deployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"spec":{"replicas":"1","selector":{"matchLabels":"${authLabels}"},"template":{"metadata":{"labels":"${authLabels}"},"spec":{"containers":[{"env":[{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"auth-database-url","name":"database-urls"}}},{"value":"encrypted","name":"AUTH_TYPE"},{"name":"SECURE_COOKIE","value":"true"},{"valueFrom":{"secretKeyRef":{"name":"cookie-encryption","key":"cookie-encryption-key"}},"name":"SECRET_KEY"},{"value":"/app/post_registration","name":"REDIRECT_URL"},{"name":"LOGOUT_URL","value":"https://skytrace.space"},{"name":"ENABLE_EMAIL_OTP","value":"false"},{"value":"smtp","name":"SMTP_HOST"},{"value":"1025","name":"SMTP_PORT"},{"name":"SMTP_USERNAME","value":"thisisnotused"},{"name":"SMTP_PASSWORD","value":"thisisnotused"},{"name":"SMTP_TLS_OFF","value":"true"},{"name":"RESET_DOMAIN","value":"https://skytrace.space"},{"value":"no-reply@skytrace.space","name":"RESET_FROM_EMAIL_ADDRESS"}],"image":"purtontech/barricade:1.2.5","name":"auth","ports":[{"containerPort":"9090"}]}]}}},"metadata":{"name":"auth","namespace":"trace"}}},"envoy-service":{"properties":{"spec":{"ports":[{"port":"7100","targetPort":"7400","protocol":"TCP"}],"selector":{"app":"envoy"}},"metadata":{"name":"envoy","namespace":"trace"}},"type":"kubernetes:core/v1:Service"}},"runtime":"yaml","variables":{"hash-skytrace-space-track-feed":"sha256:f48307aeac1f74b4aa502f5c45c0f4862f02411c7e40a7fd84b288a9beec85c2","version":"1.2.0","trace-server":"ghcr.io/purton-tech/skytrace:${version}@${hash-skytrace}","trace-envoy":"ghcr.io/purton-tech/skytrace-envoy:${version}@${hash-skytrace-envoy}","hash-skytrace-envoy":"sha256:57c59478f76f9e2f4c92a50179dc37918d69846522537e09a334b1fcf466545e","authLabels":{"app":"auth"},"hash-skytrace-migrations":"sha256:44e64d9244487a56b059ad8eb19bfc7f2afabccfa6171b368b6008a9222605d7","trace-space-track-feed":"ghcr.io/purton-tech/skytrace-space-track-feed:${version}@${hash-skytrace-space-track-feed}","hash-skytrace":"sha256:80d608129bda0c00ed67f2fbed724770c28496be9f285034812071e3b793f179","appLabels":{"app":"app"},"trace-db-migrations":"ghcr.io/purton-tech/skytrace-migrations:${version}@${hash-skytrace-migrations}","envoyLabels":{"app":"envoy"}},"name":"trace"}
{"name":"awsx-apigateway-auth-lambda-csharp","description":"An example that deploys an API Gateway REST API with an AWS Lambda authorizer.","runtime":"dotnet"}
{"description":"A minimal Flowise / Langchain AWS YAML Pulumi program","resources":{"langchain-service":{"type":"aws:ecs:Service","properties":{"cluster":"${langchain-ecs-cluster.arn}","schedulingStrategy":"REPLICA","tags":{"Name":"${pulumi-project}-${pulumi-stack}"},"launchType":"FARGATE","taskDefinition":"${langchain-task-definition.arn}","desiredCount":"1","serviceConnectConfiguration":{"enabled":"1","namespace":"${langchain-service-discovery-namespace.arn}"},"loadBalancers":[{"targetGroupArn":"${langchain-target-group.arn}","containerPort":"3000","containerName":"${pulumi-project}-${pulumi-stack}-service"}],"networkConfiguration":{"subnets":"${langchain-vpc.publicSubnetIds}","assignPublicIp":"1","securityGroups":["${langchain-ecs-security-group.id}"]}}},"langchain-listener":{"type":"aws:lb:Listener","properties":{"protocol":"HTTP","loadBalancerArn":"${langchain-load-balancer.arn}","port":"80","defaultActions":[{"type":"forward","targetGroupArn":"${langchain-target-group.arn}"}]}},"langchain-task-definition":{"properties":{"containerDefinitions":{"fn::toJSON":[{"secrets":[{"name":"CHROMA_SERVER_AUTH_CREDENTIALS","valueFrom":"${langchain-chroma-token-parameter.arn}"}],"essential":"1","portMappings":[{"name":"chroma","hostPort":"8000","protocol":"tcp","containerPort":"8000"}],"name":"${pulumi-project}-${pulumi-stack}-chroma","environment":[{"value":"AUTHORIZATION","name":"CHROMA_SERVER_AUTH_TOKEN_TRANSPORT_HEADER"},{"value":"chromadb.auth.token.TokenConfigServerAuthCredentialsProvider","name":"CHROMA_SERVER_AUTH_CREDENTIALS_PROVIDER"},{"name":"CHROMA_SERVER_AUTH_PROVIDER","value":"chromadb.auth.token.TokenAuthServerProvider"}],"logConfiguration":{"logDriver":"awslogs","options":{"awslogs-region":"${aws:region}","awslogs-group":"${langchain-log-group.name}","awslogs-stream-prefix":"chroma"}},"image":"chromadb/chroma:latest"},{"image":"flowiseai/flowise:1.6.4","environment":[{"name":"DATABASE_TYPE","value":"postgres"},{"name":"DATABASE_NAME","value":"${langchain-db-instance.dbName}"},{"name":"DATABASE_USER","value":"${langchain-db-instance.username}"},{"name":"DATABASE_PORT","value":{"fn::toJSON":"${langchain-db-instance.port}"}},{"name":"DATABASE_HOST","value":"${langchain-db-instance.address}"},{"name":"FLOWISE_USERNAME","value":"admin"},{"value":"true","name":"DATABASE_SSL"},{"value":"0","name":"NODE_TLS_REJECT_UNAUTHORIZED"}],"logConfiguration":{"logDriver":"awslogs","options":{"awslogs-region":"${aws:region}","awslogs-stream-prefix":"flowise","awslogs-group":"${langchain-log-group.name}"}},"name":"${pulumi-project}-${pulumi-stack}-service","portMappings":[{"containerPort":"3000","protocol":"tcp","hostPort":"3000","name":"flowise"}],"command":["/bin/sh","-c","flowise start"],"essential":"1","secrets":[{"name":"DATABASE_PASSWORD","valueFrom":"${langchain-db-password-parameter.arn}"},{"name":"FLOWISE_PASSWORD","valueFrom":"${langchain-flowise-parameter.arn}"}]}]},"networkMode":"awsvpc","taskRoleArn":"${langchain-task-role.arn}","requiresCompatibilities":["FARGATE"],"cpu":"1024","executionRoleArn":"${langchain-execution-role.arn}","memory":"8192","family":"${pulumi-project}-${pulumi-stack}"},"type":"aws:ecs:TaskDefinition"},"langchain-db-password-parameter":{"type":"aws:ssm:Parameter","properties":{"type":"SecureString","name":"/pulumi/${pulumi-project}/${pulumi-stack}/DATABASE_PASSWORD","value":"${db-password}","tags":{"pulumi-application":"${pulumi-project}","pulumi-environment":"${pulumi-stack}"},"keyId":"${langchain-key.keyId}"}},"langchain-vpc":{"type":"awsx:ec2:Vpc","properties":{"enableDnsSupport":"1","enableDnsHostnames":"1","numberOfAvailabilityZones":"2"}},"langchain-key":{"type":"aws:kms:Key","properties":{"policy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Resource":"*","Effect":"Allow","Action":["kms:Create*","kms:Describe*","kms:Enable*","kms:List*","kms:Put*","kms:Update*","kms:Revoke*","kms:Disable*","kms:Get*","kms:Delete*","kms:ScheduleKeyDeletion","kms:CancelKeyDeletion","kms:Tag*","kms:UntagResource"],"Principal":{"AWS":"arn:aws:iam::${accountId}:root"}},{"Principal":{"AWS":"arn:aws:iam::${accountId}:root"},"Resource":"*","Effect":"Allow","Action":["kms:Encrypt","kms:Decrypt","kms:ReEncrypt*","kms:GenerateDataKey*","kms:DescribeKey"]}]}},"enableKeyRotation":"1","tags":{"pulumi-application":"${pulumi-project}","pulumi-environment":"${pulumi-stack}"},"description":"Key for encrypting secrets"}},"langchain-sg":{"type":"aws:ec2:SecurityGroup","properties":{"vpcId":"${langchain-vpc.vpcId}","ingress":[{"toPort":"5432","fromPort":"5432","cidrBlocks":["0.0.0.0/0"],"protocol":"tcp"}],"egress":[{"fromPort":"0","toPort":"0","cidrBlocks":["0.0.0.0/0"],"protocol":"-1"}]}},"langchain-cluster-capacity-providers":{"type":"aws:ecs:ClusterCapacityProviders","properties":{"clusterName":"${langchain-ecs-cluster.name}","capacityProviders":["FARGATE","FARGATE_SPOT"]}},"langchain-chroma-token-parameter":{"properties":{"name":"/pulumi/${pulumi-project}/${pulumi-stack}/CHROMA_SERVER_AUTH_CREDENTIALS","type":"SecureString","value":"test-token","tags":{"pulumi-environment":"${pulumi-stack}","pulumi-application":"${pulumi-project}"},"keyId":"${langchain-key.keyId}"},"type":"aws:ssm:Parameter"},"langchain-task-role":{"type":"aws:iam:Role","properties":{"assumeRolePolicy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"ecs-tasks.amazonaws.com"}}]}},"inlinePolicies":[{"policy":{"fn::toJSON":{"Statement":[{"Action":["ssmmessages:CreateControlChannel","ssmmessages:OpenControlChannel","ssmmessages:CreateDataChannel","ssmmessages:OpenDataChannel"],"Effect":"Allow","Resource":"*"},{"Resource":"*","Effect":"Allow","Action":["logs:CreateLogStream","logs:DescribeLogGroups","logs:DescribeLogStreams","logs:PutLogEvents"]}],"Version":"2012-10-17"}},"name":"ExecuteCommand"},{"policy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Action":"iam:*","Effect":"Deny","Resource":"*"}]}},"name":"DenyIAM"}]}},"langchain-log-group":{"type":"aws:cloudwatch:LogGroup","properties":{"retentionInDays":"7"}},"langchain-execution-role":{"properties":{"managedPolicyArns":["arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"],"inlinePolicies":[{"policy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Action":["rds:*"],"Effect":"Allow","Resource":["*"]},{"Action":["ssm:GetParameters"],"Resource":["${langchain-db-password-parameter.arn}","${langchain-flowise-parameter.arn}","${langchain-chroma-token-parameter.arn}"],"Effect":"Allow","Condition":{"StringEquals":{"ssm:ResourceTag/pulumi-environment":"${pulumi-stack}","ssm:ResourceTag/pulumi-application":"${pulumi-project}"}}},{"Sid":"DecryptTaggedKMSKey","Condition":{"StringEquals":{"aws:ResourceTag/pulumi-application":"${pulumi-project}","aws:ResourceTag/pulumi-environment":"${pulumi-stack}"}},"Action":["kms:Decrypt"],"Effect":"Allow","Resource":["${langchain-key.arn}"]}]}},"name":"${pulumi-project}-${pulumi-stack}-service-secrets-policy"}],"assumeRolePolicy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Principal":{"Service":"ecs-tasks.amazonaws.com"},"Effect":"Allow","Action":"sts:AssumeRole"}]}}},"type":"aws:iam:Role"},"langchain-flowise-parameter":{"type":"aws:ssm:Parameter","properties":{"type":"SecureString","name":"/pulumi/${pulumi-project}/${pulumi-stack}/FLOWISE_PASSWORD","tags":{"pulumi-application":"${pulumi-project}","pulumi-environment":"${pulumi-stack}"},"keyId":"${langchain-key.keyId}","value":"${flowise-password}"}},"langchain-ecs-cluster":{"properties":{"tags":{"Name":"${pulumi-project}-${pulumi-stack}"},"configuration":{"executeCommandConfiguration":{"logging":"DEFAULT"}},"settings":[{"name":"containerInsights","value":"disabled"}]},"type":"aws:ecs:Cluster"},"langchain-ecs-security-group":{"properties":{"egress":[{"cidrBlocks":["0.0.0.0/0"],"toPort":"0","fromPort":"0","protocol":"-1"}],"ingress":[{"cidrBlocks":["0.0.0.0/0"],"toPort":"0","fromPort":"0","protocol":"-1"}],"vpcId":"${langchain-vpc.vpcId}"},"type":"aws:ec2:SecurityGroup"},"langchain-target-group":{"properties":{"vpcId":"${langchain-vpc.vpcId}","targetType":"ip","protocol":"HTTP","port":"80"},"type":"aws:lb:TargetGroup"},"langchain-security-group":{"properties":{"egress":[{"protocol":"-1","toPort":"0","fromPort":"0","cidrBlocks":["0.0.0.0/0"]}],"ingress":[{"fromPort":"80","toPort":"80","cidrBlocks":["0.0.0.0/0"],"protocol":"tcp"}],"vpcId":"${langchain-vpc.vpcId}"},"type":"aws:ec2:SecurityGroup"},"langchain-db-instance":{"properties":{"vpcSecurityGroupIds":["${langchain-sg.id}"],"engineVersion":"15.4","allocatedStorage":"20","password":{"fn::secret":"${db-password}"},"username":"myuser","dbSubnetGroupName":"${langchain-subnet-group.name}","multiAz":"","skipFinalSnapshot":"1","dbName":"flowise","instanceClass":"db.t3.micro","engine":"postgres","publiclyAccessible":"1"},"type":"aws:rds:Instance"},"langchain-service-discovery-namespace":{"type":"aws:servicediscovery:PrivateDnsNamespace","properties":{"vpc":"${langchain-vpc.vpcId}","name":"${pulumi-stack}.${pulumi-project}.local"}},"langchain-subnet-group":{"type":"aws:rds:SubnetGroup","properties":{"subnetIds":"${langchain-vpc.publicSubnetIds}"}},"langchain-load-balancer":{"type":"aws:lb:LoadBalancer","properties":{"loadBalancerType":"application","subnets":"${langchain-vpc.publicSubnetIds}","securityGroups":["${langchain-security-group.id}"]}}},"runtime":"yaml","outputs":{"url":"http://${langchain-load-balancer.dnsName}"},"variables":{"accountId":"${current.accountId}","current":{"fn::invoke":{"function":"aws:getCallerIdentity","arguments":{}}},"pulumi-project":"${pulumi.project}","pulumi-stack":"${pulumi.stack}"},"name":"aws-yaml-langchain"}
{"runtime":"dotnet","description":"Nginx Docker image","name":"nginx-cs"}
{"name":"aurora_major_version_upgrade","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"description":"A CloudCompiled App","runtime":"nodejs","name":"my-first-app"}
{"name":"docker-py-multi-container-app","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"Example python app using multiple docker containers"}
{"description":"Test capturing secrets in callback functions.","runtime":"nodejs","name":"secretcapture"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Creating A New Domain", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"ec2-asg-lb","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":"scala","description":"Basic example of an AWS web server accessible over HTTP","name":"aws-webserver","template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}}}
{"runtime":"nodejs","name":"selfhosted-10-cluster-services","description":"Base K8s services for the eks self-hosted cluster."}
{"name":"ol-infrastructure-ocw-studio-application","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","description":"Pulumi project to manage the infrastructure resources needed by the OCW Studio application"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l2-failed-create-continue-on-error"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-invoke-secrets"}
{"resources":{"alb":{"type":"awsx:lb:ApplicationLoadBalancer","properties":{"subnetIds":"${vpc.publicSubnetIds}","listener":{"port":"80"}}},"vpc":{"type":"awsx:ec2:Vpc"}},"runtime":"yaml","description":"An example that deploys an ApplicationLoadBalancer in a VPC.","outputs":{"endpoint":"${alb.loadBalancer.dnsName}"},"name":"awsx-elb-vpc-yaml"}
{"name":"l1-empty-bad-name","runtime":"mock"}
{"name":"construct_component_failures_nodejs","runtime":"nodejs","description":"A program that constructs remote component resources with a constructor that returns an error."}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getEncryptionByDefault C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"resources":{"exampleLoadBalancer":{"type":"azure:lb:LoadBalancer","properties":{"sku":"basic","resourceGroupName":"${exampleResourceGroup.name}","location":"${exampleResourceGroup.location}","frontendIpConfigurations":[{"name":"PublicIPAddress","publicIpAddressId":"${examplePublicIp.id}"}]}},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}},"examplePublicIp":{"type":"azure:network:PublicIp","properties":{"location":"${exampleResourceGroup.location}","allocationMethod":"Static","resourceGroupName":"${exampleResourceGroup.name}"}}},"runtime":"yaml","name":"loadbalancer"}
{"description":"An example that provides the code to import an existing resource group from Azure.","name":"azure-native-import-resource-group-yaml","resources":{"importedResourceGroup":{"type":"azure-native:resources:ResourceGroup","options":{"import":"${importPath}"},"properties":{"location":"eastus"}}},"variables":{"resourceGroupName":"pulumi-tutorials","importPath":"/subscriptions/${clientConfig.subscriptionId}/resourceGroups/${resourceGroupName}","clientConfig":{"fn::invoke":{"function":"azure-native:authorization:getClientConfig"}}},"runtime":"yaml"}
{"runtime":"dotnet","name":"azure-dotnet5","description":"An example of deploying web apps to App Service and AKS with C# 9 and .NET 5"}
{"runtime":"go","name":"run-plugin-test","description":"A minimal Go Pulumi program"}
{"name": "pulumi-databricks", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Azure Native & Databricks Python Pulumi program"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"l2-invoke-dependencies"}
{"name":"awsx-vpc-fargate-service-python","runtime":"python"}
{"name":"updateprogram","runtime":"yaml","resources":{"randomNumber":{"type":"muxedrandom:RandomInteger","properties":{"max":"2","min":"2"}},"set":{"properties":{"statedir":"state","requiredInputString":"input1","setOptionals":["${r.requiredInputStringCopy}","a","b"]},"type":"testbridge:index/testres:Testres"},"r":{"properties":{"statedir":"state","optionalInputString":"input2","requiredInputString":"input1"},"type":"testbridge:index/testres:Testres"},"pseudoRandomNumber":{"type":"muxedrandom:RandomHumanNumber"}},"outputs":{"testRequiredString__actual":"${r.requiredInputStringCopy}","testOptionalString__expect":"input2","pseudoRandomNumber__actual":"${pseudoRandomNumber.number}","pseudoRandomNumberUpdated__expect":"","testOptionalString__actual":"${r.optionalInputStringCopy}","testSetOptionals__expect":["a","b","${r.requiredInputStringCopy}"],"pseudoRandomNumber__expect":"4","randomNumber__actual":"${randomNumber.result}","pseudoRandomNumberUpdated__actual":"${pseudoRandomNumber.suggestionUpdated}","pseudoRandomNumberFair__actual":"${pseudoRandomNumber.fair}","testRequiredString__expect":"input1","randomNumber__expect":"2","testSetOptionals__actual":"${set.setOptionals}","pseudoRandomNumberFair__expect":"1"}}
{"runtime":"go","description":"${DESCRIPTION}","name":"${PROJECT}","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"vpcNetworkCidr":{"default":"10.0.0.0/16","description":"The network CIDR to use for the VPC"},"instanceType":{"default":"t3.micro","description":"The Amazon EC2 instance type"}},"description":"A Go program to deploy a virtual machine on Amazon EC2"}}
{"description":"Repro https://github.com/pulumi/pulumi-gcp/issues/1036","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"regress-1036"}
{"name":"l2-resource-primitives","runtime":"yaml"}
{"runtime":"dotnet","template":{"description":"A minimal Google Cloud C# Pulumi program","config":{"google-native:project":{"description":"The Google Cloud project to deploy into"}}},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that deploys a Lambda function and container task to extract a video thumbnail.","name":"aws-lambda-container-thumbnailer-javascript"}
{"template":{"config":{"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"sitePath":{"description":"The path to the folder containing the website","default":"./www"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"appPath":{"description":"The path to the folder containing the functions to be deployed","default":"./app"}},"description":"A Python program to deploy a serverless application on Google Cloud"},"runtime":"python","description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name":"cluster-addons","description":"EKS managed addons","runtime":"nodejs"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}},"name":"l2-provider-grpc-config"}
{"description":"An example that deploys an EC2 instance using a VPC and security group with Crosswalk for AWS.","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"awsx-vpc-sg-ec2-python"}
{"description":"A minimal Kubernetes Python Pulumi program","name":"helm-traefik-python","runtime":"python"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal Google Cloud Python Pulumi program","name":"gcp-oidc"}
{"resources":{"res":{"properties":{"tags":{"that":{"fn::secret":"mysecret"}}},"type":"aws:s3:BucketV2"}},"name":"test-aws-2778-bucket-with-secret-tugs","runtime":"yaml"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"eks_helm_argo","description":"A minimal AWS Python Pulumi program"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A minimal AWS Python Pulumi program to reproduce regression 3905","name":"regress-3905"}
{"variables":{"subnetIds":{"fn::invoke":{"arguments":{"filters":[{"values":["${vpcId}"],"name":"vpc-id"}]},"Return":"ids","function":"aws:ec2:getSubnets"}},"vpcId":{"fn::invoke":{"arguments":{"default":"1"},"function":"aws:ec2:getVpc","Return":"id"}}},"description":"An EKS cluster","resources":{"cluster":{"type":"eks:Cluster","properties":{"minSize":"1","subnetIds":"${subnetIds}","desiredCapacity":"2","authenticationMode":"API_AND_CONFIG_MAP","maxSize":"2","vpcId":"${vpcId}"}}},"runtime":"yaml","outputs":{"kubeconfig":"${cluster.kubeconfig}"},"name":"aws-eks"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-provider-grpc-config-secret"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/3c807467-356e-4a87-978f-1d1ba9faaf76.zip"}}},"name":"index_networkqrPBRqInZGfG","description":"A minimal Pulumi program to create a network on Hetzner Cloud (hcloud)","resources":{"my_network":{"properties":{"ipRange":"10.0.0.0/16"},"type":"hcloud:index/network:Network"}},"runtime":"yaml"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal Azure Native C# Pulumi program", "important": true, "config": {"azure-native:location": {"description": "The Azure location to use", "default": "WestUS2"}}}}
{"name":"shesha-#{role}#-#{env}#","variables":{"adminUsername":null,"containerAppName":null,"adminPasswords":null,"resourceGroupName":"containerapps-shesha-#{role}#-#{env}#-rg","containerAppEnvName":"shesha-#{role}#-#{env}#-env","containerAppRevisionImage":"boxfusionregistry.azurecr.io/shesha-adminportal-rev1-images:latest","containerAppCustomerDomainName":null,"registryLoginServer":null,"certificateId":"/subscriptions/0e111515-3d91-4650-bd92-dfca52077d62/resourceGroups/containerapps-shesha-#{role}#-#{env}#-rg/providers/Microsoft.App/managedEnvironments/shesha-#{role}#-#{env}#-env/certificates/shesha.dev"},"config":{"sqlAdmin":{"default":"pulumi","type":"string"}},"description":"Shesha","outputs":{"resourceGroupName":"${resourceGroupName}","containerAppCustomerDomainName":"${containerAppCustomerDomainName}","certificateId":"${certificateId}","containerAppEnvName":"${containerAppEnvName}","containerAppRevisionImage":"${containerAppRevisionImage}"},"runtime":"yaml","resources":{"containerApp":{"properties":{"location":"southafricanorth","tags":{"shesha":null},"configuration":{"ingress":{"transport":"auto","targetPort":"80","traffic":[{"weight":"100","label":"firstrevision-01","latestRevision":"1"}],"customDomains":[{"name":"${containerAppCustomerDomainName}","bindingType":"SniEnabled","certificateId":"${certificateId}"}],"external":"1"},"registries":[{"username":"${adminUsername}","server":"${registryLoginServer}","passwordSecretRef":"pwd"}],"secrets":[{"value":"${adminPasswords}","name":"pwd"}]},"resourceGroupName":"${resourceGroupName}","containerAppName":"${containerAppName}","template":{"containers":[{"env":[{"value":"https://#{projectName}#-api-#{env}#.shesha.dev","name":"BACKEND_URL"}],"resources":{"cpu":"1.0","memory":"2Gi"},"name":null,"image":"${containerAppRevisionImage}"}],"scale":{"rules":[{"name":"httpscalingrule","custom":{"metadata":{"concurrentRequests":"250"},"type":"http"}}],"maxReplicas":"5","minReplicas":"0"}},"managedEnvironmentId":"/subscriptions/0e111515-3d91-4650-bd92-dfca52077d62/resourceGroups/containerapps-shesha-#{role}#-#{env}#-rg/providers/Microsoft.App/managedEnvironments/shesha-#{role}#-#{env}#-env"},"type":"azure-native:app:ContainerApp"}}}
{"description":"A minimal Azure Native C# Pulumi program","name":"existing_resource_group","runtime":"dotnet"}
{"runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-ecr","description":"Manage AWS ECR repositories for use with Open Learning services"}
{"description":"Demo Code Part 1 of the Tutorial around Helm in Kubernetes","config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-typescript"}}},"name":"helm-kubernetes-part-one-typescript","runtime":{"name":"nodejs","options":{"packagemanager":"npm"}}}
{"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"name":"k8s-better-together-workload-helm","description":"A minimal TypeScript Pulumi program"}
{"outputs":{"randomString":"${randomString.result}","keepersArrayCombined":"${keepersArrayCombined}","lowerCaseSettings":"${lowerCaseSettings}"},"resources":{"randomString":{"properties":{"length":"${stringLength}","lower":"${lowerCaseSettings.uselower}","minLower":"${lowerCaseSettings.minLower}","keepers":"${keepersArrayCombined}"},"type":"random:RandomString"},"calculateMinLower":{"properties":{"create":"if ${useLowerCase}; then echo \"${stringLength} / 4\" | bc; else echo 0; fi"},"type":"command:local:Command"}},"config":{"length":{"default":"16","type":"integer"},"configKeepersArray":{"type":"array","items":{"type":"string"},"default":["configKey1:configValue1","configKey2:configValue2"]},"useLowerCase":{"type":"boolean","default":"1"}},"description":"A Pulumi YAML program that demonstrates how to do math and manipulate objects in YAML.","variables":{"keepersArrayPart1":{"fn::invoke":{"function":"std:map","return":"result","arguments":{"args":{"fn::invoke":{"function":"std:split","return":"result","arguments":{"separator":":","text":{"fn::invoke":{"arguments":{"separator":":","input":"${configKeepersArray}"},"function":"std:join","return":"result"}}}}}}}},"lowerCaseSettings":{"minLower":{"fn::invoke":{"arguments":{"input":"${calculateMinLower.stdout}"},"return":"result","function":"std:parseint"}},"uselower":"${useLowerCase}"},"keepersArrayCombined":{"fn::invoke":{"function":"std:merge","return":"result","arguments":{"input":["${keepersArrayPart1}","${keepersArrayPart2}"]}}},"keepersArrayPart2":{"part2bKey":"part2bValue","part2aKey":"part2aValue"},"stringLength":"${length}"},"runtime":"yaml","name":"yaml-math-and-objects"}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}},"description":"Examples of using Lambda + EFS","runtime":"nodejs","name":"aws-ts-lambda-efs"}
{"name":"dockerfile-build-on-preview","resources":{"previewImage":{"properties":{"imageName":"docker.io/pulumibot/build-on-preview:yaml","skipPush":"1","buildOnPreview":"1"},"type":"docker:Image"}},"outputs":{"repoDigest":"${previewImage.repoDigest}"},"runtime":"yaml"}
{"runtime":"python","name":"azure-storage-account-python","description":"Create a storage account with Python in Azure"}
{"runtime":"dotnet","name":"guestbook_dotnet","description":"A full .NET Kubernetes Guestbook example program."}
{"name": "blackcandy", "runtime": "nodejs", "description": "DevOps interview"}
{"description":"A minimal Kubernetes TypeScript Pulumi program","name":"pulumi-k8s-test","runtime":"nodejs"}
{"name":"azure-native-static-website-go","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-go"}}},"description":"An example that deploys all of the resources for a static website on Azure.","runtime":"go"}
{"name":"l1-output-number","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"runtime":"go","name":"${PROJECT}","template":{"config":{"cpu":{"description":"The number of CPU cores to allocate on the container","default":"1"},"memory":{"default":"2","description":"The amount of memory, in GB, to allocate on the container"},"containerPort":{"default":"80","description":"The port to expose on the container"},"azure-native:location":{"default":"WestUS","description":"The Azure region to deploy into"},"appPath":{"description":"The path to the container application to deploy","default":"app"}},"description":"A Go program to deploy a containerized service on Azure"},"description":"${DESCRIPTION}"}
{"name": "website", "runtime": "nodejs"}
{"runtime":"dotnet","description":"A minimal Azure C# Pulumi program","name":"cs-simple"}
{"runtime":"dotnet","name":"PFETest","description":"Pulumi.FSharp.Extensions test project"}
{"runtime":"yaml","outputs":{"imageName":"${demo-image.imageName}","out-dockerfile":"${demo-image.dockerfile}"},"resources":{"demo-image":{"properties":{"skipPush":"1","imageName":"pulumibot/ignore-image:tag3","build":{"dockerfile":"Mockerfile","context":"."}},"type":"docker:Image","options":{"version":"v4.0.0"}}},"name":"dockerfile-default"}
{"resources":{"api":{"type":"aws-apigateway:RestAPI","properties":{"routes":[{"localPath":"www","path":"/"},{"eventHandler":"${fn}","method":"GET","path":"/date"}]}},"fn":{"type":"aws:lambda:Function","properties":{"runtime":"python3.9","code":{"fn::fileArchive":"./function"},"handler":"handler.handler","role":"${role.arn}"}},"role":{"properties":{"assumeRolePolicy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Principal":{"Service":"lambda.amazonaws.com"},"Action":"sts:AssumeRole","Effect":"Allow"}]}},"managedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]},"type":"aws:iam:Role"}},"name":"${PROJECT}","outputs":{"url":"${api.url}"},"runtime":"yaml","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}},"description":"A Pulumi YAML program to deploy a serverless application on AWS"},"description":"${DESCRIPTION}"}
{"runtime":"dotnet","description":"Creates Azure App Service and Deploys Docker images to it","name":"azure-cs-appservice-docker"}
{"name":"gcp-provider-sample-project","runtime":"java","description":"A sample Pulumi Kotlin Google Cloud program utilizing the provider resource"}
{"name": "monitoring", "runtime": "go", "description": "o11y infrastructure"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "CloudFront Origin", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"intro"}
{"description":"http4k deployments on aws","name":"http4k-examples","runtime":"nodejs"}
{"outputs":{"actual":"${res.tags}"},"description":"Change tag `foo` value to `quux`\n","runtime":"yaml","resources":{"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}},"res":{"options":{"provider":"${aws-provider}"},"type":"aws:appconfig:Environment","properties":{"applicationId":"${app.id}","name":"pf-tags-test"}},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux"}}},"type":"pulumi:providers:aws"}},"name":"test-aws-1655-pf"}
{"runtime":"dotnet","description":"Demonstrate use of AWS AssumeRole Functionality in C#","name":"aws-cs-assume-role"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS NatGateway C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "ciem-aws-iam-privesc-ec2-passrole", "runtime": "go", "description": "The scenario creates an IAM role with EC2 passrole permissions which could lead to unauthorized access. To remediate, restrict the permissions to the necessary resources only.", "cnappgoat-params": {"description": "The scenario deployed by the code creates an IAM role with EC2 and passrole permissions. The issue is that it lacks restrictions, specifically in the role policy where it allows 'ec2:RunInstances' and 'iam:PassRole' on all resources. This could potentially grant malicious users too much access. A remediation would be to enforce a stringent policy, narrowing down the resources the role has access to, thereby reducing the permissions to necessary ones only.", "friendlyName": "IAM Role With EC2 Passrole Permissions", "id": "ciem-aws-iam-privesc-ec2-passrole", "module": "ciem", "scenarioType": "native", "platform": "aws"}}
{"name": "regression", "description": "Regression tests", "runtime": "nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS MemberAccountAssociation Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"serverlessfunctions","runtime":"nodejs","description":"Basic example of a serverless AWS application."}
{"name":"construct_component_nodejs_error_apply","description":"A program that constructs remote component resources.","runtime":"nodejs"}
{"runtime":{"name":"python","options":{"toolchain":"pip","virtualenv":".venv"}},"name":"dynamic-provider-pip"}
{"name":"deploy-a","runtime":{"name":"nodejs","options":{"packagemanager":"npm"}},"description":"A minimal TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}}}
{"name": "aws-quarkus-lambda-pulumi-plain", "runtime": "java", "description": "Quarkus as Lambda provisioned with Pulumi"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Virtual Router Provider", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"azure-go-appservice-docker","description":"Creates Azure App Service and Deploys Docker images to it","runtime":"go"}
{"runtime":"dotnet","description":"Provision a DigitalOcean Kubernetes cluster and deploy to it","name":"digitalocean-cs-k8s"}
{"name": "gitpod-pulumi-digitalocean", "description": "Pulumi configuration to setup Gitpod in DigitalOcan", "runtime": "go"}
{"description":"An example that deploys S3 bucket, metric, notification, object, and policy resources.","runtime":"nodejs","name":"aws-s3-bucket-resources-typescript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"description":"Basic example of a creating an AWS Lambda function using a container","name":"lambda-container-image","runtime":"nodejs"}
{"main":"pulumi/","runtime":"nodejs","name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application."}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Table TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "aws-coldstart-js", "description": "A simple Lambda to test AWS cold starts", "runtime": "nodejs"}
{"description":"jar executor test","name":"language-plugin-test","runtime":{"options":{"v":"5","binary":"app.jar","logtostderr":"1"},"name":"scala"}}
{"description":"Test kustomize support","runtime":"nodejs","name":"kustomize"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"bigtable-py-test","description":"Test bigtable instance support"}
{"runtime":"nodejs","name":"lambda-vpc-ts","description":"A minimal AWS TypeScript Pulumi program"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-bootcamps-ecommerce-application","runtime":"python","description":"Pulumi project to manage the infrastructure resources needed by the bootcamps ecommerce application"}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"runtime":"yaml","resources":{"cluster":{"type":"eks:Cluster","properties":{"privateSubnetIds":"${vpc.privateSubnetIds}","maxSize":"${maxClusterSize}","minSize":"${minClusterSize}","nodeAssociatePublicIpAddress":"","publicSubnetIds":"${vpc.publicSubnetIds}","desiredCapacity":"${desiredClusterSize}","instanceType":"${eksNodeInstanceType}","vpcId":"${vpc.vpcId}"}},"vpc":{"type":"awsx:ec2:Vpc","properties":{"enableDnsHostnames":"1","cidrBlock":"${vpcNetworkCidr}"}}},"description":"A Pulumi YAML program to stand up a Kubernetes cluster on AWS","outputs":{"vpcId":"${vpc.vpcId}","kubeconfig":"${cluster.kubeconfig}"},"configuration":{"vpcNetworkCidr":{"type":"String","default":"10.0.0.0/16"},"maxClusterSize":{"type":"Number","default":"6"},"minClusterSize":{"type":"Number","default":"3"},"desiredClusterSize":{"type":"Number","default":"3"},"eksNodeInstanceType":{"type":"String","default":"t2.medium"}},"name":"k8s-aws-yaml"}
{"name":"ec2_providers_loop","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal AWS Python Pulumi program"}
{"name":"infra","runtime":"dotnet","description":"A minimal C# Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS TransitGatewayPeeringAttachmentAccepter Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"refactor-workshop-ws","description":"A minimal Azure Native Python Pulumi program"}
{"stackConfigDir":"./pulumi/stacks","name":"kargo","runtime":{"name":"python","options":{"virtualenv":"venv"}},"config":{"kubevirt":{"value":{"version":"1.3.1","enabled":"1"}},"hostpath_provisioner":{"value":{"default_storage_class":"1","enabled":"1","version":"0.20.0"}},"cert_manager":{"value":{"version":"1.15.3","enabled":"1"}},"pulumi:tags":{"value":{"pulumi:template":"ccio-kargo-python"}},"vm":{"value":{"ssh_password":"kc2","ssh_user":"kc2","namespace":"default","node_port":"30590","instance_name":"ubuntu","image_name":"docker.io/containercraft/ubuntu:22.04","enabled":""}},"multus":{"value":{"enabled":"1"}},"cilium":{"value":{"enabled":""}},"cdi":{"value":{"version":"1.60.2","enabled":"1"}},"kubernetes":{"value":{"kubeconfig":".kube/config","context":"kargo"}},"cnao":{"value":{"version":"0.94.2","enabled":""}},"prometheus":{"value":{"enabled":"","version":"61.3.2"}},"kubernetes_dashboard":{"value":{"version":"7.4.0","enabled":""}}},"main":"./pulumi","description":"The easy to use Kubevirt Homelab Platform","options":{"refresh":"always"}}
{"runtime":"nodejs","name":"legalhold"}
{"template":{"config":{"project":{"description":"A project name used for naming/tagging resources"},"gcp:project":{"description":"The GCP project to use"},"owner":{"description":"An owner name used for tagging resources"},"gcp:zone":{"description":"The GCP zone to use"}}},"name":"gcp-py-network-component","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A Google Cloud Python Pulumi program using ComponentResource"}
{"description":"Test creating subnets in parallel, without dependencies which should trigger conflicts as only 1 can be updated at a time","runtime":"yaml","name":"parallel-subnet-creation","resources":{"subnet8":{"properties":{"addressPrefix":"10.0.7.0/24","resourceGroupName":"${resourceGroup.name}","virtualNetworkName":"${virtualNetwork.name}"},"type":"azure-native:network:Subnet"},"subnet5":{"type":"azure-native:network:Subnet","properties":{"virtualNetworkName":"${virtualNetwork.name}","resourceGroupName":"${resourceGroup.name}","addressPrefix":"10.0.4.0/24"}},"subnet6":{"properties":{"virtualNetworkName":"${virtualNetwork.name}","resourceGroupName":"${resourceGroup.name}","addressPrefix":"10.0.5.0/24"},"type":"azure-native:network:Subnet"},"resourceGroup":{"type":"azure-native:resources:ResourceGroup"},"subnet7":{"properties":{"resourceGroupName":"${resourceGroup.name}","addressPrefix":"10.0.6.0/24","virtualNetworkName":"${virtualNetwork.name}"},"type":"azure-native:network:Subnet"},"subnet3":{"properties":{"virtualNetworkName":"${virtualNetwork.name}","resourceGroupName":"${resourceGroup.name}","addressPrefix":"10.0.2.0/24"},"type":"azure-native:network:Subnet"},"subnet2":{"properties":{"addressPrefix":"10.0.1.0/24","resourceGroupName":"${resourceGroup.name}","virtualNetworkName":"${virtualNetwork.name}"},"type":"azure-native:network:Subnet"},"subnet4":{"properties":{"virtualNetworkName":"${virtualNetwork.name}","resourceGroupName":"${resourceGroup.name}","addressPrefix":"10.0.3.0/24"},"type":"azure-native:network:Subnet"},"virtualNetwork":{"type":"azure-native:network:VirtualNetwork","properties":{"location":"eastus","resourceGroupName":"${resourceGroup.name}","flowTimeoutInMinutes":"10","addressSpace":{"addressPrefixes":["10.0.0.0/16"]}}},"subnet1":{"properties":{"addressPrefix":"10.0.0.0/24","resourceGroupName":"${resourceGroup.name}","virtualNetworkName":"${virtualNetwork.name}"},"type":"azure-native:network:Subnet"}}}
{"name":"l1-stack-reference","runtime":"nodejs"}
{"outputs":{"actual":"${res.tags}"},"name":"test-aws-1655-pf","resources":{"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}},"res":{"type":"aws:appconfig:Environment","properties":{"applicationId":"${app.id}","name":"pf-tags-test"},"options":{"provider":"${aws-provider}"}},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"bar"}}},"type":"pulumi:providers:aws"}},"description":"Add first default tag: `foo: bar``\n","runtime":"yaml"}
{"description":"Work with Azure Service Bus Topics","runtime":"nodejs","name":"azure-topic"}
{"name": "pulumi-miniflux-examples-typescript", "runtime": "nodejs", "description": "An example of using the pulumi-miniflux component."}
{"description":"An example that uses JSON helpers to define an S3 bucket policy.","runtime":"nodejs","name":"aws-s3-bucketpolicy-jsonstringify-typescript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"runtime":"nodejs","description":"Demonstrate use of AWS profiles for role switching","name":"create-user-and-role"}
{"name":"aws-ec2-vpc-resources-java","runtime":"java","description":"An example that deploys a VPC with an internet gateway, public subnet, route table, and security group, and launches an Amazon Linux EC2 instance with NGINX."}
{"name":"l1-output-array","runtime":"yaml"}
{"name":"ecs-node","runtime":"nodejs","description":"An ECS cluster with a Fargate service"}
{"name": "gcp", "runtime": "go", "description": "Talos on GCP"}
{"name":"runtime_error","runtime":"go","description":"A minimal Go Pulumi program"}
{"name": "infrastructure", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi for serverless"}
{"name": "infra", "description": "A minimal Google Cloud TypeScript Pulumi program", "runtime": "nodejs"}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"eks_manual_aws_auth"}
{"description":"Enum outputs in python","runtime":"python","name":"enum_outputs_python"}
{"name":"pulumi-cdk-apprunner","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"description":"Eventbridge ATM example for CDK","runtime":"nodejs","name":"pulumi-aws-eventbridge-atm"}
{"name":"awsguard-test-database","description":"Tests for policy rules related to AWS Databases.","runtime":"nodejs"}
{"description":"A test program that creates a dynamic resource that passes along runtime data (as inputs & outputs) that the Policy Pack will use to confirm it sees the same runtime data.\n","name":"runtime_data","runtime":"nodejs"}
{"name":"l2-target-up-with-new-dependency","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name": "pulumi-demo-ts", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"runtime":"nodejs","name":"webserver","description":"Basic example of an AWS web server accessible over HTTP."}
{"description":"An example that deploys an API Gateway REST API with an Amazon Cognito authorizer.","runtime":"java","name":"awsx-apigateway-auth-cognito-java"}
{"runtime":"nodejs","description":"LoadBalancer Typescript EC2 attach test","name":"ts-lb-attach-ec2"}
{"runtime":"nodejs","name":"minimal","description":"An empty Pulumi Kubernetes test script."}
{"name": "pulumi-playground", "runtime": {"name": "python"}, "description": "A pulumi project used as a playground for testing."}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Target", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l2-resource-alpha","runtime":"go"}
{"description":"A project for managing Keycloak configuration","name":"ol-infrastructure-substructure-keycloak","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"}}
{"description":"${DESCRIPTION}","template":{"description":"A minimal Equinix Metal Python Pulumi program"},"name":"${PROJECT}","runtime":"python"}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"pulumi-python-pyright","description":"A simple Python Pulumi program that type checks with pyright but pyright is not installed."}
{"name":"aws-ts-apigatewayv2-http-api-quickstart","description":"Quickstart example of using AWS API Gateway v2 HTTP API","runtime":"nodejs"}
{"name": "awesome-azure", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name":"aws-acm-certificate-javascript","runtime":{"name":"nodejs","options":{"typescript":""}},"description":"Creates a simple ACM certificate resource","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}}}
{"runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"nginx-ec2-instance/","description":"Provision multiple NGINX instances on AWS EC2 (in TypeScript)"}
{"name":"esc-training-eks-infra","description":"A minimal TypeScript Pulumi program","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}}}
{"runtime":"go","name":"go_helm_local_kubernetes","description":"Test Kubernetes Helm package with local Chart."}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A minimal Azure Native F# Pulumi program","config":{"azure-native:location":{"description":"The Azure location to use","default":"WestUS2"}}},"runtime":"dotnet"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS BgpPeer Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "node-network", "runtime": "nodejs", "description": "Kubernetes IaC for Joystream RPC and Validator nodes", "template": {"config": {"aws:profile": {"default": "joystream-user"}, "aws:region": {"default": "us-east-1"}, "isMinikube": {"description": "Whether you are deploying to minikube", "default": false}, "numberOfValidators": {"description": "Number of validators as starting nodes", "default": 2}, "networkSuffix": {"description": "Suffix to attach to the network id and name", "default": 8129}, "isLoadBalancerReady": {"description": "Whether the load balancer service is ready and has been assigned an IP", "default": false}, "nodeImage": {"description": "Docker image with tag to be used as validator and RPC nodes", "default": "joystream/node:latest"}, "encryptionKey": {"description": "Key to encrypt the 7z containing secrets with", "default": "1234"}}}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"An example that creates a new VPC and configuring availability zones.","name":"awsx-vpc-azs-javascript"}
{"description":"An example that deploys an S3 bucket and bucket policy on AWS.","runtime":"go","name":"aws-s3bucket-bucketpolicy-go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}}}
{"runtime":"nodejs","name":"polygon","description":"coin stack"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Recorder Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Apple Push Notification Service (APNS)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A Pulumi program that demonstrates creating various AWS resources in Python","name":"aws-py-resources","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}}}
{"description":"A minimal C# Pulumi program using Google Cloud Functions.","runtime":"dotnet","name":"serverless-cs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Redis Cluster Mode Enabled", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"containers-fargate","description":"A simple containers demo."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Custom Rules", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"gke-config-connector","description":"GKE config-connector example"}
{"description":"GKE cluster for pulumi-kubernetes CI","name":"k8s-ci-cluster","runtime":"nodejs"}
{"outputs":{"kubeconfig":{"fn::fromBase64":"${adminCredentials.kubeconfigs[0].value}"}},"description":"A minimal Azure Native Pulumi YAML program","variables":{"adminCredentials":{"fn::azure-native:containerservice:listManagedClusterAdminCredentials":{"resourceName":"${cluster.name}","resourceGroupName":"${resourceGroup.name}"}}},"resources":{"resourceGroup":{"type":"azure-native:resources:ResourceGroup"},"identity":{"properties":{"resourceGroupName":"${resourceGroup.name}"},"type":"azure-native:managedidentity:UserAssignedIdentity"},"privateKey":{"properties":{"rsaBits":"4096","algorithm":"RSA"},"type":"tls:PrivateKey"},"roleAssignment":{"type":"azure-native:authorization:RoleAssignment","properties":{"roleDefinitionId":"/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c","principalType":"ServicePrincipal","principalId":"${identity.principalId}","scope":"${resourceGroup.id}"}},"cluster":{"type":"azure-native:containerservice:ManagedCluster","properties":{"linuxProfile":{"adminUsername":"aksuser","ssh":{"publicKeys":[{"keyData":"${privateKey.publicKeyOpenssh}"}]}},"resourceGroupName":"${resourceGroup.name}","dnsPrefix":"dns-prefix","agentPoolProfiles":[{"vmSize":"Standard_A2_v2","count":"1","osDiskSizeGB":"30","osType":"Linux","name":"agentpool","mode":"System","type":"VirtualMachineScaleSets"}],"enableRBAC":"1","kubernetesVersion":"1.26.3","identity":{"userAssignedIdentities":["${identity.id}"],"type":"UserAssigned"}}}},"name":"azure-yaml-aks-managed-identity","runtime":"yaml"}
{"template":{"config":{"azure-native:location":{"description":"The Azure region to deploy into","default":"WestUS"},"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"path":{"default":"./www","description":"The path to the folder containing the website"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"}},"description":"A C# program to deploy a static website on Azure"},"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"dotnet"}
{"name":"l1-output-map","runtime":{"options":{"virtualenv":"venv","typechecker":"mypy"},"name":"python"}}
{"name":"aws-ec2-vpc-resources-typescript","description":"An example that deploys a VPC with an internet gateway, public subnet, route table, and security group, and launches an Amazon Linux EC2 instance with Nginx.","runtime":"nodejs"}
{"runtime":"go","template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"name":"go-lambda","description":"Basic example of an AWS lambda"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l1-output-number"}
{"name":"automationS3website","runtime":"nodejs","description":"Pulumi project to set up S3 website"}
{"name":"awsx-load-balanced-fargate-nginx-javascript","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"l2-invoke-options"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Enable Certificate Revocation List", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","description":"An example that creates an API Gateway instance and configures a route as an HTTP proxy.","name":"awsx-apigateway-http-proxy-yaml","outputs":{"url":"${api.url}"},"resources":{"api":{"type":"aws-apigateway:RestAPI","properties":{"routes":[{"target":{"uri":"https://www.example.com/","type":"http_proxy"},"path":"/","method":"GET"}]}}}}
{"name":"azure-blob","description":"Work with Azure Blobs","runtime":"nodejs"}
{"resources":{"ns":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","sku":"Basic","location":"${exampleResourceGroup.location}"},"type":"azure:eventhub:EventHubNamespace"},"exampleIoTHub":{"properties":{"sku":{"name":"S1","capacity":"1"},"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}","localAuthenticationEnabled":"","endpoints":[{"connectionString":"${ehAuthRule.primaryConnectionString}","type":"AzureIotHub.EventHub","name":"export2","encoding":"Avro"}]},"type":"azure:iot:IoTHub"},"ehAuthRule":{"type":"azure:eventhub:AuthorizationRule","properties":{"resourceGroupName":"${exampleResourceGroup.name}","eventhubName":"${eh.name}","namespaceName":"${ns.name}","send":"1"}},"eh":{"properties":{"partitionCount":"2","resourceGroupName":"${exampleResourceGroup.name}","namespaceName":"${ns.name}","messageRetention":"1"},"type":"azure:eventhub:EventHub"},"exampleResourceGroup":{"properties":{"location":"East US"},"type":"azure:core:ResourceGroup"}},"runtime":"yaml","name":"iot_iothub"}
{"runtime":"nodejs","name":"dn6-api-mongo","description":"Deploys .NET 6 MongoDB Web API app."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "AWS Cognito User Pool Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "ad-hoc-app", "runtime": "nodejs", "description": "Ad hoc app infrastructure"}
{"description":"An example that deploys an IAM user and user policy on AWS.","name":"aws-iam-user-userpolicy-typescript","runtime":"nodejs"}
{"name":"l2-destroy","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"name": "macos_quickstart", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"aws-py-apigatewayv2-eventbridge","description":"An example that integrates API Gateway, EventBridge, and Lambda."}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "DNS Validation with Route 53", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"dotnet","description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A C# program to deploy a Kubernetes cluster on OVHcloud","config":{"nodePoolName":{"default":"my-desired-pool","description":"Name of the node pool"},"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA9"},"nodePoolMinNodes":{"default":"1","description":"Number of min nodes in the cluster"},"flavorName":{"description":"Name of the flavor/type of the machine","default":"b3-8"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"clusterName":{"default":"my_desired_cluster","description":"Name of the cluster"},"nodePoolMaxNodes":{"default":"3","description":"Number of max nodes in the cluster"},"nodePoolDesiredNodes":{"description":"Number of desired nodes in the cluster","default":"1"}}}}
{"description":"Create and manage mounts of KV secrets in Vault","runtime":"python","name":"ol-infrastructure-substructure-vault-static-mounts","backend":{"url":"s3://mitol-pulumi-state/"}}
{"description":"A minimal TypeScript Pulumi program","name":"pulumi-lookups-enabled","runtime":"nodejs"}
{"description":"Used to create the state and policy buckets for the eks selfhosted installer.","name":"selfhosted-15-state-policies-mgmt","runtime":"nodejs"}
{"runtime":"go","name":"awsx-elb-private-subnet-go","description":"An example that deploys an ApplicationLoadBalancer listening on a private subnet."}
{"name":"l2-engine-update-options","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Non-AWS Service", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"ol-infrastructure-private-ca","backend":{"url":"s3://mitol-pulumi-state/"},"description":"Creation and maintenance of a private certificate authority managed by AWS","runtime":"python"}
{"runtime":"go","description":"A program that replaces a resource with a new name and alias.","name":"aliases_retype_component"}
{"runtime":"dotnet","name":"awsx-elb-private-subnet-csharp","description":"An example that deploys an ApplicationLoadBalancer listening on a private subnet."}
{"runtime":"nodejs","name":"query-node","description":"Kubernetes IaC for Query Node","template":{"config":{"skipProcessor":{"description":"If set to true, will not deploy a processor instance","default":""},"blockHeight":{"default":"0","descroption":"Block height to start indexing at"},"joystreamWsEndpoint":{"description":"Joystream-node websocket endpoint used by indexer","required":"1"},"aws:profile":{"default":"joystream-user"},"dbPassword":{"description":"database password for indexer and processor databases","required":"1"},"appsImage":{"default":"joystream/apps:latest","description":"The joystream image to use for running GraphQL servers"},"externalIndexerUrl":{"default":"http://query-node:4000/graphql","description":"URL for an external indexer. If set this will not deploy an Indexer."},"useLocalRepo":{"description":"If set to true, will use an existing docker image on local","default":""},"isMinikube":{"default":"","description":"Whether you are deploying to minikube"},"aws:region":{"default":"us-east-1"},"isLoadBalancerReady":{"description":"Whether the load balancer service is ready and has been assigned an IP","default":""}}}}
{"name":"parameterized","runtime":"go"}
{"name":"awsx-ecr-image-go","runtime":"go"}
{"runtime":"yaml","outputs":{"actual":"${res.tags}"},"resources":{"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}},"res":{"properties":{"name":"pf-tags-test","applicationId":"${app.id}"},"type":"aws:appconfig:Environment","options":{"provider":"${aws-provider}"}},"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}}},"name":"test-aws-1655-pf","description":"Drop resource specific tags\n"}
{"name": "monorepo-k8s-base", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Base infrastructure"}
{"name":"drift-correct-tests","runtime":"nodejs","description":"Tests handling of drift correction with refresh an reapply"}
{"name":"l2-invoke-options","runtime":"go"}
{"runtime":"go","name":"${PROJECT}","description":"${DESCRIPTION}","template":{"description":"A Go program to deploy a virtual machine on Azure","config":{"vmSize":{"description":"The machine size to use for the VM","default":"Standard_A1_v2"},"adminUsername":{"description":"The user account to create on the VM","default":"pulumiuser"},"vmName":{"default":"my-server","description":"The DNS hostname prefix to use for the VM"},"servicePort":{"description":"The HTTP service port to expose on the VM","default":"80"},"azure-native:location":{"description":"The Azure location to deploy into","default":"WestUS2"},"osImage":{"description":"The Azure URN of the base image to use for the VM","default":"Debian:debian-11:11:latest"}}}}
{"name":"nginx-py","description":"A minimal Python Pulumi program","runtime":"python","template":{"description":"A minimal Python Pulumi program"}}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"civo-network"}
{"name":"aws-getting-started-lambda-ts","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"name":"transformations_simple","description":"A program that replaces a resource with a new name and alias.","runtime":"go"}
{"name":"l2-resource-secret","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"name":"l2-invoke-options-depends-on","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"runtime":"go","description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A minimal DigitalOcean Go Pulumi program"}}
{"name": "sentry", "description": "Manage Sentry using Pulumi", "runtime": "dotnet"}
{"name": "kraken-ci-aws-ecs", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Kraken CI on AWS ECS"}
{"runtime":"nodejs","description":"An example of fetching the default AWS VPC for the current region.","name":"awsx-vpc-default-typescript"}
{"description":"An example that deploys the configuration necessary to import a Service Account resource in Google Cloud.","name":"gcp-import-service-account-csharp","runtime":"dotnet","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-csharp"}}}}
{"name":"remote_component","description":"A test program to test constructing remote components with nested unknowns","runtime":"nodejs"}
{"description":"A Python program that tests waiting for outputs doesn't leak futures.","runtime":"python","name":"pulumi-python-output-leak"}
{"runtime":"nodejs","description":"Application stack for Flux+Pulumi","name":"app"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l2-target-up-with-new-dependency"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getAlias Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","name":"s3state-py","description":"An example demonstrating the Terraform Remote State resource"}
{"name":"hello-world","description":"An exaple of using the `pulumi-cljs` library","runtime":"nodejs"}
{"runtime":"go","name":"l2-invoke-simple"}
{"description":"Setup ECR for this project","runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"name":"setup-ecr"}
{"name":"replace-daemonset","runtime":"nodejs","description":"A program to test if the DaemonSet is replaced when the .spec.selector is updated"}
{"description":"Creates a serverless application using API Gateway backed by lambda functions","runtime":"nodejs","name":"aws-ts-apigateway-lambda-serverless"}
{"outputs":{"pulumiLabels":"${key.pulumiLabels}","labels":"${key.labels}","effectiveLabels":"${key.effectiveLabels}"},"runtime":"yaml","resources":{"key":{"properties":{"labels":{"static":"value","empty":""},"keyRing":"${ring.id}"},"type":"gcp:kms:CryptoKey","options":{"retainOnDelete":"1"}},"ring":{"properties":{"location":"us-central1"},"type":"gcp:kms:KeyRing"}},"name":"empty-label"}
{"description":"AWSX VPC - export eip tags","runtime":"nodejs","name":"nodejs"}
{"runtime":"dotnet","name":"cs-sql","description":"A managed Azure SQL."}
{"resources":{"bucket":{"properties":{"tags":{"Name":"My bucket","Environment":"Dev"}},"type":"aws:s3:Bucket"}},"name":"bucket-yaml","runtime":"yaml","description":"A minimal Pulumi YAML program"}
{"name": "my-eks-cluster", "runtime": "nodejs", "description": "A TypeScript program to deploy a Kubernetes cluster on AWS"}
{"name":"simple-random-py","description":"A simple example of using various random resources in python","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name":"go_kustomize_kubernetes","runtime":"go","description":"Test Kubernetes kustomize package."}
{"runtime":"go","name":"l2-parameterized-resource"}
{"description":"Install a helm chart with Kubernetes","name":"helm_chart","runtime":"go"}
{"runtime":"dotnet","description":"An example of a static website hosted on Azure Blob Storage + Azure CDN.","name":"azure-cs-static-website"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"runtime_error"}
{"description":"multiplayer game","name":"king-of-tokyo","runtime":"nodejs","template":{"config":{"sshKeyName":{"description":"Your SSH key name. (e.g. theking)"},"sshPubKeyFilename":{"description":"Full path to your SSH *public* key (e.g. /Users/username/.ssh/theking.pub)"},"domainName":{"description":"Domain name for the server (e.g. theking.live)"}}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"regress-2534","description":"Provision a simple aws.lb.TargetGroup to test importing it back"}
{"name": "pulumi-Strongdmsvcs", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"A minimal TypeScript Pulumi program","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"name":"esc-training-vpc-infra"}
{"name":"dotnet-helm-skip-crd-rendering","runtime":"python","description":"Deploys a simple Helm chart with skipping crd rendering option set"}
{"name": "aws-python-substrate", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "deploy polkadot / kusama validator nodes"}
{"name":"awsx-apigateway-openapi-route-typescript","description":"n example of configuring an API Gateway route with an OpenAPI/Swagger definition.","runtime":"nodejs"}
{"runtime":"java","description":"An example that creates a new VPC and configuring availability zones.","name":"awsx-vpc-azs-java"}
{"description":"Creates Azure Container Instance with a public IP","name":"azure-ts-aci","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Fleet TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS SnapshotScheduleAssociation C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that deploys an API Gateway REST API with a custom domain from Route53.","name":"awsx-apigateway-custom-domain-javascript"}
{"name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","main":"pulumi/","runtime":"nodejs"}
{"name":"website","runtime":"dotnet","description":"A Pulumi AWS .NET program that deploys a static website."}
{"name":"kubernetes-keycloak","description":"Kubernetes with Keycloak example","runtime":"scala"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"aws-s3websitebucket-oai-bucketpolicy-javascript","description":"An example that creates a website S3 bucket, a CloudFront Origin Access Identity, and a bucket policy."}
{"name":"test-ssh-conn","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example that deploys a simulated database server and database resource","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"name":"aws-simulated-dbserver-database-python"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "GitHub Enterprise", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-vpc-sg-ec2-csharp","runtime":"dotnet","description":"An example that deploys an EC2 instance using a VPC and security group with Crosswalk for AWS."}
{"name": "rsc-single-server", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploy a single server RSC instance."}
{"name":"k8s-better-together-eks-cluster","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"A minimal TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}}}
{"name":"azure-py-containerapps","description":"Creates an Azure Container App and deploys a custom Docker image to it","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-python"}}},"runtime":{"name":"python","options":{"virtualenv":"venv","toolchain":"pip"}},"description":"An example that creates a Kubernetes Deployment","name":"kubernetes-deployments-python"}
{"description":"Demonstrate use of AWS AssumeRole Functionality","name":"create-role","runtime":"nodejs"}
{"runtime":"nodejs","description":"A minimal TypeScript Pulumi program","name":"doks_teleport"}
{"name":"passport","runtime":{"name":"nodejs","options":{"typescript":"1"}},"description":"A minimal AWS JavaScript Pulumi program"}
{"name":"libvirt-py-vm","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Uses libvirt to deploy a KVM VM on an Azure-hosted KVM server."}
{"description":"http4k deployments on aws","runtime":"nodejs","name":"http4k-examples"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS JobQueue Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"tailscale-workshop-vpc"}
{"name":"l2-provider-grpc-config-secret","runtime":"yaml"}
{"runtime":"yaml","template":{"description":"A Pulumi YAML program to deploy a static website on Google Cloud","config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"path":{"default":"./www","description":"The path to the folder containing the website"}}},"resources":{"bucket-iam-binding":{"type":"gcp:storage:BucketIAMBinding","properties":{"bucket":"${bucket.name}","role":"roles/storage.objectViewer","members":["allUsers"]}},"bucket":{"type":"gcp:storage:Bucket","properties":{"location":"US","website":{"notFoundPage":"${errorDocument}","mainPageSuffix":"${indexDocument}"}}},"http-forwarding-rule":{"type":"gcp:compute:GlobalForwardingRule","properties":{"target":"${http-proxy.selfLink}","ipProtocol":"TCP","ipAddress":"${ip.address}","portRange":"80"}},"ip":{"type":"gcp:compute:GlobalAddress"},"synced-folder":{"properties":{"path":"${path}","bucketName":"${bucket.name}"},"type":"synced-folder:index:GoogleCloudFolder"},"http-proxy":{"type":"gcp:compute:TargetHttpProxy","properties":{"urlMap":"${url-map.selfLink}"}},"backend-bucket":{"type":"gcp:compute:BackendBucket","properties":{"bucketName":"${bucket.name}","enableCdn":"1"}},"url-map":{"type":"gcp:compute:URLMap","properties":{"defaultService":"${backend-bucket.selfLink}"}}},"outputs":{"originURL":"https://storage.googleapis.com/${bucket.name}/index.html","cdnURL":"http://${ip.address}","originHostname":"storage.googleapis.com/${bucket.name}","cdnHostname":"${ip.address}"},"name":"${PROJECT}","description":"${DESCRIPTION}","config":{"path":{"default":"./www","type":"string"},"errorDocument":{"default":"error.html","type":"string"},"indexDocument":{"default":"index.html","type":"string"}}}
{"runtime":"nodejs","description":"An example of an EC2 webserver instance with post-provision configuration.","name":"aws-ts-ec2-provisioners"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Basic", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal Azure Python Pulumi program","name":"py-simple","runtime":"python"}
{"name": "loadchecker", "runtime": "go", "description": "Generic load testing tool used for testing autoscaler"}
{"runtime":"python","name":"alias_after_failed_update"}
{"template":{"config":{"adminSecret":{"description":"Orion admin secret"},"aws:region":{"default":"us-east-1"},"isLoadBalancerReady":{"default":"","description":"Whether the load balancer service is ready and has been assigned an IP"},"aws:profile":{"default":"joystream-user"},"storage":{"description":"Amount of storage in gigabytes for ipfs volume","default":"40"},"isMinikube":{"description":"Whether you are deploying to minikube","default":""},"orionImage":{"default":"joystream/orion:latest","description":"The Orion image to use for running the orion node"},"contentSecret":{"description":"Orion featured content secret"},"queryNodeEndpoint":{"description":"Full URL for Query node endpoint"},"appPrivateKey":{"description":"Orion app private key"}}},"description":"A Pulumi program to deploy Orion service to Kubernetes","name":"orion","runtime":"nodejs"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"An example that creates a container-image repository in Amazon Elastic Container Registry (ECR).","name":"awsx-ecr-repository-javascript"}
{"description":"Basic example of a web server on a compute instance running on Google Cloud Platform","runtime":"python","name":"webserver-py"}
{"description":"An example of building/publishing a Docker container image to Azure ACR","name":"cbp-azure-py","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"description":"A test of the yaml resoures with an uninitialized provider","runtime":"dotnet","name":"dotnet_yaml_uninitialized_provider"}
{"name":"loadbalancer","runtime":"nodejs","description":"Create 2 Virtual Machines under a Load balancer and configures Load Balancing rules for the VMs https://github.com/terraform-providers/terraform-provider-azurerm/tree/master/examples/2-vms-loadbalancer-lbrules"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"An example that creates a container-image repository in Amazon Elastic Container Registry (ECR).","name":"awsx-ecr-repository-python"}
{"runtime":"dotnet","name":"awsx-vpc-subnets-csharp","description":"An example that creates a new VPC with a custom subnet specification."}
{"runtime":"nodejs","description":"A program that inverts the dependency graph between two resources.","name":"depsteps"}
{"runtime":"nodejs","description":"EKS cluster example","name":"example-cluster"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"testproj"}
{"name": "pitoco", "runtime": "java", "description": "A minimal AWS Java Pulumi program"}
{"name": "dockercon-step2", "runtime": "nodejs", "description": "Step 2 of my DockerCon EU 2018 talk.", "template": {"description": "A minimal TypeScript Pulumi program"}}
{"description":"A simple addition of a DNS record to a CloudFlare zone in TypeScript","runtime":"nodejs","name":"cloudflare-record-ts"}
{"resources":{"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"bar"}}},"type":"pulumi:providers:aws"},"res":{"options":{"provider":"${aws-provider}"},"type":"aws:s3:Bucket"}},"name":"test-aws-1655-legacy","outputs":{"actual":"${res.tags}"},"description":"Add first default tag: `foo: bar``\n","runtime":"yaml"}
{"description":"An example that applies unit testing to TypeScript and AWS resources.","name":"test-unit-ts","runtime":"nodejs"}
{"name": "pulumi-test", "runtime": "nodejs", "description": "Pulumi Typescript Librodo Test"}
{"description":"A Python project that uses the uv toolchain.","name":"pulumi-python-uv","runtime":{"options":{"toolchain":"uv","virtualenv":"my-venv"},"name":"python"}}
{"runtime":{"name":"python","options":{"virtualenv":"../../venv"}},"name":"secrets","description":"Adds Kubernetes Secrets"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Selecting Backups By Tag", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l2-explicit-parameterized-provider","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"name":"awsx-apigateway-custom-domain-yaml","outputs":{"url":"https://${basePathMapping.domainName}"},"resources":{"validation":{"properties":{"validationRecordFqdns":["${validationRecord.fqdn}"],"certificateArn":"${certificate.arn}"},"options":{"provider":"${usEast1}"},"type":"aws:acm:CertificateValidation"},"api":{"type":"aws-apigateway:RestAPI","properties":{"routes":[{"localPath":"www","path":"/"}]}},"gatewayDomainName":{"options":{"dependsOn":["${validation}"]},"properties":{"domainName":"${domainName}","certificateArn":"${certificate.arn}"},"type":"aws:apigateway:DomainName"},"certificate":{"type":"aws:acm:Certificate","options":{"provider":"${usEast1}"},"properties":{"domainName":"${domainName}","validationMethod":"DNS"}},"validationRecord":{"type":"aws:route53:Record","properties":{"type":"${certificate.domainValidationOptions[0].resourceRecordType}","name":"${certificate.domainValidationOptions[0].resourceRecordName}","records":["${certificate.domainValidationOptions[0].resourceRecordValue}"],"zoneId":"${zone.zoneId}","ttl":"60"}},"gatewayDNSRecord":{"properties":{"name":"${domainName}","zoneId":"${zone.zoneId}","aliases":[{"zoneId":"${gatewayDomainName.cloudfrontZoneId}","name":"${gatewayDomainName.cloudfrontDomainName}","evaluateTargetHealth":""}],"type":"A"},"type":"aws:route53:Record"},"basePathMapping":{"type":"aws:apigateway:BasePathMapping","properties":{"stageName":"${api.stage.stageName}","restApi":"${api.api.id}","domainName":"${gatewayDomainName.domainName}"}},"usEast1":{"properties":{"region":"us-east-1"},"type":"pulumi:providers:aws"}},"variables":{"domainName":"myapp.${hostedZoneName}","hostedZoneName":"example.com","zone":{"fn::invoke":{"arguments":{"name":"${hostedZoneName}"},"function":"aws:route53:getZone"}}},"runtime":"yaml","description":"An example that deploys an API Gateway REST API with a custom domain from Route53."}
{"name":"aws-py-secrets-manager","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program"}
{"runtime":"nodejs","description":"A Deployment that references a secret value as an environment variable.","name":"k8s-apps-deployment-secret"}
{"runtime":"nodejs","name":"l1-output-number"}
{"name": "aws-py-stackreference-department", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources in Python", "template": {"config": {"departmentName": {"description": "The department name to use"}}}}
{"description":"EKS cluster example that uses an AWS named profile for credentials","runtime":"python","name":"example-aws-profile-py"}
{"description":"Deploy Pulumi and Flux together","runtime":"nodejs","name":"flux-and-pulumi"}
{"name":"awsx-elb-vpc-javascript","runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that deploys an ApplicationLoadBalancer in a VPC."}
{"name": "SEP6", "runtime": "nodejs", "description": "SEP6 AT VIAUC A2022"}
{"description":"EKS Cluster in auto mode","name":"eks-auto-mode","runtime":"nodejs"}
{"name": "pyvms", "runtime": "python", "description": "Vms using python"}
{"description":"create a resource inside an apply in python","name":"create_inside_apply","runtime":"python"}
{"runtime":{"options":{"packagemanager":"pnpm"},"name":"nodejs"},"description":"A minimal Google Cloud TypeScript Pulumi program","name":"packageadd_pnpm","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}}}
{"name":"ok-api","runtime":"nodejs","description":"API for the OK? programming language"}
{"runtime":"dotnet","description":"${DESCRIPTION}","template":{"description":"A minimal OVHcloud C# Pulumi program","config":{"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"registryName":{"default":"my-registry","description":"Name of the private registry"},"registryUserEmail":{"default":"myuser@ovh.com","description":"Email of the user"},"planName":{"default":"SMALL","description":"Name of the plan"},"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA"},"registryUserLogin":{"description":"Login of the user","default":"myuser"},"registryUserName":{"default":"user","description":"Name of the user"}}},"name":"${PROJECT}"}
{"description":"Test kustomize support","runtime":"python","name":"kustomize-test"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Create protection", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"config":{"registryName":{"description":"Name of the private registry","default":"my-registry"},"registryUserName":{"default":"user","description":"Name of the user"},"ovhRegion":{"default":"GRA","description":"The OVHcloud region to deploy into"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"registryUserLogin":{"default":"myuser","description":"Login of the user"},"registryUserEmail":{"description":"Email of the user","default":"myuser@ovh.com"},"planName":{"description":"Name of the plan","default":"SMALL"}},"description":"A minimal OVHcloud Go Pulumi program"},"runtime":"go","name":"${PROJECT}","description":"${DESCRIPTION}"}
{"resources":{"randomName":{"type":"random:RandomString","properties":{"special":"","length":"16"}},"dbReplicationConnectionProfile":{"type":"gcp:datastream:ConnectionProfile","properties":{"connectionProfileId":"db_bigquery-replication-cp-${randomName.result}","bigqueryProfile":{},"displayName":"db_bigquery-replication-cp","location":"us-central1"}}},"name":"connection-profile","runtime":"yaml"}
{"resources":{"you":{"type":"dna-store:DNAStore","properties":{"filedir":"${pulumi.cwd}/data","data":["1","2","3","4"],"metadata":{"sampleType":"human"}}},"me":{"type":"dna-store:DNAStore","get":{"id":"${pulumi.cwd}/data/me"}}},"plugins":{"providers":[{"path":"..","name":"dna-store"}]},"runtime":"yaml","name":"dnastore","outputs":{"data":"${me.data}","important":"${me.metadata.tags[\"important\"]}"}}
{"runtime":"go","name":"l2-resource-secret"}
{"description":"Identity definitions for production Kubernetes infrastructure","runtime":"nodejs","name":"identity"}
{"name": "app-redirect", "runtime": {"name": "python", "options": {"virtualenv": "../../.env"}}, "description": "App - redirect"}
{"name":"helm-kubernetes-part-one-go","runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-go"}}},"description":"Demo Code Part 1 of the Tutorial around Helm in Kubernetes"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"An example that uses JSON helpers to define an S3 bucket policy.","name":"aws-s3-bucketpolicy-jsonstringify-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program","name":"fastapi-deployment"}
{"runtime":"dotnet","description":"A simple AWS Cloud C# Pulumi program","name":"simple-cs"}
{"resources":{"response_200":{"type":"aws:apigateway:MethodResponse","properties":{"httpMethod":"${MyDemoMethod.httpMethod}","resourceId":"${MyDemoResource.id}","statusCode":"200","restApi":"${MyDemoAPI.id}"}},"MyDemoIntegration":{"properties":{"type":"MOCK","restApi":"${MyDemoAPI.id}","resourceId":"${MyDemoResource.id}","httpMethod":"${MyDemoMethod.httpMethod}"},"type":"aws:apigateway:Integration"},"MyDemoMethod":{"type":"aws:apigateway:Method","properties":{"resourceId":"${MyDemoResource.id}","httpMethod":"GET","authorization":"NONE","restApi":"${MyDemoAPI.id}"}},"MyDemoResource":{"properties":{"parentId":"${MyDemoAPI.rootResourceId}","restApi":"${MyDemoAPI.id}","pathPart":"mydemoresource"},"type":"aws:apigateway:Resource"},"MyDemoAPI":{"type":"aws:apigateway:RestApi","properties":{"description":"This is my API for demonstration purposes","name":"MyDemoAPI"}}},"runtime":"yaml","name":"aws_apigateway_methodResponse_MethodResponse_1"}
{"resources":{"lambda-role":{"properties":{"assumeRolePolicy":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\"\n    }\n  ]\n}\n"},"type":"aws:iam:Role"},"lambda-trigger-event":{"type":"aws:lambda:Permission","properties":{"action":"lambda:InvokeFunction","principal":"events.amazonaws.com","function":"${lambda-function.id}"}},"my-bucket":{"type":"aws:s3:BucketV2"},"s3-role-policy-attachment":{"properties":{"policyArn":"arn:aws:iam::aws:policy/AmazonS3FullAccess","role":"${lambda-role}"},"type":"aws:iam:RolePolicyAttachment"},"lambda-function":{"type":"aws:lambda:Function","properties":{"memorySize":"128","role":"${lambda-role.arn}","environment":{"variables":{"BUCKET_NAME":"${my-bucket.id}"}},"runtime":"python3.10","timeout":"15","handler":"lambda_function.lambda_handler","code":{"fn::fileArchive":"./s3_writer"}}},"cloudwatch-role-policy-attachment":{"type":"aws:iam:RolePolicyAttachment","properties":{"role":"${lambda-role}","policyArn":"arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"}}},"name":"aws-s3bucket-lambda-eventbridge-yaml","outputs":{"bucketName":"${my-bucket.id}","lambdaName":"${lambda-function.id}","lambdaArn":"${lambda-function.arn}"},"runtime":"yaml","description":"A program to create a Lambda write to S3 workflow on AWS"}
{"name":"construct_component_failures_nodejs","description":"A program that constructs remote component resources with a constructor that returns an error.","runtime":"nodejs"}
{"description":"A minimal TypeScript Pulumi program","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"name":"k8s-better-together-workload-plain"}
{"runtime":"go","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"description":"A static website hosted on AWS S3","name":"aws-go-s3-folder-component"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS PublicDnsNamespace C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS LoadBalancerCookieStickinessPolicy Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"${PROJECT}","runtime":"nodejs","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"vpcNetworkCidr":{"default":"10.0.0.0/16","description":"The network CIDR to use for the VPC"},"instanceType":{"description":"The Amazon EC2 instance type","default":"t3.micro"}},"description":"A TypeScript program to deploy a virtual machine on Amazon EC2"},"description":"${DESCRIPTION}"}
{"name":"use-role","runtime":"nodejs","description":"Use the created role"}
{"runtime":"nodejs","description":"An example demonstrating the Terraform Remote State resource","name":"ossstate-ts"}
{"description":"A simple example of how to hook up to CloudWatch metrics.","runtime":"nodejs","name":"metrics"}
{"description":"Demo Code Part 2 of the Tutorial around Helm in Kubernetes","name":"helm-kubernetes-part-two-yaml","resources":{"cert-manager":{"properties":{"version":"1.3.1","chart":"oci://registry-1.docker.io/bitnamicharts/cert-manager","namespace":"cert-manager"},"type":"kubernetes:helm.sh/v4:Chart"}},"runtime":"yaml"}
{"description":"${DESCRIPTION}","runtime":"python","name":"${PROJECT}","template":{"description":"A Python program to deploy a Helm chart onto a Kubernetes cluster","config":{"k8sNamespace":{"default":"nginx-ingress","description":"The Kubernetes namespace to deploy into"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Analyzer C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"name":"project_infra","description":"A minimal TypeScript Pulumi program"}
{"description":"Setup EC2 server for this project","name":"setup-ec2","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"runtime":"go"}
{"name":"resource_refs_get_resource_nodejs","runtime":"nodejs","description":"A program that ensures invoking 'pulumi:pulumi:getResource' returns resource refs"}
{"description":"An example that creates an API Gateway instance and configures a route as an HTTP proxy.","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"awsx-apigateway-http-proxy-python"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}},"name":"aws-s3-bucket-resources-java","description":"An example that deploys S3 bucket, metric, notification, object, and policy resources.","runtime":"java"}
{"name": "lambda-containers", "runtime": "nodejs", "description": "An AWS Lambda function packaged as a Docker container"}
{"runtime":"java","description":"An example that creates a container-image repository in Amazon Elastic Container Registry (ECR).","name":"awsx-ecr-repository-java"}
{"config":{"gcp:defaultLabels":{"value":{"empty-default":""}}},"runtime":"yaml","resources":{"key":{"options":{"retainOnDelete":"1"},"properties":{"labels":{"static":"value"},"keyRing":"${ring.id}"},"type":"gcp:kms:CryptoKey"},"ring":{"type":"gcp:kms:KeyRing","properties":{"location":"us-central1"}}},"outputs":{"pulumiLabels":"${key.pulumiLabels}","effectiveLabels":"${key.effectiveLabels}","labels":"${key.labels}"},"name":"empty-default-label"}
{"name":"iam-user","runtime":"yaml","resources":{"awsUserResource":{"properties":{"name":"example-user"},"type":"aws:iam:User"},"awsUserPolicyResource":{"type":"aws:iam:Policy","properties":{"description":"example-policy-desc","policy":"{ \"Version\": \"2012-10-17\", \"Statement\": [ { \"Action\": \"s3:*\", \"Resource\": \"*\", \"Effect\": \"Allow\" } ] }","name":"example-policy"}}}}
{"description":"EKS managed nodegroup with custom configuration","name":"custom-managed-nodegroup","runtime":"nodejs"}
{"name":"l2-invoke-secrets","runtime":"go"}
{"name": "azure-cosmosdb-logicapp", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "An example of creating a CosmosDB container through a Azure's Cosmos SDK and deploying a Logic App and an API Connection"}
{"description":"Creates Azure App Service with SQL Database and Application Insights","runtime":"nodejs","name":"azure-ts-appservice"}
{"name":"aliases_rename_component_child","runtime":"nodejs","description":"A program that renames a component child with an alias."}
{"runtime":"go","name":"gcp-go-gke","description":"A GCP Go Pulumi program with Kubernetes"}
{"name": "static-website", "runtime": "yaml", "description": "Example of a Pulumi program deploying a static website using the YAML provider.", "resources": {"web": {"type": "aws-static-website:index:Website", "properties": {"sitePath": "../website/build"}}}, "outputs": {"websiteURL": "${web.websiteURL}", "bucketName": "${web.bucketName}"}}
{"description":"${DESCRIPTION}","template":{"description":"A Python program to deploy a containerized service on Google Cloud","config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"memory":{"default":"1Gi","description":"The amount of memory to allocate per container instance"},"appPath":{"description":"The path to the container application to deploy","default":"app"},"concurrency":{"default":"50","description":"The maximum number of concurrent requests to serve per container instance"},"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"},"cpu":{"description":"The number of virtual CPUs to allocate per container instance","default":"1"},"containerPort":{"default":"8080","description":"The port to expose on the container"}}},"name":"${PROJECT}","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Splunk Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"serverless","description":"Basic example of a serverless GCP functions in TypeScript, Python and Go","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:region":{"description":"The Google Cloud region"}}},"runtime":"nodejs"}
{"name": "azure-nextgen-cs-synapse", "runtime": "dotnet", "description": "Creates Azure Synapse workspace with SQL and Spark pools"}
{"runtime":"go","description":"An example that creates a new VPC using the default settings.","name":"awsx-vpc-go"}
{"runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program","name":"sample-app"}
{"runtime":"python","name":"dynamic_py_disable_serialization_as_secret","description":"A simple Python program that uses dynamic providers with serialization as secret disabled."}
{"description":"An example that uses API Gateway to serve static content from Amazon S3.","name":"awsx-apigateway-s3-typescript","runtime":"nodejs"}
{"description":"Show how to create a DaemonSet","name":"k8s-apps-daemonset","runtime":"nodejs"}
{"name": "app-nginx", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A pulumi stack to manage nginx deployments to kubernetes"}
{"name":"postgres","description":"Resolution of Subnets in Virtual Network","runtime":"nodejs"}
{"description":null,"runtime":"nodejs","name":"transformations_simple"}
{"name":"l2-resource-config","runtime":"yaml"}
{"name": "jubilant-journey", "runtime": "yaml", "backend": {"url": "file://."}, "resources": {"password": {"type": "random:RandomPassword", "properties": {"length": 16, "special": true, "overrideSpecial": "!#$%&*()-_=+[]{}<>:?"}}, "postgres-image": {"type": "docker:RemoteImage", "properties": {"name": "postgres:15-alpine"}}, "postgres-container": {"type": "docker:Container", "properties": {"image": "${postgres-image.imageId}", "name": "postgres", "restart": "always", "wait": true, "healthcheck": {"tests": ["CMD-SHELL", "pg_isready", "-d", "postgres"], "interval": "30s", "retries": 3, "startPeriod": "0s", "timeout": "5s"}, "envs": ["POSTGRES_PASSWORD=${password.result}"], "ports": [{"internal": 5432, "external": 5432}]}}, "postgres-provider": {"type": "pulumi:providers:postgresql", "properties": {"host": "localhost", "port": 5432, "username": "postgres", "password": "${password.result}", "database": "postgres", "sslmode": "disable"}, "options": {"dependsOn": ["${postgres-container}"]}}, "my_role": {"type": "postgresql:Role", "properties": {"name": "my_role", "login": true, "password": "mypass"}, "options": {"provider": "${postgres-provider}"}}}}
{"runtime":{"name":"yaml"},"outputs":{"superSecret":{"fn::secret":"${randomPassword}"}},"resources":{"randomPassword":{"properties":{"numeric":"1","special":"1","lower":"1","length":"16","upper":"1"},"type":"random:RandomPassword"}},"name":"resource-secret"}
{"name":"construct_component_plain_py","description":"A program that constructs a remote component resource with prompt inputs.","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"runtime":"python"}
{"description":"A simple command example","runtime":"nodejs","name":"command-lambda"}
{"description":"A minimal TypeScript Pulumi program","name":"sol","runtime":"nodejs"}
{"name":"construct_component_failures_go","description":"A program that constructs remote component resources with a constructor that returns an error.","runtime":"go"}
{"main":"pulumi/","name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","runtime":"nodejs"}
{"name":"qcon-k8s-step2","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"description":"Voting app that uses containers","name":"voting-app"}
{"outputs":{"desiredNumberScheduled":"${ds.status.desiredNumberScheduled}","currentNumberScheduled":"${ds.status.currentNumberScheduled}","numberReady":"${ds.status.numberReady}","numberMisscheduled":"${ds.status.numberMisscheduled}"},"resources":{"ds":{"options":{"customTimeouts":{"update":"60s","create":"60s","delete":"60s"}},"properties":{"spec":{"selector":{"matchLabels":{"foo":"bar"}},"minReadySeconds":"5","template":{"metadata":{"labels":{"foo":"bar"}},"spec":{"containers":[{"name":"nginx","image":"nginx:stable-alpine-slim"}]}}},"metadata":{"name":"await-daemonset"}},"type":"kubernetes:apps/v1:DaemonSet"}},"runtime":"yaml","name":"await-daemonset"}
{"description":"Run a TypeScript program where package.json is in a parent directory, and no main field is provided in package.json.","name":"package-json-in-parent-dir-without-main","runtime":"nodejs"}
{"runtime":"dotnet","description":"Basic example of an AWS lambda using C#","name":"lambda"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-apisix-server","runtime":"python","description":"Manage deployment of a apisix server"}
{"resources":{"provider":{"properties":{"namespace":"${ns.metadata.name}"},"type":"pulumi:providers:kubernetes"},"ns":{"type":"kubernetes:core/v1:Namespace"},"service-account":{"properties":{"metadata":{"annotations":{"foo":"bar"}}},"type":"kubernetes:core/v1:ServiceAccount","options":{"provider":"${provider}"}}},"name":"await-service-account","runtime":"yaml","description":"Test await logic with service accounts."}
{"description":"Test mutability and immutability for Secrets and ConfigMaps, as well as\nreplacement interactions with downstream dependencies.\n","name":"immutability","outputs":{"autonamedSecret":"${autonamed-secret-downstream.id}","mutableConfigmap":"${mutable-configmap-downstream.id}","mutableSecret":"${mutable-secret-downstream.id}","secret":"${secret-downstream.id}","autonamedConfigmap":"${autonamed-configmap-downstream.id}","configmap":"${configmap-downstream.id}"},"resources":{"autonamed-secret-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${autonamed-secret.metadata.name}"}}},"ns":{"type":"kubernetes:core/v1:Namespace"},"autonamed-configmap":{"type":"kubernetes:core/v1:ConfigMap","properties":{"immutable":"1","data":{"foo":"foo"}},"options":{"provider":"${provider}"}},"mutable-secret-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${mutable-secret.metadata.name}"}}},"secret":{"options":{"provider":"${provider}"},"properties":{"metadata":{"name":"secret"},"immutable":"1","stringData":{"foo":"foo"}},"type":"kubernetes:core/v1:Secret"},"autonamed-configmap-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${autonamed-configmap.metadata.name}"}}},"mutable-configmap-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${mutable-configmap.metadata.name}"}}},"secret-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${secret.metadata.name}"}}},"mutable-configmap":{"properties":{"data":{"foo":"foo"}},"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${provider}"}},"configmap":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:ConfigMap","properties":{"data":{"foo":"foo"},"immutable":"1","metadata":{"name":"configmap"}}},"provider":{"type":"pulumi:providers:kubernetes","properties":{"enableSecretMutable":"1","namespace":"${ns.metadata.name}","enableConfigMapMutable":"1"}},"configmap-downstream":{"properties":{"keepers":{"upstream":"${configmap.metadata.name}"}},"type":"random:RandomPet"},"mutable-secret":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Secret","properties":{"stringData":{"foo":"foo"}}},"autonamed-secret":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Secret","properties":{"immutable":"1","stringData":{"foo":"foo"}}}},"runtime":"yaml"}
{"name":"kubernetes-sample-project","description":"A sample Pulumi Kotlin Kubernetes program","runtime":"java"}
{"name": "benchmark-rest-frameworks", "runtime": "nodejs", "description": "Fun project on Drag racing restful frameworks"}
{"runtime":"yaml","name":"l1-output-map"}
{"runtime":"python","name":"construct_component_methods_unknown_py","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"description":"A program that constructs remote component resources with methods and unknowns."}
{"name":"cbp-azure-go","description":"An example of building/publishing a Docker container image to Azure ACR","runtime":"go"}
{"name":"awsx-ecr-repository-go","runtime":"go","description":"An example that creates a container-image repository in Amazon Elastic Container Registry (ECR)."}
{"name":"pinterestClone","runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","main":"pulumi/"}
{"description":"removal-policy integration test","runtime":"nodejs","name":"pulumi-aws-removal-policy"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Thing C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"go","description":"An example that creates a new VPC with a custom subnet specification.","name":"awsx-vpc-subnets-go"}
{"runtime":"nodejs","name":"awsx-elb-vpc-typescript","description":"An example that deploys an ApplicationLoadBalancer in a VPC."}
{"runtime":"nodejs","description":"An example of building/publishing a Docker container image to Google Cloud GCR","name":"cbp-gcp-ts"}
{"name":"l2-engine-update-options","runtime":{"options":{"virtualenv":"venv","typechecker":"mypy"},"name":"python"}}
{"name": "alb-ec2-instance", "runtime": "nodejs", "description": "A simple application load balancer example using ec2 instances."}
{"name":"secret_reloader","runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"name":"awsx-elb-private-subnet-typescript","description":"An example that deploys an ApplicationLoadBalancer listening on a private subnet.","runtime":"nodejs"}
{"name": "kubernetes-go", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Aurora Read Replica Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"An example that creates a new VPC with a custom NAT gateway strategy.","name":"awsx-vpc-nat-gateways-typescript","runtime":"nodejs"}
{"description":"Look up a VPC and subnets then deploy an EC2 instance","name":"ec2-existing-vpc","runtime":"python"}
{"description":"Basic example of an ecs instance","template":{"config":{"alicloud:region":{"description":"The Alicloud region to deploy into","default":"us-east-1"}}},"name":"alicloud-ts-ecs","runtime":"nodejs"}
{"description":"A minimal Go Pulumi program","name":"pulumi-oci","runtime":"go"}
{"name":"perf-empty","runtime":"python"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS LocalGatewayRouteTableVpcAssociation TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Basic example of creating a slackbot","template":{"config":{"gcp:region":{"default":"us-central1","description":"The GCP region to deploy into"}}},"runtime":"nodejs","name":"gcp-ts-slack"}
{"description":"Setup temporary s3 bucket for this project","runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"name":"setup-s3-temp"}
{"name":"${PROJECT}","runtime":"java","description":"${DESCRIPTION}","template":{"description":"A minimal Java Pulumi program with Gradle builds"}}
{"runtime":"python","name":"config_basic_py","description":"A simple Python program that uses configuration."}
{"description":"Example of a Kubernetes Stateless Application Deployment, using Nginx","name":"kubernetes-py-nginx","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":"go","description":"An example that deploys an EC2 instance using a VPC and security group with Crosswalk for AWS.","name":"awsx-vpc-sg-ec2-go"}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"lambda-import-ts","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"name":"awsx-apigateway-auth-cognito-javascript","description":"An example that deploys an API Gateway REST API with an Amazon Cognito authorizer.","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"description":"Deploy wordpress.","name":"k8s-apps-wordpress","runtime":"nodejs"}
{"runtime":"nodejs","description":"An empty Node.js Pulumi program.","name":"emptyjs"}
{"description":"An example that creates an S3 bucket and bucket object","name":"aws-s3bucket-bucketobject-interpolate-typescript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Index Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"ssh_keys","runtime":"go","description":"A minimal Go Pulumi program"}
{"name":"gcp-import-service-account-go","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-go"}}},"runtime":"go","description":"An example that deploys the configuration necessary to import a Service Account resource in Google Cloud."}
{"description":"Basic example of a Google Cloud web server accessible over HTTP","name":"gcp-py-webserver","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:zone":{"description":"The Google Cloud zone","default":"us-central1-a"}}},"runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"},"description":"Manage infrastructure required by MITx","name":"ol-infrastructure-mitx"}
{"description":"Tests Server-side Apply support","runtime":"go","name":"server-side-apply-test"}
{"name": "webapp-customdomain", "description": "A minimal Azure Native Python Pulumi program", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name": "azure-cs-sqlserver", "runtime": "dotnet", "description": "An example of a SQLServer on Azure PaaS"}
{"description":"An example that deploys the configuration necessary to import a Service Account resource in Google Cloud.","runtime":{"name":"python","options":{"virtualenv":"venv","toolchain":"pip"}},"name":"gcp-import-service-account-python","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}}}
{"description":"Serverless Analytics on AWS","runtime":"nodejs","name":"aws-ts-serverless-datawarehouse"}
{"runtime":{"name":"python"},"description":"The IaC part for the BigTesty project","name":"bigtesty"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"nodesPerZone":{"default":"1","description":"The desired number of nodes PER ZONE in the nodepool"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"}},"description":"A C# program to deploy a Kubernetes cluster on Google Cloud"},"runtime":"dotnet"}
{"name":"l2-resource-primitives","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"runtime":"nodejs","name":"import_node","description":"A minimal NodeJS program to test relative provider plugin paths.","plugins":{"providers":[{"name":"testprovider","path":"../../testprovider"}]}}
{"description":"Windmill Benchmarks on AWS","name":"aws-bench","runtime":"nodejs"}
{"name":"nested_config","description":"A minimal Go Pulumi program","runtime":"go"}
{"description":"A program that replaces a resource with a new name and alias.","runtime":"python","name":"aliases_retype_component"}
{"name":"l2-provider-grpc-config-secret","runtime":"nodejs"}
{"runtime":"python","name":"construct_component_methods_resources_py","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"description":"A program that constructs remote component resources with methods that create resources."}
{"runtime":"go","name":"aws-ec2-vpc-resources-go","description":"An example that deploys a VPC with an internet gateway, public subnet, route table, and security group, and launches an Amazon Linux EC2 instance with Nginx."}
{"name":"l2-large-string","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS HaproxyLayer TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l2-destroy","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "AWS Cloud Map Service Discovery", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"network-go","runtime":"go","description":"Basic example of an Azure networking in Go"}
{"name":"python_await","runtime":"python","description":"A python program to test if non-exported outputs are awaited"}
{"name":"get-tests","description":"A program that tests that we can use `CustomResource#get` on Kubernetes resources.","runtime":"nodejs"}
{"variables":{"kubeconfig":{"fn::invoke":{"arguments":{"resourceName":"${myAKSCluster.name}","resourceGroupName":"${myAKSClusterResourceGroup.name}"},"function":"azure-native:containerservice/v20240102preview:listManagedClusterUserCredentials"}}},"resources":{"rabbitmqDeployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${myk8sProvider}"},"properties":{"spec":{"selector":{"matchLabels":{"app":"rabbitmq"}},"replicas":"1","template":{"metadata":{"labels":{"app":"rabbitmq"}},"spec":{"nodeSelector":{"kubernetes.io/os":"linux"},"containers":[{"name":"rabbitmq","resources":{"requests":{"memory":"128Mi","cpu":"10m"},"limits":{"memory":"256Mi","cpu":"250m"}},"ports":[{"name":"rabbitmq-amqp","containerPort":"5672"},{"name":"rabbitmq-http","containerPort":"15672"}],"image":"mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine","env":[{"name":"RABBITMQ_DEFAULT_USER","value":"username"},{"name":"RABBITMQ_DEFAULT_PASS","value":"password"}],"volumeMounts":[{"mountPath":"/etc/rabbitmq/enabled_plugins","subPath":"enabled_plugins","name":"rabbitmq-enabled-plugins"}]}],"volumes":[{"name":"rabbitmq-enabled-plugins","configMap":{"name":"rabbitmq-enabled-plugins","items":[{"path":"enabled_plugins","key":"rabbitmq_enabled_plugins"}]}}]}}},"metadata":{"name":"rabbitmq"}}},"myk8sProvider":{"properties":{"enableServerSideApply":"1","kubeconfig":{"fn::fromBase64":"${kubeconfig.kubeconfigs[0].value}"}},"type":"pulumi:providers:kubernetes"},"orderServiceDeployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${myk8sProvider}"},"properties":{"metadata":{"name":"order-service"},"spec":{"selector":{"matchLabels":{"app":"order-service"}},"replicas":"1","template":{"metadata":{"labels":{"app":"order-service"}},"spec":{"initContainers":[{"image":"busybox","command":["sh","-c","until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;"],"resources":{"limits":{"cpu":"75m","memory":"128Mi"},"requests":{"cpu":"1m","memory":"50Mi"}},"name":"wait-for-rabbitmq"}],"nodeSelector":{"kubernetes.io/os":"linux"},"containers":[{"name":"order-service","resources":{"limits":{"memory":"128Mi","cpu":"75m"},"requests":{"cpu":"1m","memory":"50Mi"}},"ports":[{"containerPort":"3000"}],"env":[{"value":"rabbitmq","name":"ORDER_QUEUE_HOSTNAME"},{"value":"5672","name":"ORDER_QUEUE_PORT"},{"value":"username","name":"ORDER_QUEUE_USERNAME"},{"value":"password","name":"ORDER_QUEUE_PASSWORD"},{"value":"0.0.0.0","name":"FASTIFY_ADDRESS"}],"image":"ghcr.io/azure-samples/aks-store-demo/order-service:latest"}]}}}}},"frontendService":{"options":{"provider":"${myk8sProvider}"},"properties":{"metadata":{"name":"store-front"},"spec":{"type":"LoadBalancer","selector":{"app":"store-front"},"ports":[{"port":"80","targetPort":"8080"}]}},"type":"kubernetes:core/v1:Service"},"spotinst-kubernetes-cluster-controller":{"type":"kubernetes:helm.sh/v3:Release","properties":{"values":{"metrics-server":{"deployChart":""},"spotinst":{"account":"${spot-account}","clusterIdentifier":"${myAKSCluster.name}","token":"${spot-token}"}},"namespace":"spot-ocean","version":"1.0.122","createNamespace":"1","repositoryOpts":{"repo":"https://spotinst.github.io/spotinst-kubernetes-helm-charts"},"chart":"spotinst-kubernetes-cluster-controller"},"options":{"provider":"${myk8sProvider}"}},"rabbitmqConfigMap":{"type":"kubernetes:core/v1:ConfigMap","properties":{"metadata":{"name":"rabbitmq-enabled-plugins"},"data":{"rabbitmq_enabled_plugins":"[rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\n"}},"options":{"provider":"${myk8sProvider}"}},"frontendDeployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${myk8sProvider}"},"properties":{"spec":{"selector":{"matchLabels":{"app":"store-front"}},"template":{"metadata":{"labels":{"app":"store-front"}},"spec":{"containers":[{"resources":{"requests":{"memory":"200Mi","cpu":"1m"},"limits":{"cpu":"1000m","memory":"512Mi"}},"name":"store-front","ports":[{"name":"store-front","containerPort":"8080"}],"env":[{"name":"VUE_APP_ORDER_SERVICE_URL","value":"http://order-service:3000/"},{"name":"VUE_APP_PRODUCT_SERVICE_URL","value":"http://product-service:3002/"}],"image":"ghcr.io/azure-samples/aks-store-demo/store-front:latest"}],"nodeSelector":{"kubernetes.io/os":"linux"}}},"replicas":"1"},"metadata":{"name":"store-front"}}},"rabbitmqService":{"options":{"provider":"${myk8sProvider}"},"properties":{"metadata":{"name":"rabbitmq"},"spec":{"type":"ClusterIP","selector":{"app":"rabbitmq"},"ports":[{"name":"rabbitmq-amqp","port":"5672","targetPort":"5672"},{"port":"15672","name":"rabbitmq-http","targetPort":"15672"}]}},"type":"kubernetes:core/v1:Service"},"myAKSClusterResourceGroup":{"type":"azure-native:resources:ResourceGroup","properties":{"resourceGroupName":"pulumi2spotinst"}},"productServiceService":{"options":{"provider":"${myk8sProvider}"},"properties":{"metadata":{"name":"product-service"},"spec":{"selector":{"app":"product-service"},"ports":[{"targetPort":"3002","name":"http","port":"3002"}],"type":"ClusterIP"}},"type":"kubernetes:core/v1:Service"},"productServiceDeployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${myk8sProvider}"},"properties":{"spec":{"template":{"spec":{"containers":[{"name":"product-service","resources":{"requests":{"memory":"1Mi","cpu":"1m"},"limits":{"memory":"7Mi","cpu":"1m"}},"ports":[{"containerPort":"3002"}],"image":"ghcr.io/azure-samples/aks-store-demo/product-service:latest"}],"nodeSelector":{"kubernetes.io/os":"linux"}},"metadata":{"labels":{"app":"product-service"}}},"replicas":"1","selector":{"matchLabels":{"app":"product-service"}}},"metadata":{"name":"product-service"}}},"orderServiceService":{"properties":{"spec":{"type":"ClusterIP","selector":{"app":"order-service"},"ports":[{"targetPort":"3000","port":"3000","name":"http"}]},"metadata":{"name":"order-service"}},"options":{"provider":"${myk8sProvider}"},"type":"kubernetes:core/v1:Service"},"myAKSCluster":{"type":"azure-native:containerservice/v20240102preview:ManagedCluster","properties":{"kubernetesVersion":"1.29.0","resourceGroupName":"${myAKSClusterResourceGroup.name}","resourceName":"spotinstdevreldemos","agentPoolProfiles":[{"vmSize":"Standard_B2ms","osDiskSizeGB":"30","type":"VirtualMachineScaleSets","count":"3","mode":"System","osType":"Linux","name":"agentpool"}],"servicePrincipalProfile":null,"identity":{"type":"SystemAssigned"},"networkProfile":{"networkDataplane":"cilium","networkPluginMode":"overlay","networkPlugin":"azure","networkPolicy":"cilium","podCidr":"192.168.0.0/16"},"nodeResourceGroup":"${myAKSClusterResourceGroup.name}-nodes","dnsPrefix":"${myAKSClusterResourceGroup.name}"}}},"name":"az-getting-started-aks-yaml","runtime":"yaml","outputs":{"serviceIp":"${frontendService.status.loadBalancer.ingress[0].ip}"},"description":"A minimal Pulumi YAML program"}
{"description":"An example of configuring an API Gateway instance with an OpenAPI/Swagger JSON definition.","runtime":"dotnet","name":"awsx-apigateway-openapi-full-csharp"}
{"runtime":"nodejs","name":"patch-resources"}
{"runtime":"nodejs","description":"Creating a GitHub Repository in TypeScript","name":"repo-ts"}
{"description":"A simple example of using SSM Parameters.","name":"ssmparamter","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Example IAM Role for EKS Node Group", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getHostedZoneId Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"k8s-apps-daemonset-datadog","description":"A DaemonSet that deploys DataDog on all nodes.","runtime":"nodejs"}
{"description":"A program that creates some resources for testing a resource's parent and dependencies.","runtime":"nodejs","name":"parent_dependencies"}
{"name": "aws-ebs-failure-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-invoke-dependencies"}
{"resources":{"repository":{"type":"awsx:ecr:Repository"}},"description":"An example that creates a container-image repository in Amazon Elastic Container Registry (ECR).","name":"awsx-ecr-repository-yaml","outputs":{"url":"${repository.url}"},"runtime":"yaml"}
{"name":"command-random","description":"A simple command example","runtime":"nodejs"}
{"template":{"description":"A minimal Pinecone TypeScript Pulumi program"},"runtime":"nodejs","name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "quickstart", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"awsx-elb-multi-listener-redirect-javascript","description":"An example of an ApplicationLoadBalancer with multiple listeners and a custom redirect action."}
{"description":"An example that deploys an API Gateway REST API with a single endpoint backed by AWS Lambda.","name":"awsx-apigateway-lambda-go","runtime":"go"}
{"description":"A program that constructs remote component resources with a bunch of resource options.","name":"construct_component_resource_options_go","runtime":"go"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Virtual Node Provider", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Create multiple Azure Kubernetes Service (AKS) clusters in different regions and with different node counts","runtime":"go","template":{"config":{"location":{"description":"The location to use for the Azure Resource Group"},"azure:environment":{"description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)","default":"public"},"sshPublicKey":{"description":"Your SSH public key (generate with `ssh-keygen -t rsa -f key.rsa`)"}}},"name":"azure-go-aks-multicluster"}
{"runtime":"nodejs","name":"02-kubernetes-selfhosted-gke","description":"Kubernetes cluster for Pulumi GKE self-hosted installation."}
{"name":"aliases_rename_component","description":"A program that replaces a resource with a new name and alias.","runtime":"go"}
{"description":"Besom random test","name":"random-besom-test","runtime":{"name":"scala","options":{"logtostderr":"","v":"0"}}}
{"runtime":"yaml","name":"awsx-apigateway-openapi-route-yaml","resources":{"my-bucket":{"type":"aws:s3:BucketV2"}},"description":"An example of configuring an API Gateway route with an OpenAPI/Swagger definition.","outputs":{"bucketName":"${my-bucket.id}"}}
{"description":"Testing WAFv2 WebAcl","runtime":"yaml","name":"webAcl","resources":{"acl":{"type":"aws-native:wafv2:WebAcl","properties":{"defaultAction":{"block":{}},"visibilityConfig":{"metricName":"frontend","sampledRequestsEnabled":"1","cloudWatchMetricsEnabled":"1"},"scope":"REGIONAL","rules":[{"name":"AWS-AWSManagedRulesCommonRuleSet","overrideAction":{"none":{}},"statement":{"managedRuleGroupStatement":{"name":"AWSManagedRulesCommonRuleSet","vendorName":"AWS"}},"priority":"1","visibilityConfig":{"sampledRequestsEnabled":"1","cloudWatchMetricsEnabled":"1","metricName":"AWSManagedRulesCommonRuleSet"}}]}},"provider":{"properties":{"skipCredentialsValidation":"1","region":"us-east-2"},"options":{"version":"0.95.0"},"defaultProvider":"1","type":"pulumi:providers:aws-native"}}}
{"name":"webserver","runtime":"nodejs","description":"Basic example of an AWS web server accessible over HTTP."}
{"name":"aws-eks","variables":{"vpcId":{"Fn::Invoke":{"Arguments":{"default":"1"},"Function":"aws:ec2:getVpc","Return":"id"}},"subnetIds":{"Fn::Invoke":{"Function":"aws:ec2:getSubnetIds","Arguments":{"vpcId":"${vpcId}"},"Return":"ids"}}},"resources":{"cluster":{"type":"eks:Cluster","properties":{"maxSize":"2","createOidcProvider":"1","instanceType":"t2.medium","subnetIds":"${subnetIds}","desiredCapacity":"2","vpcId":"${vpcId}","minSize":"1"}}},"outputs":{"kubeconfig":"${cluster.kubeconfig}"},"runtime":"yaml","description":"An EKS cluster"}
{"name": "aws-eks", "runtime": "yaml", "description": "An EKS cluster", "variables": {"vpcId": {"fn::invoke": {"function": "aws:ec2:getVpc", "arguments": {"default": true}, "Return": "id"}}, "subnetIds": {"fn::invoke": {"function": "aws:ec2:getSubnets", "arguments": {"filters": [{"name": "vpc-id", "values": ["${vpcId}"]}]}, "Return": "ids"}}}, "resources": {"cluster": {"type": "eks:Cluster", "properties": {"vpcId": "${vpcId}", "subnetIds": "${subnetIds}", "instanceType": "t2.medium", "desiredCapacity": 2, "minSize": 1, "maxSize": 2}}}, "outputs": {"kubeconfig": "${cluster.kubeconfig}"}}
{"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"builder":{"description":"Your existing Docker Build Cloud builder. (e.g., cloud-pulumi-my-cool-builder)"}},"description":"An example that builds a Docker image in DBC and deploys a container to AWS Fargate."},"name":"${PROJECT}","runtime":"nodejs","description":"${DESCRIPTION}"}
{"runtime":"go","name":"emptygorunmain","description":"An empty Go Pulumi program.","main":"./gorun_main_src/"}
{"description":"A minimal Kubernetes TypeScript Pulumi program","name":"qcon-k8s-step1","runtime":"nodejs"}
{"runtime":"nodejs","name":"exclude-protected","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":{"name":"python"},"description":"A minimal AWS Python Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"name":"infra"}
{"name":"nginxmanifest","runtime":"go","description":"A minimal Kubernetes Go Pulumi program"}
{"description":"An example that retrieves and exports a Pulumi config value","name":"aws-import-export-pulumi-config-javascript","runtime":{"options":{"typescript":""},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}}}
{"description":"A simple example of using the `Bucket` APIs using Python.","runtime":"python","name":"bucket-py"}
{"runtime":{"name":"nodejs","options":{"packagemanager":"npm","typescript":""}},"config":{"pulumi:tags":{"value":{"pulumi:template":"azure-javascript"}}},"description":"An example that provides the code to import an existing resource group from Azure.","name":"azure-native-import-resource-group-javascript"}
{"resources":{"provider":{"type":"pulumi:providers:kubernetes","properties":{"namespace":"${ns.metadata.name}"}},"pvc":{"type":"kubernetes:core/v1:PersistentVolumeClaim","properties":{"spec":{"storageClassName":"${sc.metadata.name}","resources":{"requests":{"storage":"1Mi"}},"accessModes":["ReadWriteOnce"]}},"options":{"provider":"${provider}"}},"ns":{"type":"kubernetes:core/v1:Namespace"},"pv":{"type":"kubernetes:core/v1:PersistentVolume","options":{"provider":"${provider}"},"properties":{"spec":{"hostPath":{"path":"/tmp/foo","type":"DirectoryOrCreate"},"capacity":{"storage":"1Mi"},"volumeMode":"Filesystem","accessModes":["ReadWriteOnce"],"persistentVolumeReclaimPolicy":"Delete","storageClassName":"${sc.metadata.name}"}}},"sc":{"properties":{"provisioner":"kubernetes.io/no-provisioner","volumeBindingMode":"WaitForFirstConsumer"},"options":{"provider":"${provider}"},"type":"kubernetes:storage.k8s.io/v1:StorageClass"}},"description":"Tests PVC with WaitForFirstConsumer (https://github.com/pulumi/pulumi-kubernetes/issues/895)\n","runtime":"yaml","name":"pvc","outputs":{"status":"${pvc.status.phase}"}}
{"description":"An example that deploys an API Gateway REST API with an Amazon Cognito authorizer.","outputs":{"url":"${api.url}"},"name":"awsx-apigateway-auth-cognito-yaml","runtime":"yaml","resources":{"userPool":{"type":"aws:cognito:UserPool"},"api":{"type":"aws-apigateway:RestAPI","properties":{"routes":[{"path":"/","authorizers":[{"identitySource":["method.request.header.Authorization"],"parameterName":"Authorization","providerARNs":["${userPool.arn}"]}],"localPath":"www"}]}}}}
{"name":"test-aws-1655-sdkv2","resources":{"res":{"type":"aws:cognito:UserPool","options":{"provider":"${aws-provider}"},"properties":{"aliasAttributes":["email"],"tags":{"fizz":"buzz"}}},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux"}}},"type":"pulumi:providers:aws"}},"runtime":"yaml","description":"Add a resource specific tag: `foo: buzz`\n","outputs":{"actual":"${res.tags}"}}
{"name": "grafana.go", "runtime": "go", "description": "Run Grafana in Fargate"}
{"description":"Basic example of an AWS web server accessible over HTTP.","runtime":"nodejs","name":"webserver"}
{"name": "retrosync-signalling-server", "runtime": "nodejs", "description": "A TypeScript program to deploy a serverless application on AWS"}
{"description":"GitOps Bridge Implementation with Pulumi Typescript","name":"gitops-bridge-ts","runtime":"nodejs"}
{"runtime":"nodejs","name":"azure-cluster","description":"Azure VMSS Cluster management","template":{"config":{"azure-cluster:vmss-name":{"description":"The name of the VMSS cluster to retrieve"},"azure-cluster:vmss-id":{"description":"The ID of the VMSS cluster to retrieve"}}}}
{"description":"${DESCRIPTION}","template":{"description":"A TypeScript program to deploy a containerized service on Azure","config":{"appPath":{"description":"The path to the container application to deploy","default":"app"},"containerPort":{"default":"80","description":"The port to expose on the container"},"memory":{"description":"The amount of memory, in GB, to allocate on the container","default":"2"},"azure-native:location":{"description":"The Azure region to deploy into","default":"WestUS"},"cpu":{"description":"The number of CPU cores to allocate on the container","default":"1"}}},"name":"${PROJECT}","runtime":{"name":"nodejs"}}
{"description":"A simple example of Google Pubsub","name":"google-native-pubsub-ts","runtime":"nodejs"}
{"runtime":"yaml","outputs":{"pulumiLabels":"${key.pulumiLabels}","labels":"${key.labels}","effectiveLabels":"${key.effectiveLabels}"},"resources":{"key":{"properties":{"keyRing":"${ring.id}","labels":{"empty":""}},"options":{"retainOnDelete":"1"},"type":"gcp:kms:CryptoKey"},"ring":{"properties":{"location":"us-central1"},"type":"gcp:kms:KeyRing"}},"name":"empty-alone-label"}
{"description":"test for dynamic provider secret capture","name":"dynamic-provider-secret-py","runtime":"python"}
{"name":"aws-s3-bucket-resources-csharp","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"runtime":"dotnet","description":"An example that deploys S3 bucket, metric, notification, object, and policy resources."}
{"name":"l2-explicit-parameterized-provider","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"resources":{"mysubnet2":{"properties":{"cidrBlock":"10.0.2.0/24","vpcId":"${myVpc.id}","availabilityZone":"us-west-2b"},"type":"aws:ec2:Subnet"},"subnetgroup":{"type":"aws:rds:SubnetGroup","properties":{"subnetIds":["${mysubnet.id}","${mysubnet2.id}"]}},"mysubnet":{"properties":{"cidrBlock":"10.0.1.0/24","vpcId":"${myVpc.id}","availabilityZone":"us-west-2a"},"type":"aws:ec2:Subnet"},"myVpc":{"properties":{"cidrBlock":"10.0.0.0/16"},"type":"aws:ec2:Vpc"}},"runtime":"yaml","name":"subnet-group"}
{"runtime":"nodejs","name":"azure-ts-appservice-docker","description":"Creates Azure App Service and Deploys Docker images to"}
{"name":"pulumi-custom-resource","description":"CDK custom resource example","runtime":"nodejs"}
{"description":"An example that deploys S3 bucket, metric, notification, object, and policy resources.","name":"aws-s3-bucket-resources-go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"runtime":"go"}
{"description":"coin stack","name":"gnosis","runtime":"nodejs"}
{"name":"${PROJECT}","description":"${DESCRIPTION}","template":{"description":"A Go program to deploy a web application onto a Kubernetes cluster","config":{"replicas":{"description":"The number of replicas to deploy","default":"1"},"namespace":{"default":"default","description":"The Kubernetes namespace to deploy into"}}},"runtime":"go"}
{"name":"aliases-test","runtime":"nodejs","description":"A program that tests apiVersion aliasing."}
{"runtime":"nodejs","name":"construct_component_methods_provider_nodejs","description":"A program that constructs remote component resources with methods and an explicit provider set for another package."}
{"name": "plam", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"mock","main":"subdir","name":"l1-main"}
{"description":"Multi-region deployment of Azure Functions and Cosmos DB with Traffic Manager","name":"azure-ts-serverless-url-shorterner-global","template":{"config":{"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"locations":{"default":"westus,westeurope","description":"Comma-separated list of location aliases"},"azure:environment":{"default":"public","description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)"}}},"runtime":"nodejs"}
{"description":"A program that constructs remote component resources with methods that create resources.","runtime":"go","name":"construct_component_methods_resources_go","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]}}
{"name":"awsx-apigateway-s3-go","description":"An example that uses API Gateway to serve static content from Amazon S3.","runtime":"go"}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}},"name":"aws-ts-apigateway","runtime":"nodejs","description":"Basic example of using AWS API Gateway"}
{"description":"EKS cluster example","name":"aws-ts-eks","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"runtime":"nodejs"}
{"runtime":"nodejs","name":"sample","description":"Pulumi Kubernetes CRD sample"}
{"name":"helm-release","runtime":"python","description":"A program that tests Helm release creation"}
{"name": "ciem-aws-iam-user-mfa-not-enabled", "runtime": "go", "description": "This scenario creates an AWS IAM user with console access, but without Multi-Factor Authentication (MFA) enabled, posing a security risk. To remediate, modify the script to include enabling MFA while creating the user profile.", "cnappgoat-params": {"description": "This scenario creates an AWS Identity and Access Management (IAM) user without Multi-Factor Authentication (MFA) and a login profile, using Pulumi's AWS and SDK libraries. The issue with this is it does not follow security best practices as IAM users with console access should have MFA enabled for security reasons. To remedy this situation, the program should be modified to include steps for enabling MFA during or after the user creation process.", "friendlyName": "User MFA Not Enabled", "id": "ciem-aws-iam-user-mfa-not-enabled", "module": "ciem", "scenarioType": "native", "platform": "aws"}}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}},"description":"Basic example of defining an AWS AppSync endpoint from Pulumi","runtime":"nodejs","name":"aws-ts-appsync"}
{"description":"Example of using AWS API Gateway v2 HTTP API","name":"aws-ts-apigatewayv2-http-api","runtime":"nodejs"}
{"description":"Environment template for AWS Proton workshop demo","runtime":"nodejs","name":"workshop-aws-proton-env-template"}
{"description":"A Pulumi program deploying another Pulumi program to Azure. Mainly useful for testing managed identity authentication since it needs to run in an Azure environment. Also an example and test of using the Command provider's CopyToRemote in Azure.\n","name":"go-azure-in-azure","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-go"}}},"runtime":"go"}
{"runtime":"python","name":"aks-python","description":"Create an AKS cluster with Pulumi and Python"}
{"name": "ceramic", "runtime": "nodejs", "description": "Ceramic nodes used with dpopp projects"}
{"description":"A minimal Go Pulumi program","name":"nested_config","runtime":"go"}
{"description":"the-big-fan CDK example","runtime":"nodejs","name":"the-big-fan"}
{"description":"A minimal Azure AKS TypeScript Pulumi program","runtime":"nodejs","name":"azure-ts-aks"}
{"runtime":"yaml","name":"consume-assets","plugins":{"providers":[{"name":"assets","path":".."}]},"resources":{"assetsResource":{"type":"assets:HasAssets","properties":{"a1":{"fn::fileAsset":"./file.txt"},"a2":{"fn::fileArchive":"./file.txt.zip"}}}}}
{"name": "pulumi-serverless-combined", "description": "Serverless REST API with Lambda defined inline.", "runtime": "nodejs"}
{"name":"encryption-provider","runtime":"nodejs","description":"Example of using KMS for envelope encryption of Kubernetes secrets in EKS"}
{"runtime":"java","name":"l2-destroy"}
{"name": "do-k8s-cluster", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name": "cloudrun", "runtime": "nodejs", "description": "Eventuous sample application deployment to Google Cloud Run"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"azure-py-aks","description":"Using the native Azure provider to create AKS cluster with python"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"An example for com.pulumi.kubernetes.apiextensions.CustomResource","name":"example","runtime":"java"}
{"template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"path":{"description":"The path to the folder containing the website","default":"./www"}},"description":"A Python program to deploy a static website on Google Cloud"},"runtime":"python","name":"${PROJECT}","description":"${DESCRIPTION}"}
{"runtime":"nodejs","description":"A project that uses npm and yarn workspaces. CodePaths computation should discover dependencies across the workspaces.","name":"codepaths-workspaces"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Organization Based Aggregation", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"codebuild-project-py","runtime":"python","description":"A minimal Python Pulumi program"}
{"name":"database-cluster-digitalocean","description":"A simple database cluster on DigitalOcean.","runtime":"nodejs"}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"intro"}
{"name":"busybox","runtime":"nodejs","description":"A minimal Kubernetes JavaScript Pulumi program"}
{"runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program","name":"nodes"}
{"name":"management","resources":{"lock":{"type":"azure:management:Lock","properties":{"notes":"Locked because it is needed by a third-party","scope":"${examplePublicIp.id}","lockLevel":"CanNotDelete"}},"examplePublicIp":{"properties":{"allocationMethod":"Static","location":"${exampleResourceGroup.location}","idleTimeoutInMinutes":"30","resourceGroupName":"${exampleResourceGroup.name}"},"type":"azure:network:PublicIp"},"exampleResourceGroup":{"properties":{"location":"East US"},"type":"azure:core:ResourceGroup"}},"runtime":"yaml"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example of configuring an API Gateway instance with an OpenAPI/Swagger JSON definition.","name":"awsx-apigateway-openapi-full-python"}
{"description":"An example that deploys a Kubernetes cluster on AWS.","name":"aws-eks-cluster-go","runtime":"go"}
{"resources":{"demo-image":{"properties":{"skipPush":"1","imageName":"pulumibot/ignore-image:tag1"},"type":"docker:Image","options":{"version":"v4.0.0"}}},"name":"dockerfile-default","outputs":{"out-dockerfile":"${demo-image.dockerfile}","imageName":"${demo-image.imageName}"},"runtime":"yaml"}
{"description":"A minimal AWS Python Pulumi program","name":"vpc_with_subnets_python","runtime":"python"}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}},"description":"A minimal AWS JavaScript Pulumi program"},"name":"assettracking","runtime":"nodejs","description":"A program that deploys a minimal asset tracking infrastructure"}
{"description":"Deploys common GKE app services.","runtime":"nodejs","name":"k8s-gke-apps-svcs"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getAuthorizationToken TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l2-invoke-dependencies","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"description":"A minimal AliCloud Python project for a VPC","runtime":"python","name":"vpc-python"}
{"name":"test","runtime":{"name":"yaml"},"resources":{"tested-resource":{"properties":{"conditions":[{"conditionThreshold":{"duration":"60s","aggregations":[{"perSeriesAligner":"ALIGN_RATE","alignmentPeriod":"60s"}],"filter":"metric.type=\"compute.googleapis.com/instance/disk/write_bytes_count\" AND resource.type=\"gce_instance\"","comparison":"COMPARISON_GT"},"displayName":"test condition"}],"displayName":"My Alert Policy","combiner":"OR","userLabels":{"foo":"bar"}},"type":"gcp:monitoring:AlertPolicy","options":{"provider":"${provider}"}},"provider":{"properties":{"project":"${gcp:project}"},"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"},"type":"pulumi:providers:gcp"}}}
{"runtime":"yaml","description":"An example that deploys an API Gateway REST API with a single endpoint backed by AWS Lambda.","name":"awsx-apigateway-lambda-yaml","outputs":{"url":"${api.url}"},"resources":{"role":{"type":"aws:iam:Role","properties":{"assumeRolePolicy":{"fn::toJSON":{"Statement":[{"Action":"sts:AssumeRole","Principal":{"Service":"lambda.amazonaws.com"},"Effect":"Allow"}],"Version":"2012-10-17"}},"managedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]}},"handler":{"type":"aws:lambda:Function","properties":{"code":{"fn::fileArchive":"./function"},"runtime":"python3.9","role":"${role.arn}","handler":"handler.handler"}},"api":{"type":"aws-apigateway:RestAPI","properties":{"routes":[{"method":"GET","path":"/","eventHandler":"${handler}"}]}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Plan Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Basic example of an Azure EventHub (in Python!)","name":"eventhub-py","runtime":"python"}
{"description":"scala-cli executor test","runtime":{"name":"scala","options":{"v":"0","logtostderr":"1"}},"name":"language-plugin-test"}
{"name":"awsx-vpc-nat-gateways-csharp","runtime":"dotnet","description":"An example that creates a new VPC with a custom NAT gateway strategy."}
{"name":"pulumi-argocd-sealedsecrets","runtime":"go","description":"A minimal Go Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcAttachmentAccepter C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A program with a different main specification.","name":"project_main","main":"a/path/to/main/","runtime":"go"}
{"description":"An example that deploys an API Gateway instance with support for API keys.","name":"awsx-apigateway-api-keys-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"outputs":{"sqlElasticPoolName":"${sqlElasticPoolName}","containerAppCustomerDomainName":"${containerAppCustomerDomainName}","sqlResourceGroupName":"${sqlResourceGroupName}","resourceGroupName":"${resourceGroupName}","containerAppEnvName":"${containerAppEnvName}","containerAppRevisionImage":"${containerAppRevisionImage}","certificateId":"${certificateId}","sqlDatabaseName":"${sqlDatabaseName}","sqlServerName":"${sqlServerName}"},"name":"shesha-#{role}#-#{env}#","variables":{"certificateId":"/subscriptions/0e111515-3d91-4650-bd92-dfca52077d62/resourceGroups/containerapps-shesha-#{role}#-#{env}#-rg/providers/Microsoft.App/managedEnvironments/shesha-#{role}#-#{env}#-env/certificates/shesha.dev","adminUsername":null,"sqlDatabaseName":null,"sqlServerName":"containerapps-sql-shared","sqlElasticPoolName":"auto-pool","containerAppName":null,"containerAppCustomerDomainName":null,"registryLoginServer":null,"adminPasswords":null,"resourceGroupName":"containerapps-shesha-#{role}#-#{env}#-rg","sqlResourceGroupName":"containerapps-shared","containerAppRevisionImage":"boxfusionregistry.azurecr.io/shesha-api-rev1-images:latest","containerAppEnvName":"shesha-#{role}#-#{env}#"},"runtime":"yaml","config":{"sqlAdmin":{"default":"pulumi","type":"string"}},"resources":{"sqlDatabase":{"type":"azure:sql:Database","properties":{"location":"southafricanorth","name":"${sqlDatabaseName}","sourceDatabaseId":"/subscriptions/0e111515-3d91-4650-bd92-dfca52077d62/resourceGroups/containerapps-shared/providers/Microsoft.Sql/servers/containerapps-sql-shared/databases/#{databaseName}#","serverName":"${sqlServerName}","elasticPoolName":"${sqlElasticPoolName}","createMode":"Copy","resourceGroupName":"${sqlResourceGroupName}","tags":{"shesha":null}}},"containerApp":{"properties":{"location":"southafricanorth","tags":{"shesha":null},"resourceGroupName":"${resourceGroupName}","managedEnvironmentId":"/subscriptions/0e111515-3d91-4650-bd92-dfca52077d62/resourceGroups/containerapps-shesha-api-#{env}#-rg/providers/Microsoft.App/managedEnvironments/shesha-api-#{env}#-env","template":{"scale":{"rules":[{"name":"httpscalingrule","custom":{"metadata":{"concurrentRequests":"250"},"type":"http"}}],"maxReplicas":"5","minReplicas":"0"},"containers":[{"name":null,"image":"${containerAppRevisionImage}","resources":{"cpu":"2.0","memory":"4Gi"}}]},"configuration":{"registries":[{"server":"${registryLoginServer}","passwordSecretRef":"pwd","username":"${adminUsername}"}],"ingress":{"traffic":[{"latestRevision":"1","weight":"100","label":"firstrevision-01"}],"targetPort":"8080","customDomains":[{"certificateId":"${certificateId}","name":"${containerAppCustomerDomainName}","bindingType":"SniEnabled"}],"transport":"auto","external":"1"},"secrets":[{"value":"${adminPasswords}","name":"pwd"}]},"containerAppName":"${containerAppName}"},"type":"azure-native:app:ContainerApp"}},"description":"Shesha"}
{"template":{"description":"A minimal Java Pulumi program with Maven builds"},"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"java"}
{"outputs":{"actual":"${res.tags}"},"name":"test-aws-1655-sdkv2","description":"Add new tag: `thwomp: pow`\n","runtime":"yaml","resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux","thwomp":"pow"}}}},"res":{"options":{"provider":"${aws-provider}"},"type":"aws:cognito:UserPool","properties":{"aliasAttributes":["email"]}}}}
{"runtime":{"options":{"compiler":"brainfuck Pulumi.bf"},"name":"yaml"},"name":"bf","description":"Brainfuck example"}
{"name":"${PROJECT}","template":{"description":"A minimal AliCloud Python Pulumi program","config":{"alicloud:region":{"description":"The AliCloud region to deploy into","default":"cn-beijing"}}},"description":"${DESCRIPTION}","runtime":"python"}
{"name":"mlplatform-infra","runtime":"nodejs","description":"Infrastructure for open ML platform"}
{"name":"ec2_instance_status","description":"A minimal AWS Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"fly-go"}
{"name":"stack_outputs_program_error","runtime":"nodejs","description":"A program that exports some outputs and then errors in a later step."}
{"name":"l2-destroy","runtime":"go"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"name":"aws-py-eks","description":"A minimal AWS Python EKS example cluster"}
{"runtime":"java","description":"An example that shows how to create an EC2 instance and security group.","name":"aws-ec2-instance-with-sg-java"}
{"name": "deploy", "runtime": "nodejs", "description": "Infrastructure as code for D&D 5e REST API.", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal AWS TypeScript Pulumi program","name":"intro","runtime":"nodejs"}
{"name": "platform-infra-chart", "runtime": "nodejs", "description": "platform chart"}
{"name":"swift-vapor-layered-realworld-example-app","description":"Exemplary real world backend API built with Vapor on Swift.","runtime":"nodejs"}
{"runtime":"go","description":"A Go Pulumi program to create IAM entities for Kubernetes on AWS","name":"k8s-iam-pulumi"}
{"name": "ec2instance", "runtime": "nodejs", "description": "Basic example of an AWS EC2 instance", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Non-VPC Connection", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-apigateway-api-keys-typescript","runtime":"nodejs","description":"An example that deploys an API Gateway instance with support for API keys."}
{"name":"l2-map-keys","runtime":{"name":"python","options":{"typechecker":"mypy","virtualenv":"venv"}}}
{"name":"infrastructure","description":"Infrastructure (compute, storage, networking) for production Kubernetes infrastructure","runtime":"nodejs"}
{"description":"An example that uses API Gateway to serve static content from Amazon S3.","runtime":{"name":"nodejs","options":{"typescript":""}},"name":"awsx-apigateway-s3-javascript"}
{"description":"A minimal TypeScript Pulumi program","name":"task-definitions-with-proxy-config","runtime":"nodejs"}
{"name":"nodejs-dynamic-provider-config","description":"A simple Nodejs program that uses dynamic providers with custom resource type name.","runtime":"nodejs"}
{"runtime":"dotnet","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"}},"description":"A minimal GCP F# Pulumi program"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"description":"${DESCRIPTION}","template":{"description":"A minimal AliCloud F# Pulumi program","config":{"alicloud:region":{"description":"The AliCloud region to deploy into","default":"cn-beijing"}}},"name":"${PROJECT}","runtime":"dotnet"}
{"name":"options-test","runtime":"dotnet","config":{"pulumi:disable-default-providers":["kubernetes"]},"description":"Test options propagation with component resources."}
{"name":"http4k-examples-events","description":"http4k deployments on aws","runtime":"nodejs"}
{"description":"Besom cross stack references source stack","name":"target-stack-test","runtime":{"name":"scala"}}
{"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into."},"azCount":{"description":"The number of Availability Zones to deploy the application into."}}},"name":"networking-layer","description":"Networking layer for the aws-ts-stackreference-architecture","runtime":"nodejs"}
{"runtime":"yaml","resources":{"resourceGroup":{"properties":{"location":"West Europe"},"type":"azure:core:ResourceGroup"},"exampleProfile":{"type":"azure:cdn:Profile","properties":{"location":"${resourceGroup.location}","tags":{"cost_center":"MSFT","environment":"Production"},"resourceGroupName":"${resourceGroup.name}","sku":"standard_verizon"}}},"name":"cdn_profile"}
{"runtime":"python","name":"webserver-py-old","description":"Basic example of an Azure web server accessible over HTTP, specifying inputs with dicts."}
{"runtime":"nodejs","description":"Regression tests related to performance of large resource inputs.","name":"performance-tests"}
{"description":"Example project showing how to use Pulumi locally & with TravisCI to create Infrastructure on AWS - and then how to use & integrate Pulumi with Ansible to install Docker on the EC2 instance & continuously test it with Testinfra & pytest (TDD)","runtime":"python","name":"pulumi-example-aws-python"}
{"runtime":"dotnet","description":"A minimal VB.NET Pulumi program","name":"vbnet_s3_bucket"}
{"description":"Basic test case for codepaths with no dependencies in package.json","name":"codepaths-no-dependencies","runtime":"nodejs"}
{"runtime":"yaml","name":"l1-output-number"}
{"name":"construct_component_methods_resources_nodejs","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"description":"A program that constructs remote component resources with methods that create resources.","runtime":"nodejs"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"description":"An example that deploys an IAM role and a policy attachment with an AWS managed policy on AWS.","runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"aws-iam-role-policyattachment-managedpolicy-javascript"}
{"description":"CUE Example","runtime":{"name":"yaml","options":{"compiler":"cue export"}},"name":"cue"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Configuration Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"a yaml test","runtime":"yaml","name":"fundamentals","resources":{"backend-image":{"properties":{"name":"pulumi/tutorial-pulumi-fundamentals-backend:latest"},"type":"docker:index:RemoteImage"},"mongo-image":{"properties":{"name":"pulumi/tutorial-pulumi-fundamentals-database-local:latest"},"type":"docker:index:RemoteImage"},"frontend-image":{"type":"docker:index:RemoteImage","properties":{"name":"pulumi/tutorial-pulumi-fundamentals-frontend:latest"}}}}
{"description":"A minimal AWS TypeScript Pulumi program","name":"eks_managednodegroup_tags","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "VPN Gateway Association", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"name":"aws-s3websitebucket-oai-bucketpolicy-typescript","description":"An example that creates a website S3 bucket, a CloudFront Origin Access Identity, and a bucket policy."}
{"name":"dockerfile-with-multiple-targets","runtime":"nodejs","description":"A pulumi application that has a dockerfile with multiple targets"}
{"runtime":"yaml","resources":{"randomString":{"type":"random:RandomString","properties":{"special":"1","length":"16"}},"provider":{"properties":{"strConfigProp":"${randomString.result}","objectProp":{"strNestedProp":"${randomString.result}"}},"type":"pulumi:providers:tpsdkv2"}},"outputs":{"providerRandomString":"${provider.strConfigProp}","generatedRandomString":"${randomString.result}"},"name":"provider-config"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"channel_api","description":"A simple YouTube channel API running as a Google Cloud Function."}
{"name":"pulumi-python-uv","runtime":{"options":{"toolchain":"uv","virtualenv":"my-venv"},"name":"python"},"description":"A Python project that uses the uv toolchain where the pyproject.toml is in a parent folder."}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcIpv4CidrBlockAssociation C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-vpc-fargate-service-yaml","runtime":"yaml","resources":{"vpc":{"type":"awsx:ec2:Vpc"},"service":{"properties":{"taskDefinitionArgs":{"container":{"name":"my-service","essential":"1","image":"nginx:latest","cpu":"128","memory":"512"}},"cluster":"${cluster.arn}","desiredCount":"2","networkConfiguration":{"securityGroups":["${securityGroup.id}"],"subnets":"${vpc.privateSubnetIds}"}},"type":"awsx:ecs:FargateService"},"cluster":{"type":"aws:ecs:Cluster"},"securityGroup":{"properties":{"egress":[{"fromPort":"0","protocol":"-1","ipv6CidrBlocks":["::/0"],"toPort":"0","cidrBlocks":["0.0.0.0/0"]}],"vpcId":"${vpc.vpcId}"},"type":"aws:ec2:SecurityGroup"}}}
{"outputs":{"test_privst_after__actual":"${r.observedPrivateStateAfter}","test_privst_after__expect":"target-1","test_privst_before__expect":"","test_privst_before__actual":"${r.observedPrivateStateBefore}"},"resources":{"r":{"properties":{"targetPrivateState":"target-1"},"type":"testbridge:index/testres:Privst"}},"runtime":"yaml","name":"privst-program"}
{"description":"A minimal Stack Readme Python program","name":"stack-readme-py","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"l2-target-up-with-new-dependency","runtime":"go"}
{"name":"l2-engine-update-options","runtime":"java"}
{"runtime":"nodejs","description":"An example that applies PaC-based integration testing to provisioning an AWS EKS cluster.","name":"pac-ts-eks"}
{"name":"l1-stack-reference","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"outputs":{"platform":"${v2Image.platform}"},"resources":{"v2Image":{"type":"docker:Image","properties":{"build":{"target":"base","builderVersion":"BuilderBuildKit","network":"host","addHosts":["metadata.google.internal:169.254.169.254"],"platform":"linux/amd64","context":".","dockerfile":"Dockerfile","cacheFrom":{"images":["docker.io/pulumi/pulumi-base:latest"]}},"skipPush":"1","imageName":"docker.io/pulumi/v2-builder:latest"}}},"runtime":"yaml","name":"builder-v2"}
{"runtime":"nodejs","template":{"description":"A minimal Aiven TypeScript Pulumi program","config":{"plan":{"description":"An Aiven plan to choose compute, storage, and other features"},"project":{"description":"Aiven project name"},"cloudName":{"description":"Choice of cloud provider and region"},"serviceName":{"description":"The name of this Aiven service"}}},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name":"firestore-db-autoname","config":{"gcpProj":"string"},"runtime":"yaml","resources":{"myFirestoreDatabase":{"type":"gcp:firestore:Database","properties":{"deletionPolicy":"DELETE","project":"${gcpProj}","type":"FIRESTORE_NATIVE","locationId":"us-central1"}}}}
{"name":"storage","runtime":"yaml","resources":{"exampleAccount":{"type":"azure:storage:Account","properties":{"resourceGroupName":"${exampleResourceGroup.name}","accountReplicationType":"LRS","tags":{"environment":"staging"},"location":"${exampleResourceGroup.location}","accountTier":"standard"}},"exampleBlob":{"properties":{"storageContainerName":"${exampleContainer.name}","type":"Block","source":{"fn::stringAsset":"foo"},"storageAccountName":"${exampleAccount.name}"},"type":"azure:storage:Blob"},"exampleResourceGroup":{"properties":{"location":"East US"},"type":"azure:core:ResourceGroup"},"exampleContainer":{"properties":{"storageAccountName":"${exampleAccount.name}","containerAccessType":"private"},"type":"azure:storage:Container"}}}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"vpc"}
{"organization":{"pulumi:tags":{"company":"rules_mojo"}},"name":"nativelink","runtime":"go","backend":{"url":"file://~"},"description":"NativeLink development cluster for rules_mojo.","org":"rules_mojo"}
{"name":"patch-resources","runtime":"go"}
{"runtime":"yaml","resources":{"exampleVirtualNetwork":{"type":"azure:network:VirtualNetwork","properties":{"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}","addressSpaces":["10.0.0.0/16"]}},"exampleRoute":{"type":"azure:network:Route","properties":{"resourceGroupName":"${exampleResourceGroup.name}","nextHopType":"VnetLocal","routeTableName":"${exampleRouteTable.name}","addressPrefix":"10.1.0.0/16"}},"exampleNetworkInterface":{"type":"azure:network:NetworkInterface","properties":{"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}","ipConfigurations":[{"name":"internal","privateIpAddressAllocation":"Dynamic","subnetId":"${exampleSubnet.id}"}]}},"exampleRouteTable":{"properties":{"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}"},"type":"azure:network:RouteTable"},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}},"exampleSubnet":{"properties":{"virtualNetworkName":"${exampleVirtualNetwork.name}","addressPrefixes":["10.0.2.0/24"],"resourceGroupName":"${exampleResourceGroup.name}"},"type":"azure:network:Subnet"},"exampleNetworkSecurityGroup":{"type":"azure:network:NetworkSecurityGroup","properties":{"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}"}},"examplePublicIp":{"properties":{"sku":"Basic","tags":{"environment":"Production"},"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}","allocationMethod":"Static","ipVersion":"IPv4"},"type":"azure:network:PublicIp"},"exampleNetworkSecurityRule":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","sourceAddressPrefix":"*","access":"Allow","destinationPortRange":"*","networkSecurityGroupName":"${exampleNetworkSecurityGroup.name}","priority":"100","direction":"Outbound","protocol":"Tcp","sourcePortRange":"*","destinationAddressPrefix":"*"},"type":"azure:network:NetworkSecurityRule"}},"name":"network"}
{"resources":{"vpcNetwork":{"name":"vpcNetwork","properties":{"autoCreateSubnetworks":"1"},"type":"gcp:compute:Network"},"computeInstance":{"properties":{"machineType":"f1-micro","bootDisk":{"initializeParams":{"image":"debian-cloud/debian-9-stretch-v20181210"}},"networkInterfaces":[{"accessConfigs":[{"natIp":"${ipAddress.address}"}],"network":"${vpcNetwork.id}"}],"serviceAccount":{"scopes":["https://www.googleapis.com/auth/cloud-platform"]},"metadataStartupScript":"#!/bin/bash\necho \"Hello, World!\" > index.html\nnohup python -m SimpleHTTPServer 80 &\n"},"type":"gcp:compute:Instance","name":"webserverInstance"},"firewall":{"properties":{"allows":[{"ports":["80"],"protocol":"tcp"}],"sourceRanges":["0.0.0.0/0"],"network":"${vpcNetwork.selfLink}"},"type":"gcp:compute:Firewall"},"ipAddress":{"type":"gcp:compute:Address","properties":{"name":"ipaddress"}}},"name":"gcp-simple-webserver-yaml","outputs":{"instanceURL":{"value":"http://${ipAddress.address}"}},"config":{"gcp:zone":"us-central1-a","gcp:project":"pulumi-devrel","gcp:region":"us-central1"},"runtime":"yaml","description":"An example that deploys the configuration for a simple web server on Google Cloud."}
{"name":"fargate_webapp","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"name":"pinterestClone","main":"pulumi/","runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application."}
{"name":"pulumi-python-stack-truncate","runtime":"python","description":"A Python program that errors out\n"}
{"name":"regress-3196","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"description":"A example that deploys the resources for a simple web server on Google Cloud.","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-csharp"}}},"runtime":"dotnet","name":"gcp-simple-webserver-csharp"}
{"name":"aci-volume-mount","runtime":"nodejs","description":"Create a container group https://github.com/terraform-providers/terraform-provider-azurerm/tree/master/examples/aci-linux-multi"}
{"description":"coin stack","runtime":"nodejs","name":"avalanche"}
{"name":"azure-ts-static-website","runtime":"nodejs","description":"An example of a static website hosted on Azure Blob Storage + Azure CDN."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RouteTable Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"helm-kubernetes-part-two-python","description":"Demo Code Part 2 of the Tutorial around Helm in Kubernetes","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-python"}}},"runtime":{"name":"python","options":{"virtualenv":"venv","toolchain":"pip"}}}
{"description":"Deploys a simple Helm chart with skipping crd rendering option set","name":"dotnet-helm-skip-crd-rendering","runtime":"go"}
{"resources":{"resource":{"type":"gcp:storage:Bucket","properties":{"location":"US","labels":{"app":"my-label"}}}},"runtime":"yaml","outputs":{"resourceUrn":"${resource.urn}","resourceId":"${resource.id}"},"name":"labeled-bucket","description":"A minimal Google Cloud Pulumi YAML program"}
{"name": "js-aks-test", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Python CDKTF app that is building an Azure Resource Group with an AKS cluster as well as a container image for a web API."}
{"name":"config-besom-test","description":"Besom config test","runtime":{"name":"scala","options":{"v":"0","logtostderr":""}}}
{"resources":{"foo":{"properties":{"name":"bar"},"type":"aws:ecr:Repository"},"foopolicy":{"type":"aws:ecr:LifecyclePolicy","properties":{"policy":"{\n    \"rules\": [\n        {\n            \"rulePriority\": 1,\n            \"description\": \"Expire images older than 14 days\",\n            \"selection\": {\n                \"tagStatus\": \"untagged\",\n                \"countType\": \"sinceImagePushed\",\n                \"countUnit\": \"days\",\n                \"countNumber\": 14\n            },\n            \"action\": {\n                \"type\": \"expire\"\n            }\n        }\n    ]\n}\n","repository":"${foo.name}"}}},"name":"aws_ecr_lifecyclePolicy_LifecyclePolicy_1","runtime":"yaml"}
{"name":"azure-native-storage-account-blob-python","runtime":{"name":"python","options":{"toolchain":"pip","virtualenv":"venv"}},"description":"An example that deploys a blob into a blob storage account on Azure.","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-python"}}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"name":"regress-4031","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program to reproduce regression 4031"}
{"runtime":"nodejs","name":"config_missing_js","description":"A simple Node.js program that errors on missing configuration."}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Redirect Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "command-test", "description": "A Command Test.", "runtime": "go", "backend": {"url": "file://."}}
{"runtime":"go","description":"A GCP Go Pulumi to create an instance","name":"gcp-go-instance"}
{"description":"Shadow the default tag with a resource specific tag\n","runtime":"yaml","resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}},"res":{"properties":{"tags":{"fizz":"buzz","foo":"bar"},"aliasAttributes":["email"]},"type":"aws:cognito:UserPool","options":{"provider":"${aws-provider}"}}},"name":"test-aws-1655-sdkv2","outputs":{"actual":"${res.tags}"}}
{"name":"dotnet_yaml_url","runtime":"dotnet","description":"A test of a ConfigFile parsing YAML from a URL."}
{"name":"cloudflare-record-py","description":"A simple addition of a DNS record to a CloudFlare zone in Python","runtime":"python"}
{"runtime":"python","name":"pylint","description":"A Python program that tests dict key translation."}
{"template":{"config":{"departmentName":{"description":"The department name to use"}},"description":"A minimal AWS TypeScript Pulumi program"},"runtime":"nodejs","description":"An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources","name":"aws-ts-stackreference-department"}
{"name":"aws-ts-wordpress-fargate-rds","runtime":"nodejs","description":"Deploys Wordpress in ECS Fargate with RDS backend."}
{"runtime":"nodejs","name":"optimism","description":"coin stack"}
{"runtime":"nodejs","name":"deleted_with_nodejs","description":"A program that uses the DeletedWith resource option"}
{"runtime":"go","name":"l2-engine-update-options"}
{"name":"regress-4079","runtime":"nodejs","description":"Reproduce AWS 4079"}
{"description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","main":"pulumi/","name":"pinterestClone","runtime":"nodejs"}
{"description":"secretsmanager integration test","name":"pulumi-aws-secretsmanager","runtime":"nodejs"}
{"runtime":"nodejs","name":"runtime_error","description":"A minimal TypeScript Pulumi program"}
{"name":"random","outputs":{"password":"${randomPassword.result}"},"runtime":"yaml","resources":{"randomPassword":{"properties":{"length":"16","special":"1","overrideSpecial":"_%@"},"type":"random:RandomPassword"}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"azure-py-call-azure-sdk","description":"An example of integrating an Azure SDK call to a Pulumi program."}
{"name":"get-resource","description":"A simple Go program that gets an existing resource from the engine.","runtime":"go"}
{"name":"appservice","runtime":"yaml","resources":{"exampleAccount":{"type":"azure:storage:Account","properties":{"accountReplicationType":"LRS","accountTier":"Standard","resourceGroupName":"${exampleResourceGroup.name}","location":"${exampleResourceGroup.location}"}},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}},"examplePlan":{"type":"azure:appservice:Plan","properties":{"sku":{"size":"S1","tier":"Standard"},"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}"}},"exampleAppService":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","connectionStrings":[{"type":"SQLServer","value":"Server=some-server.mydomain.com;Integrated Security=SSPI","name":"Database"}],"siteConfig":{"scmType":"LocalGit","dotnetFrameworkVersion":"v4.0"},"location":"${exampleResourceGroup.location}","appServicePlanId":"${examplePlan.id}","appSettings":{"SOME_KEY":"some-value"}},"type":"azure:appservice:AppService"},"exampleFunctionApp":{"properties":{"storageAccountName":"${exampleAccount.name}","appServicePlanId":"${examplePlan.id}","storageAccountAccessKey":"${exampleAccount.primaryAccessKey}","location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}"},"type":"azure:appservice:FunctionApp"}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS HaproxyLayer Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A Go program with >4mb string resource","name":"large_resource_go","runtime":"go"}
{"name":"kubernetes-yaml-crd","runtime":"scala","description":"Example of a Kubernetes Application using plain YAML files with custom CRD"}
{"runtime":"nodejs","description":"A simple containers demo.","name":"containers-ec2"}
{"resources":{"llamaindex-ecs-cluster":{"type":"aws:ecs:Cluster","properties":{"settings":[{"value":"disabled","name":"containerInsights"}],"configuration":{"executeCommandConfiguration":{"logging":"DEFAULT"}}}},"llamaindex-security-group":{"properties":{"ingress":[{"toPort":"80","protocol":"tcp","fromPort":"80","cidrBlocks":["0.0.0.0/0"]}],"egress":[{"fromPort":"0","cidrBlocks":["0.0.0.0/0"],"protocol":"-1","toPort":"0"}],"vpcId":"${llamaindex-vpc.vpcId}"},"type":"aws:ec2:SecurityGroup"},"ecr-llamaindex-repo":{"properties":{"name":"llamaindex-chatbot","forceDelete":"1"},"type":"aws:ecr:Repository"},"llamaindex-listener":{"properties":{"port":"80","protocol":"HTTP","defaultActions":[{"targetGroupArn":"${llamaindex-target-group.arn}","type":"forward"}],"loadBalancerArn":"${llamaindex-load-balancer.arn}"},"type":"aws:lb:Listener"},"llamaindex-cluster-capacity-providers":{"properties":{"clusterName":"${llamaindex-ecs-cluster.name}","capacityProviders":["FARGATE","FARGATE_SPOT"]},"type":"aws:ecs:ClusterCapacityProviders"},"llamaindex-log-group":{"properties":{"retentionInDays":"7"},"type":"aws:cloudwatch:LogGroup"},"llamaindex-vpc":{"properties":{"numberOfAvailabilityZones":"2","enableDnsHostnames":"1","enableDnsSupport":"1"},"type":"awsx:ec2:Vpc"},"llamaindex-task-definition":{"properties":{"family":"llamaindex-task","requiresCompatibilities":["FARGATE"],"executionRoleArn":"${llamaindex-execution-role.arn}","networkMode":"awsvpc","cpu":"256","memory":"512","taskRoleArn":"${llamaindex-task-role.arn}","containerDefinitions":{"fn::toJSON":[{"portMappings":[{"hostPort":"8000","protocol":"tcp","name":"chroma","containerPort":"8000"}],"name":"llamaindex-app","essential":"1","logConfiguration":{"logDriver":"awslogs","options":{"awslogs-region":"${aws:region}","awslogs-group":"${llamaindex-log-group.name}","awslogs-stream-prefix":"chroma"}},"image":"${llamaindex-app.repoDigest}"}]}},"type":"aws:ecs:TaskDefinition"},"llamaindex-load-balancer":{"properties":{"securityGroups":["${llamaindex-security-group.id}"],"subnets":"${llamaindex-vpc.publicSubnetIds}","loadBalancerType":"application"},"type":"aws:lb:LoadBalancer"},"llamaindex-service":{"type":"aws:ecs:Service","properties":{"networkConfiguration":{"assignPublicIp":"1","subnets":"${llamaindex-vpc.publicSubnetIds}","securityGroups":["${llamaindex-ecs-security-group.id}"]},"desiredCount":"1","schedulingStrategy":"REPLICA","loadBalancers":[{"targetGroupArn":"${llamaindex-target-group.arn}","containerPort":"8000","containerName":"llamaindex-app"}],"serviceConnectConfiguration":{"namespace":"${llamaindex-service-discovery-namespace.arn}","enabled":"1"},"launchType":"FARGATE","healthCheckGracePeriodSeconds":"180","taskDefinition":"${llamaindex-task-definition.arn}","cluster":"${llamaindex-ecs-cluster.arn}"}},"llamaindex-task-role":{"type":"aws:iam:Role","properties":{"assumeRolePolicy":{"fn::toJSON":{"Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"ecs-tasks.amazonaws.com"}}],"Version":"2012-10-17"}},"inlinePolicies":[{"policy":{"fn::toJSON":{"Statement":[{"Resource":["arn:aws:bedrock:*::foundation-model/*"],"Effect":"Allow","Action":["bedrock:InvokeModel"]}],"Version":"2012-10-17"}},"name":"bedrock-policy"},{"policy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Action":["ssmmessages:CreateControlChannel","ssmmessages:OpenControlChannel","ssmmessages:CreateDataChannel","ssmmessages:OpenDataChannel"],"Effect":"Allow","Resource":"*"},{"Action":["logs:CreateLogStream","logs:DescribeLogGroups","logs:DescribeLogStreams","logs:PutLogEvents"],"Effect":"Allow","Resource":"*"}]}},"name":"ExecuteCommand"},{"name":"DenyIAM","policy":{"fn::toJSON":{"Statement":[{"Resource":"*","Action":"iam:*","Effect":"Deny"}],"Version":"2012-10-17"}}}]}},"llamaindex-service-discovery-namespace":{"properties":{"name":"llamaindex.local","vpc":"${llamaindex-vpc.vpcId}"},"type":"aws:servicediscovery:PrivateDnsNamespace"},"llamaindex-ecs-security-group":{"properties":{"egress":[{"protocol":"-1","cidrBlocks":["0.0.0.0/0"],"fromPort":"0","toPort":"0"}],"ingress":[{"toPort":"0","cidrBlocks":["0.0.0.0/0"],"fromPort":"0","protocol":"-1"}],"vpcId":"${llamaindex-vpc.vpcId}"},"type":"aws:ec2:SecurityGroup"},"llamaindex-app":{"type":"docker:Image","properties":{"build":{"platform":"linux/amd64","dockerfile":"app/Dockerfile","builderVersion":"BuilderBuildKit","context":"app/"},"imageName":"${ecr-llamaindex-repo.repositoryUrl}:latest","registry":{"server":"${ecr-llamaindex-repo.repositoryUrl}","password":"${authToken.password}","username":"${authToken.userName}"}}},"llamaindex-execution-role":{"properties":{"managedPolicyArns":["arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"],"assumeRolePolicy":{"fn::toJSON":{"Statement":[{"Principal":{"Service":"ecs-tasks.amazonaws.com"},"Effect":"Allow","Action":"sts:AssumeRole"}],"Version":"2012-10-17"}}},"type":"aws:iam:Role"},"llamaindex-target-group":{"type":"aws:lb:TargetGroup","properties":{"protocol":"HTTP","port":"80","targetType":"ip","vpcId":"${llamaindex-vpc.vpcId}"}}},"description":"A minimal AWS Pulumi YAML program","variables":{"authToken":{"fn::aws:ecr:getAuthorizationToken":{"registryId":"${ecr-llamaindex-repo.registryId}"}}},"name":"deploying-llamaindex-applications-on-aws-with-pulumi","runtime":"yaml","outputs":{"llamaindex-app":"${llamaindex-app.repoDigest}","url":"${llamaindex-load-balancer.dnsName}"}}
{"description":"A minimal Kubernetes TypeScript Pulumi program","name":"helm-preview-unreachable","runtime":"nodejs"}
{"runtime":"java","name":"aws-java-s3-folder","description":"A static website hosted on AWS S3"}
{"description":"An example that creates a new VPC with a custom NAT gateway strategy.","name":"awsx-vpc-nat-gateways-python","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":"yaml","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/a21d2166-69d6-479c-bc2c-3e4ea3f0cf35.zip"}}},"resources":{"randomBytes":{"properties":{"length":"16"},"type":"random:RandomBytes"}},"name":"index_randombytessAsJf9cfGYHF","description":""}
{"description":"An example that creates a new VPC with a custom subnet specification.","name":"awsx-vpc-subnets-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getTable TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-azure", "runtime": "go", "description": "A minimal Azure Go Pulumi program", "main": "cmd/pulumi"}
{"name":"dotnet-helm-skip-crd-rendering","runtime":"nodejs","description":"Deploys a simple Helm chart with skipping crd rendering option set"}
{"description":"Google Cloud Run example (with functions)","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"cloud_run_v2"}
{"runtime":"python","name":"${PROJECT}","template":{"config":{"azure-native:location":{"description":"The Azure region to deploy into","default":"WestUS"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"path":{"description":"The path to the folder containing the website","default":"./www"}},"description":"A Python program to deploy a static website on Azure"},"description":"${DESCRIPTION}"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l1-output-string"}
{"runtime":"go","description":"Azure Native Go Pulumi example featuring Helm chart deployment to AKS","name":"azure-go-aks-helm"}
{"name": "gcp-cs-gke", "runtime": "dotnet", "description": "A GCP C# Pulumi program with Kubernetes"}
{"runtime":"go","name":"pulumi-ansible-wordpress-go","description":"Deploy an EC2 Wordpress server using Pulumi and Ansible."}
{"name":"infra","runtime":{"name":"python"},"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A minimal AWS Python Pulumi program"}
{"runtime":"python","name":"stack_outputs_program_error_py","description":"A program that exports some outputs and then errors in a later step."}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalGateway Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Kubernetes Pulumi YAML program", "important": true}, "variables": {"appLabels": {"app": "nginx"}}, "resources": {"deployment": {"type": "kubernetes:apps/v1:Deployment", "properties": {"spec": {"selector": {"matchLabels": "${appLabels}"}, "replicas": 1, "template": {"metadata": {"labels": "${appLabels}"}, "spec": {"containers": [{"name": "nginx", "image": "nginx"}]}}}}}}, "outputs": {"name": "${deployment.metadata.name}"}}
{"runtime":"yaml","resources":{"pko":{"properties":{"directory":"https://github.com/pulumi/pulumi-kubernetes-operator//operator/config/default/?ref=${version}"},"type":"kubernetes:kustomize/v2:Directory"}},"name":"pulumi-operator-yaml","config":{"version":{"type":"string","default":"v2.0.0-beta.3"}},"description":"Deploys the Pulumi Kubernetes Operator.\n"}
{"template":{"config":{"alicloud:region":{"description":"The AliCloud region to deploy into","default":"cn-beijing"}},"description":"A minimal AliCloud Pulumi YAML program"},"description":"${DESCRIPTION}","runtime":"yaml","resources":{"bucket":{"type":"alicloud:oss:Bucket"}},"outputs":{"bucketName":"${bucket.id}"},"name":"${PROJECT}"}
{"description":"Provision a DigitalOcean Kubernetes cluster and deploy to it","name":"digitalocean-ts-k8s","runtime":"nodejs"}
{"description":"A program that tests Deployment rollouts.","runtime":"nodejs","name":"deployment-rollout"}
{"name": "home-k8s-apps-ping", "runtime": "nodejs", "description": "Home K8s - Apps Ping"}
{"description":"Show how to create a Job","runtime":"nodejs","name":"k8s-apps-job"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Using object lifecycle", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"server-side-apply","runtime":"dotnet","description":"Tests Server-side Apply support"}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"eks_spinnaker"}
{"name":"adhoc-base","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"name":"docker-service-gloabl","resources":{"service":{"type":"docker:Service","properties":{"mode":{"global":"1"},"taskSpec":{"containerSpec":{"image":"nginx"}}}}},"runtime":"yaml"}
{"name":"awsx-load-balanced-fargate-ecr-python","runtime":"python"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Listener Health Check", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"yaml"},"name":"test","resources":{"private":{"properties":{"datasetId":"private"},"type":"gcp:bigquery:Dataset","options":{"provider":"${provider}"}},"tested-resource":{"type":"gcp:bigquery:DatasetAccess","properties":{"authorizedDataset":{"dataset":{"datasetId":"${public.datasetId}","projectId":"${public.project}"},"targetTypes":["VIEWS"]},"datasetId":"${private.datasetId}"},"options":{"provider":"${provider}"}},"public":{"properties":{"datasetId":"public"},"type":"gcp:bigquery:Dataset","options":{"provider":"${provider}"}},"provider":{"options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]},"properties":{"project":"${gcp:project}"},"type":"pulumi:providers:gcp"}}}
{"description":"Pulumi project for deploying the stack of services needed by the micromasters application","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-micromasters-application"}
{"name":"l2-provider-grpc-config","runtime":"yaml"}
{"name":"local-chart-panic","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal OpenStack Python Pulumi program","name":"pulum"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Automation Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"description":"A TypeScript program to deploy a Kubernetes cluster on AWS","config":{"minClusterSize":{"description":"Minimum size (number of nodes) of cluster","default":"3"},"eksNodeInstanceType":{"default":"t3.medium","description":"Instance type to use for worker nodes"},"desiredClusterSize":{"default":"3","description":"Desired number of nodes in the cluster"},"vpcNetworkCidr":{"description":"Network CIDR to use for new VPC","default":"10.0.0.0/16"},"maxClusterSize":{"default":"6","description":"Maximum size (number of nodes) of cluster"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"${PROJECT}","description":"${DESCRIPTION}","runtime":"nodejs"}
{"name":"nodejs","runtime":"nodejs","description":"AWSX VPC - default args"}
{"description":"A minimal AWS Go Pulumi program","runtime":"go","name":"explicit_provider"}
{"description":"A minimal Go Pulumi program","name":"go_cloudflare_zone","runtime":"go"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Storage Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal Java Pulumi program with Maven builds","runtime":"java","name":"stack-transformation"}
{"description":"A simple addition of a DNS record to a CloudFlare zone in CSharp","name":"cloudflare-record-csharp","runtime":"dotnet"}
{"runtime":"go","description":"An example that deploys a blob into a blob storage account on Azure.","name":"azure-native-storage-account-blob-go","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-go"}}}}
{"name":"azure-native-storage-account-blob-javascript","description":"An example that deploys a blob into a blob storage account on Azure.","runtime":{"name":"nodejs","options":{"typescript":"","packagemanager":"npm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"azure-javascript"}}}}
{"description":"A simple command example","name":"command-simple-run","runtime":"nodejs"}
{"name": "cluster-transforms", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "AWS Organization", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Pulumi YAML program"}, "configuration": {}, "variables": {}, "resources": {}, "outputs": {}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"serverless-raw","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}},"description":"Basic example of a serverless AWS application"}
{"name": "test-aws-1655-sdkv2", "runtime": "yaml", "description": "Shadow the default tag with a resource specific tag\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux"}}}}, "res": {"type": "aws:cognito:UserPool", "properties": {"aliasAttributes": ["email"], "tags": {"fizz": "buzz", "foo": "bar"}}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCluster Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"dotnet","template":{"description":"A minimal C# Pulumi program"}}
{"description":"Tests for policy rules related to AWS API Gateway.","runtime":"nodejs","name":"awsguard-test-api-gateway"}
{"name":"test-aws-1655-bucket","resources":{"res":{"type":"aws:s3:BucketV2","options":{"provider":"${aws-provider}"}},"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"bar"}}}}},"runtime":"yaml","description":"Add first default tag: `foo: bar``\n","outputs":{"actual":"${res.tags}"}}
{"name":"ecr-image","runtime":"nodejs","description":"Publish docker images to ECR"}
{"description":"An example that creates a Lambda function and Step Function to demonstrate the JSON stringify helper","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}},"aws-native:region":"us-west-2"},"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"aws-lambda-stepfunctions-jsonhelper-python"}
{"name":"pulumi-ansible-wordpress-cs","description":"Deploy an EC2 Wordpress server using Pulumi and Ansible.","runtime":"dotnet"}
{"name":"example-cluster-py","description":"EKS cluster example","runtime":"python"}
{"runtime":"nodejs","name":"awsx-ecr-repository-typescript","description":"An example that creates a container-image repository in Amazon Elastic Container Registry (ECR)."}
{"runtime":"nodejs","name":"pulumi-aws-kms","description":"kms integration test"}
{"runtime":"go","name":"localstate-go","description":"An example demonstrating the Terraform Remote State resource in Go"}
{"name":"aws-get-ts","description":"A TypeScript Pulumi program with AWS Cloud Control provider","runtime":"nodejs"}
{"runtime":"nodejs","name":"transforms_simple","description":null}
{"name":"pulumi-ansible-wordpress-py","description":"Deploy an EC2 Wordpress server using Pulumi and Ansible.","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":"scala","name":"guestbook","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","template":{"config":{"isMinikube":{"default":"1","description":"Whether you are deploying to minikube"}}}}
{"description":"An example that deploys a simulated database server and database resource","runtime":{"name":"nodejs","options":{"typescript":""}},"name":"aws-simulated-dbserver-database-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}}}
{"name":"aws-py-create-role","description":"Demonstrate use of AWS AssumeRole Functionality","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"simple-py","description":"A minimal AWS Python Pulumi program","runtime":"python"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "List all account IDs for the organization", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"resources":{"provider":{"properties":{"namespace":"${ns.metadata.name}"},"type":"pulumi:providers:kubernetes"},"service-account":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:ServiceAccount"},"ns":{"type":"kubernetes:core/v1:Namespace"}},"runtime":"yaml","description":"Test await logic with service accounts.","name":"await-service-account"}
{"runtime":"nodejs","name":"external-dns.ts","description":"Deploy external-dns to EKS with Fargate"}
{"name":"postgres","runtime":"nodejs","description":"Postgres managed database"}
{"name":"ol-infrastructure-vault-approles","description":"Pulumi project for managing Vault AppRoles","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"}}
{"description":"${DESCRIPTION}","template":{"description":"A Java program to deploy a Kubernetes cluster on OVHcloud","config":{"nodePoolDesiredNodes":{"default":"1","description":"Number of desired nodes in the cluster"},"nodePoolMaxNodes":{"description":"Number of max nodes in the cluster","default":"3"},"nodePoolMinNodes":{"description":"Number of min nodes in the cluster","default":"1"},"clusterName":{"default":"my_desired_cluster","description":"Name of the cluster"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA9"},"nodePoolName":{"description":"Name of the node pool","default":"my-desired-pool"},"flavorName":{"description":"Name of the flavor/type of the machine","default":"b3-8"}}},"name":"${PROJECT}","runtime":"java"}
{"description":"A program that tests CRD/CR error handling.","name":"crd-tests","runtime":"nodejs"}
{"name": "nginx-fluentd-infra", "runtime": "nodejs", "description": "IaC for nginx-fluentd-demo"}
{"description":"Basic example of an Azure web server accessible over HTTP.","name":"webserver","runtime":"nodejs"}
{"description":"Creates Azure App Service and Deploys Docker images to","template":{"config":{"location":{"description":"Azure region to deploy resources to","default":"WestUS"}}},"name":"azure-py-appservice-docker","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"An example that deploys an ApplicationLoadBalancer in a VPC.","name":"awsx-elb-vpc-python","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":"nodejs","name":"icb","description":"A minimal TypeScript Pulumi program"}
{"name": "CloudEng.Pipelines.Infrastructure.Azure", "runtime": "dotnet", "description": "Infrastructure project for CloudEng.Pipelines project"}
{"name":"azure-cs-aks-helm","description":"Azure Native C# Pulumi example featuring Helm chart deployment to AKS","runtime":"dotnet"}
{"description":"Demonstrate use of AWS AssumeRole Functionality","runtime":"nodejs","name":"aws-ts-assume-role"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Function Version", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","description":"A program that smoke-tests Kubernetes first-class providers, specifying inputs with dicts","name":"provider"}
{"name":"l2-primitive-ref","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"runtime":"nodejs","description":"A simple Node.js program that uses configuration.","name":"config_basic_js"}
{"description":"An example that deploys an API Gateway instance with support for API keys.","name":"awsx-apigateway-api-keys-javascript","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"aws-cs-webserver","description":"Basic C# example of an AWS web server accessible over HTTP.","runtime":"dotnet"}
{"runtime":"go","name":"l1-output-number"}
{"name": "azure", "runtime": "go", "description": "Talos on Azure"}
{"name":"azure-cs-cred-rotation-one-set","description":"Example of rotating secrets with one set of credentials","runtime":"dotnet"}
{"runtime":"dotnet","template":{"config":{"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"azure:location":{"default":"WestUS2","description":"The Azure location to use"}},"description":"A minimal C# Pulumi program with the classic Azure provider"},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name": "azure-multi-callback-all", "runtime": "nodejs", "description": "An Azure Function App with all types of functions"}
{"description":"velog infrastructure","name":"velog","runtime":{"name":"nodejs","options":{"typescript":"1"}}}
{"description":"A simple Python program that errors on missing configuration.","runtime":"python","name":"config_missing_py"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Forward Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"helm-release-namespace","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"name": "demo-static-website", "runtime": "nodejs", "description": "A Pulumi program to create a static website in Azure blob storage fronted by Azure CDN."}
{"name":"l2-large-string","runtime":"go"}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"name":"voting-app","description":"Voting app that uses containers","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "azure-http-multi", "runtime": "nodejs", "description": "An http Azure Function App with multiple functions"}
{"name":"l2-engine-update-options","runtime":"yaml"}
{"name":"data-contracts","runtime":{"options":{"virtualenv":"../venv"},"name":"python"},"description":"Data Contracts book"}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-destroy"}
{"description":"Test mutability and immutability for Secrets and ConfigMaps, as well as\nreplacement interactions with downstream dependencies.\n","runtime":"yaml","name":"immutability","outputs":{"autonamedConfigmap":"${autonamed-configmap-downstream.id}","mutableSecret":"${mutable-secret-downstream.id}","secret":"${secret-downstream.id}","configmap":"${configmap-downstream.id}","autonamedSecret":"${autonamed-secret-downstream.id}","mutableConfigmap":"${mutable-configmap-downstream.id}"},"resources":{"mutable-secret":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Secret","properties":{"stringData":{"bar":"bar"},"metadata":{"annotations":{"boo":"baz"}}}},"configmap":{"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${provider}"},"properties":{"metadata":{"name":"configmap","annotations":{"boo":"baz"}},"immutable":"1","data":{"bar":"bar"}}},"configmap-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${configmap.metadata.name}"}}},"autonamed-secret":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Secret","properties":{"immutable":"1","metadata":{"annotations":{"boo":"baz"}},"stringData":{"bar":"bar"}}},"ns":{"type":"kubernetes:core/v1:Namespace"},"autonamed-configmap":{"properties":{"data":{"bar":"bar"},"metadata":{"annotations":{"boo":"baz"}},"immutable":"1"},"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${provider}"}},"autonamed-secret-downstream":{"properties":{"keepers":{"upstream":"${autonamed-secret.metadata.name}"}},"type":"random:RandomPet"},"autonamed-configmap-downstream":{"properties":{"keepers":{"upstream":"${autonamed-configmap.metadata.name}"}},"type":"random:RandomPet"},"mutable-secret-downstream":{"properties":{"keepers":{"upstream":"${mutable-secret.metadata.name}"}},"type":"random:RandomPet"},"secret-downstream":{"properties":{"keepers":{"upstream":"${secret.metadata.name}"}},"type":"random:RandomPet"},"secret":{"properties":{"immutable":"1","metadata":{"name":"secret","annotations":{"boo":"baz"}},"stringData":{"bar":"bar"}},"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Secret"},"mutable-configmap":{"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${provider}"},"properties":{"data":{"bar":"bar"},"metadata":{"annotations":{"boo":"baz"}}}},"provider":{"properties":{"enableConfigMapMutable":"1","enableSecretMutable":"1","namespace":"${ns.metadata.name}"},"type":"pulumi:providers:kubernetes"},"mutable-configmap-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${mutable-configmap.metadata.name}"}}}}}
{"outputs":{"bucketName":"${my-bucket.id}"},"resources":{"my-bucket":{"type":"aws:s3:Bucket"}},"runtime":"yaml","name":"honeycomb_tracing_example","description":"A minimal AWS Pulumi YAML program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Create a user pool client with no SRP authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"A program that exports some outputs and then errors in a later step.","name":"stack_outputs_resource_error"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS NetworkInterfaceSecurityGroupAttachment Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "codefresh-example", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"runtime":{"name":"python","options":{"typechecker":"mypy","virtualenv":"venv"}},"name":"l2-invoke-variants"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"name":"gamelift-typescript","description":"A minimal AWS TypeScript Pulumi program"}
{"name":"awsx-ecr-repository-csharp","description":"An example that creates a container-image repository in Amazon Elastic Container Registry (ECR).","runtime":"dotnet"}
{"runtime":{"name":"scala"},"name":"tls-besom-test","description":"Besom tls test"}
{"name":"construct_component_py","description":"A program that constructs remote component resources.","runtime":"python"}
{"plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"description":"A program that constructs remote component resources with methods and unknowns.","name":"construct_component_methods_unknown_nodejs","runtime":"nodejs"}
{"template":{"description":"A minimal JavaScript Pulumi program"},"description":"Measure cloud providers and check which fits better for your JAMStack web app.","name":"jamstack-deploy","runtime":"nodejs"}
{"resources":{"bucketObject":{"type":"aws:s3/bucketObject:BucketObject","name":"bucket-object","properties":{"bucket":"${bucket.id}","content":"some-content","key":"some-file.txt"}},"bucket":{"name":"bucket","type":"aws:s3:BucketV2"}},"description":"An example that creates an S3 bucket and bucket object","runtime":"yaml","name":"aws-s3bucket-bucketobject-interpolate-yaml","outputs":{"s3Url":"s3://${bucket.id}/${bucketObject.key}"}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources in Python","name":"aws-py-stackreference-department","template":{"config":{"departmentName":{"description":"The department name to use"}}}}
{"runtime":"dotnet","name":"gcp-py-functions","description":"A minimal C# Pulumi program using Google Cloud Functions."}
{"name":"awsx-vpc-security-groups-go","runtime":"go","description":"An example that creates a new VPC with a custom security group."}
{"runtime":"nodejs","name":"l1-output-bool"}
{"name":"ses_python","description":"A minimal AWS Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name":"ol-infrastructure-aws-s3","description":"Pulumi project for handling S3 buckets that are independent of specific applications.","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python"}
{"template":{"description":"A minimal Random Pulumi YAML program."},"runtime":"yaml","name":"${PROJECT}","outputs":{"name":"${username.id}"},"resources":{"username":{"type":"random:RandomPet"}},"description":"${DESCRIPTION}"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"config":{"desiredClusterSize":{"description":"Desired number of nodes in the cluster","default":"3"},"vpcNetworkCidr":{"description":"Network CIDR to use for new VPC","default":"10.0.0.0/16"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"eksNodeInstanceType":{"default":"t3.medium","description":"Instance type to use for worker nodes"},"maxClusterSize":{"description":"Maximum size (number of nodes) of cluster","default":"6"},"minClusterSize":{"description":"Minimum size (number of nodes) of cluster","default":"3"}},"description":"A Pulumi YAML program to deploy a Kubernetes cluster on AWS"},"resources":{"eks-vpc":{"type":"awsx:ec2:Vpc","properties":{"cidrBlock":"${vpcNetworkCidr}","enableDnsHostnames":"1"}},"eks-cluster":{"type":"eks:Cluster","properties":{"privateSubnetIds":"${eks-vpc.privateSubnetIds}","publicSubnetIds":"${eks-vpc.publicSubnetIds}","desiredCapacity":"${desiredClusterSize}","vpcId":"${eks-vpc.vpcId}","instanceType":"${eksNodeInstanceType}","minSize":"${minClusterSize}","endpointPrivateAccess":"","authenticationMode":"API","nodeAssociatePublicIpAddress":"","maxSize":"${maxClusterSize}","endpointPublicAccess":"1"}}},"outputs":{"kubeconfig":"${eks-cluster.kubeconfig}","vpcId":"${eks-vpc.vpcId}"},"runtime":"yaml","config":{"vpcNetworkCidr":{"type":"string","default":"10.0.0.0/16"},"desiredClusterSize":{"default":"3","type":"integer"},"minClusterSize":{"default":"3","type":"integer"},"maxClusterSize":{"type":"integer","default":"6"},"eksNodeInstanceType":{"default":"t3.medium","type":"string"}}}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"description":"A simple Python Pulumi program that type checks with pyright.","name":"pulumi-python-pyright"}
{"description":"A minimal DigitalOcean TypeScript Pulumi program","name":"00-infrastructure","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "By Filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A Pulumi YAML program to deploy a serverless application on Google Cloud", "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}, "gcp:region": {"description": "The Google Cloud region to deploy into", "default": "us-central1"}, "sitePath": {"description": "The path to the folder containing the website", "default": "./www"}, "appPath": {"description": "The path to the folder containing the functions to be deployed", "default": "./app"}, "indexDocument": {"description": "The file to use for top-level pages", "default": "index.html"}, "errorDocument": {"description": "The file to use for error pages", "default": "error.html"}}}, "config": {"sitePath": {"type": "string", "default": "./www"}, "appPath": {"type": "string", "default": "./app"}, "indexDocument": {"type": "string", "default": "index.html"}, "errorDocument": {"type": "string", "default": "error.html"}}, "variables": {"appArchive": {"fn::fileArchive": "${appPath}"}, "configJSON": {"fn::toJSON": {"api": "${data-function.httpsTriggerUrl}"}}, "configFile": {"fn::stringAsset": "${configJSON}"}}, "resources": {"site-bucket": {"type": "gcp:storage:Bucket", "properties": {"location": "US", "website": {"mainPageSuffix": "${indexDocument}", "notFoundPage": "${errorDocument}"}}}, "site-bucket-iam-binding": {"type": "gcp:storage:BucketIAMBinding", "properties": {"bucket": "${site-bucket.name}", "role": "roles/storage.objectViewer", "members": ["allUsers"]}}, "synced-folder": {"type": "synced-folder:index:GoogleCloudFolder", "properties": {"path": "${sitePath}", "bucketName": "${site-bucket.name}"}}, "app-bucket": {"type": "gcp:storage:Bucket", "properties": {"location": "US"}}, "app-archive": {"type": "gcp:storage:BucketObject", "properties": {"bucket": "${app-bucket.name}", "source": "${appArchive}"}}, "data-function": {"type": "gcp:cloudfunctions:Function", "properties": {"sourceArchiveBucket": "${app-bucket.name}", "sourceArchiveObject": "${app-archive.name}", "runtime": "python310", "entryPoint": "data", "triggerHttp": true}}, "invoker": {"type": "gcp:cloudfunctions:FunctionIamMember", "properties": {"project": "${data-function.project}", "region": "${data-function.region}", "cloudFunction": "${data-function.name}", "role": "roles/cloudfunctions.invoker", "member": "allUsers"}}, "site-config": {"type": "gcp:storage:BucketObject", "properties": {"name": "config.json", "bucket": "${site-bucket.name}", "contentType": "application/json", "source": "${configFile}"}}}, "outputs": {"siteURL": "https://storage.googleapis.com/${site-bucket.name}/index.html", "apiURL": "${data-function.httpsTriggerUrl}"}}
{"description":"AWSX VPC - specifying vpcs with tags","runtime":"nodejs","name":"nodejs"}
{"resources":{"api":{"properties":{"routes":[{"authorizers":[{"handler":"${authorizer}","authType":"custom","type":"request","identitySource":["method.request.header.Authorization"],"parameterName":"Authorization"}],"path":"/","localPath":"www"}]},"type":"aws-apigateway:RestAPI"},"role":{"type":"aws:iam:Role","properties":{"assumeRolePolicy":{"fn::toJSON":{"Statement":[{"Action":"sts:AssumeRole","Principal":{"Service":"lambda.amazonaws.com"},"Effect":"Allow"}],"Version":"2012-10-17"}},"managedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]}},"authorizer":{"type":"aws:lambda:Function","properties":{"runtime":"python3.9","handler":"handler.handler","code":{"fn::fileArchive":"./authorizer"},"role":"${role.arn}"}}},"outputs":{"url":"${api.url}"},"runtime":"yaml","description":"An example that deploys an API Gateway REST API with an AWS Lambda authorizer.","name":"awsx-apigateway-auth-lambda-yaml"}
{"plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"name":"construct_component_plain_nodejs","description":"A program that constructs a remote component resource with prompt inputs.","runtime":"nodejs"}
{"description":"A minimal Java Pulumi program demonstrating Stack Readmes","name":"stack-readme-java","runtime":"java"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-invoke-variants"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Automation Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","description":"Test updating a VPC which has properties which are both create-only and write-only","name":"simple-py"}
{"runtime":"nodejs","name":"awsguard-test-network","description":"Tests for policy rules related to AWS network resources."}
{"name":"l2-resource-primitives","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l2-engine-update-options"}
{"name": "pulumi-azure-container-apps", "runtime": "go", "description": "A minimal Azure Native Go Pulumi program"}
{"description":"An example that deploys an S3 bucket, S3 bucket objects, and a Pulumi random resource.","name":"aws-s3bucket-s3objects-random-go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"runtime":"go"}
{"outputs":{"endpoint":"${alb.loadBalancer.dnsName}"},"description":"An example of an ApplicationLoadBalancer with multiple listeners and a custom redirect action.","resources":{"alb":{"properties":{"listeners":[{"port":"8080","protocol":"HTTP","defaultActions":[{"type":"redirect","redirect":{"statusCode":"HTTP_301","port":"8081","protocol":"HTTP"}}]},{"port":"8081","protocol":"HTTP"}]},"type":"awsx:lb:ApplicationLoadBalancer"}},"runtime":"yaml","name":"awsx-elb-multi-listener-redirect-yaml"}
{"description":"Example Scala app using multiple docker containers","runtime":"scala","name":"docker-multi-container-app"}
{"description":"Test Kubernetes Helm package with local Chart.","runtime":"go","name":"go_helm_local_kubernetes"}
{"name": "pulumi-typescript-aws-template", "runtime": "nodejs", "description": null, "main": "./src/index.ts"}
{"outputs":{"kubeconfig":{"Fn::Secret":"${civo-k3s-cluster.kubeconfig}"}},"runtime":"yaml","variables":{"kube-prometheus-version":"39.6.0","region":"FRA1"},"name":"pulumi-civo-cilium-prometheus","resources":{"civo-k3s-cluster":{"type":"civo:KubernetesCluster","properties":{"pools":{"nodeCount":"2","size":"g4s.kube.medium"},"name":"MyCivoCluster","firewallId":"${civo-firewall.id}","cni":"cilium","region":"${region}"}},"civo-firewall":{"properties":{"region":"${region}","name":"MyCivoFirewall"},"type":"civo:Firewall"},"k8s-provider":{"type":"pulumi:providers:kubernetes","properties":{"kubeconfig":"${civo-k3s-cluster.kubeconfig}","enableServerSideApply":"1"}},"kube-prometheus-stack":{"properties":{"namespace":"${monitoring-namespace.metadata.name}","name":"kube-prometheus-stack","repositoryOpts":{"repo":"https://prometheus-community.github.io/helm-charts"},"version":"${kube-prometheus-version}","chart":"kube-prometheus-stack","values":{"prometheus":{"prometheusSpec":{"serviceMonitorSelectorNilUsesHelmValues":""}}}},"options":{"provider":"${k8s-provider}"},"type":"kubernetes:helm.sh/v3:Release"},"monitoring-namespace":{"properties":{"metadata":{"name":"monitoring"}},"options":{"provider":"${k8s-provider}"},"type":"kubernetes:core/v1:Namespace"}},"description":"Enable Prometheus monitoring of the Cilium CNI"}
{"name": "docz-app-gatsby", "runtime": "nodejs", "description": "An documentation site boilerplate made with Gatsby, Docz and Mermaid.", "main": "infra/"}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"l2-explicit-provider"}
{"name":"quadratic-infra","description":"Quadratic Infrastructure","runtime":"nodejs"}
{"name": "aws-acm-import-existing-ts", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"python","description":"A project for managing DNS records related to xPro partners","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-substructure-xpro-partner-dns"}
{"description":"An example that deploys an IAM user and user policy on AWS.","runtime":"go","name":"aws-iam-user-userpolicy-go"}
{"description":"A simple addition of a DNS record to a CloudFlare zone in Go","runtime":"go","name":"cloudflare-record-go"}
{"name": "ol-infrastructure-concourse-application", "runtime": "python", "description": "A project to manage the resources and deployment for the Concourse CI/CD system", "backend": {"url": "s3://mitol-pulumi-state/"}}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-large-string"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Subnets In Secondary VPC CIDR Blocks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"scala","description":"An example of a static website hosted on Azure Blob Storage + Azure CDN.","name":"azure-static-website"}
{"runtime":"mock","name":"l1-empty-bad-name"}
{"name":"setup-lamda","description":"lambda function that triggers on s3 upload","runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS IdentityProvider Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","description":"An EKS cluster","name":"aws-eks","variables":{"vpcId":{"fn::invoke":{"return":"id","function":"aws:ec2:getVpc","arguments":{"default":"1"}}},"subnetIds":{"fn::invoke":{"return":"ids","arguments":{"vpcId":"${vpcId}"},"function":"aws:ec2:getSubnetIds"}}},"outputs":{"kubeconfig":"${cluster.kubeconfig}"},"resources":{"cluster":{"type":"eks:Cluster","properties":{"maxSize":"2","subnetIds":"${subnetIds}","vpcId":"${vpcId}","instanceType":"t2.medium","minSize":"1","desiredCapacity":"2"}}}}
{"description":"An example of creating a CosmosDB container through a Azure's Cosmos SDK and deploying a Logic App and an API Connection","name":"azure-cosmosdb-logicapp","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"Pulumi project for managing KMS CMKs","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-aws-kms"}
{"description":"Example of managing the secrets and permissions via services and features like KeyVault, AD Managed Identity, AD RBAC in Python","runtime":{"name":"python","options":{"virtualenv":"venv"}},"template":{"config":{"azure:location":{"description":"The Azure location to use (e.g., `eastus` or `westeurope`)"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"azure:environment":{"description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)","default":"public"}}},"name":"azure-py-msi-keyvault-rbac"}
{"runtime":"yaml","name":"test-aws-1655-legacy","outputs":{"actual":"${res.tags}"},"description":"Add new tag: `thwomp: pow`\n","resources":{"res":{"options":{"provider":"${aws-provider}"},"type":"aws:s3:Bucket"},"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"thwomp":"pow","foo":"quux"}}}}}}
{"runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program","name":"metricbeat"}
{"name": "pulumi-azure-logic-apps", "runtime": "go", "description": "A minimal Azure Native Go Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal Google Cloud Python Pulumi program", "important": true, "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}}}}
{"name":"automation_api","description":"Automation API with Google Cloud Run","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Step Function Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","name":"${PROJECT}","description":"${DESCRIPTION}","template":{"description":"A Python program to deploy a virtual machine on Amazon EC2","config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"instanceType":{"description":"The Amazon EC2 instance type","default":"t3.micro"},"vpcNetworkCidr":{"description":"The network CIDR to use for the VPC","default":"10.0.0.0/16"}}}}
{"description":"common project resources","name":"common","runtime":"nodejs"}
{"runtime":{"name":"yaml"},"name":"test","resources":{"subnet2":{"properties":{"mapPublicIpOnLaunch":"","availabilityZone":"us-west-2b","cidrBlock":"10.192.21.0/24","vpcId":"${vpc1.id}"},"options":{"provider":"${provider}"},"type":"aws:ec2/subnet:Subnet"},"vpc1":{"properties":{"cidrBlock":"10.192.0.0/16"},"type":"aws:ec2/vpc:Vpc","options":{"provider":"${provider}"}},"provider":{"options":{"version":"5.42.0"},"type":"pulumi:providers:aws"},"tested-resource":{"type":"aws:route53:ResolverEndpoint","options":{"provider":"${provider}"},"properties":{"ipAddresses":[{"subnetId":"${subnet1.id}"},{"subnetId":"${subnet2.id}","ip":"10.192.21.4"}],"direction":"INBOUND","securityGroupIds":["${securityGroupAllowTLS1.id}"]}},"securityGroupAllowTLS1":{"options":{"provider":"${provider}"},"type":"aws:ec2:SecurityGroup","properties":{"egress":[{"toPort":"0","protocol":"-1","fromPort":"0","ipv6CidrBlocks":["::/0"],"cidrBlocks":["0.0.0.0/0"]}],"description":"Allow TLS inbound traffic","vpcId":"${vpc1.id}","ingress":[{"fromPort":"443","protocol":"tcp","toPort":"443","cidrBlocks":["${vpc1.cidrBlock}"],"description":"TLS from VPC"}]}},"subnet1":{"properties":{"availabilityZone":"us-west-2a","mapPublicIpOnLaunch":"","cidrBlock":"10.192.20.0/24","vpcId":"${vpc1.id}"},"options":{"provider":"${provider}"},"type":"aws:ec2/subnet:Subnet"}}}
{"resources":{"ecsExecutionRolePolicy":{"type":"aws:iam/rolePolicy:RolePolicy","properties":{"policy":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": [\n        \"logs:*\",\n        \"ecs:*\"\n      ],\n      \"Effect\": \"Allow\",\n      \"Resource\": \"*\"\n    }\n  ]\n}\n","role":"${ecsExecutionRole.name}"}},"ecsCluster":{"type":"aws:ecs/cluster:Cluster"},"vpc":{"type":"aws:ec2/vpc:Vpc","properties":{"cidrBlock":"10.0.0.0/16"}},"ecsService":{"type":"aws:ecs/service:Service","properties":{"desiredCount":"1","launchType":"FARGATE","networkConfiguration":{"assignPublicIp":"1","subnets":["${subnet.id}","${secondSubnet.id}"],"securityGroups":["${ecsSecurityGroup.id}"]},"cluster":"${ecsCluster.id}","taskDefinition":"${taskDefinition.arn}"}},"ecsSecurityGroup":{"properties":{"vpcId":"${vpc.id}"},"type":"aws:ec2/securityGroup:SecurityGroup"},"securityGroupRule":{"type":"aws:ec2:SecurityGroupRule","properties":{"protocol":"tcp","cidrBlocks":["${vpc.cidrBlock}"],"toPort":"80","fromPort":"80","securityGroupId":"${ecsSecurityGroup}","type":"ingress"}},"ecsExecutionRole":{"type":"aws:iam/role:Role","properties":{"assumeRolePolicy":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"}},"taskDefinition":{"type":"aws:ecs/taskDefinition:TaskDefinition","properties":{"family":"fargate-task-definition","cpu":"256","requiresCompatibilities":["FARGATE"],"containerDefinitions":"[{\n  \"name\": \"my-app\",\n  \"image\": \"nginx\",\n  \"portMappings\": [{\n    \"containerPort\": 80,\n    \"hostPort\": 80,\n    \"protocol\": \"tcp\"\n  }]\n}]\n","networkMode":"awsvpc","executionRoleArn":"${ecsExecutionRole.arn}","memory":"512"}},"secondSubnet":{"properties":{"vpcId":"${vpc.id}","cidrBlock":"10.0.2.0/24"},"type":"aws:ec2/subnet:Subnet"},"subnet":{"properties":{"cidrBlock":"10.0.1.0/24","vpcId":"${vpc.id}"},"type":"aws:ec2/subnet:Subnet"}},"name":"ecs-service","runtime":"yaml"}
{"name":"cs-many-resources","description":"A minimal C# Pulumi program","runtime":"dotnet"}
{"name":"kustomize-test-unconfigured-provider","description":"Test kustomize support using an unconfigured provider","runtime":"python"}
{"runtime":"yaml","resources":{"provider":{"properties":{"kubeconfig":"fake-kubeconfig-data"},"type":"pulumi:providers:kubernetes"},"job":{"properties":{"metadata":{"annotations":{"pulumi.com/replaceUnready":"true"},"name":"test-job-unreachable"},"spec":{"template":{"metadata":{"name":"test-job-unreachable"},"spec":{"restartPolicy":"Never","containers":[{"image":"busybox","name":"test-job-unreachable-container","command":["sh","-c","exit 1"]}]}}}},"type":"kubernetes:batch/v1:Job","options":{"provider":"${provider}","customTimeouts":{"update":"15s","delete":"15s","create":"15s"}}}},"name":"job-unreachable"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Standard usage", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal C# Pulumi program","name":"volume-cs","runtime":"dotnet"}
{"description":"An empty Pulumi Azure test script.","runtime":"nodejs","name":"minimal"}
{"name":"docker-ts-multi-container-app","runtime":"nodejs","description":"Example typescript app using multiple docker containers"}
{"name":"${PROJECT}","runtime":"dotnet","description":"${DESCRIPTION}","template":{"config":{"servicePort":{"default":"80","description":"The HTTP service port to expose on the VM"},"machineType":{"default":"f1-micro","description":"The GCP machine type to use for the VM"},"gcp:zone":{"description":"The Google Cloud availability zone to deploy into","default":"us-central1-a"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"osImage":{"default":"debian-11","description":"The OS image type to use for the VM"},"instanceTag":{"default":"webserver","description":"The tag to apply to the VM instance"},"gcp:project":{"description":"The Google Cloud project to deploy into"}},"description":"A C# program to deploy a virtual machine on Google Cloud"}}
{"runtime":"nodejs","name":"l2-destroy"}
{"name":"compiler_options","runtime":"nodejs","description":"A TypeScript program that sets the `target` in `tsconfig.json` to `es2016`."}
{"description":"A simple MariaDB application","name":"mariadb","runtime":"nodejs"}
{"name": "pulumi-challenge", "description": "Pulumi Challenge Startup-in-a-box on GCP,\nwritten in TypeScript.\n", "runtime": "nodejs"}
{"runtime":"go","name":"aws-import-iac-iam-role-go","description":"An example that deploys the resource definition for an imported IAM role on AWS.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}}}
{"description":"A TypeScript program to deploy a Kubernetes cluster on Azure","runtime":"nodejs","name":"az-getting-started-k8s"}
{"name":"aws-acm-certificate-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"Creates a simple ACM certificate resource"}
{"name":"delete_targets_many_deps","runtime":"nodejs"}
{"description":"An example that creates a new VPC with a custom NAT gateway strategy.","runtime":"go","name":"awsx-vpc-nat-gateways-go"}
{"template":{"config":{"gcp:project":{"description":"The ID of the GCP project in which deploy resources"},"aws:region":{"default":"us-east-1","description":"The AWS region in which to perform operations"}}},"runtime":"nodejs","description":"Example showing a single program deploying to both AWS and GCP","name":"multicloud-ts-buckets"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l2-parameterized-resource"}
{"runtime":"nodejs","name":"webserver-gcp","description":"Basic example of an Google Cloud web server accessible over HTTP","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:zone":{"default":"us-central1-a","description":"The Google Cloud zone"}}}}
{"runtime":"nodejs","description":"Basic example of a serverless AWS application that uses express","name":"express"}
{"name":"l2-plain","runtime":"nodejs"}
{"name":"policy_changed_properties","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":"dotnet","description":"A minimal C# Pulumi program","name":"cloudtrail-dotnet"}
{"runtime":"nodejs","name":"digitalocean-kubernetes","description":"A minimal DigitalOcean TypeScript Pulumi program"}
{"description":"An example that creates a new VPC with a custom subnet specification.","name":"awsx-vpc-subnets-typescript","runtime":"nodejs"}
{"runtime":{"options":{"compiler":"cue export"},"name":"yaml"},"name":"cue","description":"CUE Example"}
{"name":"index_groupcghckcNmry6y","resources":{"keycloakGroup":{"type":"keycloak:Group","properties":{"realmId":"${keycloakRealm.id}"}},"keycloakRealm":{"type":"keycloak:Realm","properties":{"enabled":"1","realm":"example-realm"}}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/19fcc853-1bd3-4b46-b9fd-d1969fb095dc.zip"}}},"runtime":"yaml","description":"A minimal Pulumi program that creates a Keycloak group with its dependencies"}
{"runtime":"nodejs","name":"l2-engine-update-options"}
{"name":"synapse","runtime":"dotnet","description":"A minimal Azure Native C# Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS BucketPublicAccessBlock TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "vpc-typescript", "runtime": "nodejs", "description": "A minimal AliCloud TypeScript project for a VPC"}
{"name":"test-aws-1655-legacy","resources":{"res":{"type":"aws:s3:Bucket","options":{"provider":"${aws-provider}"}},"aws-provider":{"properties":{"defaultTags":{"tags":{"thwomp":"pow"}}},"type":"pulumi:providers:aws"}},"outputs":{"actual":"${res.tags}"},"runtime":"yaml","description":"Remove foo tag (foo and thwomp)\n"}
{"description":"A example that deploys an S3 bucket, lambda function resources, and an eventbridge trigger permission.","name":"aws-s3bucket-lambda-eventbridge-typescript","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"outputs":{"actual":"${res.tags}"},"runtime":"yaml","resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"thwomp":"pow","foo":"quux"}}}},"res":{"options":{"provider":"${aws-provider}"},"type":"aws:s3:BucketV2"}},"description":"Add new tag: `thwomp: pow`\n","name":"test-aws-1655-bucket"}
{"name":"ts-with-package-json-in-parent-dir","description":"Run a TypeScript program where package.json is in a parent directory.","runtime":"nodejs"}
{"name":"cbp-aws-go","runtime":"go","description":"An example of building/publishing a Docker container image to AWS ECR"}
{"runtime":"nodejs","description":"A simple Nodejs program that uses a dynamic ResourceProvider with generic types.","name":"generic-types"}
{"runtime":"java","name":"awsx-elb-web-listener-java","description":"An example that deploys an ApplicationLoadBalancer listening on port 80."}
{"runtime":"python","description":"A simple example of using autonaming Fifo queues in python","name":"testing-aws-fifo-dotnet"}
{"name": "pulumi-serverless", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"l2-resource-config","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"runtime":"go","name":"construct_component_go","description":"A program that constructs remote component resources.","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]}}
{"runtime":"dotnet","description":"Creates Azure Synapse workspace with SQL and Spark pools","name":"azure-cs-synapse"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getRole Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "aws-apigateway-labmda-multiroute-py", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"description":"A minimal example of creating an EKS cluster and interacting with resulting Kubernetes cluster using Go.","name":"aws-go-eks-helloworld","runtime":"go"}
{"name":"l2-resource-primitives","runtime":"nodejs"}
{"runtime":"go","description":"An minimal Azure Kubernetes Service Go Pulumi program","name":"azure-go-aks"}
{"name":"webserver-linode","runtime":"nodejs","description":"Basic example of an Linode web server accessible over HTTP"}
{"name": "aws-native-ts-ecs", "runtime": "nodejs", "description": "A TypeScript Pulumi program with AWS Native provider that provisions an ECS Cluster"}
{"variables":{"rrreplaced":{"fn::invoke":{"return":"out","function":"str:regex:replace","arguments":{"s":"abc-abc--abc---abc","pattern":"-+","new":"<*>"}}},"_":{"fn::invoke":{"function":"str:print","arguments":{"s":"I can indeed be printed"}}},"replaced":{"fn::invoke":{"arguments":{"old":"---","s":"abc---abc---abc","new":"<*>"},"function":"str:replace","return":"out"}},"aString":{"fn::invoke":{"return":"out","function":"str:giveMeAString"}}},"outputs":{"regex-replaced":"${rrreplaced}","aString":"${aString}","replace":"${replaced}"},"runtime":"yaml","plugins":{"providers":[{"name":"str","path":".."}]},"name":"test-str"}
{"name":"debate-map","description":"The Pulumi project file for deploying debate-map to the cloud.","runtime":"nodejs"}
{"description":"Application layer for the aws-ts-stackreference-architecture","name":"application-layer","runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into."},"databaseStack":{"description":"(Required) The reference to the database so that the Application Instance can get the correct credentials and database information for application startup (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)"},"networkingStack":{"description":"(Required) The reference to the networking stack on which the database will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)"}}}}
{"name": "content-platform-shared", "runtime": "nodejs", "description": "Shared infrastructure for the content platform"}
{"name": "pulumi-k8s-report", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "With Latest Version Of Launch Template", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","name":"logsink","description":"A minimal Pulumi YAML program","outputs":{"logSinkWriterIdentity":"${logSink.writerIdentity}","serviceAccountEmail":"${serviceAccount.email}","bucketName":"${bucket.name}"},"resources":{"bucket":{"type":"gcp:storage:Bucket","properties":{"location":"EU"}},"random-account-id":{"properties":{"upper":"","special":"","number":"","length":"10"},"type":"random:RandomString"},"logSink":{"type":"gcp:logging:ProjectSink","properties":{"destination":"storage.googleapis.com/${bucket.name}","filter":"severity>=DEBUG","name":"pulumi-log-sink"}},"bucketIAMMember":{"properties":{"bucket":"${bucket.name}","role":"roles/storage.objectAdmin","member":"serviceAccount:${serviceAccount.email}"},"type":"gcp:storage:BucketIAMMember"},"serviceAccount":{"type":"gcp:serviceaccount:Account","properties":{"accountId":"${random-account-id.result}"}}}}
{"name":"minimal-py","runtime":"python","description":"A minimal Google Cloud Python Pulumi program"}
{"name":"log_debug_go","runtime":"go"}
{"name":"l2-large-string","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"name":"smoke-test","description":"A program that smoke-tests the Kubernetes SDK","runtime":"python"}
{"config":{"edaInfraStackRef":"dirien/01-eda-infrastructure/dev","infraStackRef":"dirien/00-aws-infrastructure/dev"},"description":"A minimal AWS Go Pulumi program","runtime":"go","name":"03-eda-workload"}
{"runtime":"nodejs","description":"Regress pulumi/pulumi-aws#1423","name":"regress-1423"}
{"name":"provider-xyz-native","plugins":{"providers":[{"name":"xyz","path":"../../bin"}]},"runtime":"go"}
{"variables":{"appLabels":{"app":"nginx-ingress"}},"resources":{"ingressns":{"type":"kubernetes:core/v1:Namespace","properties":{"metadata":{"name":"${k8sNamespace}","labels":"${appLabels}"}}},"ingresscontroller":{"type":"kubernetes:helm.sh/v3:Release","properties":{"skipCrds":"1","namespace":"${ingressns.metadata.name}","version":"0.14.1","chart":"nginx-ingress","repositoryOpts":{"repo":"https://helm.nginx.com/stable"},"values":{"controller":{"appprotectdos":{"enable":""},"service":{"extraLabels":"${appLabels}"},"enableCustomResources":"","appprotect":{"enable":""}}}}}},"template":{"description":"A Pulumi YAML program to deploy a Helm chart onto a Kubernetes cluster","config":{"k8sNamespace":{"default":"nginx-ingress","description":"The Kubernetes namespace to deploy into"}}},"config":{"k8sNamespace":{"type":"string","default":"nginx-ingress"}},"description":"Demo Code Part 1 of the Tutorial around Helm in Kubernetes","outputs":{"name":"${ingresscontroller.name}"},"name":"helm-kubernetes-part-one-yaml","runtime":"yaml"}
{"runtime":{"name":"go"},"name":"terraform_vm","description":"A minimal Azure Native Go Pulumi program"}
{"name":"helm","description":"A program that tests Helm chart creation","runtime":"python"}
{"runtime":"nodejs","name":"esm-js","description":"Use ECMAScript modules for a plain JS program."}
{"description":"${DESCRIPTION}","runtime":"go","template":{"description":"A minimal Google Cloud Go Pulumi program","config":{"google-native:project":{"description":"The Google Cloud project to deploy into"}}},"name":"${PROJECT}"}
{"runtime":"dotnet","description":"An example that deploys an API Gateway instance with support for API keys.","name":"awsx-apigateway-api-keys-csharp"}
{"runtime":"java","name":"awsx-elb-vpc-java","description":"An example that deploys an ApplicationLoadBalancer in a VPC."}
{"runtime":"nodejs","name":"ratest"}
{"name":"${PROJECT}","template":{"description":"A minimal AliCloud JavaScript Pulumi program","config":{"alicloud:region":{"default":"cn-beijing","description":"The AliCloud region to deploy into"}}},"description":"${DESCRIPTION}","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs","name":"kubernetes-ts-crontabs"}
{"description":"Factorio blueprints mono repo","name":"factorio-sites","runtime":"nodejs"}
{"outputs":{"testSetOptionals__actual":"${set.setOptionals}","testRequiredStringAfterUpdate__expect":"input1-updated","testOptionalStringAfterUpdate__expect":"input2-updated","testOptionalStringAfterUpdate__actual":"${r.optionalInputStringCopy}","testRequiredStringAfterUpdate__actual":"${r.requiredInputStringCopy}","testSetOptionals__expect":["input1-updated"]},"name":"updateprogram","resources":{"r":{"properties":{"requiredInputString":"input1-updated","optionalInputString":"input2-updated","statedir":"state"},"type":"testbridge:index/testres:Testres"},"set":{"type":"testbridge:index/testres:Testres","properties":{"statedir":"state","setOptionals":["${r.requiredInputStringCopy}"],"requiredInputString":"input1"}}},"runtime":"yaml"}
{"description":"A program that extracts a component child with an alias.","runtime":"nodejs","name":"aliases_extract_component_child"}
{"name": "wordpress-ecs-rds", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploys WordPress in ECS Fargate with RDS backend."}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-go"}}},"description":"An example that creates a Kubernetes Deployment","runtime":"go","name":"kubernetes-deployments-go"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","name":"ol-infrastructure-mitxonline-application","description":"Pulumi project for deploying the stack of services needed by the mitxonline application"}
{"name": "ol-infrastructure-tika-server", "runtime": "python", "description": "Manage deployment of a tika server", "backend": {"url": "s3://mitol-pulumi-state/"}}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"l2-ref-ref"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Automation Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A python program to test if multiple non-exported outputs are awaited","runtime":"python","name":"python_await"}
{"outputs":{"kubeconfig":{"Fn::Secret":"${civo-k3s-cluster.kubeconfig}"}},"name":"trivy-operator-custom-policy","resources":{"civo-firewall":{"type":"civo:Firewall","properties":{"name":"MyCivoFirewall","region":"${civo-region}"}},"k8s-provider":{"properties":{"enableServerSideApply":"1","kubeconfig":"${civo-k3s-cluster.kubeconfig}"},"type":"pulumi:providers:kubernetes"},"civo-k3s-cluster":{"type":"civo:KubernetesCluster","properties":{"region":"${civo-region}","cni":"cilium","name":"MyCivoCluster","firewallId":"${civo-firewall.id}","pools":{"size":"${civo-k8s-node-size}","nodeCount":"${civo-k8s-node-count}"}}},"trivy-operator":{"properties":{"chart":"trivy-operator","namespace":"${trivy-namespace.metadata.name}","values":{"trivy":{"imageRef":"ghcr.io/aquasecurity/trivy:0.31.3","ignoreUnfixed":"1"}},"repositoryOpts":{"repo":"https://aquasecurity.github.io/helm-charts/"},"version":"${trivy-operator-version}"},"type":"kubernetes:helm.sh/v3:Release","options":{"provider":"${k8s-provider}"}},"trivy-policy-cm":{"properties":{"metadata":{"namespace":"${trivy-namespace.metadata.name}","name":"trivy-operator-policies-config"},"data":{"policy.ED001.rego":"package builtin.trivyoperator.policy.k8s.custom\n\nimport future.keywords.in\nimport data.lib.kubernetes\nimport data.lib.result\n\ndefault allowedRegistries = [\"quay.io\",\"ghcr.io\",\"gcr.io\"]\n\n__rego_metadata__ := {\n  \"id\": \"ED001\",\n  \"title\": \"Allowed container registry checks\",\n  \"severity\": \"CRITICAL\",\n  \"description\": \"The usage of non approved container registries is not permitted\",\n}\n\n__rego_input__ := {\n  \"combine\": false,\n  \"selector\": [{\"type\": \"kubernetes\"}],\n}\n\nallowedRegistry(image) {\n  registry := allowedRegistries[_]\n  startswith(image, registry)\n}\n\ndeny[res] {\n  container := kubernetes.containers[_]\n  not allowedRegistry(container.image)\n  msg :=  kubernetes.format(sprintf(\"Container '%s' with image '%s' of %s '%s' comes from not approved container registry %s\", [container.name, container.image, kubernetes.kind, kubernetes.name, allowedRegistries]))\n  res := result.new(msg, container)\n}\n","policy.ED001.kinds":"*"}},"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${k8s-provider}","parent":"${trivy-operator}"}},"trivy-namespace":{"type":"kubernetes:core/v1:Namespace","properties":{"metadata":{"name":"${trivy-namespaces}"}},"options":{"provider":"${k8s-provider}"}}},"runtime":"yaml","description":"Trivy Operator with custom policy on Civo","variables":{"trivy-operator-version":"0.2.0","civo-k8s-node-size":"g4s.kube.medium","civo-k8s-node-count":"2","trivy-namespaces":"trivy-system","civo-region":"FRA1"}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"awsx-ecr-image-python"}
{"runtime":"python","name":"${PROJECT}","description":"${DESCRIPTION}","template":{"description":"A Python program to deploy a web application onto a Kubernetes cluster","config":{"replicas":{"description":"The number of replicas to deploy","default":"1"},"namespace":{"default":"default","description":"The Kubernetes namespace to deploy into"}}}}
{"name": "users-api", "description": "Users API Infrastructure Definitions", "runtime": "dotnet", "config": {"aws:region": "eu-north-1", "users-api:dbAdmin": "apiDbAdmin", "users-api:dbName": "usersapidb", "users-api:name": "users-api", "users-api:infraStackReferenceName": "infrastructure", "users-api:appArtifactPath": "../VirtualFinland.UserAPI/src/VirtualFinland.UsersAPI/bin/Release/net6.0/VirtualFinland.UsersAPI.zip", "users-api:dbMigratorArtifactPath": "../VirtualFinland.UsersAPI.DatabaseMigrationRunner/bin/Release/net6.0/VirtualFinland.UsersAPI.DatabaseMigrationRunner.zip", "users-api:useRdsProxy": false, "acl:accessfinland-isEnabled": false, "acl:dataspace-isEnabled": false, "acl:dataspace-agent": "", "auth:testbed-isEnabled": true, "auth:sinuna-isEnabled": true, "auth:suomifi-isEnabled": false}}
{"name":"role-inline-policy-auto-name","runtime":"nodejs","description":"A simple example of role inline_policy auto naming"}
{"name":"literoom","runtime":{"name":"nodejs","options":{"nodeargs":"--import=tsx"}},"main":"pulumi/index.ts"}
{"name": "11-secret-manager", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"backend":{"url":"file://~"},"org":"eomii","runtime":"go","name":"nativelink","description":"NativeLink development cluster for rules_ll.","organization":{"pulumi:tags":{"company":"eomii"}}}
{"name":"azure-native-static-website-typescript","description":"An example that deploys all of the resources for a static website on Azure.","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-typescript"}}},"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"}}
{"name":"kong_crd","description":"A minimal Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "alb", "runtime": "nodejs", "description": "A simple application load balancer example."}
{"name":"network-go","description":"A minimal Go Pulumi program","runtime":"go"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Error Handling Configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"iam_file_policy"}
{"name":"loadbalancer","description":"Basic example of a Load Balancer accessible over HTTP running on Google Gloud Platform","runtime":"nodejs"}
{"runtime":"scala","name":"gcp-cloudrun","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:zone":{"default":"us-central1-a","description":"The Google Cloud zone"}}},"description":"Google Cloud Run Scala Pulumi program"}
{"runtime":{"name":"yaml","options":{"compiler":"cue export"}},"name":"cue","description":"CUE Example"}
{"name":"first_class_providers","runtime":"nodejs","description":"A program that uses an explicit provider."}
{"description":"A program that constructs a remote component resource with a child resource that takes a long time to be created.","name":"construct_component_slow_nodejs","runtime":"nodejs"}
{"description":"A minimal AWS TypeScript Pulumi program","name":"redshift","runtime":"nodejs"}
{"runtime":"nodejs","description":"A simple application load balancer example using lambda.","name":"alb-lambda-target"}
{"name": "azureiot-typescript", "runtime": "nodejs", "description": "A minimal Azure TypeScript Pulumi program"}
{"runtime":"java","name":"azure-java-static-website","description":"Deploys a static website with Pulumi on Azure from Java definitions"}
{"name":"stepfunctions","description":"Basic example of AWS Step Functions","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}},"runtime":"nodejs"}
{"runtime":"nodejs","name":"pulumi-aws-eventbridge-sns","description":"Eventbridge SNS example for CDK"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that creates a new VPC and configuring a custom CIDR block.","name":"awsx-vpc-cidr-javascript"}
{"description":"A program to build/publish to the Docker Hub.","runtime":"nodejs","name":"cbp-docker-ts-dev"}
{"runtime":{"options":{"compiler":"cue export"},"name":"yaml"},"description":"CUE Example","name":"cue"}
{"name":"azure-cs-webserver","description":"Basic C# example of an Azure web server accessible over HTTP.","runtime":"dotnet"}
{"runtime":"nodejs","name":"floatingip-digitalocean","description":"A simple FloatingIp on DigitalOcean."}
{"description":"Tests a Pulumi program with multiple turns.","name":"multiple-turns","runtime":"nodejs"}
{"description":"coin stack","name":"arbitrum-nova","runtime":"nodejs"}
{"runtime":"nodejs","description":"EKS cluster example of various, specialized resource tags","name":"test-tag-input-types"}
{"runtime":"python","name":"lecture-demo-michaellevan","description":"Lecture demo"}
{"runtime":"nodejs","name":"copy-remote","description":"A command example copying a directory via sFTP","config":{"pulumi:tags":{"value":{"pulumi:template":""}}}}
{"description":"Minimal valid program using Hetzner Cloud Placement Group","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/17bb01ef-e587-43ca-8199-0167985e0e97.zip"}}},"runtime":"yaml","name":"index_placementgroupCJQxz4fFqv1E","resources":{"placementGroup":{"properties":{"type":"spread"},"type":"hcloud:index/placementGroup:PlacementGroup"}}}
{"runtime":"nodejs","name":"import_acquire","description":"A program that adopts an external resource"}
{"name":"aws-s3bucket-bucketobject-interpolate-java","runtime":"java","description":"An example that creates an S3 bucket and bucket object","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}}}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"config":{"prefixForDns":{"description":"DNS prefix for the cluster","default":"pulumi"},"sshPubKey":{"description":"Contents of the public key for SSH access to cluster nodes"},"kubernetesVersion":{"description":"Kubernetes version to deploy in the cluster","default":"1.27"},"nodeVmSize":{"description":"VM size to use for worker nodes in the cluster","default":"Standard_DS2_v2"},"numWorkerNodes":{"description":"Number of worker nodes in the cluster","default":"3"},"mgmtGroupId":{"description":"The object ID (from az ad group list) of a group to make cluster admins"},"azure-native:location":{"value":"westus2"}},"description":"A Pulumi YAML program to deploy a Kubernetes cluster on Azure"},"resources":{"virtualNetwork":{"type":"azure-native:network:VirtualNetwork","properties":{"addressSpace":{"addressPrefixes":["10.0.0.0/16"]},"resourceGroupName":"${resourceGroup.name}"}},"resourceGroup":{"type":"azure-native:resources:ResourceGroup"},"subnet1":{"type":"azure-native:network:Subnet","properties":{"resourceGroupName":"${resourceGroup.name}","addressPrefix":"10.0.0.0/22","virtualNetworkName":"${virtualNetwork.name}"}},"subnet3":{"properties":{"resourceGroupName":"${resourceGroup.name}","virtualNetworkName":"${virtualNetwork.name}","addressPrefix":"10.0.8.0/22"},"type":"azure-native:network:Subnet"},"subnet2":{"type":"azure-native:network:Subnet","properties":{"resourceGroupName":"${resourceGroup.name}","addressPrefix":"10.0.4.0/22","virtualNetworkName":"${virtualNetwork.name}"}},"managedCluster":{"type":"azure-native:containerservice:ManagedCluster","properties":{"addonProfiles":{},"linuxProfile":{"adminUsername":"azureuser","ssh":{"publicKeys":[{"keyData":"${sshPubKey}"}]}},"dnsPrefix":"${prefixForDns}","apiServerAccessProfile":{"authorizedIPRanges":["0.0.0.0/0"],"enablePrivateCluster":""},"networkProfile":{"serviceCidr":"10.96.0.0/16","networkPolicy":"azure","networkPlugin":"azure","dnsServiceIP":"10.96.0.10"},"enableRBAC":"1","agentPoolProfiles":[{"name":"systempool","count":"${numWorkerNodes}","type":"VirtualMachineScaleSets","vmSize":"${nodeVmSize}","enableNodePublicIP":"","osType":"Linux","mode":"System","availabilityZones":["1","2","3"],"vnetSubnetID":"${subnet1.id}"}],"aadProfile":{"managed":"1","adminGroupObjectIDs":["${mgmtGroupId}"],"enableAzureRBAC":"1"},"identity":{"type":"SystemAssigned"},"resourceGroupName":"${resourceGroup.name}","kubernetesVersion":"${kubernetesVersion}"}}},"config":{"mgmtGroupId":{"type":"string"},"nodeVmSize":{"type":"string","default":"Standard_DS2_v2"},"numWorkerNodes":{"type":"integer","default":"3"},"kubernetesVersion":{"type":"string","default":"1.27"},"sshPubKey":{"type":"string"},"prefixForDns":{"type":"string","default":"pulumi"},"azure-native:location":{"value":"westus2"}},"runtime":"yaml","outputs":{"adminKubeconfig":{"fn::secret":"${adminKubeconfig}"},"kubeconfig":"${userKubeconfig}","clusterName":"${managedCluster.name}"},"variables":{"aksUserCredentials":{"fn::azure-native:containerservice:listManagedClusterUserCredentials":{"resourceGroupName":"${resourceGroup.name}","resourceName":"${managedCluster.name}"}},"adminKubeconfig":{"fn::fromBase64":"${aksAdminCredentials.kubeconfigs[0].value}"},"userKubeconfig":{"fn::fromBase64":"${aksUserCredentials.kubeconfigs[0].value}"},"aksAdminCredentials":{"fn::azure-native:containerservice:listManagedClusterAdminCredentials":{"resourceGroupName":"${resourceGroup.name}","resourceName":"${managedCluster.name}"}}}}
{"runtime":{"name":"python","options":{"toolchain":"pip","virtualenv":"venv"}},"description":"A minimal Google Cloud Python Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}},"name":"packageadd_pip"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l2-resource-secret"}
{"description":"Manage deployment of an airbyte server","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","name":"ol-infrastructure-airbyte-server"}
{"name": "asciigram", "runtime": "nodejs", "description": "An example of an event-driven, serverless, database-backed website and API service.", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-west-2"}}}}
{"description":"A simple AWS Cloud C# Pulumi program","name":"simple-cs","runtime":"dotnet"}
{"runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","name":"pinterestClone","main":"pulumi/"}
{"runtime":"nodejs","description":"Create a container group https://github.com/terraform-providers/terraform-provider-azurerm/tree/master/examples/aci-linux-multi","name":"aci-multi"}
{"name": "pulum", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal OpenStack Python Pulumi program"}
{"description":"An example that creates a new VPC and configuring availability zones.","name":"awsx-vpc-azs-go","runtime":"go"}
{"runtime":{"name":"python"},"name":"ls","config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A minimal AWS Python Pulumi program"}
{"name":"aliases_rename","runtime":"python","description":"A program that replaces a resource with a new name and alias."}
{"runtime":"nodejs","name":"managed-ng-disk-size","description":"Tests that disk size can be specified correctly when a custom launch template is automatically created."}
{"name":"l2-explicit-provider","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name":"example-oidc-iam-sa","description":"OIDC Provider and IAM roles for Service Accounts","runtime":"nodejs"}
{"name":"secrets-dynamic","runtime":"nodejs","description":"A small example that uses our secrets support."}
{"runtime":"yaml","outputs":{"referencedImageName":{"fn::stackReference":["PLACEHOLDER_ORG_NAME/stackreference-producer/PLACEHOLDER_STACK_NAME","imageName"]}},"name":"stackreference-consumer"}
{"name":"03-application-selfhosted-gke","runtime":"nodejs","description":"Set up deployments, services and ingress for Pulumi GKE self-hosted installation."}
{"name":"azure-native-static-website-python","description":"An example that deploys all of the resources for a static website on Azure.","runtime":{"options":{"toolchain":"pip","virtualenv":"venv"},"name":"python"},"config":{"pulumi:tags":{"value":{"pulumi:template":"azure-python"}}}}
{"name": "gnosis", "runtime": "nodejs", "description": "coin stack"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS TrafficMirrorSession Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program","name":"helm-release-crd"}
{"name":"dev-yaml","resources":{"b2":{"type":"aws:s3:Bucket","options":{"retainOnDelete":"1"},"get":{"id":"${b1.id}"}},"b1":{"type":"aws:s3:Bucket"}},"description":"Assert that we can safely use a computed ID to import a resource.\n","runtime":"yaml"}
{"name":"${PROJECT}","template":{"description":"A minimal Random C# Pulumi program."},"description":"${DESCRIPTION}","runtime":"dotnet"}
{"name": "gofunction", "description": "A minimal AWS Go Pulumi program", "runtime": "go"}
{"description":"A minimal installation of the latest version of the Wordpress Helm chart","template":null,"name":"wordpress","runtime":"nodejs"}
{"name":"aws-iam-role-instanceprofile-typescript","runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"description":"An example that deploys an IAM role and instance profile on AWS."}
{"name":"webserver-py-old","description":"Basic example of a web server on a compute instance running on Google Cloud Platform, specifying inputs with dicts","runtime":"python"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RateBasedRule Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"resources":{"exampleVpc":{"properties":{"enableDnsHostnames":"1","cidrBlock":"10.0.0.0/16","enableDnsSupport":"1"},"type":"aws:ec2:Vpc"},"exampleSecurityGroup":{"type":"aws:ec2:SecurityGroup","properties":{"name":"example-security-group","egress":[{"cidrBlocks":["0.0.0.0/0"],"toPort":"0","fromPort":"0","protocol":"-1"}],"vpcId":"${exampleVpc.id}","ingress":[{"toPort":"80","cidrBlocks":["0.0.0.0/0"],"protocol":"tcp","fromPort":"80"}],"description":"Managed by Pulumi"}},"exampleSubnet2":{"type":"aws:ec2:Subnet","properties":{"availabilityZone":"us-west-2b","vpcId":"${exampleVpc.id}","cidrBlock":"10.0.2.0/24"}},"exampleSubnet1":{"properties":{"availabilityZone":"us-west-2a","vpcId":"${exampleVpc.id}","cidrBlock":"10.0.1.0/24"},"type":"aws:ec2:Subnet"},"myVPCGatewayAttachment":{"type":"aws:ec2:InternetGatewayAttachment","properties":{"vpcId":"${exampleVpc.id}","internetGatewayId":"${myInternetGateway.id}"}},"exampleLoadBalancer":{"properties":{"loadBalancerType":"application","subnets":["${exampleSubnet1}","${exampleSubnet2}"],"securityGroups":["${exampleSecurityGroup}"],"internal":"","name":"example-load-balancer"},"type":"aws:lb:LoadBalancer"},"exampleListener":{"properties":{"protocol":"HTTP","loadBalancerArn":"${exampleLoadBalancer.arn}","defaultActions":[{"type":"forward","targetGroupArn":"${exampleTargetGroup.arn}"}],"port":"80"},"type":"aws:lb:Listener"},"exampleTargetGroup":{"properties":{"protocol":"HTTP","name":"example-target-group","vpcId":"${exampleVpc}","port":"80"},"type":"aws:lb:TargetGroup"},"myInternetGateway":{"type":"aws:ec2:InternetGateway"}},"runtime":"yaml","name":"lb"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"awsx-apigateway-openapi-route-javascript","description":"n example of configuring an API Gateway route with an OpenAPI/Swagger definition."}
{"name":"l2-invoke-secrets","runtime":"nodejs"}
{"name":"awsx-vpc-default-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example of fetching the default AWS VPC for the current region."}
{"name":"azure-aks-managed-identity","runtime":"scala","description":"Azure AKS cluster example"}
{"runtime":"go","description":"A minimal AWS Go Pulumi program","name":"msk_go"}
{"name":"aws-java-webserver","runtime":"java","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-1"}}},"description":"Basic example of an AWS web server accessible over HTTP"}
{"name":"test-yaml-option","runtime":{"name":"nodejs","options":{"tsconfig":"other.json"}}}
{"name":"f5bigip-ec2-instance","runtime":"nodejs","template":{"config":{"f5BigIpAdminPassword":{"description":"The 'admin' password to set on the F5 BIG-IP instance"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"description":"Provision an F5 BigIP appliance from the AWS Marketplace (in TypeScript)"}
{"name": "aks", "runtime": "nodejs", "description": "Deploy our kubernetes infrastructure"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "With Latest Version Of Launch Template", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-java"}}},"runtime":"java","description":"A minimal Kubernetes Java Pulumi program","name":"kubernetes"}
{"description":"Create a set of instances with gcloud","name":"gcp-compute-example","runtime":"python"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"awsx-vpc-javascript","description":"An example that creates a new VPC using the default settings."}
{"name": "marie", "runtime": "nodejs", "description": "Set up Hasura and PostgreSQL and populate it with a schema"}
{"runtime":"nodejs","description":"An example that creates an API Gateway instance and configures a route as an HTTP proxy.","name":"awsx-apigateway-http-proxy-typescript"}
{"name":"l1-output-bool","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name":"keyvault-accesspolicies","description":"KeyVault resources","runtime":"nodejs"}
{"runtime":"yaml","resources":{"username":{"type":"random:RandomPassword","properties":{"length":"256"}}},"name":"test"}
{"description":"Data Contracts book example","runtime":{"name":"python","options":{"virtualenv":"../venv"}},"name":"data-contracts"}
{"description":"A minimal Azure Native TypeScript Pulumi program","name":"vnet_bastion","runtime":"nodejs"}
{"name":"l1-main","main":"subdir","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"description":"A more complex example of ECR with Policy and Lifecycle.","runtime":"nodejs","name":"ecr"}
{"runtime":"go","description":"A minimal AWS Go Pulumi program","name":"eks_kubevela"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Account Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"yaml"},"resources":{"defaultDataset":{"type":"gcp:bigquery:Dataset","options":{"provider":"${provider}"},"properties":{"labels":{"env":"default"},"location":"EU","defaultTableExpirationMs":"3.6e+06","description":"This is a test description","datasetId":"dspitrunnerbigqueryt4b22ee25","friendlyName":"test"}},"provider":{"type":"pulumi:providers:gcp","options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"},"properties":{"project":"${gcp:project}"}},"tested-resource":{"type":"gcp:bigquery:Table","properties":{"datasetId":"${defaultDataset.datasetId}","tableId":"sheet","deletionProtection":""},"options":{"provider":"${provider}"}}},"name":"test"}
{"name":"droplet-digitalocean","runtime":"nodejs","description":"A simple droplet on DigitalOcean."}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l1-output-array"}
{"description":"Flexible MySQL example","runtime":"nodejs","name":"mysql"}
{"description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","name":"guestbook","runtime":"nodejs"}
{"name":"azure-static-website","outputs":{"endpoint":"${storageaccount.primaryEndpoints.web}"},"runtime":"yaml","description":"A static website hosted on AWS S3","resources":{"storageaccount":{"type":"azure-native:storage:StorageAccount","properties":{"kind":"StorageV2","sku":{"name":"Standard_LRS"},"resourceGroupName":"${staticsitegroup.name}"}},"staticwebsite":{"properties":{"indexDocument":"index.html","accountName":"${storageaccount.name}","error404Document":"404.html","resourceGroupName":"${staticsitegroup.name}"},"type":"azure-native:storage:StorageAccountStaticWebsite"},"index.html":{"type":"azure-native:storage:Blob","properties":{"contentType":"text/html","type":"Block","containerName":"${staticwebsite.containerName}","accountName":"${storageaccount.name}","resourceGroupName":"${staticsitegroup.name}","source":{"Fn::FileAsset":"./www/index.html"}}},"404.html":{"type":"azure-native:storage:Blob","properties":{"resourceGroupName":"${staticsitegroup.name}","source":{"Fn::FileAsset":"./www/404.html"},"accountName":"${storageaccount.name}","contentType":"text/html","type":"Block","containerName":"${staticwebsite.containerName}"}},"favicon.png":{"type":"azure-native:storage:Blob","properties":{"source":{"Fn::FileAsset":"./www/favicon.png"},"resourceGroupName":"${staticsitegroup.name}","accountName":"${storageaccount.name}","type":"Block","containerName":"${staticwebsite.containerName}","contentType":"image/png"}},"staticsitegroup":{"type":"azure-native:resources:ResourceGroup"}}}
{"name":"l2-large-string","runtime":"mock"}
{"description":"A minimal Google Cloud TypeScript Pulumi program","name":"dev","runtime":"nodejs"}
{"name":"compilation_error","description":"A minimal C# Pulumi program","runtime":"dotnet"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"description":"Test inheriting the cidrBlock from an IPv4 IPAM pool","runtime":{"name":"nodejs"},"name":"vpc-ipam-ipv4-auto-cidrblock"}
{"name":"npm-workspaces","description":"Use npm workspaces and import a workspace package in the pulumi program.","runtime":"nodejs"}
{"name":"aws-iam-role-instanceprofile-python","runtime":{"name":"python","options":{"virtualenv":"venv"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"An example that deploys an IAM role and instance profile on AWS."}
{"name":"terraform-vpc","runtime":"nodejs"}
{"template":{"config":{"google-native:project":{"description":"The Google Cloud project to deploy into"}},"description":"A minimal Google Cloud Pulumi YAML program"},"description":"${DESCRIPTION}","runtime":"yaml","resources":{"bucket":{"type":"google-native:storage/v1:Bucket"}},"name":"${PROJECT}","outputs":{"bucketSelfLink":"${bucket.selfLink}"}}
{"description":"Infrastructure for daily-scraper","name":"scraper","runtime":"nodejs"}
{"resources":{"myRandomPassword":{"properties":{"number":"1","lower":"1","special":"1","minLower":"2","length":"16","minSpecial":"2","upper":"1","minNumeric":"2","minUpper":"2"},"type":"random:RandomPassword"}},"runtime":"yaml","name":"index_randompassword1RAsGRjl2J1i","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/d8cd5ed1-63d5-4b57-9962-ca70f7852866.zip"}}},"description":""}
{"variables":{"assumeRole":{"fn::invoke":{"Arguments":{"statements":[{"actions":["sts:AssumeRole"],"effect":"Allow","principals":[{"type":"Service","identifiers":["lambda.amazonaws.com"]}]}]},"Function":"aws:iam:getPolicyDocument"}}},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-yaml"}}},"description":"A minimal AWS Pulumi YAML program","name":"no-code-lambda","runtime":"yaml","resources":{"testLambda":{"properties":{"handler":"index.test","role":"${iamForLambda.arn}","environment":{"variables":{"foo":"bar"}},"runtime":"nodejs18.x"},"type":"aws:lambda:Function"},"iamForLambda":{"properties":{"assumeRolePolicy":"${assumeRole.json}"},"type":"aws:iam:Role"}}}
{"name":"kubernetes-py-helm-release-wordpress","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal installation of the Wordpress Helm chart using Helm Release support"}
{"runtime":"nodejs","description":"Hlídač shopů AWS infrastructure","name":"hlidac-shopu"}
{"description":"Create and configure secrets mount Vault","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-substructure-vault-secrets","runtime":"python"}
{"description":"An empty Go Pulumi program.","runtime":"go","name":"emptygo"}
{"description":"A simple server on Equinix.","runtime":"nodejs","name":"webserver-equinix"}
{"name":"pulumi-chatbot-app","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Retrieve Specific Secret Version", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"pinterestClone","main":"pulumi/","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API."}
{"name":"gosimple","runtime":"go","description":"A minimal Azure Go Pulumi program"}
{"name": "ecs", "description": "A minimal AWS TypeScript Pulumi program", "runtime": "nodejs"}
{"name": "eks-explorer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A projet to explore eks, gitlab and pulumi stack"}
{"runtime":"go","name":"issue-13301"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Active Directory Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"Pulumi Kubernetes CRD sample","name":"crd-item"}
{"description":"A minimal TypeScript Pulumi program","name":"pulumi-lookups","runtime":"nodejs"}
{"name": "tinkerbell-on-equinix-metal", "runtime": "nodejs", "description": "A minimal Equinix Metal TypeScript Pulumi program", "main": "src/index.ts"}
{"name": "job-python-1", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Creating a Ketch Job from Python"}
{"runtime":"nodejs","description":"unchained coin stack","name":"bitcoincash"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Basic example of defining an AWS AppSync endpoint from Pulumi in Python","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}},"name":"aws-py-appsync"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RegexPatternSet Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"crd-sample","runtime":"nodejs","description":"Pulumi Kubernetes CRD sample"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal Python Pulumi program","name":"2-cs-python"}
{"runtime":{"name":"python","options":{"virtualenv":".venv"}},"name":"hm-pulumi"}
{"name":"cms","runtime":"nodejs","description":"An AWS TypeScript Pulumi program which build infrastructure for CMS app"}
{"description":"EKS cluster with pod security groups","runtime":"nodejs","name":"pod-security-groups"}
{"name":"webserver","description":"Basic example of an AWS web server accessible over HTTP","config":{"InstanceType":{"type":"string","default":"t3.micro"}},"resources":{"UsEast2Provider":{"properties":{"region":"us-east-2"},"type":"pulumi:providers:aws"},"WebSecGrp":{"type":"aws:ec2:SecurityGroup","properties":{"ingress":[{"fromPort":"80","toPort":"80","cidrBlocks":["0.0.0.0/0"],"protocol":"tcp"}]}},"WebServer":{"type":"aws:ec2:Instance","properties":{"instanceType":"${InstanceType}","userData":"#!/bin/bash\necho 'Hello, World from ${WebSecGrp.arn}!' > index.html\nnohup python -m SimpleHTTPServer 80 &","vpcSecurityGroupIds":["${WebSecGrp}"],"ami":"${ec2ami}"}},"MyBucket":{"options":{"provider":"${UsEast2Provider}"},"type":"aws:s3:BucketV2"}},"variables":{"ec2ami":{"fn::invoke":{"arguments":{"filters":[{"values":["amzn-ami-hvm-*-x86_64-ebs"],"name":"name"}],"mostRecent":"1","owners":["137112412989"]},"function":"aws:getAmi","Return":"id"}}},"runtime":"yaml","outputs":{"InstanceId":"${WebServer.id}","PublicIp":"${WebServer.publicIp}","PublicHostName":"${WebServer.publicDns}"}}
{"runtime":"java","name":"platform-api-java","description":"A minimal Kubernetes Java Pulumi program"}
{"runtime":"nodejs","name":"helm-release","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"name":"rename_component_child","runtime":"go","description":"A program that renames a component child with an alias."}
{"name":"wordpress","runtime":"nodejs","description":"Wordpress example running on production-ready Kubernetes infrastructure"}
{"name":"l2-provider-grpc-config","runtime":"nodejs"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l2-resource-config"}
{"description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","main":"pulumi/","name":"pinterestClone","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Ledger Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"outputs":{"kvNamespaceId":"${cloudflareWorkersKvNamespace.id}"},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/66a43ab9-9d3d-4d8c-9e07-1d30e5a2ce22.zip"}},"cloudflare-zone-id":{"type":"string","default":"ZONE_ID"},"cloudflare-account-id":{"type":"string","default":"ACCOUNT_ID"}},"description":"A minimal Pulumi YAML program that creates a Cloudflare Workers KV Namespace with dependencies","runtime":"yaml","name":"index_workerskvnamespace9PC9vCoap51M","resources":{"cloudflareWorkersKvNamespace":{"type":"cloudflare:WorkersKvNamespace","properties":{"title":"kv-${randomId.result}","accountId":"${cloudflare-account-id}"}},"randomId":{"properties":{"lower":"1","number":"","length":"6","special":"","upper":""},"type":"random:RandomString"}}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"wait-for-loadbalancer","description":"A minimal AWS Python Pulumi program"}
{"name":"bad_resource","runtime":"nodejs"}
{"name":"aws-ts-langserve","description":"A minimal Langserve AWS TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"https://github.com/pulumi/templates/tree/dirien/langserve-aws/langserve-aws-typescript"}}},"runtime":"nodejs"}
{"template":null,"runtime":"nodejs","name":"data-from-s3","description":"A simple Deployment obtaining data from S3"}
{"resources":{"vpc":{"type":"awsx:ec2:Vpc","properties":{"natGateways":{"strategy":"Single"}}}},"description":"An example that creates a new VPC with a custom NAT gateway strategy.","name":"awsx-vpc-nat-gateways-yaml","runtime":"yaml","outputs":{"vpcId":"${vpc.vpcId}"}}
{"name": "expapp", "runtime": "nodejs", "description": "A minimal Google Cloud JavaScript Pulumi program"}
{"name":"provider-xyz-native","plugins":{"providers":[{"path":"../../bin","name":"xyz"}]},"runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcPeeringConnectionAccepter C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l1-empty","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"runtime":"nodejs","description":"Azure Portal Dashboard","name":"dashboard"}
{"name": "home-lab", "runtime": "python", "description": "A minimal Linode Python Pulumi program"}
{"description":"A minimal Google Cloud Pulumi YAML program","name":"labeled-bucket","outputs":{"resourceId":"${resource.id}","providerUrn":"${prov.urn}","resourceUrn":"${resource.urn}"},"resources":{"resource":{"type":"gcp:storage:Bucket","properties":{"labels":{"app":"my-label"},"location":"US"}},"prov":{"properties":{"defaultLabels":{"def":"defaultlabel"}},"type":"pulumi:providers:gcp","defaultProvider":"1"}},"runtime":"yaml"}
{"runtime":"python","name":"config_secrets_python","description":"A simple Python program that uses configuration secrets."}
{"description":"Provision F5 BigIP Local Traffic Manager (LTM) resources (in TypeScript)","runtime":"nodejs","name":"f5bigip-pool","template":{"config":{"backendInstances":{"description":"Comma-delimited list of IP addresses with ports to load balance - i.e. '10.0.0.10:80,10.0.0.11:80,10.0.0.12:80'"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}}}
{"runtime":"nodejs","name":"l1-output-string"}
{"name":"l2-resource-primitives","runtime":"go"}
{"description":"Regress pulumi/pulumi-aws#2818","runtime":"nodejs","name":"regress-2818"}
{"description":"A minimal TypeScript Pulumi program","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"name":"k8s-better-together-workload-yaml","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}}}
{"resources":{"a":{"type":"aws:kms:Key","properties":{"deletionWindowInDays":"10","description":"KMS key 1"}}},"name":"aws_kms_key_Key_1","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS OrganizationConfiguration C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l1-stack-reference","runtime":"go"}
{"description":"${DESCRIPTION}","template":{"description":"A C# program to deploy a static website on AWS","config":{"path":{"description":"The path to the folder containing the website","default":"./www"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"${PROJECT}","runtime":"dotnet"}
{"name":"l2-destroy","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"description":"A simple Python Pulumi program that needs a venv to run.","name":"pulumi-python-venv","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-typescript"}}},"description":"Example on how to deploy the Pulumi ESC CSI Provider","name":"kubernetes-csi-driver-typescript","runtime":{"name":"nodejs","options":{"packagemanager":"npm"}}}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"ecs-anywhere"}
{"name":"ol-infrastructure-xqwatcher-server","runtime":"python","description":"Manage deployment of a xqwatcher server","backend":{"url":"s3://mitol-pulumi-state/"}}
{"runtime":"yaml","description":"A minimal Pulumi program that generates a random integer","resources":{"randomNumber":{"properties":{"max":"100","min":"1"},"type":"random:RandomInteger"}},"name":"index_randomintegerOhWAlILnCMss","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/48cb7920-173f-489b-9be1-e43900a00aa1.zip"}}},"outputs":{"generatedNumber":"${randomNumber.result}"}}
{"name": "pulumiTest", "runtime": {"name": "python"}, "description": "A minimal AWS Python Pulumi program"}
{"name":"aws-py-static-website","description":"Static website example","template":{"config":{"targetDomain":{"description":"The domain to serve the website at (e.g. www.example.com)"},"certificateArn":{"description":"(Optional) ACM certificate ARN for the target domain; must be in the us-east-1 region. If omitted, a certificate will be created."},"pathToWebsiteContents":{"default":"./www","description":"Relative path to the website's contents"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"An example that deploys an IAM role and a policy attachment with an AWS managed policy on AWS.","variables":{"assumeRole":{"fn::invoke":{"Arguments":{"statements":[{"actions":["sts:AssumeRole"],"effect":"Allow","principals":[{"type":"Service","identifiers":["ec2.amazonaws.com"]}]}]},"Function":"aws:iam:getPolicyDocument"}}},"runtime":"yaml","resources":{"myRpa":{"type":"aws:iam:RolePolicyAttachment","properties":{"role":"${role.name}","policyArn":"arn:aws:iam::aws:policy/ReadOnlyAccess"}},"role":{"properties":{"assumeRolePolicy":"${assumeRole.json}"},"type":"aws:iam:Role","name":"my-role"}},"name":"aws-iam-role-policyattachment-managedpolicy-yaml"}
{"runtime":"yaml","resources":{"auto-named":{"type":"auto-naming:User"},"manually-named":{"properties":{"name":"${auto-named.name}"},"type":"auto-naming:User"}},"outputs":{"user":"${auto-named.name}"},"name":"consume-autoname","plugins":{"providers":[{"path":"..","name":"auto-naming"}]}}
{"description":"A program that replaces a resource with a new name and alias.","name":"transformations_simple","runtime":"python"}
{"outputs":{"deployment":"${deployment.metadata.name}","namespace":"${ns.metadata.name}"},"name":"yamlv2","description":"Creates a simple deployment object using CSA.\n","variables":{},"runtime":"yaml","resources":{"ns":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Namespace"},"provider":{"type":"pulumi:providers:kubernetes","properties":{"enableServerSideApply":""}},"deployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${provider}"},"properties":{"metadata":{"labels":{"app":"nginx"},"namespace":"${ns.metadata.name}"},"spec":{"template":{"spec":{"containers":[{"name":"nginx","image":"nginx:1.14.0"}]},"metadata":{"labels":{"app":"nginx"}}},"replicas":"1","selector":{"matchLabels":{"app":"nginx"}}}}}}}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"l2-target-up-with-new-dependency"}
{"name":"ingress_component","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"name": "deployment-output", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"class-with-comments","runtime":"nodejs","description":"A class with comments in it."}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Provision a simple aws.autoscaling.Group to test importing it back","name":"regress-4457","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}}}
{"name": "fly-go", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"name":"l2-resource-parent-inheritance","runtime":"go"}
{"name":"aws-simple-ts","runtime":"nodejs","description":"A TypeScript Pulumi program with AWS Cloud Control provider"}
{"plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"name":"test-provider-url-go","description":"A minimal Go Pulumi program","runtime":"go"}
{"name": "quickstart", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"awsx-apigateway-validation-types-csharp","description":"An example of configuring request validators for an API Gateway instance.","runtime":"dotnet"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","name":"kubernetes-py-guestbook"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS TrafficMirrorSession Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"java","name":"awsx-elb-multi-listener-redirect-java","description":"An example of an ApplicationLoadBalancer with multiple listeners and a custom redirect action."}
{"name":"makima","description":"A Python program to deploy a virtual machine on Google Cloud","runtime":{"name":"python"},"config":{"pulumi:tags":{"value":{"pulumi:template":""}}}}
{"description":"A program that has a DBR resource depending on a read resource","runtime":"nodejs","name":"read_dbr"}
{"description":"Tests skipUpdateUnreachable flag","name":"skip-update-unreachable-tests","runtime":"nodejs"}
{"name":"gcp-instance-nginx","description":"Deploy a Nginx Server in a GCP instance","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":{"name":"yaml"},"resources":{"ekscluster1roleattach2":{"options":{"provider":"${provider}"},"properties":{"policyArn":"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController","role":"${ekscluster1role.name}"},"type":"aws:iam:RolePolicyAttachment"},"tested-resource":{"properties":{"roleArn":"${ekscluster1role.arn}","vpcConfig":{"subnetIds":["${subnet1.id}","${subnet2.id}"]}},"options":{"provider":"${provider}"},"type":"aws:eks:Cluster"},"provider":{"type":"pulumi:providers:aws","options":{"version":"5.42.0"}},"subnet1":{"options":{"provider":"${provider}"},"properties":{"availabilityZone":"us-west-2a","mapPublicIpOnLaunch":"","vpcId":"${vpc1.id}","cidrBlock":"10.192.20.0/24"},"type":"aws:ec2/subnet:Subnet"},"securityGroupAllowTLS1":{"properties":{"vpcId":"${vpc1.id}","ingress":[{"protocol":"tcp","toPort":"443","cidrBlocks":["${vpc1.cidrBlock}"],"description":"TLS from VPC","fromPort":"443"}],"description":"Allow TLS inbound traffic","egress":[{"protocol":"-1","toPort":"0","ipv6CidrBlocks":["::/0"],"fromPort":"0","cidrBlocks":["0.0.0.0/0"]}]},"options":{"provider":"${provider}"},"type":"aws:ec2:SecurityGroup"},"ekscluster1roleattach1":{"properties":{"role":"${ekscluster1role.name}","policyArn":"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"},"options":{"provider":"${provider}"},"type":"aws:iam:RolePolicyAttachment"},"vpc1":{"properties":{"cidrBlock":"10.192.0.0/16"},"options":{"provider":"${provider}"},"type":"aws:ec2/vpc:Vpc"},"subnet2":{"options":{"provider":"${provider}"},"properties":{"cidrBlock":"10.192.21.0/24","vpcId":"${vpc1.id}","mapPublicIpOnLaunch":"","availabilityZone":"us-west-2b"},"type":"aws:ec2/subnet:Subnet"},"ekscluster1role":{"type":"aws:iam:Role","properties":{"assumeRolePolicy":{"fn::invoke":{"function":"aws:iam:getPolicyDocument","arguments":{"statements":[{"actions":["sts:AssumeRole"],"principals":[{"identifiers":["eks.amazonaws.com"],"type":"Service"}],"effect":"Allow"}]},"return":"json"}}},"options":{"provider":"${provider}"}}},"name":"test"}
{"name": "trailcatalog", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Trails and paths oh my"}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"description":"Basic example of an AWS web server accessible over HTTP (in Python!)","name":"webserver-py","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"solana","runtime":"nodejs","description":"coin stack"}
{"description":"A program that exports some outputs.","name":"stack_outputs","runtime":"nodejs"}
{"runtime":"scala","description":"Deploys Wordpress in ECS Fargate with RDS backend.","name":"aws-wordpress-fargate-rds"}
{"name":"azure-linux-virtual-machine","runtime":"nodejs","description":"Create a linux virtual machine resource"}
{"name":"awsx-load-balanced-fargate-ecr-yaml","outputs":{"url":"http://${lb.loadBalancer.dnsName}"},"resources":{"image":{"type":"awsx:ecr:Image","properties":{"repositoryUrl":"${repo.url}","context":"./app","platform":"linux/amd64"}},"service":{"type":"awsx:ecs:FargateService","properties":{"cluster":"${cluster.arn}","assignPublicIp":"1","taskDefinitionArgs":{"container":{"name":"my-service","cpu":"128","portMappings":[{"targetGroup":"${lb.defaultTargetGroup}","containerPort":"80"}],"memory":"512","image":"${image.imageUri}","essential":"1"}}}},"lb":{"type":"awsx:lb:ApplicationLoadBalancer"},"cluster":{"type":"aws:ecs:Cluster"},"repo":{"type":"awsx:ecr:Repository","properties":{"forceDelete":"1"}}},"runtime":"yaml"}
{"template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:region":{"description":"The Google Cloud region"}}},"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"serverless-py","description":"Basic example of a serverless Python and Go GCP functions (in Python)"}
{"name":"serverless-app-repository-application","description":"Basic example of deploying an application from the serverless app repository.","runtime":"nodejs"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A Python program to deploy a static website on AWS", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}, "path": {"description": "The path to the folder containing the website", "default": "./www"}, "indexDocument": {"description": "The file to use for top-level pages", "default": "index.html"}, "errorDocument": {"description": "The file to use for error pages", "default": "error.html"}}}}
{"name": "pulumi-k8s-ts-eks", "runtime": "nodejs", "description": "Pulumi Typescript AWS EKS Cluster"}
{"name": "pulumi-challenge-september", "description": "A serverless app on AWS API Gateway and Lambda", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"description":"A program that tests auto-naming of Kubernetes objects.","runtime":"nodejs","name":"autonaming-test"}
{"name":"l2-invoke-dependencies","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"name":"awsx-vpc-security-groups-yaml","outputs":{"vpcId":"${vpc.vpcId}"},"runtime":"yaml","resources":{"securityGroup":{"properties":{"egress":[{"toPort":"0","cidrBlocks":["0.0.0.0/0"],"fromPort":"0","protocol":"-1"}],"ingress":[{"cidrBlocks":["203.0.113.25/32"],"toPort":"22","fromPort":"22","protocol":"tcp"},{"cidrBlocks":["0.0.0.0/0"],"toPort":"443","fromPort":"443","protocol":"tcp"}],"vpcId":"${vpc.vpcId}"},"type":"aws:ec2:SecurityGroup"},"vpc":{"type":"awsx:ec2:Vpc","properties":{"natGateways":{"strategy":"Single"}}}},"description":"An example that creates a new VPC with a custom security group."}
{"runtime":"yaml","description":"","name":"index_userZmP6yKgUssXA","resources":{"keycloak-user":{"type":"keycloak:User","properties":{"emailVerified":"1","firstName":"Test","username":"testuser","enabled":"1","email":"testuser@example.com","lastName":"User","realmId":"${my-realm.realm}"}},"my-realm":{"type":"keycloak:Realm","properties":{"realm":"my-realm","enabled":"1"}}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/2df07b7d-92ce-4f88-ba24-f6c4c21783f2.zip"}}}}
{"name":"go-user-assigned-identity","runtime":"go","description":"A minimal Azure Go Pulumi program"}
{"name":"ivs-channel","runtime":"python","description":"IVS Channel example"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"description":"Creation and configuration of Vault mounts that facilitate encryption operations","runtime":"python","name":"ol-infrastructure-substructure-vault-encryption-mounts"}
{"runtime":"go","description":"A minimal AWS Go Pulumi program","name":"eks_cluster_autoscaler"}
{"description":"${DESCRIPTION}","runtime":"go","template":{"config":{"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"},"sitePath":{"default":"./www","description":"The path to the folder containing the website"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"appPath":{"default":"./app","description":"The path to the folder containing the functions to be deployed"}},"description":"A Go program to deploy a serverless application on Google Cloud"},"name":"${PROJECT}"}
{"name":"${PROJECT}","runtime":"python","template":{"description":"A Python program to deploy a Kubernetes cluster on OVHcloud","config":{"nodePoolMaxNodes":{"description":"Number of max nodes in the cluster","default":"3"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"clusterName":{"description":"Name of the cluster","default":"my_desired_cluster"},"nodePoolName":{"default":"my-desired-pool","description":"Name of the node pool"},"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA9"},"nodePoolMinNodes":{"description":"Number of min nodes in the cluster","default":"1"},"nodePoolDesiredNodes":{"description":"Number of desired nodes in the cluster","default":"1"},"flavorName":{"description":"Name of the flavor/type of the machine","default":"b3-8"}}},"description":"${DESCRIPTION}"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getAmiIds Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"azure-sample-project","description":"A sample Azure Kotlin Pulumi program","runtime":"java"}
{"name": "cicd-demo-pipeline", "runtime": "nodejs", "description": "CICD pipeline for cicd demo", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}, "github:organization": {"description": "Account name", "default": "ikovac"}, "github:repo": {"description": "Repository name", "default": "CICD-pipeline-with-pulumi"}, "github:branch": {"description": "Branch name", "default": "master"}, "github:token": {"description": "Personal access tokens to access the GitHub API", "secret": true}, "github:webhookSecret": {"description": "The shared secret for the GitHub repository webhook", "secret": true}}}}
{"runtime":{"name":"python","options":{"toolchain":"pip","virtualenv":"venv"}},"description":"An example that deploys the resource definition for an imported IAM role on AWS.","name":"aws-import-iac-iam-role-python","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}}}
{"runtime":"python","description":"A program that retypes a component child with an alias.","name":"aliases_retype_component_child"}
{"name":"helm-release-redis","runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"name":"awsx-load-balanced-fargate-ecr-go","runtime":"go"}
{"description":"An Azure example using Python to provision a webserver using ComponentResource","name":"azure-py-webserver-component","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "By Transit Gateway and Direct Connect Gateway Identifiers", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"ts-readme1","description":"A minimal project showing a Stack README"}
{"description":"Run a TypeScript program where package.json is in a parent directory, and no main field is provided in package.json.","runtime":"nodejs","name":"package-json-in-parent-dir-without-main"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l1-output-map"}
{"name": "web-app", "runtime": "nodejs", "description": "A Lambda quick deployment project", "template": {"config": {"kubernetes:context": {"description": "On which context will it run", "default": "lambda"}, "namespace": {"description": "The k8s namespace used for every resource"}, "project": {"description": "The project name used in metadata"}, "component": {"description": "The component name used in metadata"}, "container-image": {"description": "The full image path containing the web-app setup without version"}, "registry-secret": {"description": "The credentials used to connect to the container registry", "secret": true}, "onepassword-basic-auth": {"description": "The 1Password URL used to connect to get the 1Password Basic Auth Item"}, "environment": {"description": "The environment of the project", "default": "dev"}, "version": {"description": "The version used for the container image", "default": "latest"}, "url": {"description": "The url used for the deployment, default: ({project}.app.lambda-it.ch)"}, "certificate-common-name": {"description": "The common name (CN) used for the certificate, default: ({url})"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getZone TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"GKE cluster for pulumi-kubernetes CI","name":"k8s-ci-cluster"}
{"runtime":{"name":"nodejs","options":{"packagemanager":"npm"}},"description":"A minimal Google Cloud TypeScript Pulumi program","name":"packageadd_npm","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}}}
{"main":"pulumi/","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","name":"pinterestClone","runtime":"nodejs"}
{"description":"${DESCRIPTION}","template":{"description":"A Python program to deploy a containerized service on AWS","config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"containerPort":{"description":"The port to expose on the container","default":"80"},"memory":{"description":"The amount of memory to allocate for the container","default":"128"},"cpu":{"default":"512","description":"The amount of CPU to allocate for the container"}}},"name":"${PROJECT}","runtime":"python"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getOutpost TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"example-aws-profile-role-py","runtime":"python","description":"EKS cluster example that uses an AWS named profile and role for credentials"}
{"name":"aws-py-fargate","runtime":{"name":"python","options":{"toolchain":"poetry","typechecker":"pyright"}},"description":"A container running in AWS ECS Fargate, using Python infrastructure as code"}
{"name":"import","runtime":"yaml"}
{"description":"Demonstrate use of AWS AssumeRole Functionality","name":"aws-go-create-role","runtime":"go"}
{"name":"simple-bucket","runtime":"yaml","resources":{"my-bucket":{"properties":{"project":"${gcpProj}","location":"US"},"type":"gcp:storage:Bucket"}},"config":{"gcpProj":"string"},"description":"A minimal Google Cloud Pulumi YAML program"}
{"name":"application","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":"dotnet","description":"An Azure Native C# Pulumi program calling the App.GetCustomDomainVerificationId invoke","name":"cs-getcustomdomainverificationid","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-csharp"}}}}
{"runtime":"nodejs","name":"invalid_policy","description":"An empty test program."}
{"description":"A minimal AWS TypeScript Pulumi program","name":"ts_vpc","runtime":"nodejs"}
{"name":"cluster-identifier","description":"Changing a provider's kubeconfig with a fixed `clusterIdentifier` should\ntrigger an update and not a replacement.\n","resources":{"provider":{"properties":{"clusterIdentifier":"unchanged","kubeconfig":"apiVersion: v1\nclusters:\n  - cluster:\n      certificate-authority-data: Zm9vYmFyCg==\n      server: https://127.0.0.1:1\n      tls-server-name: pulumi.com # Added -- should trigger an update.\n    name: fake-cluster\ncontexts:\n  - context:\n      cluster: fake-cluster\n      user: fake-user\n    name: fake\ncurrent-context: fake\nkind: Config\npreferences: {}\nusers:\n  - name: fake-user\n    user:\n      client-certificate-data: Zm9vYmFyCg==\n      client-key-data: Zm9vYmFyCg==\n"},"type":"pulumi:providers:kubernetes"}},"runtime":"yaml"}
{"description":"An example that uses API Gateway to serve static content from Amazon S3.","name":"awsx-apigateway-s3-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "cwpp-aws-vulnerable-container-tomcat-on-ecr", "runtime": "go", "description": "The script deploys a vulnerable Tomcat container in an ECR, posing security risks. Problems arise due to outdated security patches on the Tomcat container.", "cnappgoat-params": {"module": "cwpp", "platform": "aws", "id": "cwpp-aws-vulnerable-container-tomcat-on-ecr", "friendlyName": "Vulnerable Container Tomcat On ECR", "description": "The scenario builds an Elastic Container Repository (ECR) containing a vulnerable Tomcat version, a situation that poses security risks. The problem lies in the vulnerabilities within the Tomcat. Remedying this issue requires upgrading to a safer, newer Tomcat version and initiating a thorough security audit to find and eliminate other system weaknesses. Implementing a secure development process can help prevent potential vulnerabilities in the future.", "scenarioType": "native"}}
{"runtime":"python","name":"remote-backend-py","description":"An example demonstrating the Terraform Remote State resource"}
{"name":"aws-ec2-instance-with-sg-python","description":"An example that shows how to create an EC2 instance and security group.","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":"nodejs","description":"A demo Xpresso app running on GCP with IaC using Pulumi","name":"xpresso-gke-demo"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Without CSR", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"mock","name":"l2-resource-simple"}
{"name":"aws-iam-user-userpolicy-python","description":"An example that deploys an IAM user and user policy on AWS.","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "AWS Account ID", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"pulumi-python-poetry-main","description":"A simple Python Pulumi program that uses Poetry, the pyproject.toml file is in the program folder (./src)","runtime":{"options":{"toolchain":"poetry"},"name":"python"},"main":"src"}
{"runtime":"nodejs","name":"azure-ts-synapse","description":"Creates Azure Synapse workspace with SQL and Spark pools"}
{"outputs":{"test_autoname_respects_manual__expect":"manualName","test_autoname_starts_with_resource_name__expect":"autonamedResource","test_autoname_respects_manual__actual":"${manuallyNamedResource.name}","test_autoname_starts_with_resource_name__actual":{"fn::select":["0",{"fn::split":["-","${autonamedResource.name}"]}]}},"name":"autoname-program","resources":{"autonamedResource":{"type":"testbridge:index/testres:AutoNameRes"},"manuallyNamedResource":{"properties":{"name":"manualName"},"type":"testbridge:index/testres:AutoNameRes"}},"runtime":"yaml"}
{"name": "poc-pulumi-aws", "runtime": "nodejs", "description": "poc for pulmi"}
{"outputs":{"imageName":"${demo-image.imageName}","out-dockerfile":"${demo-image.dockerfile}"},"resources":{"demo-image":{"options":{"version":"v4.0.0"},"type":"docker:Image","properties":{"build":{"context":"./app","dockerfile":"./Dockerfile"},"imageName":"pulumibot/test-image:tag3","skipPush":"1"}}},"runtime":"yaml","name":"dockerfile-external"}
{"name":"aws-py-ecs-instances-autoapi","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A container running in AWS ECS Container Instance, using Python infrastructure as code"}
{"description":"A minimal Azure Native C# Pulumi program","runtime":"dotnet","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-csharp"}}},"name":"cs-postgres-configuration"}
{"name": "antares-idl-aws", "description": "AWS Components for Antares iDL", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "config": {"antares-idl-aws:components.efs-eks": true, "antares-idl-aws:components.ecr": true, "antares-idl-aws:components.msk": true, "antares-idl-aws:components.msk-snowflake-connector": true, "antares-idl-aws:components.msk-s3-connector": true, "antares-idl-aws:config.msk.default-snowflake-kafka-connector": "https://repo1.maven.org/maven2/com/snowflake/snowflake-kafka-connector/1.8.2/snowflake-kafka-connector-1.8.2.jar", "antares-idl-aws:config.msk.default-s3-kafka-connector": "https://d1i4a15mxbxib1.cloudfront.net/api/plugins/confluentinc/kafka-connect-s3/versions/10.4.1/confluentinc-kafka-connect-s3-10.4.1.zip"}}
{"name":"azure-native-sample-project","description":"A sample Azure Native Kotlin Pulumi program","runtime":"java"}
{"description":"A minimal installation of the latest version of the Wordpress Helm chart","runtime":"nodejs","name":"ts-helm-release-wordpress","template":null}
{"runtime":"yaml","name":"l2-invoke-simple"}
{"resources":{"exampleInsights":{"properties":{"applicationType":"web","location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}"},"type":"azure:appinsights:Insights"},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}}},"name":"appinsights","runtime":"yaml"}
{"runtime":"go","name":"platform-api-go","description":"A minimal Kubernetes Go Pulumi program"}
{"runtime":"dotnet","description":"An example that deploys a VPC with an internet gateway, public subnet, route table, and security group, and launches an Amazon Linux EC2 instance with NGINX.","name":"aws-ec2-vpc-resources-csharp"}
{"resources":{"randomString":{"type":"random:RandomString","properties":{"lower":"7","length":"three"}}},"name":"test-type-fail","runtime":"yaml"}
{"description":"Tests secrets support.","name":"secrets","runtime":"nodejs"}
{"runtime":"go","name":"awsx-load-balanced-fargate-nginx-go"}
{"template":{"description":"A TypeScript program to deploy a Helm chart onto a Kubernetes cluster","config":{"k8sNamespace":{"description":"The Kubernetes namespace to deploy into","default":"nginx-ingress"}}},"runtime":"nodejs","description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name":"03-application-selfhosted-gke","description":"Set up deployments, services and ingress for Pulumie GKE self-hosted installation.","runtime":"nodejs"}
{"description":"Basic example of load balanced droplets on DigitalOcean","name":"digitalocean-cs-loadbalanced-droplets","runtime":"dotnet"}
{"runtime":"go","description":"A program that replaces a resource with a new name and alias.","name":"aliases_rename"}
{"description":"A simple example of using the `Bucket` APIs.","runtime":"nodejs","name":"bucket"}
{"description":"Demonstrate use of AWS AssumeRole Functionality in C#","name":"aws-cs-create-role","runtime":"dotnet"}
{"name":"cfn-custom-resource","runtime":"nodejs","description":"A TypeScript Pulumi program with AWS Cloud Control provider"}
{"description":"A minimal TypeScript Pulumi program","name":"aws-securing-pipelines-vpc","runtime":{"name":"nodejs","options":{"packagemanager":"npm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}}}
{"runtime":"scala","name":"aws-redshift-glue-etl","description":"An ETL pipeline with Amazon Redshift and AWS Glue"}
{"runtime":"nodejs","description":"A program that creates some dynamic resources for testing.","name":"validate_stack"}
{"name":"infrastructure-go","description":"A minimal AWS Go Pulumi program","runtime":"go"}
{"description":"A minimal AWS Go Pulumi program","name":"s3_bucket_lifecycle","runtime":"go"}
{"name":"kubernetes-go-configmap-rollout","runtime":"go","description":"A minimal Kubernetes Go Pulumi program"}
{"name": "cloudfront-log-forwarder", "runtime": "nodejs", "description": "Setup for delivering Cloud Front logs from S3 to CloudWatch", "config": {"aws:region": "eu-north-1"}}
{"name": "scmbreakoutpulumi", "runtime": "nodejs", "description": "azuredevcollege/trainingdays scm breakout app infrastructure with Pulumi"}
{"runtime":"yaml","resources":{"myBucketIndex":{"properties":{"key":"index.html","content":"<html><body><h1>Hello, world!</h1></body></html>","contentType":"text/html","bucket":"${myBucket.id}"},"type":"aws:s3:BucketObject"},"myBucket":{"type":"aws:s3:Bucket","properties":{"website":{"indexDocument":"index.html"}}},"myBucketPublicAccessBlock":{"properties":{"ignorePublicAcls":"1","blockPublicAcls":"1","bucket":"${myBucket.id}","blockPublicPolicy":"1","restrictPublicBuckets":"1"},"type":"aws:s3:BucketPublicAccessBlock"}},"name":"bucket-obj"}
{"description":"${DESCRIPTION}","template":{"description":"A minimal Equinix Metal JavaScript Pulumi program"},"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"${PROJECT}"}
{"description":"A Pulumi AWS TS program that deploys a static website.","name":"website","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS EventTarget C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS ClusterSnapshot C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"CloudQuickLabs","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal AWS Python Pulumi program"}
{"description":"An example that deploys multiple load-balanced VMs in Amazon EC2.","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"awsx-load-balanced-ec2-instances-python"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"name":"aws-iam-role-policyattachment-managedpolicy-typescript","runtime":"nodejs","description":"An example that deploys an IAM role and a policy attachment with an AWS managed policy on AWS."}
{"name":"az-oidc-setup","runtime":"nodejs","description":"A minimal TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Step Function Tasks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","description":"Manage deployment of a vector-log-proxy server for routing logs to Grafana","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-vector-log-proxy-server"}
{"runtime":"nodejs","description":"${DESCRIPTION}","template":{"config":{"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"sitePath":{"description":"The path to the folder containing the website","default":"./www"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"appPath":{"description":"The path to the folder containing the functions to be deployed","default":"./app"}},"description":"A TypeScript program to deploy a serverless application on Google Cloud"},"name":"${PROJECT}"}
{"name":"construct_component_methods_errors_py","runtime":"python","description":"A program that constructs remote component resources with a method that returns an error."}
{"name":"test","resources":{"provider":{"type":"pulumi:providers:gcp","options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]},"properties":{"project":"${gcp:project}"}},"tested-resource":{"type":"gcp:storage:Bucket","properties":{"location":"EU","cors":[{"methods":["GET","HEAD","PUT","POST","DELETE"],"maxAgeSeconds":"3600","origins":["http://image-store.com"],"responseHeaders":["*"]}],"forceDestroy":"1","uniformBucketLevelAccess":"1","website":{"notFoundPage":"404.html","mainPageSuffix":"index.html"}},"options":{"provider":"${provider}"}}},"runtime":{"name":"yaml"}}
{"name":"example-cluster-fargate-py","description":"EKS cluster example using Fargate","runtime":"python"}
{"runtime":"go","description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A Go program to deploy a static website on Azure","config":{"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"path":{"default":"./www","description":"The path to the folder containing the website"},"azure-native:location":{"description":"The Azure region to deploy into","default":"WestUS"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"}}}}
{"name": "time-rotating", "runtime": "nodejs", "description": "A simple example of generating a time rotating resource"}
{"name":"index_grouproles9ZgN15cMJUxj","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/6e37f222-3261-4103-a576-f44e40aef84e.zip"}}},"resources":{"exampleRealm":{"properties":{"enabled":"1","realm":"example-realm"},"type":"keycloak:Realm"},"exampleGroupRoles":{"type":"keycloak:GroupRoles","properties":{"groupId":"${exampleGroup.id}","realmId":"${exampleRealm.id}","roleIds":["${exampleRole.id}"]}},"exampleRole":{"properties":{"realmId":"${exampleRealm.id}"},"type":"keycloak:Role"},"exampleGroup":{"type":"keycloak:Group","properties":{"realmId":"${exampleRealm.id}"}}},"runtime":"yaml","description":"A minimal Pulumi YAML program that creates a Keycloak Group, Group Roles, Realm, and assigns roles to the group.","outputs":{"groupId":"${exampleGroup.id}","roleIds":["${exampleRole.id}"],"realmId":"${exampleRealm.id}"}}
{"description":"A simple ARM example","name":"simple","runtime":"nodejs"}
{"name":"awsx-vpc-azs-csharp","runtime":"dotnet","description":"An example that creates a new VPC and configuring availability zones."}
{"description":"Manage deployment of an forum server","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","name":"ol-infrastructure-forum-server"}
{"name":"awsx-apigateway-auth-lambda-javascript","runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"An example that deploys an API Gateway REST API with an AWS Lambda authorizer."}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Table Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"remote-backend-go","runtime":"go","description":"An example demonstrating the Terraform Remote State resource in Go"}
{"name":"derived-inputs","runtime":"nodejs","description":"Tests a Pulumi program with one resource's inputs derived from other another resource's outputs."}
{"name":"awsx-load-balanced-fargate-nginx-typescript","runtime":"nodejs"}
{"description":"A program with transforms","name":"transforms_simple","runtime":"python"}
{"name":"l1-output-number","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"description":"Deploy two App Services - Front web app with VNet injection and Back web app with a Private Endpoint.","runtime":"scala","name":"azure-webapp-privateendpoint-vnet-injection"}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"existing-iam-user"}
{"name":"kubernetes-go","description":"A minimal DigitalOcean Go Pulumi program","runtime":"go"}
{"name": "aws-classic-py-eks-spot-mg", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "image-resize", "runtime": "nodejs", "description": "resize images when a new jpeg/png file is added"}
{"template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"description":"Basic example of AWS Cloud Watch Scheduled Function","runtime":"nodejs","name":"aws-ts-scheduled-function"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS TransitVirtualInterface Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"A program that exports some outputs.","name":"stack_outputs"}
{"template":{"description":"A minimal Pinecone Pulumi YAML program"},"description":"${DESCRIPTION}","runtime":"yaml","resources":{"myExampleIndex":{"properties":{"name":"example-index","metric":"cosine","spec":{"serverless":{"cloud":"aws","region":"us-west-2"}}},"type":"pinecone:index:PineconeIndex"}},"outputs":{"output":{"value":"${myExampleIndex.host}"}},"name":"${PROJECT}"}
{"config":{"infraStackRef":"dirien/00-aws-infrastructure/dev"},"description":"A minimal AWS Go Pulumi program","runtime":"go","name":"01-eda-infrastructure"}
{"name":"cs-appservice-docker","runtime":"dotnet","description":"An C# Pulumi program that deploys Docker images to Azure App Service."}
{"runtime":{"name":"yaml"},"name":"test","resources":{"provider":{"properties":{"project":"${gcp:project}"},"type":"pulumi:providers:gcp","options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]}},"tested-resource":{"options":{"provider":"${provider}"},"type":"gcp:cloudrunv2:Service","properties":{"template":{"volumes":[{"emptyDir":{"sizeLimit":"256Mi","medium":"MEMORY"},"name":"empty-dir-volume"}],"containers":[{"name":"hello-1","ports":[{"containerPort":"8080"}],"dependsOns":["hello-2"],"image":"us-docker.pkg.dev/cloudrun/container/hello","volumeMounts":[{"name":"empty-dir-volume","mountPath":"/mnt"}]},{"image":"us-docker.pkg.dev/cloudrun/container/hello","name":"hello-2"}]},"location":"us-central1","launchStage":"BETA","ingress":"INGRESS_TRAFFIC_ALL"}}}}
{"main":"src","runtime":{"options":{"toolchain":"poetry"},"name":"python"},"name":"pulumi-python-poetry-main","description":"A simple Python Pulumi program that uses Poetry, with a main property"}
{"name": "aws-classic-ts-lakeformation", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"description":"Demonstration of API Gateway routes","runtime":"nodejs","name":"aws-apigateway-ts-routes","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}}}
{"name":"azure-http-external","runtime":"nodejs","description":"An http Azure Function App implemented in PowerShell"}
{"runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","name":"pinterestClone","main":"pulumi/"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"An example that deploys an IAM policy and manipulates it using JSON parsing.","name":"aws-iampolicy-jsonparse-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}}}
{"name":"secrets","runtime":"nodejs","description":"Secret values"}
{"description":"Send Securely web site","name":"sendsecurely","runtime":"nodejs"}
{"runtime":"nodejs","name":"managed-ng-missing-role","description":"Tests that missing roles in cluster settings prevents managed node group creation."}
{"name":"l2-invoke-options","runtime":"yaml"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"simple-py","config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A minimal Python Pulumi Command program"}
{"name":"k8s-deployment-service-for-minikube-typescript","description":"An example that deploys a Deployment and Service for Minikube on Kubernetes.","runtime":{"name":"nodejs","options":{"packagemanager":"npm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-typescript"}}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "java", "template": {"description": "A minimal Java Pulumi program with Gradle builds"}}
{"name":"aws-eks-cluster-java","description":"An example that deploys a Kubernetes cluster on AWS.","runtime":"java"}
{"name":"bucket-py","description":"Basic example of a GCP Storage Bucket (in Python!)","runtime":"python"}
{"name": "webserver-linode", "runtime": "nodejs", "description": "Basic example of an Linode web server accessible over HTTP"}
{"name":"azure-ts-oidc-provider-pulumi","runtime":"nodejs","description":"An Azure Native TypeScript Pulumi program to setup OIDC"}
{"runtime":"nodejs","name":"construct_component_methods_errors_nodejs","description":"A program that constructs remote component resources with a method that returns an error."}
{"description":"An example of using Jest with Pulumi to write test-driven code that mocks AWS infrastructure.","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}},"name":"testing-unit-ts-mocks-jest","runtime":"nodejs"}
{"name":"l2-engine-update-options","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}}}
{"runtime":"nodejs","name":"cloudfront-lambda-urls","description":"cloudfront-lambda-urls CDK example"}
{"name": "test-aws-1655-pf", "runtime": "yaml", "description": "Add a resource specific tag: `foo: buzz`\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux"}}}}, "app": {"type": "aws:appconfig:Application", "properties": {"name": "pf-tags-test-app"}}, "res": {"type": "aws:appconfig:Environment", "properties": {"applicationId": "${app.id}", "name": "pf-tags-test", "tags": {"fizz": "buzz"}}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"runtime":"dotnet","description":"A minimal C# Pulumi program using Docker image.","name":"docker-cs"}
{"name":"dry-run-tests","runtime":"nodejs","description":"Tests whether Pulumi uses dry-run support to avoid spurious diffs."}
{"name": "go-aws-eks", "runtime": "go", "description": "AWS EKS deployment"}
{"runtime":"yaml","name":"l1-output-string"}
{"name":"passport-scorer-ops","description":"A project to manage ops tools","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"runtime":"nodejs"}
{"description":"Example of a Kubernetes Stateless Application Deployment, using Nginx","runtime":"scala","name":"kubernetes-nginx","template":null}
{"name":"aws-ts-s3-folder","description":"A static website hosted on AWS S3","runtime":"nodejs"}
{"name":"webserver-json","runtime":"yaml","description":"Basic example of an AWS web server accessible over HTTP"}
{"runtime":{"options":{"nodeargs":"--import=tsx"},"name":"nodejs"},"name":"website","main":"pulumi/index.ts"}
{"description":"A basic python program for integration testing","name":"basic-py","runtime":"python"}
{"name":"crosswalk-vpc","description":"A well architected vpc built with crosswalk","runtime":"nodejs"}
{"name": "antares-idl-snowflake", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Antares Snowflake Db deployment for MSK/Kafka ingestion", "config": {"antares-idl-snowflake:components.kafka-schema": true, "antares-idl-snowflake:components.hvr-schema": true, "antares-idl-snowflake:components.datamart-schema": true}}
{"description":"A minimal AWS Python Pulumi program","name":"py_cloudformation_template","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "orion", "runtime": "nodejs", "description": "A Pulumi program to deploy Orion service to Kubernetes", "template": {"config": {"aws:profile": {"default": "joystream-user"}, "aws:region": {"default": "us-east-1"}, "isMinikube": {"description": "Whether you are deploying to minikube", "default": false}, "queryNodeEndpoint": {"description": "Full URL for Query node endpoint"}, "isLoadBalancerReady": {"description": "Whether the load balancer service is ready and has been assigned an IP", "default": false}, "storage": {"description": "Amount of storage in gigabytes for ipfs volume", "default": 40}, "orionImage": {"description": "The Orion image to use for running the orion node", "default": "joystream/orion:latest"}, "contentSecret": {"description": "Orion featured content secret"}, "adminSecret": {"description": "Orion admin secret"}, "appPrivateKey": {"description": "Orion app private key"}}}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l1-output-array"}
{"runtime":"nodejs","description":"Test kustomize helmChart support","name":"kustomizeHelmChart"}
{"runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"aws-js-containers","description":"NGINX container example"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Logging", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-load-balanced-fargate-nginx-yaml","runtime":"yaml","outputs":{"url":"http://${lb.loadBalancer.dnsName}"},"resources":{"lb":{"type":"awsx:lb:ApplicationLoadBalancer"},"service":{"type":"awsx:ecs:FargateService","properties":{"cluster":"${cluster.arn}","assignPublicIp":"1","taskDefinitionArgs":{"container":{"cpu":"128","essential":"1","name":"my-service","portMappings":[{"targetGroup":"${lb.defaultTargetGroup}","containerPort":"80"}],"image":"nginx:latest","memory":"512"}}}},"cluster":{"type":"aws:ecs:Cluster"}}}
{"name":"stack_outputs_resource_error_py","description":"A program that exports some outputs and then errors in a later step.","runtime":"python"}
{"description":"An example that creates a new VPC and configuring a custom CIDR block.","runtime":"go","name":"awsx-vpc-cidr-go"}
{"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"aws-js-s3-folder-component","runtime":"nodejs","description":"A static website hosted on AWS S3"}
{"name":"ecr","description":"A simple ecr demo.","runtime":"nodejs"}
{"description":"Deploy from ARM templates","name":"template","runtime":"nodejs"}
{"description":"A minimal C# Pulumi program","name":"network-csharp","runtime":"dotnet"}
{"runtime":"go","description":"An example that retrieves and exports a Pulumi config value","name":"aws-import-export-pulumi-config-go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}}}
{"name":"pulumi-aws-logs","description":"logs integration test","runtime":"nodejs"}
{"description":"An example that deploys the resource definition for an imported IAM role on AWS.","name":"aws-import-iac-iam-role-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"runtime":{"name":"nodejs","options":{"typescript":"","packagemanager":"npm"}}}
{"name": "aws-cs-eks", "runtime": "dotnet", "description": "An ASP.NET application running a simple container in a EKS Cluster"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Template C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","name":"swarm-service-replicated","resources":{"service":{"properties":{"mode":{"replicated":{"replicas":"1"}},"taskSpec":{"containerSpec":{"image":"nginx"}}},"type":"docker:Service"}}}
{"name":"python","description":"A minimal Python Pulumi program","runtime":"python"}
{"description":"${DESCRIPTION}","template":{"description":"A minimal OCI Go Pulumi program"},"name":"${PROJECT}","runtime":"go"}
{"runtime":"yaml","outputs":{"actual":"${res.tags}"},"resources":{"res":{"properties":{"tags":{"fizz":"buzz"}},"type":"aws:s3:Bucket","options":{"provider":"${aws-provider}"}},"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}}},"description":"Add a resource specific tag: `foo: buzz`\n","name":"test-aws-1655-legacy"}
{"name":"vpc_eks_go","runtime":"go","description":"A minimal AWS Go Pulumi program"}
{"description":"Azure Virtual Machine and related Resources creation and management","name":"azure-vm","template":{"config":{"azure-vm:project-name":{"description":"The project name for tagging purporses.","default":"orch-dev"},"azure-vm:resourcegroup-name":{"default":"wallaroo-dev_rg","description":"The Azure Resource Group name to use"},"azure-vm:nic-name":{"description":"The Azure Network Interface name to use","default":"wallaroo-dev_nic"},"azure-vm:ip-name":{"default":"wallaroo-dev_ip","description":"The Azure Public IP name to use"},"azure-vm:vnet-name":{"description":"The Azure Virtual Network name to use"},"azure-vm:os-image":{"default":"Canonical:UbuntuServer:18.04-LTS:latest","description":"The Azure OS Image to use"},"azure-vm:vm-name":{"description":"The Azure Virtual Machine name to use","default":"wallaroo-dev_vm"},"azure-vm:location":{"default":"eastus","description":"The Azure location to use (`eastus`, `eastus2`,`centralus`, `westus2`)"}}},"runtime":"nodejs"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l1-empty"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"go_template_output"}
{"name": "demo-repo.core", "runtime": "nodejs", "description": "A minimal Azure Native TypeScript Pulumi program"}
{"variables":{"cloudfrontAccessPolicy":{"fn::invoke":{"arguments":{"statements":[{"resources":["${content-bucket.arn}/*"],"actions":["s3:GetObject"],"principals":[{"identifiers":["${cloudfront-origin-access-identity.iamArn}"],"type":"AWS"}]}]},"function":"aws:iam:getPolicyDocument"}}},"runtime":"yaml","description":"An example that creates a website S3 bucket, a CloudFront Origin Access Identity, and a bucket policy.","resources":{"content-bucket-ownership":{"type":"aws:s3:BucketOwnershipControls","properties":{"rule":{"objectOwnership":"BucketOwnerPreferred"},"bucket":"${content-bucket.bucket}"}},"cloudfront-origin-access-identity":{"type":"aws:cloudfront:OriginAccessIdentity","properties":{"comment":"OAI-${content-bucket.bucketDomainName}"}},"cloudfront-bucket-policy":{"type":"aws:s3:BucketPolicy","properties":{"policy":"${cloudfrontAccessPolicy.json}","bucket":"${content-bucket.id}"}},"content-bucket":{"type":"aws:s3:BucketV2","properties":{"forceDestroy":"1"}},"content-bucket-acl":{"properties":{"bucket":"${content-bucket.bucket}","acl":"private"},"type":"aws:s3:BucketAclV2","options":{"dependsOn":["${content-bucket-ownership}"]}},"content-bucket-website":{"type":"aws:s3:BucketWebsiteConfigurationV2","properties":{"errorDocument":{"key":"404.html"},"bucket":"${content-bucket.bucket}","indexDocument":{"suffix":"index.html"}}}},"name":"aws-s3websitebucket-oai-bucketpolicy-yaml"}
{"resources":{"res":{"type":"aws:s3:Bucket","options":{"provider":"${aws-provider}"}},"aws-provider":{"type":"pulumi:providers:aws"}},"name":"test-aws-1655-legacy","runtime":"yaml","description":"Initial deployment without tags\n","outputs":{"actual":"${res.tags}"}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"pulumi-tf-s3-import","description":"A minimal AWS Python Pulumi program"}
{"name":"aws-py-slackbot","description":"A slack chatbot app","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":"python","description":"A program that tests YAML functionality in the Python SDK with an unconfigured provider","name":"yaml-test-unconfigured-provider"}
{"runtime":"nodejs","main":"pulumi/","name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application."}
{"description":"An example that deploys a simulated database server and database resource","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"name":"aws-simulated-dbserver-database-csharp","runtime":"dotnet"}
{"name":"parallel-lambdas","description":"Parallel Lambdas example","runtime":"nodejs"}
{"runtime":"scala","name":"gcp-webserver","description":"Basic example of a Google Cloud web server accessible over HTTP"}
{"description":"An example of deploying a kubernetes cluster on EKS","name":"pulumiup-platform-stack","runtime":{"name":"java"}}
{"name": "Phone number lib example", "runtime": "python"}
{"runtime":"nodejs","name":"awsguard-test-elasticsearch","description":"Tests for policy rules related to AWS Elasticsearch domains."}
{"name": "automation", "description": "A minimal Kubernetes Go Pulumi program", "runtime": "go"}
{"name":"selfhosted-01-iam","description":"Used to create iam resources for the eks selfhosted installer.","runtime":"nodejs"}
{"resources":{"firestoredb":{"properties":{"type":"FIRESTORE_NATIVE","deletionPolicy":"DELETE","locationId":"us-central1"},"type":"gcp:firestore:Database"},"firestoreBackupsSchedule":{"type":"gcp:firestore:BackupSchedule","properties":{"retention":"8467200s","database":"${firestoredb.name}","dailyRecurrence":{}}}},"name":"firestore-backup-schedule","runtime":"yaml"}
{"name":"l2-destroy","runtime":"nodejs"}
{"name": "kubernetes-go-helm-release-wordpress", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"runtime":"go","name":"pulumi-cognito-gitops-ui-argocd","description":"A minimal Go Pulumi program"}
{"name":"aws-iam-user-userpolicy-csharp","description":"An example that deploys an IAM user and user policy on AWS.","runtime":"dotnet"}
{"runtime":"nodejs","description":"Work with Azure Durable Functions","name":"azure-durable-function"}
{"runtime":"nodejs","name":"azure-vnet","description":"Azure Virtual Network and related Resources creation and management","template":{"config":{"azure-vnet:location":{"default":"eastus","description":"The Azure location to use (`eastus`, `eastus2`,`centralus`, `westus2`)"},"azure-vnet:vnet-name":{"description":"The Azure Virtual Network name to use","default":"wallaroo-dev_vnet"},"azure-vnet:resourcegroup-name":{"description":"The Azure Resource Group name to use","default":"wallaroo-dev_rg"},"azure-vnet:project-name":{"default":"orch-dev","description":"The project name for tagging purporses."},"azure-vnet:nsg-name":{"default":"wallaroo-dev_nsg","description":"The Azure Network Security Group name to use"},"azure-vnet:subnet-name":{"description":"The Azure Subnet name to use","default":"wallaroo-dev_snet"}}}}
{"description":"A program that constructs remote component resources with first class provider.","runtime":"nodejs","name":"construct_component_provider_nodejs"}
{"description":"A minimal Go Pulumi program","runtime":"go","name":"function"}
{"template":{"config":{"isMinikube":{"description":"Whether you are deploying to minikube","default":"1"}}},"name":"guestbook-easy","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","runtime":"nodejs"}
{"description":"A minimal Azure Python Pulumi program","runtime":"python","name":"minimal-py"}
{"name":"pulumi-python-mypy","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}},"description":"A simple Python Pulumi program that type checks with mypy."}
{"name":"${PROJECT}","description":"${DESCRIPTION}","template":{"description":"A minimal Python Pulumi program"},"runtime":"python"}
{"description":"An example that deploys an S3 bucket, S3 bucket objects, and a Pulumi random resource.","runtime":"dotnet","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"name":"aws-s3bucket-s3objects-random-csharp"}
{"runtime":"nodejs","name":"command-random","description":"A simple command example"}
{"name":"printfjs","description":"A Pulumi program that printfs some stuff.","runtime":"nodejs"}
{"name":"multiple-turns","runtime":"nodejs","description":"Tests a Pulumi program with multiple turns."}
{"name": "my-app", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"description":"Demo Code Part 2 of the Tutorial around Helm in Kubernetes","runtime":"go","name":"helm-kubernetes-part-two-go","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-go"}}}}
{"description":"Test case for codepaths using tsc to pre-compile","name":"codepaths-tsc","main":"bin/index.js","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"vpc_bastion","runtime":"nodejs","description":"A minimal Google Cloud TypeScript Pulumi program"}
{"description":"An example that deploys an API Gateway REST API with a custom domain from Route53.","name":"awsx-apigateway-custom-domain-typescript","runtime":"nodejs"}
{"runtime":"go","description":"Talos on GCP","name":"gcp"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"template":{"description":"A minimal OpenStack JavaScript Pulumi program"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "dagger-pulumi-demo-ecs", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"resources":{"ds":{"type":"kubernetes:apps/v1:DaemonSet","options":{"customTimeouts":{"create":"60s","delete":"60s","update":"60s"}},"properties":{"spec":{"selector":{"matchLabels":{"foo":"bar"}},"minReadySeconds":"5","template":{"metadata":{"labels":{"foo":"bar"}},"spec":{"containers":[{"image":"nginx:stable-alpine3.17-slim","name":"nginx"}]}}},"metadata":{"name":"await-daemonset"}}}},"outputs":{"desiredNumberScheduled":"${ds.status.desiredNumberScheduled}","currentNumberScheduled":"${ds.status.currentNumberScheduled}","numberMisscheduled":"${ds.status.numberMisscheduled}","numberReady":"${ds.status.numberReady}"},"runtime":"yaml","name":"await-daemonset"}
{"description":"Manage various resources needed by for monitoring activities","runtime":"python","name":"ol-infrastructure-monitoring","backend":{"url":"s3://mitol-pulumi-state/"}}
{"runtime":"nodejs","name":"stack_outputs","description":"A program that exports some outputs."}
{"resources":{"foo":{"properties":{"imageTagMutability":"MUTABLE","imageScanningConfiguration":{"scanOnPush":"1"},"name":"bar"},"type":"aws:ecr:Repository"}},"name":"aws_ecr_repository_Repository_1","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Regional (ACM Certificate)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"CloudWatch","description":"A simple example of using the `CloudWatch` APIs.","runtime":"nodejs"}
{"name":"l2-resource-asset-archive","runtime":"go","main":"subdir"}
{"description":"A program that constructs a remote component resource with a child resource that takes a long time to be created.","name":"construct_component_slow_go","runtime":"go"}
{"name":"l2-resource-alpha","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ServiceQuota Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"blue-green-stack","runtime":"nodejs","description":"Deploy the Pulumi Kubernetes Operator and a Kubernetes Deployment Blue/Green App Stack"}
{"runtime":"nodejs","description":"A Pulumi program to deploy Argus node","template":{"config":{"wsProviderEndpointURI":{"description":"Chain RPC endpoint","default":"wss://rome-rpc-endpoint.joystream.org:9944/"},"keys":{"description":"Specifies the keys available within distributor node CLI"},"buckets":{"description":"Specifies the buckets distributed by the node"},"aws:region":{"default":"us-east-1"},"isLoadBalancerReady":{"description":"Whether the load balancer service is ready and has been assigned an IP","default":""},"cacheStorage":{"default":"10","description":"Amount of storage (in Gi) assigned for the cache directory"},"workerId":{"description":"ID of the node operator (distribution working group worker)"},"aws:profile":{"default":"joystream-user"},"queryNodeHost":{"default":"https://hydra.joystream.org/graphql","description":"Query node GraphQL endpoint"},"dataStorage":{"default":"10","description":"Amount of storage (in Gi) assigned for the data directory"},"argusImage":{"description":"The distributor node image to use for running the node"},"logStorage":{"default":"2","description":"Amount of storage (in Gi) assigned for the logs directory"}}},"name":"argus"}
{"name": "equinix-networkedge-device-cisco-C8KV", "runtime": "python", "description": "An Equinix Network Edge virtual network device - Cisco Catalyst 8000V Router", "config": {"accountName": {"type": "string"}, "aclTemplateId": {"type": "string"}, "additionalBandwidth": {"type": "integer", "default": 5}, "devicePackageCode": {"type": "string", "default": "network-essentials"}, "deviceVersion": {"type": "string", "default": "17.06.01a"}, "licenseToken": {"type": "string"}, "metro": {"type": "string", "default": "SV"}, "sizeInCores": {"type": "integer", "default": 2}, "sshKeyName": {"type": "string"}, "sshUserName": {"type": "string"}, "termLength": {"type": "integer", "default": 6}}}
{"description":"OCW site contents stored in S3 buckets and hosted on the CDN","runtime":"python","name":"ol-infrastructure-ocw-site-application","backend":{"url":"s3://mitol-pulumi-state/"}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-python"}}},"runtime":{"options":{"toolchain":"pip","virtualenv":"venv"},"name":"python"},"name":"kubernetes-csi-driver-python","description":"Example on how to deploy the Pulumi ESC CSI Provider"}
{"description":"Creates an identity stack for an AKS cluster and its users.","name":"k8s-az-identity","runtime":"nodejs"}
{"name": "bug-npm-install", "runtime": "nodejs", "description": "Bug with npm install and operator - fixed"}
{"name":"aws-ts-resources","description":"A Pulumi program that demonstrates creating various AWS resources","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"runtime":"nodejs"}
{"description":"A simple example of using the `CloudWatch` APIs.","name":"CloudWatch","runtime":"nodejs"}
{"name":"managed-ng-with-version","description":"Tests that the versions of managed node groups can be configured","runtime":"nodejs"}
{"name": "ts", "description": "A minimal TypeScript Pulumi program", "runtime": "nodejs"}
{"name":"nodejs","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"description":"A minimal Azure Native Go Pulumi program","name":"aks_agw","runtime":"go"}
{"description":"A program that adopts a component child with an alias.","runtime":"nodejs","name":"aliases_adopt_component_child"}
{"description":"Pulumi for FeatureHub OpenAPI docs","runtime":"nodejs","name":"api-bucket"}
{"name":"aws-ts-nextjs","runtime":"nodejs"}
{"name": "stack_basics", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Stack basics exercises"}
{"runtime":"nodejs","name":"l2-explicit-parameterized-provider"}
{"description":"A program that uses stack and project name.","runtime":"nodejs","name":"stack_project_name"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Aurora MySQL 2.x (MySQL 5.7)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"config":{"k8sNamespace":{"default":"nginx-ingress","description":"The Kubernetes namespace to deploy into"}},"description":"A Go program to deploy a Helm chart onto a Kubernetes cluster"},"runtime":"go","name":"${PROJECT}","description":"${DESCRIPTION}"}
{"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"name":"s3-lambda-pulumi","description":"A simple example that uploads a file to an S3 bucket using a Lambda function","runtime":"nodejs"}
{"name":"construct_component_failures_py","description":"A program that constructs remote component resources with a constructor that returns an error.","runtime":"python"}
{"variables":{"namespace":{"fn::oci:ObjectStorage/getNamespace:getNamespace":null},"compartmentId":"ocid1.compartment.oc1..aaaaaaaavt4axn32mx65ryw7cnnh6hctn3rwosbrudrovfpdah5diluehb5a"},"resources":{"bucket":{"type":"oci:ObjectStorage:Bucket","properties":{"compartmentId":"${compartmentId}","namespace":"${namespace.namespace}","accessType":"ObjectReadWithoutList"}},"object":{"properties":{"bucket":"${bucket.name}","content":"${{values.content}}\n","object":"index.html","namespace":"${namespace.namespace}","contentType":"text/html"},"type":"oci:ObjectStorage:StorageObject"}},"description":"A minimal Pulumi YAML program","runtime":"yaml","name":"${{ values.name }}","outputs":{"bucketURL":"https://${bucket.namespace}.objectstorage.${oci:region}.oci.customer-oci.com/n/${bucket.namespace}/b/${bucket.name}/o/${object.object}"}}
{"name": "policies-policy-aws-ts-webserver", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"${PROJECT}","description":"${DESCRIPTION}","template":{"config":{"instanceType":{"description":"The Amazon EC2 instance type","default":"t3.micro"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"vpcNetworkCidr":{"default":"10.0.0.0/16","description":"The network CIDR to use for the VPC"}},"description":"A C# program to deploy a virtual machine on Amazon EC2"},"runtime":"dotnet"}
{"name":"aws-proton-workshop-service-container","description":"AWS Proton workshop service template","runtime":"nodejs"}
{"name":"l1-output-number","runtime":{"options":{"virtualenv":"venv","typechecker":"mypy"},"name":"python"}}
{"name":"dns","resources":{"rg":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}},"exampleKubernetesCluster":{"properties":{"tags":{"Environment":"Production"},"resourceGroupName":"${rg.name}","dnsPrefix":"exampleakstest","networkProfile":{"networkPlugin":"azure","loadBalancerSku":"basic"},"identity":{"type":"SystemAssigned"},"name":"example-aks1","defaultNodePool":{"nodeCount":"1","name":"default","vmSize":"Standard_D2_v2"},"location":"${rg.location}"},"type":"azure:containerservice:KubernetesCluster"}},"runtime":"yaml"}
{"runtime":"java","name":"awsx-vpc-fargate-service-java"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A minimal DigitalOcean Python Pulumi program"},"runtime":"python"}
{"name":"ml_infra","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"description":"Used to create the eks cluster for the eks selfhosted installer.","name":"selfhosted-05-ekscluster","runtime":"nodejs"}
{"description":"Creates a managed infrastructure stack for an AKS cluster.","name":"k8s-az-infra","runtime":"nodejs"}
{"description":"","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/87de8fdc-8983-4478-b835-5c96e5fd3eea.zip"}}},"runtime":"yaml","name":"index_tagVq1xXrarp9S3","resources":{"myTag":{"type":"digitalocean:Tag"}}}
{"description":"Blob test","resources":{"myBlobFile":{"properties":{"resourceGroupName":"${rg.name}","blobName":"mon-fichier.txt","containerName":"${blobContainer.name}","source":{"fn::stringAsset":"lab azure"},"accountName":"${store.name}","type":"Block"},"type":"azure-native:storage:Blob"},"blobContainer":{"type":"azure-native:storage:BlobContainer","properties":{"publicAccess":"Blob","accountName":"${store.name}","resourceGroupName":"${rg.name}","containerName":"assets"}},"rg":{"type":"azure-native:resources:ResourceGroup"},"store":{"properties":{"allowBlobPublicAccess":"1","resourceGroupName":"${rg.name}","kind":"StorageV2","sku":{"name":"Standard_LRS"}},"type":"azure-native:storage:StorageAccount"}},"name":"storage-blob","runtime":"yaml"}
{"name":"${PROJECT}","outputs":{"instanceIP":"${instance.accessIpV4}"},"description":"${DESCRIPTION}","resources":{"instance":{"properties":{"imageName":"Ubuntu 16.04","flavorName":"s1-2"},"type":"openstack:compute:Instance"}},"template":{"description":"A minimal OpenStack Pulumi YAML program"},"runtime":"yaml"}
{"description":"A manually created EKS cluster","name":"eks-cluster","runtime":"nodejs"}
{"name":"${PROJECT}","template":{"description":"A TypeScript program to deploy a serverless application on Azure","config":{"azure-native:location":{"default":"WestUS","description":"The Azure region to deploy into"},"sitePath":{"default":"./www","description":"The path to the folder containing the website"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"appPath":{"default":"./app","description":"The path to the folder containing the functions to be deployed"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"}}},"runtime":"nodejs","description":"${DESCRIPTION}"}
{"name":"pulumi-ansible-wordpress-ts","description":"Deploy an EC2 Wordpress server using Pulumi and Ansible.","runtime":"nodejs"}
{"plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"name":"test-provider-url","runtime":"nodejs","description":"A minimal Go Pulumi program"}
{"resources":{"tested-resource":{"type":"gcp:bigquery:Routine","properties":{"routineType":"PROCEDURE","definitionBody":"CREATE FUNCTION Add(x FLOAT64, y FLOAT64) RETURNS FLOAT64 AS (x + y);","routineId":"routine_id","datasetId":"${test.datasetId}","language":"SQL"},"options":{"provider":"${provider}"}},"test":{"options":{"provider":"${provider}"},"type":"gcp:bigquery:Dataset","properties":{"datasetId":"dataset_id"}},"provider":{"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"},"properties":{"project":"${gcp:project}"},"type":"pulumi:providers:gcp"}},"name":"test","runtime":{"name":"yaml"}}
{"description":"An example that uses JSON helpers to define an S3 bucket policy.","runtime":"dotnet","name":"aws-s3-bucketpolicy-jsonstringify-csharp","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}}}
{"runtime":"go","name":"gcp-go-functions","description":"A minimal Go Pulumi program using Google Cloud Functions."}
{"runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"},"name":"l2-explicit-parameterized-provider"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}},"name":"l2-destroy"}
{"name": "poltwittex", "runtime": "nodejs", "description": "The voice of people"}
{"name":"ecamp-core","description":"The aws setup for eCamp v3","runtime":"nodejs"}
{"name":"ec2_infracost_policy","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"description":"An example that deploys an ApplicationLoadBalancer listening on port 80.","name":"awsx-elb-web-listener-csharp","runtime":"dotnet"}
{"outputs":{"connectionString":"${account.primaryConnectionString}"},"name":"test-java-convert","description":"Test pulumi convert --language java","resources":{"account":{"properties":{"accountReplicationType":"LRS","resourceGroupName":"${resourceGroup.name}","accountTier":"Standard"},"type":"azure:storage:Account"},"resourceGroup":{"type":"azure:core:ResourceGroup"}},"runtime":"yaml","template":{"config":{"azure:location":{"default":"WestUS","description":"The Azure location to use"}},"description":"A minimal Pulumi YAML program with the classic Azure provider"}}
{"name": "infrastructure", "runtime": "nodejs", "description": "wasmcloud k8s"}
{"name": "equinix-metal-ip-attachment", "runtime": "dotnet", "description": "An Equinix Metal Ip Attachment resource to attach elastic IP subnets to devices", "config": {"deviceId": {"type": "string"}, "subnetCidr": {"type": "string", "default": "147.229.10.152/31"}}}
{"runtime":"nodejs","description":"A simple Nodejs program that uses dynamic providers with custom resource type name.","name":"nodejs_resource_type_name"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Hsm Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l2-resource-simple","runtime":"go"}
{"runtime":"nodejs","name":"vpc-typescript","description":"A minimal AliCloud TypeScript project for a VPC"}
{"description":"A Go Pulumi program to stand up a Debian instance on AWS","name":"ubuntu-pulumi-aws","runtime":"go"}
{"description":"An example that deploys an IAM policy document, role, and instance profile on AWS.","runtime":"nodejs","name":"aws-iam-strongly-typed-typescript"}
{"name":"ol-infrastructure-data_warehouse","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","description":"Manage the storage and query engine for an Open Learning data warehouse using AWS Athena"}
{"name":"azure-py-synapse","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Creates Azure Synapse workspace with SQL and Spark pools"}
{"name": "ok-api", "runtime": "nodejs", "description": "API for the OK? programming language"}
{"name": "serverless-topic", "runtime": "nodejs", "description": "Simple topic examples"}
{"description":"A minimal Google Cloud Python Pulumi program","runtime":{"name":"python","options":{"toolchain":"poetry"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}},"name":"packageadd_poetry"}
{"runtime":"nodejs","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","name":"guestbook"}
{"name":"perf-parents","runtime":"python"}
{"resources":{"provider":{"type":"pulumi:providers:kubernetes","properties":{"kubeconfig":"apiVersion: v1\nclusters:\n  - cluster:\n      certificate-authority-data: Zm9vYmFyCg==\n      server: https://127.0.0.1:1\n      # tls-server-name: pulumi.com # Removed -- should trigger a replacement.\n    name: fake-cluster\ncontexts:\n  - context:\n      cluster: fake-cluster\n      user: fake-user\n    name: fake\ncurrent-context: fake\nkind: Config\npreferences: {}\nusers:\n  - name: fake-user\n    user:\n      client-certificate-data: Zm9vYmFyCg==\n      client-key-data: Zm9vYmFyCg==\n"}}},"runtime":"yaml","name":"cluster-identifier","description":"Changing a provider's kubeconfig with a fixed `clusterIdentifier` should\ntrigger an update and not a replacement.\n"}
{"runtime":"yaml","outputs":{"platform":"${v1Image.platform}"},"resources":{"v1Image":{"properties":{"imageName":"docker.io/pulumi/v1-builder:latest","build":{"builderVersion":"BuilderV1","platform":"linux/amd64","context":".","dockerfile":"Dockerfile","target":"base","addHosts":["metadata.google.internal:169.254.169.254"],"cacheFrom":{"images":["docker.io/pulumi/pulumi-base:latest"]},"network":"host"},"skipPush":"1"},"type":"docker:Image"}},"name":"builder-v1"}
{"name":"${PROJECT}","template":{"description":"A minimal Pinecone Go Pulumi program"},"runtime":"go","description":"${DESCRIPTION}"}
{"description":"An example that creates a Kubernetes Deployment","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-csharp"}}},"name":"kubernetes-deployments-csharp","runtime":"dotnet"}
{"runtime":"yaml","outputs":{"projectName":"${project.name}"},"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A minimal Equinix Metal Pulumi YAML program"},"resources":{"project":{"properties":{"name":"My Test Project"},"type":"metal:Project"}}}
{"name":"l2-resource-simple","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Name", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A simple .NET Kubernetes program.","name":"basic_dotnet_kubernetes","runtime":"dotnet"}
{"description":"Example to show autonaming of Kms Alias resources","runtime":"nodejs","name":"kms-alias"}
{"name":"aws_apigateway_integrationResponse_IntegrationResponse_1","resources":{"response_200":{"properties":{"statusCode":"200","httpMethod":"${MyDemoMethod.httpMethod}","resourceId":"${MyDemoResource.id}","restApi":"${MyDemoAPI.id}"},"type":"aws:apigateway:MethodResponse"},"MyDemoIntegration":{"type":"aws:apigateway:Integration","properties":{"type":"MOCK","httpMethod":"${MyDemoMethod.httpMethod}","restApi":"${MyDemoAPI.id}","resourceId":"${MyDemoResource.id}"}},"MyDemoAPI":{"type":"aws:apigateway:RestApi","properties":{"name":"MyDemoAPI","description":"This is my API for demonstration purposes"}},"MyDemoIntegrationResponse":{"type":"aws:apigateway:IntegrationResponse","properties":{"httpMethod":"${MyDemoMethod.httpMethod}","statusCode":"${response_200.statusCode}","restApi":"${MyDemoAPI.id}","resourceId":"${MyDemoResource.id}","responseTemplates":{"application/xml":"#set($inputRoot = $input.path('$'))\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<message>\n    $inputRoot.body\n</message>\n"}}},"MyDemoMethod":{"type":"aws:apigateway:Method","properties":{"httpMethod":"GET","authorization":"NONE","resourceId":"${MyDemoResource.id}","restApi":"${MyDemoAPI.id}"}},"MyDemoResource":{"type":"aws:apigateway:Resource","properties":{"parentId":"${MyDemoAPI.rootResourceId}","pathPart":"mydemoresource","restApi":"${MyDemoAPI.id}"}}},"runtime":"yaml"}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"dedicated-hosts"}
{"resources":{"404.html":{"type":"azure-native:storage:Blob","properties":{"type":"Block","contentType":"text/html","source":{"fn::fileAsset":"./www/404.html"},"accountName":"${storageaccount.name}","resourceGroupName":"${staticsitegroup.name}","containerName":"${staticwebsite.containerName}"}},"staticwebsite":{"type":"azure-native:storage:StorageAccountStaticWebsite","properties":{"error404Document":"404.html","accountName":"${storageaccount.name}","resourceGroupName":"${staticsitegroup.name}","indexDocument":"index.html"}},"storageaccount":{"type":"azure-native:storage:StorageAccount","properties":{"sku":{"name":"Standard_LRS"},"resourceGroupName":"${staticsitegroup.name}","kind":"StorageV2"}},"index.html":{"type":"azure-native:storage:Blob","properties":{"type":"Block","contentType":"text/html","source":{"fn::fileAsset":"./www/index.html"},"accountName":"${storageaccount.name}","resourceGroupName":"${staticsitegroup.name}","containerName":"${staticwebsite.containerName}"}},"staticsitegroup":{"type":"azure-native:resources:ResourceGroup"},"favicon.png":{"type":"azure-native:storage:Blob","properties":{"type":"Block","contentType":"image/png","source":{"fn::fileAsset":"./www/favicon.png"},"accountName":"${storageaccount.name}","resourceGroupName":"${staticsitegroup.name}","containerName":"${staticwebsite.containerName}"}}},"outputs":{"endpoint":"${storageaccount.primaryEndpoints.web}"},"runtime":"yaml","description":"A static website hosted on AWS S3","name":"azure-static-website"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getIpSet Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"minimal","runtime":{"name":"java"},"description":"A minimal Pulumi program using a JAR."}
{"description":"A program that tests Helm chart creation from a local directory","runtime":"python","name":"helm-local"}
{"runtime":"yaml","name":"l2-resource-secret"}
{"description":"Azure Functions created from raw deployment packages in all supported languages","name":"azure-ts-functions-many","template":{"config":{"azure-native:location":{"description":"The Azure location to deploy resources to (e.g., `eastus` or `westeurope`)"}}},"runtime":"nodejs"}
{"name":"construct_component_configure_provider","description":"A program that configures a Provider from inside a Component.","runtime":"python"}
{"name":"l2-invoke-secrets","runtime":{"name":"python","options":{"typechecker":"mypy","virtualenv":"venv"}}}
{"description":"A simple example of using the `EventBus` APIs.","runtime":"nodejs","name":"eventbus"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A show case of how to use the Go Foundation SDK in Pulumi","runtime":"go","name":"foundation-sdk-go"}
{"name": "learn-pulumi-aws-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name":"python-vmware-example","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal Python Pulumi program"}
{"description":"An example that deploys an IAM user, group, and group policy on AWS.","runtime":{"name":"nodejs","options":{"typescript":""}},"name":"aws-iam-user-group-grouppolicy-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}}}
{"name": "pulumi-demo-go", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name":"ee-perf","runtime":"nodejs","description":"Emits a large number of Pulumi engine events for benchmarking throughput."}
{"name":"l2-parameterized-resource","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"runtime":"nodejs","description":"A simple example of using the `Stream` APIs.","name":"Stream"}
{"name":"${PROJECT}","description":"${DESCRIPTION}","runtime":"go","template":{"description":"A minimal Random Go Pulumi program."}}
{"name": "nginx", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program", "template": {"description": "A minimal TypeScript Pulumi program"}}
{"description":"A minimal TypeScript Pulumi program","name":"1-functions-typescript","runtime":"nodejs"}
{"name":"trivial-nginx","description":"Basic example of an Kubernetes sample based on \\ https://kubernetes.io/docs/user-guide/walkthrough/","runtime":"nodejs"}
{"description":"Unknown values in secrets","variables":{},"resources":{"prefix":{"type":"random:RandomPet"},"my-secret":{"properties":{"data":{"username":"dXNlcm5hbWU=","password":{"fn::toBase64":"${prefix.id}"}}},"type":"kubernetes:core/v1:Secret"}},"outputs":{"password":"${prefix.id}"},"name":"go_secrets_with_unknowns","runtime":"yaml"}
{"runtime":"nodejs","description":"A program with a different main specification.","name":"project_main","main":"a/path/to/main/"}
{"name":"${PROJECT}","template":{"description":"A TypeScript program to deploy a virtual machine on Azure","config":{"vmName":{"default":"my-server","description":"The DNS hostname prefix to use for the VM"},"vmSize":{"description":"The machine size to use for the VM","default":"Standard_A1_v2"},"osImage":{"description":"The Azure URN of the base image to use for the VM","default":"Debian:debian-11:11:latest"},"servicePort":{"description":"The HTTP service port to expose on the VM","default":"80"},"azure-native:location":{"default":"WestUS2","description":"The Azure location to deploy into"},"adminUsername":{"default":"pulumiuser","description":"The user account to create on the VM"}}},"runtime":"nodejs","description":"${DESCRIPTION}"}
{"name":"defaultinfo-program","resources":{"r":{"type":"testbridge:index/testres:TestDefaultInfoRes"},"provider":{"type":"pulumi:providers:testbridge"}},"outputs":{"test_datasource__expect":"DEFAULT","test_resource__actual":"${r.str}","test_provider_config__expect":"DEFAULT","test_resource__expect":"DEFAULT","test_datasource__actual":{"fn::invoke":{"return":"output","arguments":{},"function":"testbridge:index/testres:TestDefaultInfoDataSource"}},"test_provider_config__actual":"${provider.stringDefaultinfoConfigProp}"},"runtime":"yaml"}
{"name":"dns","runtime":"yaml","resources":{"exampleZone":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","name":"test-${pulumi.stack}.org"},"type":"azure:dns:Zone"},"exampleResourceGroup":{"properties":{"location":"East US"},"type":"azure:core:ResourceGroup"},"exampleARecord":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","records":["10.0.180.17"],"zoneName":"${exampleZone.name}","ttl":"300"},"type":"azure:dns:ARecord"},"exampleTxtRecord":{"type":"azure:dns:TxtRecord","properties":{"records":[{"value":"google-site-authenticator"},{"value":"more site information here"}],"resourceGroupName":"${exampleResourceGroup.name}","tags":{"Environment":"Production"},"zoneName":"${exampleZone.name}","ttl":"300"}}}}
{"name": "diy-gcs-with-replication", "runtime": "nodejs", "description": "Creates 2 GCS buckets with Cloud Function to perform DIY replication"}
{"name":"delete-before-replace","runtime":"nodejs","description":"A program that tests partial provider failure."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Using launch specifications", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","description":"Manage configuration of mailgun domains","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-mailgun-service"}
{"name": "azure-ts-vm-scaleset", "runtime": "nodejs", "description": "Basic example of nginx deployed in Azure VM Scale Sets", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}}}}
{"name":"lambda_delete_old_versions","runtime":"dotnet","description":"A minimal AWS C# Pulumi program"}
{"description":"Website for the OK? programming language","runtime":"nodejs","name":"ok-site"}
{"name":"l2-provider-grpc-config-schema-secret","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"description":"Setup local AWS infrastructure for Novops tests","name":"novops-test-infra","runtime":"nodejs","config":{"aws:skipRequestingAccountId":"true","aws:skipCredentialsValidation":"true","aws:s3UsePathStyle":"true","aws:endpoints":[{"accessanalyzer":"http://localhost:4566"},{"account":"http://localhost:4566"},{"acm":"http://localhost:4566"},{"acmpca":"http://localhost:4566"},{"amg":"http://localhost:4566"},{"amp":"http://localhost:4566"},{"amplify":"http://localhost:4566"},{"apigateway":"http://localhost:4566"},{"apigatewayv2":"http://localhost:4566"},{"appautoscaling":"http://localhost:4566"},{"appconfig":"http://localhost:4566"},{"appfabric":"http://localhost:4566"},{"appflow":"http://localhost:4566"},{"appintegrations":"http://localhost:4566"},{"appintegrationsservice":"http://localhost:4566"},{"applicationautoscaling":"http://localhost:4566"},{"applicationinsights":"http://localhost:4566"},{"appmesh":"http://localhost:4566"},{"appregistry":"http://localhost:4566"},{"apprunner":"http://localhost:4566"},{"appstream":"http://localhost:4566"},{"appsync":"http://localhost:4566"},{"athena":"http://localhost:4566"},{"auditmanager":"http://localhost:4566"},{"autoscaling":"http://localhost:4566"},{"autoscalingplans":"http://localhost:4566"},{"backup":"http://localhost:4566"},{"batch":"http://localhost:4566"},{"beanstalk":"http://localhost:4566"},{"bedrock":"http://localhost:4566"},{"bedrockagent":"http://localhost:4566"},{"budgets":"http://localhost:4566"},{"ce":"http://localhost:4566"},{"chime":"http://localhost:4566"},{"chimesdkmediapipelines":"http://localhost:4566"},{"chimesdkvoice":"http://localhost:4566"},{"cleanrooms":"http://localhost:4566"},{"cloud9":"http://localhost:4566"},{"cloudcontrol":"http://localhost:4566"},{"cloudcontrolapi":"http://localhost:4566"},{"cloudformation":"http://localhost:4566"},{"cloudfront":"http://localhost:4566"},{"cloudfrontkeyvaluestore":"http://localhost:4566"},{"cloudhsm":"http://localhost:4566"},{"cloudhsmv2":"http://localhost:4566"},{"cloudsearch":"http://localhost:4566"},{"cloudtrail":"http://localhost:4566"},{"cloudwatch":"http://localhost:4566"},{"cloudwatchevents":"http://localhost:4566"},{"cloudwatchevidently":"http://localhost:4566"},{"cloudwatchlog":"http://localhost:4566"},{"cloudwatchlogs":"http://localhost:4566"},{"cloudwatchobservabilityaccessmanager":"http://localhost:4566"},{"cloudwatchrum":"http://localhost:4566"},{"codeartifact":"http://localhost:4566"},{"codebuild":"http://localhost:4566"},{"codecatalyst":"http://localhost:4566"},{"codecommit":"http://localhost:4566"},{"codedeploy":"http://localhost:4566"},{"codeguruprofiler":"http://localhost:4566"},{"codegurureviewer":"http://localhost:4566"},{"codepipeline":"http://localhost:4566"},{"codestarconnections":"http://localhost:4566"},{"codestarnotifications":"http://localhost:4566"},{"cognitoidentity":"http://localhost:4566"},{"cognitoidentityprovider":"http://localhost:4566"},{"cognitoidp":"http://localhost:4566"},{"comprehend":"http://localhost:4566"},{"computeoptimizer":"http://localhost:4566"},{"config":"http://localhost:4566"},{"configservice":"http://localhost:4566"},{"connect":"http://localhost:4566"},{"connectcases":"http://localhost:4566"},{"controltower":"http://localhost:4566"},{"costandusagereportservice":"http://localhost:4566"},{"costexplorer":"http://localhost:4566"},{"costoptimizationhub":"http://localhost:4566"},{"cur":"http://localhost:4566"},{"customerprofiles":"http://localhost:4566"},{"databasemigration":"http://localhost:4566"},{"databasemigrationservice":"http://localhost:4566"},{"dataexchange":"http://localhost:4566"},{"datapipeline":"http://localhost:4566"},{"datasync":"http://localhost:4566"},{"dax":"http://localhost:4566"},{"deploy":"http://localhost:4566"},{"detective":"http://localhost:4566"},{"devicefarm":"http://localhost:4566"},{"directconnect":"http://localhost:4566"},{"directoryservice":"http://localhost:4566"},{"dlm":"http://localhost:4566"},{"dms":"http://localhost:4566"},{"docdb":"http://localhost:4566"},{"docdbelastic":"http://localhost:4566"},{"ds":"http://localhost:4566"},{"dynamodb":"http://localhost:4566"},{"ec2":"http://localhost:4566"},{"ecr":"http://localhost:4566"},{"ecrpublic":"http://localhost:4566"},{"ecs":"http://localhost:4566"},{"efs":"http://localhost:4566"},{"eks":"http://localhost:4566"},{"elasticache":"http://localhost:4566"},{"elasticbeanstalk":"http://localhost:4566"},{"elasticloadbalancing":"http://localhost:4566"},{"elasticloadbalancingv2":"http://localhost:4566"},{"elasticsearch":"http://localhost:4566"},{"elasticsearchservice":"http://localhost:4566"},{"elastictranscoder":"http://localhost:4566"},{"elb":"http://localhost:4566"},{"elbv2":"http://localhost:4566"},{"emr":"http://localhost:4566"},{"emrcontainers":"http://localhost:4566"},{"emrserverless":"http://localhost:4566"},{"es":"http://localhost:4566"},{"eventbridge":"http://localhost:4566"},{"events":"http://localhost:4566"},{"evidently":"http://localhost:4566"},{"finspace":"http://localhost:4566"},{"firehose":"http://localhost:4566"},{"fis":"http://localhost:4566"},{"fms":"http://localhost:4566"},{"fsx":"http://localhost:4566"},{"gamelift":"http://localhost:4566"},{"glacier":"http://localhost:4566"},{"globalaccelerator":"http://localhost:4566"},{"glue":"http://localhost:4566"},{"grafana":"http://localhost:4566"},{"greengrass":"http://localhost:4566"},{"groundstation":"http://localhost:4566"},{"guardduty":"http://localhost:4566"},{"healthlake":"http://localhost:4566"},{"iam":"http://localhost:4566"},{"identitystore":"http://localhost:4566"},{"imagebuilder":"http://localhost:4566"},{"inspector":"http://localhost:4566"},{"inspector2":"http://localhost:4566"},{"inspectorv2":"http://localhost:4566"},{"internetmonitor":"http://localhost:4566"},{"iot":"http://localhost:4566"},{"iotanalytics":"http://localhost:4566"},{"iotevents":"http://localhost:4566"},{"ivs":"http://localhost:4566"},{"ivschat":"http://localhost:4566"},{"kafka":"http://localhost:4566"},{"kafkaconnect":"http://localhost:4566"},{"kendra":"http://localhost:4566"},{"keyspaces":"http://localhost:4566"},{"kinesis":"http://localhost:4566"},{"kinesisanalytics":"http://localhost:4566"},{"kinesisanalyticsv2":"http://localhost:4566"},{"kinesisvideo":"http://localhost:4566"},{"kms":"http://localhost:4566"},{"lakeformation":"http://localhost:4566"},{"lambda":"http://localhost:4566"},{"launchwizard":"http://localhost:4566"},{"lex":"http://localhost:4566"},{"lexmodelbuilding":"http://localhost:4566"},{"lexmodelbuildingservice":"http://localhost:4566"},{"lexmodels":"http://localhost:4566"},{"lexmodelsv2":"http://localhost:4566"},{"lexv2models":"http://localhost:4566"},{"licensemanager":"http://localhost:4566"},{"lightsail":"http://localhost:4566"},{"location":"http://localhost:4566"},{"locationservice":"http://localhost:4566"},{"logs":"http://localhost:4566"},{"lookoutmetrics":"http://localhost:4566"},{"m2":"http://localhost:4566"},{"macie2":"http://localhost:4566"},{"managedgrafana":"http://localhost:4566"},{"mediaconnect":"http://localhost:4566"},{"mediaconvert":"http://localhost:4566"},{"medialive":"http://localhost:4566"},{"mediapackage":"http://localhost:4566"},{"mediapackagev2":"http://localhost:4566"},{"mediastore":"http://localhost:4566"},{"memorydb":"http://localhost:4566"},{"mq":"http://localhost:4566"},{"msk":"http://localhost:4566"},{"mwaa":"http://localhost:4566"},{"neptune":"http://localhost:4566"},{"networkfirewall":"http://localhost:4566"},{"networkmanager":"http://localhost:4566"},{"oam":"http://localhost:4566"},{"opensearch":"http://localhost:4566"},{"opensearchingestion":"http://localhost:4566"},{"opensearchserverless":"http://localhost:4566"},{"opensearchservice":"http://localhost:4566"},{"opsworks":"http://localhost:4566"},{"organizations":"http://localhost:4566"},{"osis":"http://localhost:4566"},{"outposts":"http://localhost:4566"},{"pcaconnectorad":"http://localhost:4566"},{"pinpoint":"http://localhost:4566"},{"pipes":"http://localhost:4566"},{"polly":"http://localhost:4566"},{"pricing":"http://localhost:4566"},{"prometheus":"http://localhost:4566"},{"prometheusservice":"http://localhost:4566"},{"qbusiness":"http://localhost:4566"},{"qldb":"http://localhost:4566"},{"quicksight":"http://localhost:4566"},{"ram":"http://localhost:4566"},{"rbin":"http://localhost:4566"},{"rds":"http://localhost:4566"},{"recyclebin":"http://localhost:4566"},{"redshift":"http://localhost:4566"},{"redshiftdata":"http://localhost:4566"},{"redshiftdataapiservice":"http://localhost:4566"},{"redshiftserverless":"http://localhost:4566"},{"rekognition":"http://localhost:4566"},{"resourceexplorer2":"http://localhost:4566"},{"resourcegroups":"http://localhost:4566"},{"resourcegroupstagging":"http://localhost:4566"},{"resourcegroupstaggingapi":"http://localhost:4566"},{"rolesanywhere":"http://localhost:4566"},{"route53":"http://localhost:4566"},{"route53domains":"http://localhost:4566"},{"route53recoverycontrolconfig":"http://localhost:4566"},{"route53recoveryreadiness":"http://localhost:4566"},{"route53resolver":"http://localhost:4566"},{"rum":"http://localhost:4566"},{"s3":"http://localhost:4566"},{"s3api":"http://localhost:4566"},{"s3control":"http://localhost:4566"},{"s3outposts":"http://localhost:4566"},{"sagemaker":"http://localhost:4566"},{"scheduler":"http://localhost:4566"},{"schemas":"http://localhost:4566"},{"sdb":"http://localhost:4566"},{"secretsmanager":"http://localhost:4566"},{"securityhub":"http://localhost:4566"},{"securitylake":"http://localhost:4566"},{"serverlessapplicationrepository":"http://localhost:4566"},{"serverlessapprepo":"http://localhost:4566"},{"serverlessrepo":"http://localhost:4566"},{"servicecatalog":"http://localhost:4566"},{"servicecatalogappregistry":"http://localhost:4566"},{"servicediscovery":"http://localhost:4566"},{"servicequotas":"http://localhost:4566"},{"ses":"http://localhost:4566"},{"sesv2":"http://localhost:4566"},{"sfn":"http://localhost:4566"},{"shield":"http://localhost:4566"},{"signer":"http://localhost:4566"},{"simpledb":"http://localhost:4566"},{"sns":"http://localhost:4566"},{"sqs":"http://localhost:4566"},{"ssm":"http://localhost:4566"},{"ssmcontacts":"http://localhost:4566"},{"ssmincidents":"http://localhost:4566"},{"ssmsap":"http://localhost:4566"},{"sso":"http://localhost:4566"},{"ssoadmin":"http://localhost:4566"},{"stepfunctions":"http://localhost:4566"},{"storagegateway":"http://localhost:4566"},{"sts":"http://localhost:4566"},{"swf":"http://localhost:4566"},{"synthetics":"http://localhost:4566"},{"timestreamwrite":"http://localhost:4566"},{"transcribe":"http://localhost:4566"},{"transcribeservice":"http://localhost:4566"},{"transfer":"http://localhost:4566"},{"verifiedpermissions":"http://localhost:4566"},{"vpclattice":"http://localhost:4566"},{"waf":"http://localhost:4566"},{"wafregional":"http://localhost:4566"},{"wafv2":"http://localhost:4566"},{"wellarchitected":"http://localhost:4566"},{"worklink":"http://localhost:4566"},{"workspaces":"http://localhost:4566"},{"xray":"http://localhost:4566"}],"aws:secretKey":"test","aws:accessKey":"000000000000"}}
{"name":"l1-output-map","runtime":"nodejs"}
{"name": "az-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Azure Native Python Pulumi program"}
{"runtime":"go","description":"A minimal Google Cloud Pulumi YAML program","name":"dev"}
{"name": "kube-ts", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"runtime":"nodejs","description":"A program that configures a Provider from inside a Component.","name":"construct_component_configure_provider"}
{"description":"An example that creates an API Gateway instance and configures a route as an HTTP proxy.","name":"awsx-apigateway-http-proxy-javascript","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"name": "azure-py-aks", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Azure Python Pulumi program"}
{"name": "google-rails", "runtime": "nodejs", "description": "A containerized Ruby on Rails app using managed Kubernetes and PostgreSQL"}
{"name":"aws-iam-role-instanceprofile-javascript","description":"An example that deploys an IAM role and instance profile on AWS.","runtime":{"options":{"typescript":""},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}}}
{"description":"An example that deploys an API Gateway REST API with a single endpoint backed by AWS Lambda.","name":"awsx-apigateway-lambda-typescript","runtime":"nodejs"}
{"runtime":"nodejs","name":"regress-3835","description":"Reproduce AWS 3835"}
{"description":"An example of fetching the default AWS VPC for the current region.","runtime":"go","name":"awsx-vpc-default-go"}
{"name":"stack-readme-cs","description":"A minimal C# Pulumi program demonstrating Stack Readme's","runtime":"dotnet"}
{"name":"field-mgr-patch-resources-tests","description":"Tests Field Manager with Patch resources","runtime":"nodejs"}
{"name": "azure-go-aci", "description": "Deploys a docker container to Azure Container Instances", "runtime": "go"}
{"name":"terrain-synth.kenny.wtf","description":"Terrain Synth for generating heightmaps","runtime":"nodejs"}
{"name": "lambda-layers", "description": "Example of building Lambda Layers with Pulumi on LocalStack", "runtime": "nodejs"}
{"description":"An example of building/publishing a Docker container image to AWS ECR","name":"cbp-aws-csharp","runtime":"dotnet"}
{"runtime":"nodejs","description":"A simple Deployment running nginx, exposed to the Internet with a Service","template":{"config":{"isMinikube":{"default":"1","description":"Whether you are deploying to minikube"}}},"name":"exposed-deployment"}
{"description":"Run an ESM module where package.json is in a parent directory.","name":"esm-with-package-json-in-parent-dir","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS FileSystemPolicy C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "spring-boot-pulumi-azure", "runtime": "nodejs", "description": "A minimal Azure Native TypeScript Pulumi program"}
{"runtime":"nodejs","main":"pulumi/","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","name":"pinterestClone"}
{"name": "k8s-aws-apps-svcs", "description": "Deploys common EKS app services.", "runtime": "nodejs"}
{"template":{"config":{"memory":{"default":"2","description":"The amount of memory, in GB, to allocate on the container"},"azure-native:location":{"default":"WestUS","description":"The Azure region to deploy into"},"cpu":{"description":"The number of CPU cores to allocate on the container","default":"1"},"containerPort":{"default":"80","description":"The port to expose on the container"},"appPath":{"description":"The path to the container application to deploy","default":"app"}},"description":"A Python program to deploy a containerized service on Azure"},"description":"${DESCRIPTION}","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"${PROJECT}"}
{"resources":{"blobContainer":{"properties":{"accountName":"${storageAccount.name}","resourceGroupName":"${resourceGroup.name}"},"type":"azure-native:storage:BlobContainer"},"storageAccount":{"type":"azure-native:storage:StorageAccount","properties":{"sku":{"name":"Standard_LRS"},"kind":"StorageV2","resourceGroupName":"${resourceGroup.name}"}},"resourceGroup":{"type":"azure-native:resources:ResourceGroup"},"blobResource":{"properties":{"type":"Block","containerName":"${blobContainerName}","source":{"fn::StringAsset":"content"},"accessTier":"Hot","resourceGroupName":"${resourceGroupName}","accountName":"${storageAccountName}"},"type":"azure-native:storage:Blob"}},"runtime":"yaml","name":"azure-native-storage-account-blob-yaml","description":"An example that deploys a blob into a blob storage account on Azure.","variables":{"resourceGroupName":"${resourceGroup.name}","storageAccountName":"${storageAccount.name}","blobContainerName":"${blobContainer.name}"},"outputs":{"storageAccountName":"${storageAccount.name}","resourceGroupName":"${resourceGroup.name}","blobContainerName":"${blobContainer.name}"}}
{"description":"${DESCRIPTION}","template":{"description":"A C# program to deploy a serverless application on AWS","config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"runtime":"dotnet","name":"${PROJECT}"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS OpenIdConnectProvider C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"go","name":"l2-primitive-ref"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l1-output-bool"}
{"description":"An example that deploys an IAM role and instance profile on AWS.","name":"aws-iam-role-instanceprofile-java","runtime":"java","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}}}
{"name": "vultr-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"description":"A program that constructs remote component resources.","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"name":"construct_nested_component_go","runtime":"go"}
{"runtime":"go","name":"go-build","description":"A minimal Go Pulumi program"}
{"runtime":"java","description":"http4k deployment on aws","name":"hello-http4k"}
{"name": "async-power-dialer", "runtime": "nodejs", "description": "Power Dialer using Twilio", "main": "src/resources"}
{"name":"pulumi-aws-cdk-alb","description":"ALB example for CDK","runtime":"nodejs"}
{"description":"A minimal AWS Go Pulumi program to create an AWSX Cloudtrail","name":"cloudtrail-go","runtime":"go"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-typescript"}}},"name":"helm-kubernetes-part-two-typescript","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"Demo Code Part 2 of the Tutorial around Helm in Kubernetes"}
{"name":"azure-fs-aci","description":"Deploys a docker container to Azure Container Instances","runtime":"dotnet"}
{"description":"Azure App Service with SQL Database and Application Insights","runtime":"nodejs","name":"appservice"}
{"description":"A minimal Go Pulumi program","runtime":"go","name":"vsphere"}
{"name":"hang","description":"A program that takes a very long time in order to test termination behavior.","runtime":"yaml","resources":{"sleep":{"type":"time:Sleep","properties":{"createDuration":"300s"}}}}
{"name":"aws-ts-eks-distro","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"description":"EKS cluster example using Fargate","runtime":"nodejs","name":"example-cluster-fargate"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getZone Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "kind-cluster", "runtime": "python", "description": "A kind cluster"}
{"name":"perf-component","runtime":"python"}
{"runtime":"go","name":"correct_project","description":"This is a description"}
{"config":{"instanceTag":{"default":"webserver","type":"string"},"servicePort":{"type":"string","default":"80"},"osImage":{"type":"string","default":"debian-11"},"machineType":{"type":"string","default":"f1-micro"}},"runtime":"yaml","template":{"config":{"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"osImage":{"description":"The OS image type to use for the VM","default":"debian-11"},"machineType":{"description":"The GCP machine type to use for the VM","default":"f1-micro"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"instanceTag":{"default":"webserver","description":"The tag to apply to the VM instance"},"servicePort":{"description":"The HTTP service port to expose on the VM","default":"80"},"gcp:zone":{"description":"The Google Cloud availability zone to deploy into","default":"us-central1-a"}},"description":"A Pulumi YAML program to deploy a virtual machine on Google Cloud"},"resources":{"firewall":{"properties":{"allows":[{"ports":["22","${servicePort}"],"protocol":"tcp"}],"network":"${network.selfLink}","targetTags":["${instanceTag}"],"direction":"INGRESS","sourceRanges":["0.0.0.0/0"]},"type":"gcp:compute:Firewall"},"subnet":{"properties":{"ipCidrRange":"10.0.1.0/24","network":"${network.id}"},"type":"gcp:compute:Subnetwork"},"network":{"properties":{"autoCreateSubnetworks":""},"type":"gcp:compute:Network"},"instance":{"type":"gcp:compute:Instance","options":{"dependsOn":["${firewall}"]},"properties":{"tags":["${instanceTag}"],"networkInterfaces":[{"subnetwork":"${subnet.id}","accessConfigs":[{}],"network":"${network.id}"}],"serviceAccount":{"scopes":["https://www.googleapis.com/auth/cloud-platform"]},"bootDisk":{"initializeParams":{"image":"${osImage}"}},"machineType":"${machineType}","allowStoppingForUpdate":"1","metadataStartupScript":"${metadataStartupScript}"}}},"variables":{"metadataStartupScript":"#!/bin/bash\necho '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Hello, world!</title>\n</head>\n<body>\n    <h1>Hello, world! 👋</h1>\n    <p>Deployed with 💜 by <a href=\"https://pulumi.com/\">Pulumi</a>.</p>\n</body>\n</html>' > index.html\nsudo python3 -m http.server ${servicePort} &\n"},"name":"${PROJECT}","outputs":{"url":"http://${instance.networkInterfaces[0].accessConfigs[0].natIp}:${servicePort}","name":"${instance.name}","ip":"${instance.networkInterfaces[0].accessConfigs[0].natIp}"},"description":"${DESCRIPTION}"}
{"description":"EKS managed nodegroups with IAM examples","runtime":"nodejs","name":"example-managed-nodegroups"}
{"runtime":"yaml","name":"non-existent-project","resources":{"_":{"type":"pulumi:providers:gcp","defaultProvider":"1","properties":{"project":"an-invalid-project"}},"b":{"properties":{"project":"${gcpProj}","location":"us-west1"},"type":"gcp:storage:Bucket"}},"config":{"gcpProj":"string"}}
{"description":"A program with a few dependencies.","runtime":"go","name":"prog"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"An example that deploys an IAM role and a policy attachment with an AWS managed policy on AWS.","name":"aws-iam-role-policyattachment-managedpolicy-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"py-many-resources","description":"A benchmark to test performance of stacks with many resources","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"DNS","runtime":"go","name":"dns"}
{"description":"Add a resource specific tag: `foo: buzz`\n","outputs":{"actual":"${res.tags}"},"runtime":"yaml","name":"test-aws-1655-pf","resources":{"app":{"properties":{"name":"pf-tags-test-app"},"type":"aws:appconfig:Application"},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux"}}},"type":"pulumi:providers:aws"},"res":{"options":{"provider":"${aws-provider}"},"type":"aws:appconfig:Environment","properties":{"tags":{"fizz":"buzz"},"name":"pf-tags-test","applicationId":"${app.id}"}}}}
{"runtime":"nodejs","description":"Tests handling of drift correction with refresh an reapply","name":"drift-correct-tests"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-dagster-application","description":"Pulumi project for deploying the stack of services needed by the Dagster ETL framework","runtime":"python"}
{"runtime":"dotnet","name":"aws-eks-cluster-csharp","description":"An example that deploys a Kubernetes cluster on AWS."}
{"description":"A benchmark to test performance of stacks with many resources","name":"go-many-resources","runtime":"go"}
{"name":"l2-parameterized-resource","runtime":"nodejs"}
{"name":"azure-cs-containerapps","description":"Creates an Azure Container App and deploys a custom Docker image to it","runtime":"dotnet"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}},"name":"l2-ref-ref"}
{"name": "fanout.io-lambda-demo", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"outputs":{"bucketName":"${site-bucket.bucketName}","websiteUrl":"${site-bucket.websiteUrl}"},"description":"A static website hosted on AWS S3","runtime":"yaml","name":"aws-native-static-website","resources":{"defaultProvider":{"type":"pulumi:providers:aws","options":{"version":"5.16.2"}},"index.html":{"properties":{"acl":"public-read","contentType":"text/html","bucket":"${site-bucket}","source":{"fn::fileAsset":"./www/index.html"}},"type":"aws:s3:BucketObject"},"favicon.png":{"properties":{"contentType":"image/png","bucket":"${site-bucket}","acl":"public-read","source":{"fn::fileAsset":"./www/favicon.png"}},"type":"aws:s3:BucketObject"},"site-bucket":{"properties":{"websiteConfiguration":{"indexDocument":"index.html"},"ownershipControls":{"rules":[{"objectOwnership":"ObjectWriter"}]},"publicAccessBlockConfiguration":{"blockPublicAcls":""}},"type":"aws-native:s3:Bucket"}}}
{"runtime":"go","name":"prog","description":"A program with a few dependencies."}
{"resources":{"resource":{"type":"gcp:storage:BucketIAMBinding","properties":{"members":["allAuthenticatedUsers"],"bucket":"${mybucket.name}","role":"roles/storage.objectAdmin"}},"mybucket":{"type":"gcp:storage:Bucket","properties":{"location":"US"}}},"runtime":"yaml","name":"bucket-iam-binding","outputs":{"resourceUrn":"${resource.urn}","resourceId":"${mybucket.name} roles/storage.objectAdmin"}}
{"name":"trivial-nginx","runtime":"nodejs","description":"Basic example of an Kubernetes sample based on \\ https://kubernetes.io/docs/user-guide/walkthrough/"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Enabling Logging", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"go","description":"Test Kubernetes Helm Release resource with remote Chart.","name":"go_helm_release"}
{"runtime":"java","name":"azure-function-graal-spring","description":"Deploys Spring Boot application packaged with GraalVM using Pulumi on Azure from Java definitions"}
{"resources":{"repository":{"type":"awsx:ecr:Repository"},"deployment":{"properties":{"spec":{"selector":{"matchLabels":{"appClass":"${appName}"}},"replicas":"2","template":{"metadata":{"labels":{"appClass":"${appName}"}},"spec":{"containers":[{"image":"${image.imageUri}","ports":[{"name":"http","containerPort":"80"}],"name":"${appName}"}]}}},"metadata":{"labels":{"appClass":"${appName}"}}},"options":{"provider":"${clusterProvider}"},"type":"kubernetes:apps/v1:Deployment"},"service":{"properties":{"metadata":{"labels":{"appClass":"${appName}"}},"spec":{"ports":[{"targetPort":"http","port":"80"}],"type":"LoadBalancer","selector":{"appClass":"${appName}"}}},"options":{"provider":"${clusterProvider}"},"type":"kubernetes:core/v1:Service"},"clusterProvider":{"properties":{"kubeconfig":"${cluster.kubeconfigJson}","enableServerSideApply":"1"},"type":"pulumi:providers:kubernetes"},"cluster":{"type":"eks:Cluster"},"image":{"type":"awsx:ecr:Image","properties":{"repositoryUrl":"${repository.url}","platform":"linux/amd64","context":"./app"}}},"variables":{"appName":"my-app"},"name":"awsx-ecr-eks-deployment-service-yaml","runtime":"yaml","outputs":{"url":"http://${service.status.loadBalancer.ingress[0].hostname}"}}
{"description":"Review environment shared ressources","runtime":"nodejs","name":"review-env"}
{"description":"Deploy two App Services - Front web app with VNet injection and Back web app with a Private Endpoint.","name":"azure-ts-webapp-privateendpoint-vnet-injection","runtime":"nodejs"}
{"name": "alb-ingress-controller", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"azure-csharp"}}},"name":"azure-native-import-resource-group-csharp","runtime":"dotnet","description":"An example that provides the code to import an existing resource group from Azure."}
{"name":"l2-plain","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"runtime":{"options":{"logtostderr":"1"},"name":"scala"},"description":"Minimal Kubernetes Secrets test","name":"kubernetes-secrets"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal Python Pulumi program using Google Cloud Functions.","name":"gcp-py-functions"}
{"runtime":"yaml","resources":{"res":{"type":"aws:cognito:UserPool","options":{"provider":"${aws-provider}"},"properties":{"aliasAttributes":["email"]}},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux"}}},"type":"pulumi:providers:aws"}},"name":"test-aws-1655-sdkv2","description":"Drop resource specific tags\n","outputs":{"actual":"${res.tags}"}}
{"name":"infra","backend":{"url":"s3://latitude-llm-pulumi-backend"},"runtime":{"name":"nodejs","options":{"nodeargs":"--experimental-specifier-resolution=node --loader ts-node/esm --no-warnings","packagemanager":"pnpm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"Infrastructure for Latitude LLM"}
{"name":"aws-ec2-sg-nginx-server-go","description":"An examples that deploys a simple public facing Nginx server","runtime":"go"}
{"name":"ovhcloud-kubernetes","config":{"cluster:nodepool":"pulumi-pool","cluster:flavor":"d2-4","cluster:name":"pulumi-cluster","cluster:region":"GRA9","cluster:min_nodes":"1","ovh:endpoint":"ovh-eu","cluster:max_nodes":"2","k8s_enabled":"1"},"description":"A Go program to deploy a Kubernetes cluster on OVHcloud","runtime":"go"}
{"description":"An example of building/publishing a Docker container image to DigitalOcean Container Registry","name":"cbp-do-csharp","runtime":"dotnet"}
{"description":"An example program to test autoname overlay","runtime":"nodejs","name":"aws-native-autonaming-overlay"}
{"description":"Deploys a simple Helm chart with .Capabilities.ApiVersions conditional","name":"dotnet-helm-apiversions","runtime":"dotnet"}
{"name":"command-random-go","runtime":"go","description":"A simple command example"}
{"name":"go_helm_local_kubernetes","description":"Test Kubernetes Helm package with local Chart.","runtime":"go"}
{"runtime":"go","name":"azure-go-aks-managed-identity","description":"A minimal Azure Native Pulumi GO program"}
{"runtime":"nodejs","name":"aws-proton-workshop-env-vpc","description":"AWS Proton workshop environment template"}
{"resources":{"install":{"properties":{"namespace":"${ns.metadata.name}","chart":"oci://registry-1.docker.io/bitnamicharts/cert-manager","version":"1.3.1"},"type":"kubernetes:helm.sh/v4:Chart"},"ns":{"type":"kubernetes:core/v1:Namespace"}},"variables":{},"runtime":"yaml","outputs":{"resources":"${install.resources}"},"description":"Installs cert-manager using Helm Chart v4 resource.\nFeatures used:\n- Chart resource\n","name":"chartv4"}
{"name":"dynamic-provider-config-main-py","description":"test for dynamic provider configuration within __main__","runtime":"python"}
{"name": "taskrouter-contact-center", "runtime": "nodejs", "description": "Skill based routing with Twilio Taskrouter"}
{"runtime":"dotnet","name":"awsx-load-balanced-fargate-nginx-csharp"}
{"description":"Enable Hubble UI on a Civo cluster","name":"pulumi-civo-cilium-hubble","variables":{"region":"FRA1"},"outputs":{"kubeconfig":{"Fn::Secret":"${civo-k3s-cluster.kubeconfig}"}},"resources":{"civo-k3s-cluster":{"type":"civo:KubernetesCluster","properties":{"pools":{"size":"g4s.kube.medium","nodeCount":"2"},"name":"MyCivoCluster","firewallId":"${civo-firewall.id}","region":"${region}","cni":"cilium"}},"civo-firewall":{"properties":{"region":"${region}","name":"MyCivoFirewall"},"type":"civo:Firewall"}},"runtime":"yaml"}
{"resources":{"provider":{"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"},"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"}},"tested-resource":{"type":"gcp:compute:Disk","options":{"provider":"${provider}"},"properties":{"physicalBlockSizeBytes":"4096","labels":{"environment":"dev"},"image":"debian-11-bullseye-v20220719","type":"pd-ssd","zone":"us-central1-a"}}},"name":"test","runtime":{"name":"yaml"}}
{"template":{"config":{"suffix":{"default":"ae","description":"A short string appended to each name to allow multiple stacks (optional)"},"firewall_address_space":{"description":"Address space in the hub for Azure Firewall and DMZ","default":"192.168.100.0/24"},"project":{"description":"Another project having a stack to peer with (optional)"},"azure_bastion":{"description":"Azure Bastion provides secure RDP and SSH connectivity to VMs (optional)","default":""},"location":{"description":"Azure region to deploy to (e.g. `australiaeast` or `australiasoutheast`)","default":"australiaeast"},"hub_address_space":{"default":"10.100.0.0/16","description":"Address space in the hub for connectivity and shared services subnets"},"org":{"description":"Another organization having a project and stack to peer with (optional)"},"forced_tunnel":{"default":"10.0.100.1","description":"Route all Internet-bound traffic to this designated next hop IP address (optional)"},"peer":{"description":"Another stack having corresponding Outputs to peer with (optional)"},"separator":{"description":"A dash (-) breaks up names by default; specify valid character or ' ' for none (optional)"}}},"description":"A minimal Azure Virtual Data Center described in Python","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"azure-py-vdc"}
{"name": "FunctionApp", "runtime": "dotnet", "backend": {"url": "file://~/.pulumi/project-stacks/FunctionApp"}}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"aws-eks-cluster-javascript","description":"An example that deploys a Kubernetes cluster on AWS."}
{"description":"A minimal Azure Go Pulumi program","name":"gosimple","runtime":"go"}
{"name":"test","runtime":{"name":"yaml"},"resources":{"provider":{"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"},"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"}},"tested-resource":{"options":{"provider":"${provider}"},"properties":{"labels":{"foo":"bar"},"messageRetentionDuration":"86600s"},"type":"gcp:pubsub:Topic"}}}
{"description":"Eventbridge ATM example for CDK","name":"pulumi-aws-eventbridge-atm","runtime":"nodejs"}
{"runtime":"nodejs","name":"regress-3421","description":"A minimal AWS TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"description":"${DESCRIPTION}","template":{"config":{"numWorkerNodes":{"description":"Number of worker nodes in the cluster","default":"3"},"prefixForDns":{"default":"pulumi","description":"DNS prefix for the cluster"},"mgmtGroupId":{"description":"The object ID (from az ad group list) of a group to make cluster admins"},"nodeVmSize":{"description":"VM size to use for worker nodes in the cluster","default":"Standard_DS2_v2"},"azure-native:location":{"description":"The Azure location (region) in which to create the cluster","default":"westus2"},"kubernetesVersion":{"default":"1.26.3","description":"Kubernetes version to deploy in the cluster"},"sshPubKey":{"description":"Contents of the public key for SSH access to cluster nodes"}},"description":"A Go program to deploy a Kubernetes cluster on Azure"},"runtime":"go","name":"${PROJECT}"}
{"outputs":{"endpoint":"${webTrafficAlb.loadBalancer.dnsName}"},"runtime":"yaml","variables":{"amiId":{"fn::invoke":{"arguments":{"owners":["amazon"],"mostRecent":"1","filters":[{"name":"name","values":["amzn2-ami-hvm-*"]}]},"return":"id","function":"aws:ec2:getAmi"}}},"description":"An example that deploys multiple load-balanced VMs in Amazon EC2.","resources":{"defaultVpc":{"type":"awsx:ec2:DefaultVpc"},"webSg":{"type":"aws:ec2:SecurityGroup","properties":{"vpcId":"${defaultVpc.vpcId}","egress":[{"fromPort":"0","toPort":"0","protocol":"-1","cidrBlocks":["0.0.0.0/0"]}],"ingress":[{"protocol":"tcp","fromPort":"80","toPort":"80","cidrBlocks":["0.0.0.0/0"]}]}},"attachment1":{"type":"awsx:lb:TargetGroupAttachment","properties":{"instance":"${web1}","targetGroup":"${webTrafficAlb.defaultTargetGroup}"}},"web2":{"properties":{"userData":"#!/bin/bash\necho \"Hello World, from Server 2!\" > index.html\nnohup python -m SimpleHTTPServer 80 &\n","subnetId":"${defaultVpc.publicSubnetIds[1]}","instanceType":"t2.micro","vpcSecurityGroupIds":["${webTrafficAlb.loadBalancer.securityGroups[0]}"],"ami":"${amiId}"},"type":"aws:ec2:Instance"},"webTrafficAlb":{"type":"awsx:lb:ApplicationLoadBalancer","properties":{"securityGroups":["${webSg.id}"],"listener":{"port":"80"}}},"attachment2":{"type":"awsx:lb:TargetGroupAttachment","properties":{"instance":"${web2}","targetGroup":"${webTrafficAlb.defaultTargetGroup}"}},"attachment3":{"type":"awsx:lb:TargetGroupAttachment","properties":{"instance":"${web3}","targetGroup":"${webTrafficAlb.defaultTargetGroup}"}},"web3":{"type":"aws:ec2:Instance","properties":{"vpcSecurityGroupIds":["${webTrafficAlb.loadBalancer.securityGroups[0]}"],"ami":"${amiId}","instanceType":"t2.micro","userData":"#!/bin/bash\necho \"Hello World, from Server 3!\" > index.html\nnohup python -m SimpleHTTPServer 80 &\n","subnetId":"${defaultVpc.publicSubnetIds[2]}"}},"web1":{"properties":{"instanceType":"t2.micro","subnetId":"${defaultVpc.publicSubnetIds[0]}","userData":"#!/bin/bash\necho \"Hello World, from Server 1!\" > index.html\nnohup python -m SimpleHTTPServer 80 &\n","ami":"${amiId}","vpcSecurityGroupIds":["${webTrafficAlb.loadBalancer.securityGroups[0]}"]},"type":"aws:ec2:Instance"}},"name":"awsx-load-balanced-ec2-instances-yaml"}
{"name":"vpc_nat_instance","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","description":"Deploys a simple Helm chart to Kubernetes.","name":"helm-chart"}
{"runtime":"nodejs","name":"nodejs","description":"AWSX VPC - default args"}
{"name":"options-test","runtime":"nodejs","description":"Test options propagation with component resources.","config":{"pulumi:disable-default-providers":["kubernetes"]}}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}},"name":"l2-resource-alpha"}
{"name":"gcp-typescript-cloudrun","runtime":"nodejs","description":"A minimal Google Cloud TypeScript Pulumi program"}
{"name":"config_missing_go","runtime":"go","description":"A simple Go program that errors on missing configuration."}
{"runtime":"python","description":"A program that constructs remote component resources.","name":"construct_component_py","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]}}
{"description":"Pulumi project to deploy DiceDB full infrastructure on AWS","name":"DiceDB","backend":{"url":"s3://ddb-temp-1729?region=us-east-1&awssdk=v2"},"runtime":{"name":"python"}}
{"name":"google-native-functions-ts","description":"A simple example of Google Cloud Functions","runtime":"nodejs"}
{"name":"gcp-sample-project","runtime":"java","description":"A sample Pulumi Kotlin Google Cloud program"}
{"name": "cloudflare-core", "runtime": {"name": "python", "options": {"virtualenv": "../.env"}}, "description": "Cloudflare Core Infrastructure"}
{"name": "julianjanine-grpc", "description": "A minimal AWS Go Pulumi program", "runtime": "go"}
{"description":"A minimal Google Cloud TypeScript Pulumi program","runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"name":"cloudrun-service"}
{"name": "guestbook", "runtime": "nodejs", "description": "Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/", "template": {"config": {"isMinikube": {"description": "Whether you are deploying to minikube", "default": true}}}}
{"name":"k8s-apps-cronjob","description":"Show how to create a CronJob","runtime":"nodejs"}
{"description":"An example that shows how to create an EC2 instance and security group.","runtime":"nodejs","name":"aws-ec2-instance-with-sg-typescript"}
{"description":"A simple Go program that uses configuration secrets.","name":"config_secrets_go","runtime":"go"}
{"name":"fantomas-aws","runtime":"dotnet","description":"A minimal AWS F# Pulumi program"}
{"outputs":{"actual":"${res.tags}"},"description":"Change tag `foo` value to `quux`\n","runtime":"yaml","resources":{"res":{"options":{"provider":"${aws-provider}"},"type":"aws:s3:Bucket"},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux"}}},"type":"pulumi:providers:aws"}},"name":"test-aws-1655-legacy"}
{"name":"debian-pulumi-aws","description":"A Go Pulumi program to stand up a Debian instance on AWS","runtime":"go"}
{"description":"A simple example of setting IAM policy for a storage bucket","name":"google-native-bucket-iam-ts","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Document Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "azure-py-loadbalancer-vm", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Basic example of an Azure Load Balancer fronting an Azure VM accessible over HTTP", "template": {"config": {"location": {"description": "The Azure location to deploy to", "default": "westus"}, "username": {"description": "The username used to configure the Virtual Machine"}, "password": {"description": "The password used to configure the Virtual Machine", "secret": true}}}}
{"name": "react-frontend", "description": "A static react website on AWS", "runtime": "nodejs"}
{"runtime":"nodejs","description":"A program that tests partial provider failure.","name":"partial_state"}
{"runtime":"go","name":"construct_component_resource_options_go","description":"A program that constructs remote component resources with a bunch of resource options."}
{"name":"pulumi-aws-secret","description":"create a secret in AWS secrets manager and give its value as a required secret from the stack config file","runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/35fbb167-1a6a-4fc4-90cf-dcafa3850e47.zip"}}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"cbp-aws-py","description":"An example of building/publishing a Docker container image to AWS ECR"}
{"description":"A minimal Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"1-functions-python"}
{"description":"Infrastructure in AWS","runtime":"nodejs","name":"aws"}
{"name":"l2-resource-simple","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"description":"Creates an identity stack for an GKE cluster and its users.","name":"k8s-gcp-identity","runtime":"nodejs"}
{"name":"alb","description":"A simple application load balancer example.","runtime":"nodejs"}
{"description":"Test import support for Kubernetes Helm Release resource.","config":{"namespace":{"description":"the release namespace","type":"string"},"version":{"type":"string","description":"the chart version"},"values":{"type":"string","description":"the chart values"},"repo":{"type":"string","default":"","description":"the chart repository URL"},"chart":{"type":"string","description":"the chart specification"},"name":{"type":"string","description":"the release name"}},"runtime":"go","name":"go_helm_release_import"}
{"name":"vault","runtime":"nodejs","description":"Vault Configuration"}
{"runtime":"nodejs","description":"Azure Functions triggered by Azure Event Grid","name":"azure-eventgrid"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"${DESCRIPTION}","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}},"description":"A Python program to deploy a serverless application on AWS"},"name":"${PROJECT}"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-javascript"}}},"name":"kubernetes-deployments-javascript","description":"An example that creates a Kubernetes Deployment","runtime":{"name":"nodejs","options":{"typescript":"","packagemanager":"npm"}}}
{"name": "aws-peered-network", "runtime": "nodejs", "description": "A peered AWS network with VPCs in the given regions"}
{"runtime":"nodejs","name":"ecs-example","description":"A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal GCP VB.NET Pulumi program", "config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}}}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"Use ECMAScript modules for a TS program.","name":"esm-ts-compiled"}
{"description":"A minimal TypeScript Pulumi program","name":"fly-ts","runtime":"nodejs"}
{"description":"Cloud Firestore example","name":"gcp-firestore","runtime":"scala"}
{"name":"self-managed-ng-instanceProfile","runtime":{"name":"nodejs","options":{"packagemanager":"npm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"A minimal TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS LogSubscriptionFilter C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"config":{"vpcNetworkCidr":{"description":"Network CIDR to use for new VPC","default":"10.0.0.0/16"},"maxClusterSize":{"default":"6","description":"Maximum size (number of nodes) of cluster"},"eksNodeInstanceType":{"description":"Instance type to use for worker nodes","default":"t3.medium"},"minClusterSize":{"description":"Minimum size (number of nodes) of cluster","default":"3"},"desiredClusterSize":{"description":"Desired number of nodes in the cluster","default":"3"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}},"description":"A Go program to deploy a Kubernetes cluster on AWS"},"description":"${DESCRIPTION}","runtime":"go","name":"${PROJECT}"}
{"name": "pulumi-azure-fluxcd-komodor", "runtime": "yaml", "description": "A minimal Azure Native Pulumi YAML program", "config": {"apiKey": {"type": "string", "secret": true}}, "variables": {"name": "komodor", "location": "westeurope", "kubeconfig": {"fn::invoke": {"function": "azure-native:containerservice/v20220301:listManagedClusterUserCredentials", "arguments": {"resourceGroupName": "${komodor-rg.name}", "resourceName": "${komodor-mc.name}"}}}}, "resources": {"komodor-rg": {"type": "azure-native:resources:ResourceGroup", "properties": {"location": "${location}", "resourceGroupName": "${name}"}}, "komodor-mc": {"type": "azure-native:containerservice/v20220301:ManagedCluster", "properties": {"kubernetesVersion": "1.25.2", "location": "${komodor-rg.location}", "resourceGroupName": "${komodor-rg.name}", "resourceName": "komodor-mc", "nodeResourceGroup": "komodor-mc-nodepool", "dnsPrefix": "${komodor-rg.name}", "networkProfile": {"networkPlugin": "azure", "networkPolicy": "calico"}, "servicePrincipalProfile": null, "identity": {"type": "SystemAssigned"}, "agentPoolProfiles": [{"name": "agentpool", "count": 3, "vmSize": "Standard_B2ms", "osType": "Linux", "osDiskSizeGB": 30, "type": "VirtualMachineScaleSets", "mode": "System"}]}}, "flux-extension": {"type": "azure-native:kubernetesconfiguration/v20220301:Extension", "properties": {"clusterName": "${komodor-mc.name}", "clusterResourceName": "managedClusters", "clusterRp": "Microsoft.ContainerService", "extensionName": "flux", "extensionType": "microsoft.flux", "resourceGroupName": "${komodor-rg.name}", "configurationSettings": {"helm-controller.enabled": "true", "source-controller.enabled": "true", "kustomize-controller.enabled": "true", "notification-controller.enabled": "false", "image-automation-controller.enabled": "false", "image-reflector-controller.enabled": "false"}, "scope": {"cluster": {"releaseNamespace": "flux-system"}}, "autoUpgradeMinorVersion": true, "releaseTrain": "Stable"}}, "flux-configuration": {"type": "azure-native:kubernetesconfiguration/v20221101:FluxConfiguration", "properties": {"clusterName": "${komodor-mc.name}", "clusterResourceName": "managedClusters", "clusterRp": "Microsoft.ContainerService", "fluxConfigurationName": "flux-configuration", "resourceGroupName": "${komodor-rg.name}", "sourceKind": "GitRepository", "namespace": "flux-system", "gitRepository": {"url": "https://github.com/dirien/pulumi-azure-flux.git", "repositoryRef": {"branch": "main"}}, "scope": "cluster", "kustomizations": {"deploy": {"path": "./clusters/azure", "prune": true}}}}, "k8s-provider": {"type": "pulumi:providers:kubernetes", "properties": {"kubeconfig": {"fn::fromBase64": "${kubeconfig.kubeconfigs[0].value}"}, "enableServerSideApply": true}}, "komodor-namespace": {"type": "kubernetes:core/v1:Namespace", "properties": {"metadata": {"name": "${name}"}}, "options": {"provider": "${k8s-provider}"}}, "komodor-apikey-secret": {"type": "kubernetes:core/v1:Secret", "properties": {"metadata": {"name": "${name}-apikey", "namespace": "${komodor-namespace.metadata.name}"}, "stringData": {"apiKey": "${apiKey}"}}, "options": {"provider": "${k8s-provider}", "dependsOn": ["${komodor-namespace}"]}}}, "outputs": {"aks-cred-command": "az aks get-credentials -g ${komodor-rg.name}  -n ${komodor-mc.name}", "kubeconfig": {"fn::secret": {"fn::fromBase64": "${kubeconfig.kubeconfigs[0].value}"}}}}
{"name":"video-thumbnailer","runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"description":"A video thumbnail extractor using serverless functions and containers"}
{"description":"A TypeScript Pulumi program with AWS Cloud Control provider testing an update","name":"aws-update","runtime":"nodejs"}
{"name":"compilation_error","runtime":"go","description":"A minimal Go Pulumi program"}
{"name":"serverless-topic","runtime":"nodejs","description":"Simple topic examples"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS IdentityPolicy TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"An example that deploys an IAM user and user policy on AWS.","name":"aws-iam-user-userpolicy-javascript","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"description":"An empty Python Pulumi program.","runtime":"python","name":"emptypy"}
{"name":"l1-output-string","runtime":"go"}
{"runtime":"yaml","name":"${PROJECT}","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"instanceType":{"description":"The Amazon EC2 instance type","default":"t3.micro"},"vpcNetworkCidr":{"description":"The network CIDR to use for the VPC","default":"10.0.0.0/16"}},"description":"A Pulumi YAML program to deploy a virtual machine on Amazon EC2"},"description":"${DESCRIPTION}","outputs":{"ip":"${server.publicIp}","url":"http://${server.publicDns}","hostname":"${server.publicDns}"},"variables":{"userData":"#!/bin/bash\necho \"Hello, World from Pulumi!\" > index.html\nnohup python -m SimpleHTTPServer 80 &\n","ami":{"fn::invoke":{"return":"id","arguments":{"mostRecent":"1","filters":[{"name":"name","values":["amzn2-ami-hvm-*"]}],"owners":["amazon"]},"function":"aws:ec2:getAmi"}}},"config":{"instanceType":{"default":"t3.micro","type":"string"},"vpcNetworkCidr":{"type":"string","default":"10.0.0.0/16"}},"resources":{"routeTableAssociation":{"type":"aws:ec2:RouteTableAssociation","properties":{"routeTableId":"${routeTable.id}","subnetId":"${subnet.id}"}},"subnet":{"properties":{"mapPublicIpOnLaunch":"1","cidrBlock":"10.0.1.0/24","vpcId":"${vpc.id}"},"type":"aws:ec2:Subnet"},"gateway":{"type":"aws:ec2:InternetGateway","properties":{"vpcId":"${vpc.id}"}},"server":{"type":"aws:ec2:Instance","properties":{"subnetId":"${subnet.id}","ami":"${ami}","instanceType":"${instanceType}","userData":"${userData}","vpcSecurityGroupIds":["${secGroup}"],"tags":{"Name":"webserver"}}},"vpc":{"properties":{"cidrBlock":"${vpcNetworkCidr}","enableDnsHostnames":"1","enableDnsSupport":"1"},"type":"aws:ec2:Vpc"},"routeTable":{"properties":{"vpcId":"${vpc.id}","routes":[{"cidrBlock":"0.0.0.0/0","gatewayId":"${gateway.id}"}]},"type":"aws:ec2:RouteTable"},"secGroup":{"type":"aws:ec2:SecurityGroup","properties":{"vpcId":"${vpc.id}","description":"Enable HTTP access","egress":[{"protocol":"-1","toPort":"0","cidrBlocks":["0.0.0.0/0"],"fromPort":"0"}],"ingress":[{"fromPort":"80","protocol":"tcp","toPort":"80","cidrBlocks":["0.0.0.0/0"]}]}}}}
{"name":"secrets","runtime":"python","description":"Tests secrets support."}
{"runtime":"dotnet","name":"Telplin.Deploy","description":"A minimal AWS F# Pulumi program"}
{"name":"awsx-load-balanced-fargate-ecr-java","runtime":"java"}
{"name": "azure-test", "runtime": "nodejs"}
{"name": "m3o", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name":"docker.ts","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"name":"consume-random-login","resources":{"generator":{"properties":{"passwordLength":{"fn::secret":"8"},"petName":"1"},"type":"random-login:RandomLogin"},"badPasswordLength":{"type":"random:RandomInteger","properties":{"min":"3","max":"8"}},"salter":{"type":"random-login:RandomSalt","properties":{"password":"${generator.password}","saltedLength":"4"}},"badPassword":{"properties":{"length":"${badPasswordLength}"},"type":"random-login:MoreRandomPassword"}},"outputs":{"password":"${salter.saltedPassword}","username":"${generator.username}","rawPassowrd":"${salter.password}"},"runtime":"yaml","plugins":{"providers":[{"path":"..","name":"random-login"}]}}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"nested_config"}
{"runtime":"nodejs","description":"S3 object lambda example for CDK","name":"pulumi-aws-s3-object-lambda"}
{"description":"An example that deploys the configuration necessary to import a Service Account resource in Google Cloud.","runtime":{"name":"nodejs","options":{"packagemanager":"npm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"name":"gcp-import-service-account-typescript"}
{"name": "vultr-csharp", "runtime": "dotnet", "description": "A minimal C# Pulumi program"}
{"name":"awsx-apigateway-openapi-route-python","description":"n example of configuring an API Gateway route with an OpenAPI/Swagger definition.","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":"yaml","name":"aws-yaml","resources":{"alb":{"type":"aws:alb:LoadBalancer","properties":{"subnets":["subnet-eacf3697","subnet-939b18f8"],"name":"testing","tags":{"Name":"test-lb"}}},"testProvider":{"properties":{"testInput":"${alb.urn}"},"defaultProvider":"1","type":"pulumi:providers:testprovider"},"provider":{"defaultProvider":"1","type":"pulumi:providers:aws","properties":{"region":"us-west-2"}},"echo":{"type":"testprovider:index:Echo"}},"plugins":{"providers":[{"name":"testprovider","path":"../../testprovider"}]}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"fargate_example_webapp","description":"A minimal AWS Python Pulumi program"}
{"description":"An example that applies unit testing to F# and Azure resources.","name":"test-unit-fs-mocks","runtime":"dotnet"}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"mypy"},"name":"python"},"name":"l2-resource-secret"}
{"runtime":"nodejs","name":"azure-multi-callback-all","description":"An Azure Function App with all types of functions"}
{"runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","main":"pulumi/","name":"pinterestClone"}
{"name":"regress-2868","description":"Regress pulumi/pulumi-aws#2868","runtime":"nodejs"}
{"template":{"config":{"scaleway:project_id":{"description":"The Scaleway project ID"},"scaleway:region":{"description":"The Scaleway region to deploy into","default":"fr-par"}},"description":"A minimal Scaleway Go program"},"name":"${PROJECT}","runtime":"go","description":"${DESCRIPTION}"}
{"outputs":{"connectionString":"${account.primaryConnectionString}"},"template":{"config":{"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"azure:location":{"description":"The Azure location to use","default":"WestUS2"}},"description":"A minimal Pulumi YAML program with the classic Azure provider"},"runtime":"yaml","resources":{"account":{"type":"azure:storage:Account","properties":{"accountReplicationType":"LRS","accountTier":"Standard","resourceGroupName":"${resourceGroup.name}"}},"resourceGroup":{"type":"azure:core:ResourceGroup"}},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-provider-grpc-config-schema-secret"}
{"runtime":"nodejs","name":"cluster","description":"A simple example of using the `Network` and `Cluster` APIs."}
{"name":"construct_component_methods_go","runtime":"go","description":"A program that constructs remote component resources with methods."}
{"name":"multiple_buckets","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "nodejs", "template": {"description": "A minimal SakuraCloud JavaScript Pulumi program"}}
{"description":"A program that constructs remote component resources with a constructor that returns an error.","runtime":"go","name":"construct_component_failures_go"}
{"runtime":"python","name":"python_await","description":"A python program to test if non-exported outputs are awaited"}
{"name":"awsx-ecr-eks-deployment-service-javascript","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"runtime":"scala","description":"A Google Big Query example","name":"gcp-big-query"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS AmiLaunchPermission C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"kubernetes-py-exposed-deployment","description":"A minimal Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"Basic test case for codepaths","name":"codepaths-nested","runtime":"nodejs"}
{"name":"strict-mode","runtime":"nodejs","description":"Tests strict mode provider configuration."}
{"name":"static_site","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":"nodejs","description":"An example that deploys an EC2 instance using a VPC and security group with Crosswalk for AWS.","name":"awsx-vpc-sg-ec2-typescript"}
{"runtime":"nodejs","description":"Basic example of nginx deployed in Azure VM Scale Sets","name":"azure-ts-vm-scaleset","template":{"config":{"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"azure:environment":{"default":"public","description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)"}}}}
{"name":"l2-resource-config","runtime":"nodejs"}
{"outputs":{"extraArgument":"${extraArg.stdout}"},"resources":{"extraArg":{"properties":{"create":"echo extra-argument"},"type":"command:local:Command"},"demo-image":{"type":"docker:Image","properties":{"imageName":"docker.io/pulumibot/test-unknowns:yaml","build":{"args":{"RANDOM_ARG":"${extraArg.stdout}"}},"skipPush":"1"}}},"runtime":"yaml","name":"dockerfile-with-unknowns-yaml"}
{"description":"Example of a Kubernetes Application using plain YAML files","name":"kubernetes-yaml","runtime":"scala"}
{"name":"helm-kubernetes-go","description":"Kubernetes Operator","config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-go"}}},"runtime":"go"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal AWS Python Pulumi program","name":"s3_bucket_cloudflare"}
{"name":"construct_component_output_values_go","description":"A program that constructs remote component resources with output values.","runtime":"go"}
{"name":"awsx-ecr-eks-deployment-service-csharp","runtime":"dotnet"}
{"description":"A minimal Go Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"go"}}},"name":"slow","runtime":"go"}
{"description":"The package json is in a parent directory and we need to discover the node_modules from the parent directory when we compute the codepaths.","name":"codepaths-nested","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Repository Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"webserver_comp","runtime":"nodejs","description":"Example of an AWS web server accessible over HTTP, nicely componentized."}
{"name":"types_python","runtime":"python","description":"A program that uses input/output types with explicitly declared properties."}
{"runtime":{"options":{"v":"0","logtostderr":""},"name":"java"},"description":"Integration test for Aliases (rename scenario)","name":"aliases-rename"}
{"runtime":"java","name":"awsx-apigateway-validation-types-java","description":"An example of configuring request validators for an API Gateway instance."}
{"name": "ngx", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Kubernetes Python Pulumi program"}
{"name": "Xamarin.Bookshelf.Infrastructure", "runtime": "dotnet", "description": "Tracinha's Infrastructure"}
{"name":"pulumi-hcloud","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"name": "gcp-mb-car", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"description":"A TypeScript Pulumi program with AWS Cloud Control provider","name":"aws-cidr-ts","runtime":"nodejs"}
{"runtime":"go","name":"nat-instance-pulumi","description":"A Go Pulumi program to use a NAT instance on AWS"}
{"runtime":"yaml","resources":{"aws-provider":{"type":"pulumi:providers:aws"},"res":{"type":"aws:s3:BucketV2","options":{"provider":"${aws-provider}"}}},"name":"test-aws-1655-bucket","outputs":{"actual":"${res.tags}"},"description":"Don't specify any default tags (should be empty)\n"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS TrafficMirrorFilterRule TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Test options propagation with component resources.","name":"options-test","runtime":"go","config":{"pulumi:disable-default-providers":["kubernetes"]}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Virtual Private Gateway", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A simple example of using the Secret Manager APIs using Python.","name":"secretmanager-py","runtime":"python"}
{"runtime":"go","name":"cbp-do-go","description":"An example of building/publishing a Docker container image to DigitalOcean Container Registry"}
{"description":"maven executor test","runtime":{"options":{"v":"0","logtostderr":"1"},"name":"scala"},"name":"language-plugin-test"}
{"name": "py-many-resources", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A benchmark to test performance of stacks with many resources"}
{"resources":{"demo-image":{"options":{"version":"v4.0.0"},"type":"docker:Image","properties":{"build":{"context":"./app"},"skipPush":"1","imageName":"pulumibot/test-image:tag2"}}},"outputs":{"out-dockerfile":"${demo-image.dockerfile}","imageName":"${demo-image.imageName}"},"name":"dockerfile-default","runtime":"yaml"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"description":"A minimal AWS JavaScript Pulumi program","name":"alb-lambda-pulumi-js"}
{"runtime":"go","name":"l1-builtin-info"}
{"runtime":"nodejs","name":"ts-lb-with-subnetIds","description":"Minimal LoadBalancer Typescript component test"}
{"runtime":{"name":"nodejs","options":{"nodeargs":"--experimental-specifier-resolution=node --loader ts-node/esm --no-warnings"}},"main":"src/index.ts","name":"esm-ts-nested-src","description":"Use ECMAScript modules for a TS program nested in a src dir."}
{"name":"l2-parameterized-resource","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"name":"awsx-apigateway-lambda-java","description":"An example that deploys an API Gateway REST API with a single endpoint backed by AWS Lambda.","runtime":"java"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l1-builtin-info"}
{"name": "vpc_eks_go", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name":"smac-program","outputs":{"test_true_smac__actual":{"fn::invoke":{"options":{"provider":"${provider1}"},"return":"skipMetadataApiCheck","function":"testbridge:index/smac:SMAC"}},"test_def_smac__actual":{"fn::invoke":{"options":{"provider":"${provider3}"},"return":"skipMetadataApiCheck","function":"testbridge:index/smac:SMAC"}},"test_def_smac__expect":"true","test_true_smac__expect":"true","test_false_smac__actual":{"fn::invoke":{"options":{"provider":"${provider2}"},"return":"skipMetadataApiCheck","function":"testbridge:index/smac:SMAC"}},"test_false_smac__expect":"false"},"resources":{"provider3":{"type":"pulumi:providers:testbridge"},"provider2":{"type":"pulumi:providers:testbridge","properties":{"skipMetadataApiCheck":""}},"provider1":{"type":"pulumi:providers:testbridge","properties":{"skipMetadataApiCheck":"1"}}},"runtime":"yaml"}
{"name": "aws-native-ts-s3-folder", "runtime": "nodejs", "description": "A static website hosted on AWS S3"}
{"runtime":"dotnet","description":"Example python app using multiple docker containers","name":"docker-cs-multi-container-app","main":"Infra"}
{"name":"regression","description":"Regression tests","runtime":"nodejs"}
{"config":{"sqlAdmin":{"type":"string","default":"pulumi"}},"outputs":{"endpoint":"https://${containerapp.configuration.ingress.fqdn}"},"resources":{"kubeEnv":{"type":"azure-native:web:KubeEnvironment","properties":{"appLogsConfiguration":{"destination":"log-analytics","logAnalyticsConfiguration":{"sharedKey":"${sharedKey}","customerId":"${workspace.customerId}"}},"environmentType":"Managed","resourceGroupName":"${resourceGroup.name}"}},"registry":{"properties":{"adminUserEnabled":"1","sku":{"name":"Basic"},"resourceGroupName":"${resourceGroup.name}"},"type":"azure-native:containerregistry:Registry"},"myImage":{"options":{"provider":"${provider}"},"properties":{"name":"${registry.loginServer}/node-app:v1.0.0","build":{"context":"${pulumi.cwd}/node-app"}},"type":"docker:RegistryImage"},"provider":{"type":"pulumi:providers:docker","properties":{"registryAuth":[{"password":"${adminPasswords[0].value}","address":"${registry.loginServer}","username":"${adminUsername}"}]}},"workspace":{"type":"azure-native:operationalinsights:Workspace","properties":{"sku":{"name":"PerGB2018"},"resourceGroupName":"${resourceGroup.name}","retentionInDays":"30"}},"resourceGroup":{"type":"azure-native:resources:ResourceGroup"},"containerapp":{"properties":{"configuration":{"ingress":{"external":"1","targetPort":"80"},"secrets":[{"name":"pwd","value":"${adminPasswords[0].value}"}],"registries":[{"passwordSecretRef":"pwd","server":"${registry.loginServer}","username":"${adminUsername}"}]},"template":{"containers":[{"name":"myapp","image":"${myImage.name}"}]},"kubeEnvironmentId":"${kubeEnv}","resourceGroupName":"${resourceGroup.name}"},"type":"azure-native:web:ContainerApp"}},"variables":{"adminPasswords":{"fn::invoke":{"Return":"passwords","function":"azure-native:containerregistry:listRegistryCredentials","arguments":{"resourceGroupName":"${resourceGroup.name}","registryName":"${registry.name}"}}},"adminUsername":{"fn::invoke":{"Return":"username","function":"azure-native:containerregistry:listRegistryCredentials","arguments":{"registryName":"${registry.name}","resourceGroupName":"${resourceGroup.name}"}}},"sharedKey":{"fn::invoke":{"Return":"primarySharedKey","function":"azure-native:operationalinsights:getSharedKeys","arguments":{"resourceGroupName":"${resourceGroup.name}","workspaceName":"${workspace.name}"}}}},"name":"azure-container-apps","description":"Azure Container Apps example","runtime":"yaml"}
{"name": "ec2-asg-lb", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Scaleway Pulumi YAML program", "config": {"scaleway:project_id": {"description": "The Scaleway project ID"}, "scaleway:region": {"description": "The Scaleway region to deploy into", "default": "fr-par"}}}, "resources": {"my-bucket": {"type": "scaleway:ObjectBucket"}}, "outputs": {"bucketName": "${my-bucket.id}"}}
{"name": "tokens", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","name":"generic-await-logic","description":"Tests that we await custom and generic ready conditions."}
{"description":"${DESCRIPTION}","runtime":{"name":"nodejs","options":{"typescript":""}},"name":"${PROJECT}","template":{"description":"A minimal OCI JavaScript Pulumi program"}}
{"name":"l2-primitive-ref","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal Auth0 Python Pulumi program", "config": {"auth0:clientId": {"description": "The Auth0 client ID", "secret": true}, "auth0:clientSecret": {"description": "The Auth0 client secret", "secret": true}, "auth0:domain": {"description": "The Auth0 domain"}}}}
{"name":"aws-s3websitebucket-oai-bucketpolicy-java","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}},"runtime":"java","description":"An example that creates a website S3 bucket, a CloudFront Origin Access Identity, and a bucket policy."}
{"name":"azure-aci","description":"Azure ACI example","runtime":"scala"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"awsx-ecr-eks-deployment-service-python"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"go"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program","name":"vpc_peering"}
{"description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs","name":"step1"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"${PROJECT}","template":{"description":"A minimal Google Cloud Python Pulumi program","config":{"google-native:project":{"description":"The Google Cloud project to deploy into"}}},"description":"${DESCRIPTION}"}
{"description":"Example of using the getKubeconfig method to generate role and profile based kubeconfigs","name":"scoped-kubeconfigs","runtime":"nodejs"}
{"name": "chadort-site", "description": "The personal website of Chad Ort.", "runtime": {"name": "nodejs", "options": {"typescript": false}}}
{"runtime":"nodejs","name":"pinterestClone","main":"pulumi/","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application."}
{"name":"realm-csharp","description":"A minimal C# Pulumi program to create KeyCloak Realm","runtime":"dotnet"}
{"name":"datasource-py","description":"Basic example of an Azure DataSource (in Python!)","runtime":"python"}
{"description":"A Go Pulumi program to use SSH with a remote Docker host on AWS","runtime":"go","name":"docker-ssh-pulumi"}
{"description":"A minimal Azure TypeScript Pulumi program","name":"aks-typescript","runtime":"nodejs"}
{"name": "debug-stack", "description": "A minimal AWS TypeScript Pulumi program", "runtime": "nodejs"}
{"description":"A minimal Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"openstack_cluster"}
{"name":"l2-invoke-simple","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}},"runtime":{"options":{"toolchain":"pip","virtualenv":"venv"},"name":"python"},"description":"An example that deploys a storage bucket and uploads a file on Google Cloud.","name":"gcp-storage-bucket-object-python"}
{"name":"test","resources":{"generic-security-policy":{"type":"gcp:compute:SecurityPolicy","properties":{"rules":[{"match":{"versionedExpr":"SRC_IPS_V1","config":{"srcIpRanges":["9.9.9.0/24"]}},"description":"Deny access to IPs in 9.9.9.0/24","priority":"1000","action":"deny(403)"},{"priority":"2147483647","action":"allow","description":"default rule","match":{"versionedExpr":"SRC_IPS_V1","config":{"srcIpRanges":["*"]}}}]}}},"description":"A minimal Pulumi YAML program","outputs":{},"runtime":"yaml"}
{"template":{"description":"A minimal Java Pulumi program with JBang"},"description":"${DESCRIPTION}","runtime":"java","name":"${PROJECT}"}
{"description":"worlds.kenny.wtf is a demo and docs page for the Hell Worlds project","runtime":"nodejs","name":"worlds.kenny.wtf"}
{"runtime":"dotnet","name":"aws-iampolicy-jsonparse-csharp","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"description":"An example that deploys an IAM policy and manipulates it using JSON parsing."}
{"name":"awsx-vpc-security-groups-javascript","runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that creates a new VPC with a custom security group."}
{"name":"conference","description":"conference platform pulumi app","runtime":"go"}
{"name":"pulumi-aws-errors","description":"errors integration test","runtime":"nodejs"}
{"template":{"config":{"azure:location":{"description":"Azure DC region","default":"North Europe"},"botName":{"description":"Microsoft Azure Bot Name"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}},"runtime":"dotnet","description":"Creates Azure Bot Service with Application Insights","name":"azure-cs-botservice"}
{"name": "webserver-py", "runtime": "python", "description": "Basic example of an Azure web server accessible over HTTP."}
{"description":"An example of building/publishing a Docker container image to Azure ACR","name":"cbp-azure-csharp","runtime":"dotnet"}
{"runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"},"main":"subdir","name":"l1-main"}
{"name":"log_debug_js","runtime":"nodejs"}
{"runtime":"go","name":"l1-output-array"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Create Cached iSCSI Volume From Snapshot", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-apigateway-validation-types-yaml","outputs":{"url":"${api.url}"},"description":"An example of configuring request validators for an API Gateway instance.","runtime":"yaml","resources":{"api":{"properties":{"requestValidator":"PARAMS_ONLY","routes":[{"method":"GET","requiredParameters":[{"in":"query","name":"q"}],"path":"/search","requestValidator":"ALL","target":{"uri":"https://www.example.com/","type":"http_proxy"}}]},"type":"aws-apigateway:RestAPI"}}}
{"runtime":"go","name":"managed-nodegroups-go","description":"Example managed nodegroups in Go"}
{"description":"An example that integrates API Gateway, EventBridge, and Lambda.","name":"aws-ts-apigatewayv2-eventbridge","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"runtime":"nodejs"}
{"description":"A sample Google Cloud Native Kotlin Pulumi program","runtime":"java","name":"google-native-sample-project"}
{"description":"A simple example of using autonaming Fifo queues in CSharp","name":"testing-aws-fifo-dotnet","runtime":"dotnet"}
{"template":{"config":{"dbUsername":{"description":"(Required) The username to use for the database"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into."},"networkingStack":{"description":"(Required) The reference to the networking stack on which the database will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)"},"dbPassword":{"description":"(Required) The password to use for the database- stored as a secret"},"dbName":{"description":"(Required) The name of the database to create when the DB instance is created"}}},"runtime":"nodejs","name":"database-layer","description":"Database layer for the aws-ts-stackreference-architecture"}
{"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"An example that deploys a storage bucket and uploads a file on Google Cloud.","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"name":"gcp-storage-bucket-object-typescript"}
{"runtime":"nodejs","name":"network-ts","description":"A minimal TypeScript Pulumi program"}
{"name": "equinix-metal-py-webserver", "description": "A simple server on Equinix Metal.", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"name":"ol-infrastructure-codejail-server","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","description":"Manage deployment of an codejail server"}
{"runtime":"go","name":"l2-invoke-options-depends-on"}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"decodingml","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program","name":"s3_bucket_cloudfront"}
{"description":"AWSX VPC - specifying multiple similar subnet types","runtime":"nodejs","name":"nodejs"}
{"description":"A program that replaces a resource component and its child with an alias.","name":"aliases_retype_remote_component_and_child","runtime":"go"}
{"runtime":"nodejs","name":"provider","description":"A program that creates some resources for testing providers."}
{"description":"Pulumi project for managing common policy definitions to be used across other projects.","name":"ol-infrastructure-aws-policies","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name": "webserver", "runtime": "nodejs", "description": "Basic example of an Azure web server accessible over HTTP."}
{"runtime":{"name":"nodejs","options":{"packagemanager":"npm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"A minimal TypeScript Pulumi program","name":"esc-workshop-eks-cluster"}
{"runtime":"nodejs","description":"A simple ecr demo.","name":"ecr"}
{"resources":{"queryPack":{"properties":{"location":"${rg.location}","resourceGroupName":"${rg.name}"},"type":"azure-native:operationalinsights:QueryPack"},"rg":{"type":"azure-native:resources:ResourceGroup"}},"description":"Tests if required containers are created even if no properties are set within them","name":"managed-environment","runtime":"yaml"}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"serverless_redshift"}
{"runtime":"nodejs","description":"Azure Messaging examples","name":"messaging"}
{"name":"testing-unit-java","description":"An example that applies unit testing to Java and AWS resources.","runtime":"java"}
{"name": "assume-role-v2", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Demonstrate use of AWS AssumeRole Functionality"}
{"name": "azure-cs-aci", "runtime": "dotnet", "description": "Creates Azure Container Instance with a public IP"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-typescript"}}},"description":"Kubernetes Operator","name":"helm-kubernetes-typescript","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"}}
{"description":"monitoring stack","runtime":"nodejs","name":"monitoring"}
{"runtime":"nodejs","description":"An http Azure Function App with multiple functions","name":"azure-http-multi"}
{"description":"Provision a DigitalOcean Kubernetes cluster and deploy to it","runtime":"nodejs","name":"<%= appName %>"}
{"runtime":"nodejs","name":"example-aws-profile-role","description":"EKS cluster example that uses an AWS named profile and role for credentials"}
{"config":{"k8sNamespace":{"type":"string","default":"default"},"numReplicas":{"default":"1","type":"integer"}},"outputs":{"serviceName":"${webserverservice.metadata.name}","deploymentName":"${webserverdeployment.metadata.name}"},"runtime":"yaml","resources":{"webserverconfig":{"properties":{"data":{"nginx.conf":"events { }\nhttp {\n  server {\n    listen 80;\n    root /usr/share/nginx/html;\n    index index.html index.htm index.nginx-debian.html\n    server_name _;\n    location / {\n      try_files $uri $uri/ =404;\n    }\n  }\n}\n"},"metadata":{"namespace":"${webserverns.metadata.name}"}},"type":"kubernetes:core/v1:ConfigMap"},"webserverservice":{"type":"kubernetes:core/v1:Service","properties":{"spec":{"ports":[{"port":"80","protocol":"TCP","targetPort":"80"}],"selector":"${appLabels}"},"metadata":{"namespace":"${webserverns.metadata.name}"}}},"webserverdeployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"spec":{"selector":{"matchLabels":"${appLabels}"},"replicas":"${numReplicas}","template":{"spec":{"volumes":[{"configMap":{"name":"${webserverconfig.metadata.name}","items":[{"key":"nginx.conf","path":"nginx.conf"}]},"name":"nginx-conf-volume"}],"containers":[{"name":"nginx","image":"nginx","volumeMounts":[{"name":"nginx-conf-volume","readOnly":"1","subPath":"nginx.conf","mountPath":"/etc/nginx/nginx.conf"}]}]},"metadata":{"labels":"${appLabels}"}}},"metadata":{"namespace":"${webserverns.metadata.name}"}}},"webserverns":{"type":"kubernetes:core/v1:Namespace","properties":{"metadata":{"name":"${k8sNamespace}"}}}},"description":"${DESCRIPTION}","variables":{"appLabels":{"app":"nginx"}},"name":"${PROJECT}","template":{"config":{"numReplicas":{"description":"The number of replicas to deploy","default":"1"},"k8sNamespace":{"default":"default","description":"The Kubernetes namespace to deploy into"}},"description":"A Pulumi YAML program to deploy a web application onto a Kubernetes cluster"}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ResolverRuleAssociation Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"code_runner","description":"A simple cloud function that can run some code","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"A minimal Kubernetes Go Pulumi program","runtime":"go","name":"02-eks-services","config":{"edaInfraStackRef":"dirien/01-eda-infrastructure/dev","kedaVersion":"2.12.0","daprDashboardVersion":"0.14.0","daprVersion":"1.11.3","infraStackRef":"dirien/00-aws-infrastructure/dev"}}
{"name":"ol-infrastructure-aws-iam","description":"Pulumi project for managing concrete IAM resources other projects.","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name": "myapp", "runtime": "go", "description": "Example GCP Docker Konlet VM"}
{"description":"An example of a static website hosted on Azure Blob Storage + Azure CDN.","runtime":"go","name":"azure-go-static-website"}
{"name":"logGroup","description":"Testing logs log group","runtime":"yaml","resources":{"provider":{"options":{"version":"0.95.0"},"type":"pulumi:providers:aws-native","defaultProvider":"1","properties":{"region":"us-west-2","skipCredentialsValidation":"1"}},"logGroup":{"type":"aws-native:logs:LogGroup","properties":{"retentionInDays":"90"}}}}
{"description":"A simple example of using the `CloudWatch` APIs, with manual OIDC auth.","runtime":"nodejs","name":"CloudWatchOidcManual"}
{"name":"pulumi-aws-ssm-dynamic","description":"ssm-dynamic integration test","runtime":"nodejs"}
{"name":"azure-app-service","resources":{"sqlPassword":{"properties":{"length":"16","special":"1"},"type":"random:RandomPassword"},"appservicegroup":{"type":"azure-native:resources:ResourceGroup"},"sqlServer":{"properties":{"version":"12.0","resourceGroupName":"${appservicegroup.name}","administratorLoginPassword":"${sqlPassword.result}","administratorLogin":"${sqlAdmin}"},"type":"azure-native:sql:Server"},"app":{"type":"azure-native:web:WebApp","properties":{"serverFarmId":"${appserviceplan}","resourceGroupName":"${appservicegroup.name}","siteConfig":{"appSettings":[{"value":"https://${sa.name}.blob.core.windows.net/${container.name}/${blob.name}?${blobAccessToken}","name":"WEBSITE_RUN_FROM_PACKAGE"},{"name":"APPINSIGHTS_INSTRUMENTATIONKEY","value":"${appInsights.instrumentationKey}"},{"name":"APPLICATIONINSIGHTS_CONNECTION_STRING","value":"InstrumentationKey=${appInsights.instrumentationKey}"},{"value":"~2","name":"ApplicationInsightsAgent_EXTENSION_VERSION"}],"connectionStrings":[{"type":"SQLAzure","name":"db","connectionString":"Server= tcp:${sqlServer.name}.database.windows.net;initial catalog=${db.name};userID=${sqlAdmin};password=${sqlPassword.result};Min Pool Size=0;Max Pool Size=30;Persist Security Info=true;"}]}}},"db":{"properties":{"serverName":"${sqlServer.name}","sku":{"name":"S0"},"resourceGroupName":"${appservicegroup.name}"},"type":"azure-native:sql:Database"},"sa":{"properties":{"resourceGroupName":"${appservicegroup.name}","sku":{"name":"Standard_LRS"},"kind":"StorageV2"},"type":"azure-native:storage:StorageAccount"},"blob":{"type":"azure-native:storage:Blob","properties":{"source":{"fn::fileArchive":"./www"},"containerName":"${container.name}","accountName":"${sa.name}","type":"Block","resourceGroupName":"${appservicegroup.name}"}},"container":{"properties":{"resourceGroupName":"${appservicegroup.name}","publicAccess":"None","accountName":"${sa.name}"},"type":"azure-native:storage:BlobContainer"},"appserviceplan":{"type":"azure-native:web:AppServicePlan","properties":{"resourceGroupName":"${appservicegroup.name}","sku":{"tier":"Basic","name":"B1"},"kind":"App"}},"appInsights":{"properties":{"applicationType":"web","resourceGroupName":"${appservicegroup.name}","kind":"web"},"type":"azure-native:insights:Component"}},"outputs":{"endpoint":"${app.defaultHostName}"},"config":{"sqlAdmin":{"type":"string","default":"pulumi"}},"runtime":"yaml","variables":{"blobAccessToken":{"fn::secret":{"fn::invoke":{"return":"serviceSasToken","function":"azure-native:storage:listStorageAccountServiceSAS","arguments":{"accountName":"${sa.name}","contentDisposition":"inline","canonicalizedResource":"/blob/${sa.name}/${container.name}","resource":"c","sharedAccessExpiryTime":"2030-01-01","protocols":"https","contentType":"application/json","contentEncoding":"deflate","cacheControl":"max-age=5","permissions":"r","sharedAccessStartTime":"2022-01-01","resourceGroupName":"${appservicegroup.name}"}}}}},"description":"A static website hosted on AWS S3"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","name":"custom_timeouts","description":"A program that instantiates a resource with a custom timeout"}
{"runtime":"python","description":"A Python Pulumi program that creates a Load Balancer with backend address pool created as a separate resource","name":"py-loadbalancer-subresource"}
{"name":"webserver","description":"Basic example of an AWS web server accessible over HTTP.","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS HostedPublicVirtualInterfaceAccepter TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","main":"../../foo","description":"A program with an entry point in a parent folder","name":"project_main_parent"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Aurora MySQL 1.x (MySQL 5.6)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"dotnet","description":"An example that applies unit testing to C# and Azure resources.","name":"test-unit-cs-mocks"}
{"description":"Use ECMAScript modules for a TS program.","name":"esm-ts","runtime":{"name":"nodejs","options":{"nodeargs":"--loader ts-node/esm --no-warnings"}}}
{"name":"elasticache-replication-group","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-yaml"}}},"resources":{"replicationGroup":{"type":"aws:elasticache:ReplicationGroup","properties":{"port":"6379","description":"Example Replication Group","numCacheClusters":"1","atRestEncryptionEnabled":"1","nodeType":"cache.m4.large"}}},"outputs":{"replicationGroupArn":"${replicationGroup.arn}"},"runtime":"yaml"}
{"description":"An example program to test automatic naming conventions","name":"aws-native-naming-conventions","runtime":"nodejs"}
{"variables":{"serviceAcctEmailSuffix":"@${gcp:project}.iam.gserviceaccount.com","serviceAcctDisplayName":"pulumi-tutorial-service-account","serviceAcctEmailPrefix":"pulumi-tutorial-service-accoun"},"runtime":"yaml","name":"gcp-import-service-account-yaml","resources":{"imported-tutorial-service-account":{"type":"gcp:serviceaccount:Account","options":{"import":"${serviceAcctEmailPrefix}${serviceAcctEmailSuffix}"},"properties":{"accountId":"${serviceAcctEmailPrefix}","project":"${gcp:project}","displayName":"${serviceAcctDisplayName}"}}},"description":"An example that deploys the configuration necessary to import a Service Account resource in Google Cloud."}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-resource-parent-inheritance"}
{"name":"k8s-aws-cluster-svcs","runtime":"nodejs","description":"Deploys common EKS cluster services."}
{"name":"loadbalancer-digitalocean","runtime":"nodejs","description":"A simple LoadBalancer on DigitalOcean."}
{"name":"k8s-aws-identity","runtime":"nodejs","description":"Creates an identity stack for an AWS EKS cluster and its users."}
{"name": "cscontainerapp", "runtime": "dotnet", "description": "A minimal Azure Native C# Pulumi program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Redis Cluster Mode Enabled", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A simple Python program that should be pylint clean.","name":"pylint","runtime":"python"}
{"name":"python_await_error_handling","description":"A python program to test if non-exported outputs are awaited","runtime":"python"}
{"name":"ensure-cni-upgrade","runtime":"nodejs","description":"EKS cluster example to ensure CNI is upgraded when the base manifest changes"}
{"name":"kubernetes-csi-driver-javascript","description":"Example on how to deploy the Pulumi ESC CSI Provider","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-javascript"}}},"runtime":{"options":{"typescript":"","packagemanager":"npm"},"name":"nodejs"}}
{"name":"l2-resource-parent-inheritance","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getPrefixList C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"aws-secrets-manager","description":"Demo showing how to set up AWS secrets manager"}
{"description":"A program that ensures we cannot delete protected resources.","name":"protect_resources","runtime":"nodejs"}
{"description":"A minimal AWS Go Pulumi program","name":"existing_rds","runtime":"go"}
{"name":"skipawait","resources":{"slow-pod":{"type":"kubernetes:core/v1:Pod","properties":{"spec":{"containers":[{"name":"busybox","command":["sleep","infinity"],"image":"busybox","readinessProbe":{"exec":{"command":["ls"]},"periodSeconds":"10","initialDelaySeconds":"600"}}]},"metadata":{"annotations":{"foo":"bar","pulumi.com/skipAwait":"true"}}}},"stuck-namespace":{"properties":{"metadata":{"finalizers":["pulumi.com/stuck"],"annotations":{"pulumi.com/skipAwait":"true"}}},"type":"kubernetes:core/v1:Namespace"}},"runtime":"yaml","description":"Tests the skipAwait annotation:\n- A slow-to-start deployment tests create/update/read.\n- Delete is tested by a namespace with a stuck finalizer.\n"}
{"name":"pulumi-exoscale","description":"A Exoscale demo program using CUE and YAML","runtime":{"options":{"compiler":"cue export"},"name":"yaml"}}
{"name": "test-aws-1655-bucket", "runtime": "yaml", "description": "Don't specify any default tags (should be empty)\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws"}, "res": {"type": "aws:s3:BucketV2", "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS AvailabilityZoneGroup Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","name":"iot_iothub","resources":{"db":{"type":"azure:cosmosdb:Account","properties":{"resourceGroupName":"${rg.name}","automaticFailoverEnabled":"1","offerType":"Standard","consistencyPolicy":{"maxStalenessPrefix":"100000","maxIntervalInSeconds":"300","consistencyLevel":"BoundedStaleness"},"kind":"MongoDB","capabilities":[{"name":"EnableAggregationPipeline"},{"name":"mongoEnableDocLevelTTL"},{"name":"MongoDBv3.4"},{"name":"EnableMongo"}],"geoLocations":[{"failoverPriority":"1","location":"eastus"},{"failoverPriority":"0","location":"westus"}],"location":"${rg.location}"}},"rg":{"properties":{"location":"westus"},"type":"azure:core:ResourceGroup"}}}
{"name": "pulumi_eks_py", "runtime": "python", "description": "Pulumi EKS Python"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"An example that creates a new VPC with a custom security group.","name":"awsx-vpc-security-groups-python"}
{"runtime":"nodejs","description":"A simple example of using the `Topic` APIs.","name":"topic"}
{"name":"secretcapture","runtime":"nodejs","description":"Test capturing secrets in callback functions."}
{"runtime":"go","name":"pulumi-doppler","description":"A minimal DigitalOcean Go Pulumi program"}
{"runtime":"python","description":"A program that uses the DeletedWith resource option","name":"deleted_with_py"}
{"name":"aws-ts-containers","runtime":"nodejs","description":"NGINX container example","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Alias Name", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Used to create the resources needed for insights.","runtime":"nodejs","name":"selfhosted-25-insights"}
{"runtime":"dotnet","description":"Creates Azure App Service serving a static file","name":"appservice-cs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "DNS Validation with Route 53", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","name":"simple"}
{"runtime":"yaml","resources":{"exampleDatabase":{"type":"azure:mssql:Database","properties":{"serverId":"${examplesql.id}","tags":{"environment":"production"}}},"exampleAccount":{"type":"azure:storage:Account","properties":{"location":"${exampleResourceGroup.location}","resourceGroupName":"${exampleResourceGroup.name}","accountTier":"Standard","accountReplicationType":"LRS"}},"random":{"type":"random:RandomString","properties":{"overrideSpecial":"-","special":"1","upper":"","length":"8"}},"examplesql":{"properties":{"tags":{"environment":"production"},"resourceGroupName":"${exampleResourceGroup.name}","location":"${exampleResourceGroup.location}","administratorLoginPassword":"4-v3ry-53cr37-p455w0rd","version":"12.0","administratorLogin":"4dm1n157r470r"},"type":"azure:mssql:Server"},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"West US"}},"exampleFwRule":{"type":"azure:mssql:FirewallRule","properties":{"startIpAddress":"10.0.17.62","serverId":"${examplesql.id}","endIpAddress":"10.0.17.62"}}},"name":"sql"}
{"template":{"config":{"sshPubKey":{"description":"Contents of the public key for SSH access to cluster nodes"},"numWorkerNodes":{"default":"3","description":"Number of worker nodes in the cluster"},"mgmtGroupId":{"description":"The object ID (from az ad group list) of a group to make cluster admins"},"nodeVmSize":{"description":"VM size to use for worker nodes in the cluster","default":"Standard_DS2_v2"},"prefixForDns":{"description":"DNS prefix for the cluster","default":"pulumi"},"kubernetesVersion":{"description":"Kubernetes version to deploy in the cluster","default":"1.26.3"},"azure-native:location":{"description":"The Azure location (region) in which to create the cluster","default":"westus2"}},"description":"A C# program to deploy a Kubernetes cluster on Azure"},"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"dotnet"}
{"name": "aws-classic-py-dynamodb", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name":"ecs-dotnet","runtime":"dotnet","description":"A minimal C# Pulumi program"}
{"name":"azure-ts-cosmosdb-logicapp","runtime":"nodejs","description":"An example of creating a CosmosDB container through a Azure's Cosmos SDK and deploying a Logic App and an API Connection"}
{"description":"An example that creates a Lambda function and Step Function to demonstrate the JSON stringify helper","name":"aws-lambda-stepfunctions-jsonhelper-typescript","runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}},"aws-native:region":"us-west-2"}}
{"runtime":"dotnet","name":"awsx-elb-vpc-csharp","description":"An example that deploys an ApplicationLoadBalancer in a VPC."}
{"name":"ts-nlb-simple","description":"Minimal Network LoadBalancer Typescript component test","runtime":"nodejs"}
{"runtime":"dotnet","template":{"config":{"k8sNamespace":{"default":"nginx-ingress","description":"The Kubernetes namespace to deploy into"}},"description":"A C# program to deploy a Helm chart onto a Kubernetes cluster"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"runtime":"yaml","name":"l2-explicit-provider"}
{"outputs":{},"variables":{},"name":"myymltest","description":"A minimal Pulumi YAML program","runtime":"yaml","resources":{"badResource":null}}
{"name":"l2-resource-alpha","runtime":"nodejs"}
{"description":"An example that deploys an ApplicationLoadBalancer listening on a private subnet.","name":"awsx-elb-private-subnet-java","runtime":"java"}
{"variables":{"assumeRole":{"fn::invoke":{"Function":"aws:iam:getPolicyDocument","Arguments":{"statements":[{"principals":[{"type":"Service","identifiers":["ec2.amazonaws.com"]}],"actions":["sts:AssumeRole"],"effect":"Allow"}]}}}},"resources":{"test_profile":{"type":"aws:iam:InstanceProfile","properties":{"name":"test_profile","role":"${role.name}"}},"role":{"type":"aws:iam:Role","properties":{"path":"/","name":"test_role","assumeRolePolicy":"${assumeRole.json}"}}},"runtime":"yaml","name":"aws_iam_instanceProfile_InstanceProfile_1"}
{"description":"A simple example that uploads a file to an S3 bucket using a Lambda function","runtime":"nodejs","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"name":"s3-lambda-pulumi"}
{"name":"l2-parameterized-resource","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"description":"A minimal TypeScript Pulumi program","name":"docker.ts","runtime":"nodejs"}
{"name":"crd_java","description":"A minimal Kubernetes Java Pulumi program to test the creation of CRDs","runtime":"java"}
{"runtime":"yaml","name":"muxedbasicprogram","resources":{"randomNumber":{"properties":{"min":"2","max":"2"},"type":"muxedrandom:RandomInteger"},"pseudoRandomNumber":{"properties":{"suggestion":"${randomNumber.result}"},"type":"muxedrandom:RandomHumanNumber"}}}
{"description":"Demonstrate use of AWS AssumeRole Functionality","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"aws-py-assume-role"}
{"name": "review", "runtime": "nodejs", "description": "Review environment for PR"}
{"runtime":"nodejs","name":"l2-provider-grpc-config-schema-secret"}
{"name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","main":"pulumi/","runtime":"nodejs"}
{"description":"A minimal Talos program in Pulumi YAML","runtime":"go","name":"talos"}
{"description":"Example of using extra user-specific security groups.","runtime":"nodejs","name":"extra-sg"}
{"runtime":"nodejs","description":"Tests the option to render YAML rather than create k8s resources on a cluster.","name":"render-yaml-tests"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal Azure Native & Databricks Python Pulumi program","name":"pulumi-databricks"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-csharp"}}},"runtime":"dotnet","description":"Kubernetes Operator","name":"helm-kubernetes-csharp"}
{"runtime":"yaml","description":"","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/7c3b4fd8-6d81-4820-9953-a863d34d7c6e.zip"}}},"resources":{"randomShuffle":{"properties":{"inputs":["apple","banana","cherry","date","fig","grape"]},"type":"random:RandomShuffle"}},"name":"index_randomshuffle0QgUqUNkcFHv"}
{"runtime":"yaml","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-yaml"}}},"description":"Regress pulumi/pulumi-aws#2796","name":"regress-2796","resources":{"object1":{"type":"aws:s3:BucketObject","properties":{"content":"Hello world","key":"hello.txt","bucket":"${bucket1.bucket}"}},"bucket1":{"type":"aws:s3:BucketV2"}}}
{"name":"l1-empty","runtime":"mock"}
{"description":"A program that configures a Provider from inside a Component.","name":"construct_component_configure_provider","runtime":"go"}
{"name":"l2-invoke-variants","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name": "simple-vpc", "runtime": "nodejs", "description": "Provisions a simple VPC"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l2-resource-parent-inheritance"}
{"description":"An example that deploys an S3 bucket, S3 bucket objects, and a Pulumi random resource.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"runtime":{"options":{"virtualenv":"venv","toolchain":"pip"},"name":"python"},"name":"aws-s3bucket-s3objects-random-python"}
{"name": "pulumi-farmer", "runtime": "dotnet", "description": "F# Pulumi program that deploys a minimal Farmer template"}
{"name":"test","resources":{"provider":{"properties":{"project":"${gcp:project}"},"type":"pulumi:providers:gcp","options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"}},"tested-resource":{"properties":{"replication":{"userManaged":{"replicas":[{"location":"us-central1"},{"location":"us-east1"}]}},"secretId":"secret","labels":{"label":"my-label"}},"type":"gcp:secretmanager:Secret","options":{"provider":"${provider}"}}},"runtime":{"name":"yaml"}}
{"description":"A example that deploys the resources for a simple web server on Google Cloud.","runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-go"}}},"name":"gcp-simple-webserver-go"}
{"description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","main":"pulumi/","runtime":"nodejs","name":"pinterestClone"}
{"runtime":"go","name":"dns-go","description":"A minimal AWS Go Pulumi program"}
{"runtime":"nodejs","description":"EKS cluster example that uses an AWS named profile for credentials","name":"example-aws-profile"}
{"name":"aws-ts-stackreference-company","runtime":"nodejs","description":"An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources","template":{"description":"A minimal AWS TypeScript Pulumi program","config":{"companyName":{"description":"The company name to use"}}}}
{"runtime":"nodejs","description":"LoadBalancer Lambda attach test","name":"ts-lb-attach-lambda"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Broker TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"kinesis integration test","name":"pulumi-kinesis","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Active Directory Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"go","description":"A simple Go program that uses configuration.","name":"config_basic_go"}
{"resources":{"customRole":{"type":"gcp:projects:IAMCustomRole","properties":{"permissions":["resourcemanager.projects.get"],"title":"CustomRole","roleId":"customRoleId"}},"serviceAccount":{"properties":{"accountId":"${random-account-id.result}"},"type":"gcp:serviceaccount:Account"},"random-account-id":{"type":"random:RandomString","properties":{"number":"","upper":"","length":"10","special":""}},"serviceAccountIAMMember":{"properties":{"role":"${customRole.id}","serviceAccountId":"${serviceAccount.name}","member":"serviceAccount:${serviceAccount.email}"},"type":"gcp:serviceaccount:IAMMember"},"projectIAMMember":{"type":"gcp:projects:IAMMember","properties":{"project":"${gcp:project}","role":"${customRole.id}","member":"serviceAccount:${serviceAccount.email}"}}},"name":"iam-member","runtime":"yaml","description":"A minimal Pulumi YAML program"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS ConnectionAssociation Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"get_resource","runtime":"python","description":"A simple Python program that gets an existing resource from the engine."}
{"name":"deserialize","runtime":"nodejs","description":"A test program to test how special objects are serialized/deserialized."}
{"name":"deleted_with_go","runtime":"go","description":"A program that uses the DeletedWith resource option"}
{"description":"A program that ensures invoking 'pulumi:pulumi:getResource' returns resource refs","name":"resource_refs_get_resource_go","runtime":"go"}
{"outputs":{"out-dockerfile":"${demo-image.dockerfile}","imageName":"${demo-image.imageName}"},"resources":{"demo-image":{"type":"docker:Image","options":{"version":"v4.0.0"},"properties":{"skipPush":"1","imageName":"pulumibot/test-image:tag"}}},"name":"dockerfile-default-context","runtime":"yaml"}
{"name":"cancel","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A simple Python Pulumi program that sleeps for 30 seconds so we can test cancellation signals"}
{"name":"s3-py-it","description":"A Integration Testing of s3 use case","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name":"ol-infrastructure-opensearch","description":"Deploy and manage OpenSearch/ElasticSearch clusters in the AWS managed service","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name":"slss-tps","description":"Copy and zip TPS reports, using AWS Lambda, from one S3 Bucket to another.","runtime":"nodejs"}
{"name": "after", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"secret-outputs"}
{"runtime":"python","template":{"config":{"sitePath":{"description":"The path to the folder containing the website","default":"./www"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"azure-native:location":{"default":"WestUS","description":"The Azure region to deploy into"},"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"appPath":{"description":"The path to the folder containing the functions to be deployed","default":"./app"}},"description":"A Python program to deploy a serverless application on Azure"},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"description":"An example that deploys a VPC with an internet gateway, public subnet, route table, and security group, and launches an Amazon Linux EC2 instance with NGINX.","name":"aws-ec2-vpc-resources-yaml","resources":{"myRouteTableAssociation":{"type":"aws:ec2:RouteTableAssociation","properties":{"routeTableId":"${myRouteTable.id}","subnetId":"${mySubnet.id}"}},"mySubnet":{"type":"aws:ec2:Subnet","properties":{"mapPublicIpOnLaunch":"1","vpcId":"${myVpc.id}","cidrBlock":"10.0.1.0/24"}},"myInstance":{"properties":{"securityGroups":["${mySecurityGroup.id}"],"instanceType":"t2.micro","subnetId":"${mySubnet.id}","userData":"#!/bin/bash\nsudo yum update -y\nsudo yum upgrade -y\nsudo amazon-linux-extras install nginx1 -y\nsudo systemctl enable nginx\nsudo systemctl start nginx;\n","ami":"${myAmi.id}"},"type":"aws:ec2:Instance"},"myRouteTable":{"properties":{"routes":[{"gatewayId":"${myInternetGateway.id}","cidrBlock":"0.0.0.0/0"}],"vpcId":"${myVpc.id}"},"type":"aws:ec2:RouteTable"},"myVpc":{"type":"aws:ec2:Vpc","properties":{"cidrBlock":"10.0.0.0/16"}},"mySecurityGroup":{"type":"aws:ec2:SecurityGroup","properties":{"vpcId":"${myVpc.id}","description":"Allow HTTP inbound traffic","egress":[{"cidrBlocks":["0.0.0.0/0"],"protocol":"-1","toPort":"0","fromPort":"0"}],"ingress":[{"fromPort":"80","cidrBlocks":["0.0.0.0/0"],"toPort":"80","protocol":"tcp"}]}},"myInternetGateway":{"properties":{"vpcId":"${myVpc.id}"},"type":"aws:ec2:InternetGateway"}},"runtime":"yaml","outputs":{"publicUrl":"http://${myInstance.publicIp}"},"variables":{"myAmi":{"fn::invoke":{"function":"aws:ec2:getAmi","arguments":{"mostRecent":"1","owners":["amazon"],"filters":[{"values":["Amazon Linux 2 *"],"name":"description"}]}}}}}
{"backend":{"url":"file://~"},"name":"concurrent-config","runtime":"nodejs"}
{"name":"azure-native-storage-account-blob-csharp","description":"An example that deploys a blob into a blob storage account on Azure.","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-csharp"}}},"runtime":"dotnet"}
{"description":"unsupported error integration test","name":"pulumi-aws-unsupported","runtime":"nodejs"}
{"name": "stepfunctions-py", "description": "Basic example of AWS Step Functions in Python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","description":"A simple Python program that uses dynamic providers with custom resource type name.","name":"dynamic_resource_type_name_py"}
{"runtime":"python","description":"Create and manage resources for powering the Open edX application","name":"ol-infrastructure-edxapp-application","backend":{"url":"s3://mitol-pulumi-state/"}}
{"runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program","name":"step1"}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-resource-secret"}
{"name":"adopt_component_child","runtime":"go","description":"A program that adopts a component child with an alias."}
{"description":"Autonaming configuration example","config":{"pulumi:autonaming":{"value":{"providers":{"azure-native":{"resources":{"azure-native:storage:StorageAccount":{"pattern":"${project}${name}${alphanum(6)}"}},"pattern":"${project}-${name}-${alphanum(6)}"}}}}},"resources":{"rg":{"type":"azure-native:resources:ResourceGroup"},"sa":{"properties":{"kind":"StorageV2","resourceGroupName":"${rg.name}","sku":{"name":"Standard_LRS"}},"type":"azure-native:storage:StorageAccount"}},"outputs":{"saname":"${sa.name}","rgname":"${rg.name}"},"runtime":"yaml","name":"autonaming"}
{"name":"s3state-go","description":"An example demonstrating the Terraform Remote State resource in Go","runtime":"go"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example that deploys S3 bucket, metric, notification, object, and policy resources.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"name":"aws-s3-bucket-resources-python"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Non-VPC Connection", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","resources":{"importedRole":{"type":"aws:iam:Role","name":"imported_role","properties":{"assumeRolePolicy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Sid":null,"Effect":"Allow","Action":"sts:AssumeRole","Principal":{"Service":"lambda.amazonaws.com"}}]}},"description":"Allows Lambda functions to call AWS services on your behalf.","name":"pulumi-tutorial-iam-role"},"options":{"import":"pulumi-tutorial-iam-role"}}},"description":"An example that deploys the resource definition for an imported IAM role on AWS.","name":"aws-import-iac-iam-role-yaml"}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-provider-grpc-config-schema-secret"}
{"runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"},"description":"Pulumi project for managing Vault PKI","name":"ol-infrastructure-vault-pki"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Route53 Record", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-vpc-cidr-java","runtime":"java","description":"An example that creates a new VPC and configuring a custom CIDR block."}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-resource-simple"}
{"name": "sadsadas", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"runtime":"nodejs","name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","main":"pulumi/"}
{"name":"Estimation-Tool-Infrastructure","runtime":"dotnet","description":"Estimation Tool is advanced tool to optimize estimation process in enterprises"}
{"runtime":"nodejs","description":"A program that constructs remote component resources.","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"name":"construct_component_nodejs"}
{"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-typescript"}}},"description":"An example that creates a Kubernetes Deployment","name":"kubernetes-deployments-typescript"}
{"description":"A program that replaces a resource with a new name and alias.","runtime":"go","name":"aliases_retype_component"}
{"description":"A minimal Python Pulumi program","runtime":"python","name":"cbp-docker-py"}
{"description":"An example that deploys an ApplicationLoadBalancer listening on port 80.","name":"awsx-elb-web-listener-javascript","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"description":"EKS cluster example that imports and modifies the default EKS cluster security group","runtime":"nodejs","name":"modify-default-eks-sg"}
{"description":"An example that deploys a Deployment and Service for Minikube on Kubernetes.","runtime":"go","name":"k8s-deployment-service-for-minikube-go","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-go"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Conditional Trigger with Crawler Condition", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","outputs":{"connectionString":"${account.primaryConnectionString}"},"template":{"config":{"azure:location":{"description":"The Azure location to use","default":"WestUS"}},"description":"A minimal Pulumi YAML program with the classic Azure provider"},"resources":{"resourceGroup":{"type":"azure:core:ResourceGroup"},"account":{"type":"azure:storage:Account","properties":{"accountTier":"Standard","resourceGroupName":"${resourceGroup.name}","accountReplicationType":"LRS"}}},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name":"cr_dotnet_kubernetes","runtime":"dotnet","description":"An example of CRD and CR usage."}
{"name":"eks.ts","description":"Create an EKS cluster","runtime":"nodejs"}
{"runtime":"nodejs","name":"apigateway-apikeysource","description":"Testing the `akikeysource for `API`."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getFileSystem Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"description":"Basic example of an AWS web server accessible over HTTP","runtime":"nodejs","name":"webserver"}
{"runtime":{"name":"nodejs","options":{"nodeargs":"--loader ts-node/esm --no-warnings"}},"description":"Use ECMAScript modules for a TS program.","name":"esm-ts-default-export"}
{"description":"An example that deploys an API Gateway REST API with an Amazon Cognito authorizer.","name":"awsx-apigateway-auth-cognito-csharp","runtime":"dotnet"}
{"runtime":"go","description":"A minimal AWS Go Pulumi program","name":"pulumi-hashnode-aws-amplify-hackathon"}
{"resources":{"rg":{"type":"azure:core:ResourceGroup","properties":{"location":"West Europe"}},"storageAccount":{"type":"azure:storage:Account","properties":{"location":"${rg.location}","accountTier":"Standard","accountReplicationType":"LRS","resourceGroupName":"${rg.name}"}},"storageContainer":{"properties":{"storageAccountName":"${storageAccount.name}","containerAccessType":"private"},"type":"azure:storage:Container"},"kafkaCluster":{"type":"azure:hdinsight:KafkaCluster","properties":{"gateway":{"password":"Password123!","username":"acctestusrgw"},"resourceGroupName":"${rg.name}","componentVersion":{"kafka":"2.1"},"clusterVersion":"4.0","tier":"standard","storageAccounts":[{"storageContainerId":"${storageContainer.id}","isDefault":"1","storageAccountKey":"${storageAccount.primaryAccessKey}"}],"roles":{"zookeeperNode":{"vmSize":"Standard_D3_V2","username":"acctestusrvm","password":"AccTestvdSC4daf986!"},"workerNode":{"targetInstanceCount":"3","password":"AccTestvdSC4daf986!","numberOfDisksPerNode":"3","username":"acctestusrvm","vmSize":"Standard_D3_V2"},"headNode":{"password":"AccTestvdSC4daf986!","username":"acctestusrvm","vmSize":"Standard_D3_V2"}},"location":"${rg.location}"}}},"name":"hdinsight","runtime":"yaml"}
{"runtime":"nodejs","description":"An example that creates a new VPC and configuring a custom CIDR block.","name":"awsx-vpc-cidr-typescript"}
{"name":"pulumi-cloud-gitlab-integration","runtime":"nodejs","description":"A minimal TypeScript Pulumi program"}
{"outputs":{"faasdIP":"${faasdPublicIP.ipAddress}"},"runtime":"yaml","description":"A minimal Azure Native Pulumi YAML program","name":"pulumi-faasd-arm","resources":{"faasd":{"properties":{"priority":"Spot","networkProfile":{"networkInterfaces":[{"id":"${faasdNic.id}","primary":"1"}]},"evictionPolicy":"Deallocate","storageProfile":{"imageReference":{"sku":"20_04-lts","publisher":"Canonical","version":"latest","offer":"0001-com-ubuntu-server-arm-preview-focal"},"osDisk":{"managedDisk":{"storageAccountType":"Standard_LRS"},"name":"faasd-osdisk","createOption":"FromImage","diskSizeGB":"30"}},"userData":"${cloudConfig}","resourceGroupName":"${faasdRg.name}","vmName":"faasd","hardwareProfile":{"vmSize":"Standard_D2pls_v5"},"osProfile":{"linuxConfiguration":{"disablePasswordAuthentication":"1","ssh":{"publicKeys":[{"path":"/home/${adminUsername}/.ssh/authorized_keys","keyData":"${sshPublicKey}"}]}},"computerName":"faasd","adminUsername":"${adminUsername}"}},"type":"azure-native:compute:VirtualMachine"},"faasdNic":{"properties":{"ipConfigurations":[{"subnet":{"id":"${faasdVnet.subnets[0].id}"},"publicIPAddress":{"id":"${faasdPublicIP.id}"},"name":"ipconfig1"}],"resourceGroupName":"${faasdRg.name}","enableAcceleratedNetworking":"1","networkInterfaceName":"faasd_nic","networkSecurityGroup":{"id":"${faasdSG.id}"}},"type":"azure-native:network:NetworkInterface"},"faasdRg":{"type":"azure-native:resources:ResourceGroup","properties":{"tags":{"name":"faasd-arm-demo"},"resourceGroupName":"faasd_rg"}},"faasdVnet":{"type":"azure-native:network:VirtualNetwork","properties":{"resourceGroupName":"${faasdRg.name}","addressSpace":{"addressPrefixes":["10.0.0.0/16"]},"virtualNetworkName":"faasd_vnet","subnets":[{"name":"faasd_snet","addressPrefix":"10.0.0.0/24"}]}},"faasdPublicIP":{"properties":{"publicIpAddressName":"faasd_pip","publicIPAllocationMethod":"Static","sku":{"name":"Basic"},"publicIPAddressVersion":"ipv4","resourceGroupName":"${faasdRg.name}"},"type":"azure-native:network:PublicIPAddress"},"faasdSG":{"properties":{"resourceGroupName":"${faasdRg.name}","networkSecurityGroupName":"faasd_sg","securityRules":[{"destinationPortRange":"22","protocol":"Tcp","destinationAddressPrefix":"*","sourcePortRange":"*","priority":"130","access":"Allow","direction":"Inbound","name":"ssh_in","sourceAddressPrefix":"*"},{"protocol":"Tcp","destinationPortRange":"80","access":"Allow","priority":"131","sourcePortRange":"*","destinationAddressPrefix":"*","direction":"Inbound","name":"80_in","sourceAddressPrefix":"*"},{"destinationPortRange":"8080","protocol":"Tcp","sourcePortRange":"*","priority":"132","destinationAddressPrefix":"*","access":"Allow","direction":"Inbound","name":"8080_in","sourceAddressPrefix":"*"},{"access":"Allow","priority":"133","sourcePortRange":"*","destinationAddressPrefix":"*","sourceAddressPrefix":"*","name":"443_in","direction":"Inbound","protocol":"Tcp","destinationPortRange":"443"}]},"type":"azure-native:network:NetworkSecurityGroup"}},"variables":{"cloudConfig":{"Fn::ToBase64":"#cloud-config\n  users:\n    - default\n  package_update: true\n  packages:\n    - apt-transport-https\n    - ca-certificates\n    - curl\n    - gnupg-agent\n    - software-properties-common\n    - runc\n    - debian-keyring \n    - debian-archive-keyring\n    - apt-transport-https\n  # Enable ipv4 forwarding, required on CIS hardened machines\n  write_files:\n    - path: /etc/sysctl.d/enabled_ipv4_forwarding.conf\n      content: |\n        net.ipv4.conf.all.forwarding=1\n    - path: /tmp/Caddyfile\n      content: |\n        {\n          acme_ca https://acme-staging-v02.api.letsencrypt.org/directory\n        }\n        faasd-ui.ediri.online {\n          reverse_proxy http://127.0.0.1:8080\n        }\n  runcmd:\n    - curl -sLSf https://github.com/containerd/containerd/releases/download/v1.6.4/containerd-1.6.4-linux-arm64.tar.gz > /tmp/containerd.tar.gz && tar -xvf /tmp/containerd.tar.gz -C /usr/local/bin/ --strip-components=1\n    - curl -SLfs https://raw.githubusercontent.com/containerd/containerd/v1.6.4/containerd.service | tee /etc/systemd/system/containerd.service\n    - systemctl daemon-reload && systemctl start containerd\n    - systemctl enable containerd\n    - mkdir -p /opt/cni/bin\n    - curl -sSL https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-arm64-v1.1.1.tgz | tar -xz -C /opt/cni/bin\n    - mkdir -p /go/src/github.com/openfaas/\n    - cd /go/src/github.com/openfaas/ && git clone --depth 1 --branch 0.16.1 https://github.com/openfaas/faasd\n    - curl -fSLs \"https://github.com/openfaas/faasd/releases/download/0.16.1/faasd-arm64\" --output \"/usr/local/bin/faasd\" && chmod a+x \"/usr/local/bin/faasd\"\n    - cd /go/src/github.com/openfaas/faasd/ && /usr/local/bin/faasd install\n    - systemctl status -l containerd --no-pager\n    - journalctl -u faasd-provider --no-pager\n    - systemctl status -l faasd-provider --no-pager\n    - systemctl status -l faasd --no-pager\n    - curl -sSLf https://cli.openfaas.com | sh\n    - sleep 60 && journalctl -u faasd --no-pager\n    - cat /var/lib/faasd/secrets/basic-auth-password | /usr/local/bin/faas-cli login --password-stdin\n    - curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg\n    - curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list\n    - apt update\n    - apt install caddy\n    - cp /tmp/Caddyfile /etc/caddy/Caddyfile\n    - systemctl restart caddy\n"},"adminUsername":"ubuntu","sshPublicKey":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDIBq1WoJOr81nYCdrbkmcGtdVtkshDU36IKpNMg3MBi4dk408ITluFCYykZcVCqbJWCRvwr9iOjKajtMJpErHevUdpUD/ViOyW68KgwZrjVQLfp6VpAGzbdyFcBzM1jqOjSBhdPRCJfA5jKZJPncVWDsL/c0IarI1+lYds3Mf5OARd+46evm4aPOPcSHRnIDm4ylY2Wo/Lsd+EHCt9Ya7XpB3u15uaagnI/5VM5Oy4vSoDl6tU8cONrT+ofEdCojVR79SJFDBr+GdM5dQxgz4CngQLrX+QcTAAlyvvlthCwLIH44+/orbvAgyA0Q0Jcw56sWI1M59F2adKhiJNCwx++u1GGfVKGvrFH7CjiPVTFUSAmUF+GdCwzoy9GpWBP/eXiKudi5OcbVA4Ze4Isy8gAwUAINrjbK52HPh54Euk1JvxkTYUx2zBKaw3YlSulCu7xsRpVULneiOjUWR/Sp4CQK30RtFtWA0drUlO/OtRm23rvxfsVb3Qhcw604bztBM= dirien@SIT-SMBP1766"}}
{"runtime":"yaml","description":"Basic example of an AWS web server accessible over HTTP","name":"webserver-json"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-substructure-consul","runtime":"python","description":"Management of shared resources for Consul clusters such as prepared queries"}
{"name":"nodejs-oom","runtime":{"options":{"nodeargs":"--max-old-space-size=2048"},"name":"nodejs"}}
{"template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"runtime":"scala","description":"An AWS Secrets Manager example","name":"aws-secrets-manager"}
{"runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program","name":"pulumi-k8s-test"}
{"outputs":{"actual":"${res.tags}"},"runtime":"yaml","resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}},"res":{"properties":{"tags":{"fizz":"buzz","foo":"bar"}},"options":{"provider":"${aws-provider}"},"type":"aws:s3:Bucket"}},"description":"Shadow the default tag with a resource specific tag\n","name":"test-aws-1655-legacy"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-odl-video-service-env","description":"Manage deployment of an odl-video-service environment","runtime":"python"}
{"runtime":"yaml","outputs":{"imageName":"pulumi/pulumi:latest"},"name":"stackreference-producer"}
{"runtime":"nodejs","name":"duplicate_urns","description":"A program that tests the engine's ability to handle duplicate URNs"}
{"description":"An example that deploys a storage bucket and uploads a file on Google Cloud.","resources":{"bucketViewerRoleAssignment":{"type":"gcp:storage:BucketIAMMember","properties":{"member":"allAuthenticatedUsers","bucket":"${bucket.name}","role":"${role.name}"}},"bucketObject":{"properties":{"bucket":"${bucketName}","contentType":"text/plain","content":"My bucket role name is: ${roleName}"},"type":"gcp:storage:BucketObject"},"role":{"type":"gcp:projects:IAMCustomRole","properties":{"permissions":["storage.objects.get","storage.objects.list"],"title":"Bucket Viewer Role","stage":"GA","roleId":"bucketViewerRole"}},"bucket":{"properties":{"location":"US","forceDestroy":"1"},"type":"gcp:storage:Bucket"}},"name":"gcp-storage-bucket-object-yaml","variables":{"roleName":"${role.name}","bucketName":"${bucket.name}"},"outputs":{"roleName":"${role.name}","bucketName":"${bucket.name}"},"runtime":"yaml"}
{"name":"workshop-redis-cloud","runtime":"nodejs","description":"A minimal TypeScript Pulumi program"}
{"name": "quickstart", "description": "A minimal Google Cloud Go Pulumi program", "runtime": "go"}
{"name":"l2-target-up-with-new-dependency","runtime":"yaml"}
{"runtime":"go","template":{"description":"A minimal Go Pulumi program"},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name":"gcp-go-functions-raw","runtime":"go","description":"A minimal Go Pulumi program using Google Cloud Functions."}
{"description":"Google Cloud Run example","name":"gcp-cloudrun","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:region":{"description":"The Google Cloud region"}}},"runtime":"nodejs"}
{"name": "project_factory", "runtime": {"name": "python"}, "description": "Pulumi GCP project factory"}
{"runtime":"nodejs","description":"Demand-management for offices","name":"office-booker"}
{"name":"test","runtime":{"name":"yaml"},"resources":{"ins":{"type":"gcp:compute:Instance","properties":{"bootDisk":{"initializeParams":{"image":"debian-cloud/debian-11"}},"zone":"us-central1-b","machineType":"g1-small","networkInterfaces":[{"network":"default","accessConfigs":[{}]}]}},"provider":{"properties":{"project":"${gcp:project}"},"options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]},"type":"pulumi:providers:gcp"},"prod":{"properties":{"dnsName":"prod.${pulumi.stack}.com."},"type":"gcp:dns:ManagedZone"},"tested-resource":{"type":"gcp:dns:RecordSet","options":{"provider":"${provider}"},"properties":{"ttl":"300","rrdatas":["${ins.networkInterfaces[0].accessConfigs[0].natIp}"],"name":"frontend.${prod.dnsName}","managedZone":"${prod.name}","type":"A"}}}}
{"name":"aws-py-dynamicresource","description":"An example demonstrating Pulumi Dynamic Providers","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"l2-invoke-options"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"mount_target","description":null}
{"template":{"description":"A TypeScript program to deploy a serverless application on AWS","config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"runtime":"nodejs","description":"${DESCRIPTION}","name":"${PROJECT}"}
{"description":"Testing provider capability to tag resources correctly","name":"tags-combinations-go","runtime":"go"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Grant Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Example IAM Role for EKS Fargate Profile", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Volume Gateway (Stored)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal AWS Java Pulumi program","runtime":"java","name":"pulumiup-app-stack"}
{"name":"pulumi-reserved-variable","runtime":"yaml","main":"./working-dir"}
{"name": "react-admin-cognito-ui", "runtime": "nodejs", "description": "AWS S3 Website"}
{"resources":{"my-ec2-instance":{"properties":{"ami":"ami-a0cfeed8","instanceType":"t2.micro"},"type":"aws:ec2:Instance"}},"runtime":"yaml","name":"ec2-instance"}
{"description":"Static Website Using Azure Blob Storage and CDN","runtime":"nodejs","name":"static-website"}
{"name": "cloudguruchallenge-azure-resume", "runtime": {"name": "yaml", "options": {"compiler": "cue export"}}}
{"runtime":"nodejs","name":"azure-ts-containerapps","description":"Creates an Azure Container App and deploys a custom Docker image to it"}
{"name":"${PROJECT}","template":{"description":"A minimal Equinix Metal TypeScript Pulumi program"},"runtime":"nodejs","description":"${DESCRIPTION}"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSelection TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"my playground aks cluster","name":"upgrade-aks"}
{"description":"A program that replaces a resource with a new name and alias.","name":"aliases_rename_component","runtime":"nodejs"}
{"name":"command-simple-with-update","runtime":"nodejs","description":"test update field behavior"}
{"runtime":"go","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-1"}}},"description":"Basic example of an AWS web server accessible over HTTP","name":"go-webserver"}
{"name":"py-webapp","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-python"}}},"runtime":{"options":{"virtualenv":"venv","toolchain":"pip"},"name":"python"},"description":"A minimal Azure Native Python Pulumi program"}
{"description":"Tests the skipAwait annotation:\n- A slow-to-start deployment tests create/update/read.\n- Delete is tested by a namespace with a stuck finalizer.\n","name":"skipawait","resources":{"stuck-namespace":{"type":"kubernetes:core/v1:Namespace","properties":{"metadata":{"finalizers":["pulumi.com/stuck"],"annotations":{"pulumi.com/skipAwait":"true"}}}},"slow-pod":{"type":"kubernetes:core/v1:Pod","properties":{"spec":{"containers":[{"image":"busybox","name":"busybox","command":["sleep","infinity"],"readinessProbe":{"initialDelaySeconds":"600","exec":{"command":["ls"]},"periodSeconds":"10"}}]},"metadata":{"annotations":{"pulumi.com/skipAwait":"true"}}}}},"runtime":"yaml"}
{"name":"l2-map-keys","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"runtime":{"options":{"compiler":"./run.sh"},"name":"yaml"},"description":"Fortran Example","name":"fortran"}
{"outputs":{"my-secret":"${password}"},"runtime":"yaml","name":"project-config-with-secret","config":{"password":{"type":"string"}},"description":"A minimal Pulumi YAML program"}
{"name":"k8s-azure-03-application","description":"Set up deployments, services and ingress","runtime":"nodejs"}
{"description":"Example to deploy an AWS synthetics canary.","name":"aws-synthetics-canary","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Aurora Read Replica Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"go","description":"Houses pachyderm core stacks.","name":"core"}
{"name":"webserver","description":"Basic example of a web server on a compute instance running on Google Cloud Platform","runtime":"nodejs"}
{"description":"${DESCRIPTION}","runtime":"nodejs","name":"${PROJECT}","template":{"description":"A TypeScript program to deploy a virtual machine on Google Cloud","config":{"instanceTag":{"default":"webserver","description":"The tag to apply to the VM instance"},"gcp:zone":{"default":"us-central1-a","description":"The Google Cloud availability zone to deploy into"},"machineType":{"description":"The GCP machine type to use for the VM","default":"f1-micro"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"osImage":{"default":"debian-11","description":"The OS image type to use for the VM"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"servicePort":{"description":"The HTTP service port to expose on the VM","default":"80"}}}}
{"resources":{"provider":{"options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]},"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"}},"tested-resource":{"properties":{"guestOsFeatures":[{"type":"SECURE_BOOT"},{"type":"MULTI_IP_SUBNET"},{"type":"WINDOWS"}],"type":"pd-ssd","physicalBlockSizeBytes":"4096","zone":"us-central1-a","licenses":["https://www.googleapis.com/compute/v1/projects/windows-cloud/global/licenses/windows-server-core"],"labels":{"environment":"dev"}},"type":"gcp:compute:Disk","options":{"provider":"${provider}"}}},"name":"test","runtime":{"name":"yaml"}}
{"runtime":"dotnet","name":"dotnet-helm-local","description":"Deploys a simple Helm chart to Kubernetes, from local disk."}
{"name":"${PROJECT}","template":{"config":{"path":{"default":"./www","description":"The path to the folder containing the website"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"}},"description":"A Go program to deploy a static website on Google Cloud"},"description":"${DESCRIPTION}","runtime":"go"}
{"description":"A simple ecr demo with Dockerfile in a separate folder.","name":"ecr-dockerfile","runtime":"nodejs"}
{"name": "equinix-metal-reserved-ip-block", "runtime": "dotnet", "description": "An Equinix Metal Reserved IP Block resource", "config": {"metro": {"type": "string", "default": "FR"}, "projectId": {"type": "string"}, "quantity": {"type": "integer", "default": 1}, "type": {"type": "string", "default": "public_ipv4"}}}
{"description":"An example that deploys a Kubernetes cluster on AWS.","outputs":{"kubeconfig":"${eks-cluster.kubeconfig}"},"resources":{"eks-cluster":{"type":"eks:Cluster","properties":{"desiredCapacity":"3","publicSubnetIds":"${eks-vpc.publicSubnetIds}","maxSize":"6","vpcId":"${eks-vpc.vpcId}","instanceType":"t3.medium","privateSubnetIds":"${eks-vpc.privateSubnetIds}","minSize":"3"}},"eks-vpc":{"type":"awsx:ec2:Vpc","properties":{"enableDnsHostnames":"1","cidrBlock":"10.0.0.0/16"}}},"name":"aws-eks-cluster-yaml","runtime":"yaml"}
{"name": "aeons.dk", "runtime": "nodejs", "description": "Website for aeons.dk"}
{"name": "ngrok", "runtime": "yaml", "description": "Run ngrok to tunnel webhooks to Flux", "variables": {"appLabels": {"app": "ngrok"}}, "resources": {"deployment": {"type": "kubernetes:apps/v1:Deployment", "properties": {"spec": {"selector": {"matchLabels": "${appLabels}"}, "replicas": 1, "template": {"metadata": {"labels": "${appLabels}"}, "spec": {"containers": [{"name": "ngrok", "image": "ngrok/ngrok:2.3.40-alpine", "args": ["http", "webhook-receiver.flux-system:80"]}]}}}}}, "service": {"type": "kubernetes:core/v1:Service", "properties": {"spec": {"selector": "${appLabels}", "ports": [{"port": 80, "targetPort": 4040}]}}}}, "outputs": {"deployment": "${deployment.metadata.name}", "service": "${service.metadata.name}"}}
{"name":"kubernetes-go-helm-wordpress","runtime":"go","description":"A minimal Go Pulumi program"}
{"runtime":"yaml","description":"A minimal Talos program in Pulumi YAML","resources":{"bootstrap":{"options":{"dependsOn":["${configurationApply}"]},"type":"talos:machine:Bootstrap","properties":{"node":"10.5.0.2","clientConfiguration":"${secrets.clientConfiguration}"}},"secrets":{"type":"talos:machine/secrets:Secrets"},"configurationApply":{"type":"talos:machine/configurationApply:ConfigurationApply","properties":{"machineConfigurationInput":"${configuration}","node":"10.5.0.2","configPatches":[{"fn::toJSON":{"machine":{"install":{"disk":"/dev/sdd"}}}}],"clientConfiguration":"${secrets.clientConfiguration}"}}},"variables":{"configuration":{"fn::invoke":{"arguments":{"machineType":"controlplane","clusterEndpoint":"https://cluster.local:6443","machineSecrets":"${secrets.machineSecrets}","clusterName":"exampleCluster"},"function":"talos:machine/getConfiguration:getConfiguration","return":"machineConfiguration"}}},"outputs":{},"name":"talos"}
{"name": "pulumi-repro", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","name":"awsx-ecr-eks-deployment-service-typescript"}
{"description":"Creates an EKS cluster with node groups and a workload. Then covers how to add an additional node group, and use it to migrate the workload with zero downtime.","runtime":"nodejs","name":"aws-ts-eks-migrate-nodegroups"}
{"template":{"description":"A C# program to deploy a serverless application on Azure","config":{"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"sitePath":{"default":"./www","description":"The path to the folder containing the website"},"appPath":{"default":"./app","description":"The path to the folder containing the functions to be deployed"},"azure-native:location":{"description":"The Azure region to deploy into","default":"WestUS"}}},"runtime":"dotnet","description":"${DESCRIPTION}","name":"${PROJECT}"}
{"runtime":"nodejs","description":"A simple example of using the `API` class to construct a REST API.","name":"apigateway-api"}
{"name":"cosmosdb","description":"A Cosmos DB showcase","runtime":"nodejs"}
{"name": "access-finland", "runtime": "nodejs", "description": "Access Finland app", "config": {"aws:region": "eu-north-1", "testbed:gatewayUrl": "https://gateway.testbed.fi", "testbed:defaultDataSource": "accessfinland:development"}}
{"name":"awsx-vpc-fargate-service-csharp","runtime":"dotnet"}
{"runtime":"nodejs","name":"awsx-vpc-fargate-service-typescript"}
{"runtime":"yaml","description":"Add a resource specific tag: `foo: buzz`\n","name":"test-aws-1655-bucket","outputs":{"actual":"${res.tags}"},"resources":{"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux"}}},"type":"pulumi:providers:aws"},"res":{"type":"aws:s3:BucketV2","properties":{"tags":{"fizz":"buzz"}},"options":{"provider":"${aws-provider}"}}}}
{"description":"A minimal Azure Native Python Pulumi program","name":"tested_static_website","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "java", "template": {"description": "A minimal Azure Native Java Pulumi program", "important": true, "config": {"azure-native:location": {"description": "The Azure location to use", "default": "WestUS2"}}}}
{"name":"test-aws-1655-pf","outputs":{"actual":"${res.tags}"},"runtime":"yaml","resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}},"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}},"res":{"properties":{"tags":{"fizz":"buzz","foo":"bar"},"applicationId":"${app.id}","name":"pf-tags-test"},"options":{"provider":"${aws-provider}"},"type":"aws:appconfig:Environment"}},"description":"Shadow the default tag with a resource specific tag\n"}
{"name": "eks-vpc", "runtime": "nodejs", "description": "Stands up VPC."}
{"description":"A program that constructs remote component resources with first class provider.","runtime":"go","name":"construct_component_provider_go","config":{"pulumi:disable-default-providers":["*"]}}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"multi_region_kms"}
{"config":{"resource-group-name":{"type":"string"},"image":{"type":"string"}},"name":"ade-pulumi-csharp","runtime":"dotnet"}
{"name": "equinor-trading-plotly-dash-template", "runtime": {"name": "python", "options": {"virtualenv": ".venv"}}, "description": "A minimal Azure Native Python Pulumi program"}
{"description":"An example that provides the code to import an existing resource group from Azure.","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-go"}}},"name":"azure-native-import-resource-group-go","runtime":"go"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Create Cached iSCSI Volume From Source Volume", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "1-cluster", "description": "A minimal Civo Pulumi YAML program", "runtime": "yaml", "resources": {"firewall": {"type": "civo:Firewall", "properties": {"region": "NYC1", "createDefaultRules": true}}, "cluster": {"type": "civo:KubernetesCluster", "properties": {"region": "NYC1", "firewallId": "${firewall.id}", "pools": {"nodeCount": 3, "size": "g4s.kube.medium"}}}}, "outputs": {"clusterName": "${cluster.name}"}}
{"runtime":"yaml","name":"l2-parameterized-resource"}
{"description":"An integration test showing the use of a parameterized package","runtime":"yaml","name":"parameterized","resources":{"res2":{"properties":{"echo":"hi"},"type":"pkg:index:Echo"},"res1":{"type":"pkg:index:Random","properties":{"length":"10"}}}}
{"name":"l2-target-up-with-new-dependency","runtime":"nodejs"}
{"variables":{"hash-cloak-db-migrations":"sha256:79bda00d42111902e80626b5641092727ce30a5c1daadc3d9d09fef1d13121f3","envoy":"ghcr.io/purton-tech/cloak-envoy:${version}@${hash-cloak-envoy}","db-migrations":"ghcr.io/purton-tech/cloak-db-migrations:${version}@${hash-cloak-db-migrations}","authLabels":{"app":"auth"},"namespace":"cloak","envoyLabels":{"app":"envoy"},"hash-cloak-envoy":"sha256:176f7845d9337e6505eef26c1c5f4870fa1a04acb2da95d1c067a231fc8ec328","hash-cloak-server":"sha256:15763d8b34c95cb3fbf8afd2e2726b6678b4700134c452ec105b4fd4d4256fab","version":"1.20.0","appLabels":{"app":"app"},"server":"ghcr.io/purton-tech/cloak-server:${version}@${hash-cloak-server}"},"name":"cloak","resources":{"envoy-service":{"properties":{"spec":{"ports":[{"protocol":"TCP","port":"7100","targetPort":"7100"}],"selector":{"app":"envoy"}},"metadata":{"name":"envoy","namespace":"${namespace}"}},"type":"kubernetes:core/v1:Service"},"auth-deployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"metadata":{"namespace":"${namespace}","name":"auth"},"spec":{"replicas":"1","selector":{"matchLabels":"${authLabels}"},"template":{"spec":{"containers":[{"env":[{"valueFrom":{"secretKeyRef":{"name":"database-urls","key":"auth-database-url"}},"name":"DATABASE_URL"},{"name":"AUTH_TYPE","value":"encrypted"},{"name":"SECURE_COOKIE","value":"true"},{"valueFrom":{"secretKeyRef":{"name":"cookie-encryption","key":"cookie-encryption-key"}},"name":"SECRET_KEY"},{"value":"/app/post_registration","name":"REDIRECT_URL"},{"name":"ENABLE_EMAIL_OTP","value":"true"},{"name":"LOGOUT_URL","value":"https://cloak.software"},{"name":"SMTP_HOST","value":"smtp.sendgrid.net"},{"value":"587","name":"SMTP_PORT"},{"name":"SMTP_USERNAME","value":"apikey"},{"name":"SMTP_PASSWORD","valueFrom":{"secretKeyRef":{"name":"sendgrid-api","key":"sendgrid-api-key"}}},{"value":"true","name":"SMTP_TLS_OFF"},{"value":"https://cloak.software","name":"RESET_DOMAIN"},{"name":"RESET_FROM_EMAIL_ADDRESS","value":"no-reply@cloak.software"}],"name":"auth","ports":[{"containerPort":"9090"}],"image":"purtontech/barricade:1.2.5"}]},"metadata":{"labels":"${authLabels}"}}}}},"app-service":{"type":"kubernetes:core/v1:Service","properties":{"spec":{"ports":[{"targetPort":"7103","protocol":"TCP","port":"7103"}],"selector":{"app":"app"}},"metadata":{"namespace":"${namespace}","name":"app"}}},"app-deployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"metadata":{"namespace":"${namespace}","name":"app"},"spec":{"template":{"metadata":{"labels":"${appLabels}"},"spec":{"initContainers":[{"image":"${db-migrations}","name":"server-init","env":[{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"migrations-database-url","name":"database-urls"}}}]}],"containers":[{"name":"app","env":[{"name":"APP_DATABASE_URL","valueFrom":{"secretKeyRef":{"name":"database-urls","key":"app-database-url"}}}],"ports":[{"containerPort":"7103"}],"image":"${server}"}]}},"selector":{"matchLabels":"${appLabels}"},"replicas":"1"}}},"envoy-deployment":{"properties":{"spec":{"replicas":"1","template":{"spec":{"containers":[{"ports":[{"containerPort":"7100"}],"name":"envoy","image":"${envoy}"}]},"metadata":{"labels":"${envoyLabels}"}},"selector":{"matchLabels":"${envoyLabels}"}},"metadata":{"namespace":"${namespace}","name":"envoy"}},"type":"kubernetes:apps/v1:Deployment"},"auth-service":{"type":"kubernetes:core/v1:Service","properties":{"spec":{"selector":{"app":"auth"},"ports":[{"port":"9090","protocol":"TCP","targetPort":"9090"}]},"metadata":{"name":"auth","namespace":"${namespace}"}}}},"runtime":"yaml","description":"Cloak Infrastructure as Code"}
{"name":"l2-plain","runtime":"yaml"}
{"name":"l2-resource-simple","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"runtime":{"name":"python","options":{"typechecker":"mypy","virtualenv":"venv"}},"name":"l2-failed-create-continue-on-error"}
{"resources":{"my-bucket-metric":{"type":"aws:s3:BucketMetric","properties":{"bucket":"${my-bucket.id}"}},"my-bucket-notification":{"properties":{"bucket":"${my-bucket.id}"},"type":"aws:s3:BucketNotification"},"my-bucket":{"properties":{},"type":"aws:s3:BucketV2"},"public-access-block":{"type":"aws:s3:BucketPublicAccessBlock","properties":{"blockPublicAcls":"","bucket":"${my-bucket.id}"}},"my-bucket-policy":{"properties":{"policy":{"fn::toJSON":{"Statement":[{"Effect":"Allow","Principal":"*","Action":"s3:GetObject","Resource":"arn:aws:s3:::${my-bucket.id}/*"}],"Version":"2012-10-17"}},"bucket":"${my-bucket.id}"},"options":{"dependsOn":["${public-access-block}","${ownership-controls}"]},"type":"aws:s3:BucketPolicy"},"ownership-controls":{"type":"aws:s3:BucketOwnershipControls","properties":{"rule":{"objectOwnership":"ObjectWriter"},"bucket":"${my-bucket.id}"}},"my-bucket-object":{"options":{"dependsOn":["${public-access-block}","${ownership-controls}"]},"properties":{"content":"hello world","bucket":"${my-bucket.id}"},"type":"aws:s3:BucketObject"}},"name":"aws-s3-bucket-resources-yaml","runtime":"yaml","description":"An example that deploys S3 bucket, metric, notification, object, and policy resources."}
{"name": "rocketpool-cluster", "runtime": "nodejs", "description": "A GKE autopilot cluster for staking with Rocket Pool"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"config":{"containerPort":{"description":"The port to expose on the container","default":"8080"},"cpu":{"description":"The number of virtual CPUs to allocate per container instance","default":"1"},"memory":{"description":"The amount of memory to allocate per container instance","default":"1Gi"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"appPath":{"default":"app","description":"The path to the container application to deploy"},"concurrency":{"description":"The maximum number of concurrent requests to serve per container instance","default":"50"},"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"}},"description":"A TypeScript program to deploy a containerized service on Google Cloud"},"runtime":"nodejs"}
{"runtime":"python","name":"ol-infrastructure-xpro-application","description":"Pulumi project to manage the infrastructure resources needed by the XPro application.","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name":"aliases-rename","runtime":{"options":{"logtostderr":"","v":"0"},"name":"java"},"description":"Integration test for Aliases (rename scenario)"}
{"description":"Service template for AWS Proton workshop demo","name":"workshop-aws-proton-svc-template","runtime":"nodejs"}
{"name":"cloud_func","description":"A minimal Google Cloud Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l1-output-string"}
{"name":"l2-resource-config","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"go-alias-norm","runtime":"go","description":"A minimal Go Pulumi program"}
{"main":"pulumi/","name":"pinterestClone","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","runtime":"nodejs"}
{"description":"gradle executor test","name":"language-plugin-test","runtime":{"options":{"v":"0","logtostderr":"1"},"name":"scala"}}
{"name":"awsx-ecr-eks-deployment-service-go","runtime":"go"}
{"runtime":"nodejs","name":"timeseries","description":"Azure Time Series Insights"}
{"template":{"description":"A Python program to deploy a Huggingface LLM model to Amazon SageMaker with CloudWatch monitoring","config":{"aws:region":{"default":"us-east-1","description":"The AWS region where resources will be created"}}},"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"python"}
{"description":"A Go Pulumi program to stand up a Flatcar Linux instance on AWS","runtime":"go","name":"flatcar-pulumi-aws"}
{"name": "simple", "runtime": "nodejs", "description": "A simple concourse example"}
{"runtime":"nodejs","name":"command-delete-from-stdout","description":"A simple command example"}
{"runtime":"dotnet","description":"An example demonstrating the Terraform Remote State resource","name":"remote-backend-dotnet"}
{"name": "cloudtrail-dotnet", "runtime": "dotnet", "description": "A minimal C# Pulumi program"}
{"name": "environment", "runtime": "nodejs", "description": "Sample environment"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal Random C# Pulumi program."}}
{"name": "production", "runtime": "nodejs", "description": "Gitcoin production environment"}
{"runtime":"nodejs","name":"l2-ref-ref"}
{"name":"aws_dynamodb_table_Table_1","runtime":"yaml","resources":{"basic-dynamodb-table":{"properties":{"tags":{"name":"dynamodb-table-1","environment":"production"},"billingMode":"PROVISIONED","ttl":{"attributeName":"TimeToExist","enabled":"1"},"writeCapacity":"20","readCapacity":"20","hashKey":"UserId","name":"GameScores","globalSecondaryIndexes":[{"rangeKey":"TopScore","name":"GameTitleIndex","nonKeyAttributes":["UserId"],"projectionType":"INCLUDE","hashKey":"GameTitle","readCapacity":"10","writeCapacity":"10"}],"attributes":[{"type":"S","name":"UserId"},{"name":"GameTitle","type":"S"},{"name":"TopScore","type":"N"}],"rangeKey":"GameTitle"},"type":"aws:dynamodb:Table"}}}
{"name":"l2-explicit-provider","runtime":"go"}
{"name":"l2-resource-config","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"name": "my-ecs", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Configuration for Alias Name", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Public Subdomain Zone", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"A minimal TypeScript Pulumi program","name":"test-unknowns"}
{"description":"Azure AD Example","name":"Infrastructure","runtime":"dotnet"}
{"name":"regress-791","runtime":"nodejs"}
{"name":"${PROJECT}","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"}},"description":"A minimal GCP VB.NET Pulumi program"},"runtime":"dotnet","description":"${DESCRIPTION}"}
{"variables":{"awsAccount":{"fn::invoke":{"function":"aws:getCallerIdentity"}},"currentRole":{"fn::invoke":{"function":"aws:iam:getSessionContext","arguments":{"arn":"${awsAccount.arn}"}}}},"resources":{"iamRole":{"type":"aws:iam:Role","options":{"provider":"${bootstrapProvider}"},"properties":{"assumeRolePolicy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Action":["sts:AssumeRole","sts:TagSession"],"Effect":"Allow","Condition":{"StringEquals":{"aws:RequestTag/Repository":["my-org/my-repo"]}},"Principal":{"AWS":"${currentRole.issuerArn}"}}]}},"inlinePolicies":[{"name":"inline-policy","policy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Action":["s3:*"],"Effect":"Allow","Resource":"*"}]}}}]}},"bootstrapProvider":{"type":"pulumi:providers:aws"},"wait6s":{"type":"time:Sleep","properties":{"createDuration":"6s"}},"provider":{"type":"pulumi:providers:aws","options":{"dependsOn":["${wait6s}"]},"properties":{"assumeRole":{"roleArn":"${iamRole.arn}","sessionName":"session-tagging-test","tags":{"Repository":"my-org/my-repo"}}}},"myTestBucket":{"options":{"provider":"${provider}"},"type":"aws:s3:Bucket"}},"name":"assume-role-session-tags","outputs":{"roleARN":"${iamRole.arn}","bucketArn":"${myTestBucket.arn}","roleId":"${iamRole.id}"},"runtime":"yaml"}
{"name":"l2-invoke-options-depends-on","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"outputs":{"test_privst_after_edit__actual":"${r.observedPrivateStateAfter}","test_privst_before_edit__expect":"target-1","test_privst_before_edit__actual":"${r.observedPrivateStateBefore}","test_privst_after_edit__expect":"target-1"},"resources":{"r":{"type":"testbridge:index/testres:Privst"}},"runtime":"yaml","name":"privst-program"}
{"name": "flux-sync", "description": "A simple nodejs example using flux-sync", "runtime": {"name": "nodejs", "options": {"nodeargs": "--loader ts-node/esm --no-warnings"}}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"awsx-load-balanced-fargate-ecr-javascript"}
{"description":"An example that applies unit testing to Python and AWS resources.","runtime":"python","name":"testing-unit-py"}
{"name": "lambda", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"},"name":"l2-resource-parent-inheritance"}
{"name":"refreshgo","description":"An empty Go Pulumi program with the refresh option set.","runtime":"go","options":{"refresh":"always"}}
{"description":"A simple Go Kubernetes program.","runtime":"go","name":"switch_ssa_delete-container"}
{"name":"${PROJECT}","runtime":"dotnet","template":{"config":{"desiredClusterSize":{"description":"Desired number of nodes in the cluster","default":"3"},"eksNodeInstanceType":{"default":"t3.medium","description":"Instance type to use for worker nodes"},"vpcNetworkCidr":{"description":"Network CIDR to use for new VPC","default":"10.0.0.0/16"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"maxClusterSize":{"description":"Maximum size (number of nodes) of cluster","default":"6"},"minClusterSize":{"description":"Minimum size (number of nodes) of cluster","default":"3"}},"description":"A C# program to deploy a Kubernetes cluster on AWS"},"description":"${DESCRIPTION}"}
{"name": "WarmLambda", "description": null, "runtime": "nodejs", "template": {"description": "A minimal AWS TypeScript program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "DynamoDB Index Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "awskms-encrypted-stack", "runtime": "go", "description": "An example stack encrypted with AWS KMS"}
{"description":"WHY HAVE YOU DONE THIS","name":"perl","runtime":{"name":"yaml","options":{"compiler":"perl Pulumi.pl"}}}
{"name":"selfhosted-90-pulumi-service","description":"Used to create database resources for the eks selfhosted installer.","runtime":"nodejs"}
{"name": "nftcom", "runtime": "nodejs", "description": "NFT.com substream infra"}
{"name": "gcp-go-functions-raw", "description": "A minimal Go Pulumi program using Google Cloud Functions.", "runtime": "go"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "AWS IAM Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"staging","description":"Gitcoin staging environment"}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-provider-grpc-config"}
{"name": "helloworld", "runtime": "dotnet", "description": "helloworld function in .NET 5"}
{"outputs":{"kubeconfig":"${kubeconfig}"},"description":"A GKE cluster","runtime":"yaml","resources":{"cluster":{"type":"google-native:container/v1beta1:Cluster","properties":{"initialNodeCount":"1","location":"us-west2","ipAllocationPolicy":{"useRoutes":"","clusterIpv4CidrBlock":"/14","servicesIpv4CidrBlock":"/20"},"defaultMaxPodsConstraint":{"maxPodsPerNode":"100"},"resourceLabels":{"env":"lbriggs"},"clusterTelemetry":{"type":"ENABLED"}}},"nginx-ingress":{"type":"kubernetes:helm.sh/v3:Release","properties":{"repositoryOpts":{"repo":"https://kubernetes.github.io/ingress-nginx"},"lint":"1","description":"Main load balancer","version":"4.7.1","namespace":"ingress-nginx","values":{"ingressClass":"internet"},"name":"ingress-nginx","cleanupOnFail":"1","chart":"ingress-nginx","createNamespace":"1"},"options":{"provider":"${provider}"}},"provider":{"properties":{"kubeconfig":"${kubeconfig}"},"type":"pulumi:providers:kubernetes"}},"name":"gke-yaml-cluster","variables":{"kubeconfig":{"fn::toJSON":{"kind":"Config","contexts":[{"context":{"user":"${cluster.name}","cluster":"${cluster.name}"},"name":"${cluster.name}"}],"users":[{"name":"${cluster.name}","user":{"exec":{"provideClusterInfo":"1","command":"gke-gcloud-auth-plugin","apiVersion":"client.authentication.k8s.io/v1beta1","installHint":"Install gke-gcloud-auth-plugin for use with kubectl by following https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke"}}}],"current-context":"${cluster.name}","apiVersion":"v1","clusters":[{"name":"${cluster.name}","cluster":{"server":"https://${cluster.endpoint}","certificate-authority-data":"${cluster.masterAuth.clusterCaCertificate}"}}]}}}}
{"name":"awsx-apigateway-api-keys-java","runtime":"java","description":"An example that deploys an API Gateway instance with support for API keys."}
{"description":"An example that creates a new VPC using the default settings.","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"awsx-vpc-python"}
{"description":"An example that deploys multiple load-balanced VMs in Amazon EC2.","runtime":"nodejs","name":"awsx-load-balanced-ec2-instances-typescript"}
{"description":"${DESCRIPTION}","outputs":{"name":"${myBucket.name}"},"runtime":"yaml","name":"${PROJECT}","variables":{"myNamespace":{"fn::oci:ObjectStorage/getNamespace:getNamespace":{"compartmentId":"${myCompartment.id}"}}},"resources":{"myCompartment":{"type":"oci:Identity:Compartment","properties":{"description":"My description text","name":"my-compartment","enableDelete":"1"}},"myBucket":{"properties":{"compartmentId":"${myCompartment.id}","namespace":"${myNamespace.namespace}","name":"my-bucket"},"type":"oci:ObjectStorage:Bucket"}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Account Access", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"l2-map-keys"}
{"description":"A simple ecr demo.","name":"ecr","runtime":"nodejs"}
{"name":"awsx-vpc-default-javascript","runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example of fetching the default AWS VPC for the current region."}
{"name":"fargate","runtime":"go","description":"An end-to-end AWS ECS Fargate infrastructure as code project."}
{"variables":{"ec2ami":{"fn::invoke":{"arguments":{"owners":["137112412989"],"filters":[{"values":["amzn2-ami-hvm-2.0.20231218.0-x86_64-ebs"],"name":"name"}],"mostRecent":"1"},"function":"aws:ec2:getAmi","return":"id"}}},"runtime":"yaml","description":"Basic example of an AWS web server accessible over HTTP","resources":{"UsEast2Provider":{"type":"pulumi:providers:aws","properties":{"region":"us-east-2"},"options":{"version":"5.16.2"}},"DefaultProvider":{"type":"pulumi:providers:aws","options":{"version":"5.16.2"}},"MyBucket":{"type":"aws:s3:Bucket","options":{"provider":"${UsEast2Provider}"}},"WebServer":{"properties":{"instanceType":"${InstanceType}","ami":"${ec2ami}","userData":"#!/bin/bash\necho 'Hello, World from ${WebSecGrp.arn}!' > index.html\nnohup python -m SimpleHTTPServer 80 &","vpcSecurityGroupIds":["${WebSecGrp}"]},"type":"aws:ec2:Instance"},"WebSecGrp":{"type":"aws:ec2:SecurityGroup","properties":{"ingress":[{"toPort":"80","protocol":"tcp","fromPort":"80","cidrBlocks":["0.0.0.0/0"]}]}}},"name":"webserver","config":{"InstanceType":{"type":"string","default":"t3.micro"}},"outputs":{"PublicHostName":"${WebServer.publicDns}","InstanceId":"${WebServer.id}","PublicIp":"${WebServer.publicIp}"}}
{"description":"Infrastructure required for Pulumi self hosted","runtime":"nodejs","name":"01-infrastructure-selfhosted-byo"}
{"description":"A minimal AWS TypeScript Pulumi program","name":"s3","runtime":"nodejs"}
{"name":"topic-iam-binding","description":"A minimal Pulumi YAML program","runtime":"yaml","resources":{"myServiceAccount":{"type":"gcp:serviceaccount:Account","properties":{"accountId":"${random-account-id.result}"}},"myTopic":{"type":"gcp:pubsub/topic:Topic"},"myTopicIAMBinding":{"properties":{"role":"roles/pubsub.publisher","topic":"${myTopic.name}","members":["serviceAccount:${myServiceAccount.email}"]},"type":"gcp:pubsub/topicIAMBinding:TopicIAMBinding"},"random-account-id":{"properties":{"special":"","number":"","upper":"","length":"10"},"type":"random:RandomString"}}}
{"name": "secure-cloud-access-aws-ts", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"go","name":"aws-k8s-infra","description":"A Go Pulumi program to stand up AWS infrastructure for Kubernetes"}
{"name":"helm-kube-version","runtime":"nodejs","description":"Deploys a simple Helm chart with KubeVersion requirement"}
{"main":"subdir","name":"l2-resource-asset-archive","runtime":"yaml"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"${PROJECT}","template":{"description":"A simple AWS serverless JavaScript Pulumi program","config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"description":"${DESCRIPTION}"}
{"outputs":{},"resources":{},"runtime":"yaml","description":"${DESCRIPTION}","variables":{},"configuration":{},"name":"${PROJECT}","template":{"description":"A minimal Pulumi YAML program"}}
{"description":"A minimal Kubernetes TypeScript Pulumi program","name":"helm-release-unknowns","runtime":"nodejs"}
{"runtime":"yaml","template":{"description":"A minimal DigitalOcean Pulumi YAML program"},"resources":{"domain":{"type":"digitalocean:Domain","properties":{"name":"my-domain.io"}}},"name":"${PROJECT}","description":"${DESCRIPTION}","outputs":{"domainName":"${domain.name}"}}
{"runtime":"java","name":"awsx-load-balanced-fargate-nginx-yaml"}
{"name":"index_randomuuidt32sUas1CCV2","description":"","runtime":"yaml","resources":{"myRandomUuid":{"type":"random:RandomUuid"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/e7fb6ecc-8661-41f7-a61a-c482b81f090a.zip"}}}}
{"name":"regress-4011","description":"Regress pulumi/pulumi-aws#4011","runtime":"nodejs"}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"l2-plain"}
{"name": "k8s-working-with-pods-hands-on", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"description":"unchained coin stack","name":"litecoin","runtime":"nodejs"}
{"name":"azure-native-static-website-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-javascript"}}},"description":"An example that deploys all of the resources for a static website on Azure.","runtime":{"name":"nodejs","options":{"packagemanager":"npm","typescript":""}}}
{"description":"A minimal TypeScript Pulumi program to create KeyCloak Realm","name":"realm-typescript","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getContainerDefinition Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal installation of the Wordpress Helm chart using Helm Release support","name":"kubernetes-cs-helm-release-wordpress","runtime":"dotnet"}
{"runtime":"nodejs","description":"A TypeScript Pulumi program with AWS Cloud Control provider testing an update","name":"aws-update"}
{"outputs":{"imageName":"${demo-image.imageName}"},"runtime":"yaml","name":"dockerfile-in-context","resources":{"demo-image":{"options":{"version":"v4.0.0"},"type":"docker:Image","properties":{"imageName":"pulumibot/test-image:tag1","skipPush":"1","build":{"dockerfile":"./app/Dockerfile","context":"./app"}}}}}
{"name":"pulumi-aws-cdk","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"description":"A Python project that uses the uv toolchain and a main directory.","name":"pulumi-python-uv","runtime":{"name":"python","options":{"toolchain":"uv","virtualenv":"my-venv"}},"main":"src"}
{"runtime":"yaml","resources":{"myServiceAccount":{"properties":{"accountId":"${random-account-id.result}"},"type":"gcp:serviceaccount:Account"},"viewerBinding":{"type":"gcp:projects/iAMBinding:IAMBinding","properties":{"role":"roles/viewer","project":"${gcp:project}","members":["serviceAccount:${myServiceAccount.email}"]}},"random-account-id":{"type":"random:RandomString","properties":{"length":"10","number":"","upper":"","special":""}}},"name":"iam-binding","description":"A minimal Pulumi YAML program"}
{"runtime":"nodejs","description":"thorchain coin stack","name":"thorchain"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that creates a new VPC with a custom subnet specification.","name":"awsx-vpc-subnets-javascript"}
{"description":"A minimal example of using pulumi-eks","runtime":"java","name":"eks-minimal"}
{"runtime":"nodejs","description":"An example demonstrating the Terraform Remote State resource","name":"s3state-ts"}
{"name":"l2-resource-alpha","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name":"l2-invoke-options","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"description":"Test - Replace an EKS cluster by going from using 2 subnets to 3 subnets","runtime":"nodejs","name":"test-replace-cluster-add-subnets"}
{"description":"${DESCRIPTION}","template":{"config":{"nodeVmSize":{"description":"VM size to use for worker nodes in the cluster","default":"Standard_DS2_v2"},"mgmtGroupId":{"description":"The object ID (from az ad group list) of a group to make cluster admins"},"prefixForDns":{"description":"DNS prefix for the cluster","default":"pulumi"},"kubernetesVersion":{"default":"1.26.3","description":"Kubernetes version to deploy in the cluster"},"sshPubKey":{"description":"Contents of the public key for SSH access to cluster nodes"},"azure-native:location":{"default":"westus2","description":"The Azure location (region) in which to create the cluster"},"numWorkerNodes":{"description":"Number of worker nodes in the cluster","default":"3"}},"description":"A TypeScript program to deploy a Kubernetes cluster on Azure"},"name":"${PROJECT}","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Volume Gateway (Stored)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"variables":{"backstageContainerInstancePublicIp":{"fn::oci:Core/getVnic:getVnic":{"vnicId":"${backstageContainerInstance.vnics[0].vnicId}"}},"backstageAvailabilityDomains":{"fn::oci:Identity/getAvailabilityDomains:getAvailabilityDomains":{"compartmentId":"${backstageCompartment.compartmentId}"}}},"outputs":{"backstageUrl":"http://${backstageContainerInstancePublicIp.publicIpAddress}:7007","image":"${backstageImage.repoDigest}"},"resources":{"backstageSubnet":{"type":"oci:Core:Subnet","properties":{"securityListIds":["${backstageSecurityList.id}"],"cidrBlock":"10.0.0.0/24","routeTableId":"${backstageRouteTable.id}","vcnId":"${backstageVcn.id}","displayName":"backstage-subnet","dnsLabel":"containers","compartmentId":"${backstageCompartment.id}"}},"backstageContainerRepository":{"properties":{"compartmentId":"${backstageCompartment.id}","isPublic":"1","displayName":"backstage"},"type":"oci:Artifacts:ContainerRepository"},"backstageRouteTable":{"properties":{"routeRules":[{"networkEntityId":"${backstageInternetGateway.id}","destination":"0.0.0.0/0"}],"vcnId":"${backstageVcn.id}","displayName":"backstage-route-table","compartmentId":"${backstageCompartment.id}"},"type":"oci:Core:RouteTable"},"backstageSecurityList":{"properties":{"vcnId":"${backstageVcn.id}","compartmentId":"${backstageCompartment.id}","displayName":"backstage-security-list","egressSecurityRules":[{"tcpOptions":{"min":"443","max":"443"},"protocol":"6","destination":"0.0.0.0/0","destinationType":"CIDR_BLOCK","description":"Allow access to container registry via HTTPS"}],"ingressSecurityRules":[{"source":"0.0.0.0/0","tcpOptions":{"min":"7007","max":"7007"},"sourceType":"CIDR_BLOCK","protocol":"6"}]},"type":"oci:Core:SecurityList"},"backstageVcn":{"properties":{"dnsLabel":"backstage","compartmentId":"${backstageCompartment.id}","displayName":"Backstage VCN","cidrBlock":"10.0.0.0/16"},"type":"oci:Core:Vcn"},"backstageInternetGateway":{"type":"oci:Core:InternetGateway","properties":{"compartmentId":"${backstageCompartment.id}","displayName":"backstage-internet-gateway","enabled":"1","vcnId":"${backstageVcn.id}"}},"backstageBuild":{"type":"command:local:Command","properties":{"dir":"./backstage","create":"yarn install && yarn tsc && yarn build:backend","update":"yarn install && yarn tsc && yarn build:backend"}},"backstageCompartment":{"properties":{"enableDelete":"1","description":"Compartment for Backstage","name":"backstage-compartment"},"type":"oci:Identity:Compartment"},"backstageImage":{"properties":{"imageName":"${oci:region}.ocir.io/${backstageContainerRepository.namespace}/${backstageContainerRepository.displayName}","registry":{"server":"${oci:region}.ocir.io","password":"${auth-token}","username":"${backstageContainerRepository.namespace}/${username}"},"build":{"dockerfile":"./backstage/packages/backend/Dockerfile","platform":"linux/amd64","context":"./backstage","builderVersion":"BuilderBuildKit"}},"type":"docker:Image","options":{"dependsOn":["${backstageBuild}"],"version":"v4.5.3"}},"backstageContainerInstance":{"type":"oci:ContainerEngine:ContainerInstance","properties":{"containers":[{"imageUrl":"${backstageImage.repoDigest}","arguments":["packages/backend","--config","app-config.yaml"],"commands":["node"],"displayName":"backstage","environmentVariables":{"PULUMI_ACCESS_TOKEN":"${pulumi-pat}","GITHUB_TOKEN":"${github-token}"}}],"availabilityDomain":"${backstageAvailabilityDomains.availabilityDomains[0].name}","vnics":[{"isPublicIpAssigned":"1","displayName":"test-vnic","nsgIds":[],"subnetId":"${backstageSubnet.id}"}],"displayName":"backstage-container-instance","shape":"CI.Standard.E4.Flex","containerRestartPolicy":"ALWAYS","compartmentId":"${backstageCompartment.id}","shapeConfig":{"ocpus":"2","memoryInGbs":"16"}}}},"description":"Run Backstage on Oracle Cloud Container Instance","name":"00-backstage","runtime":"yaml"}
{"description":"A program that constructs remote component resources with methods and unknowns.","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"name":"construct_component_methods_unknown_go","runtime":"go"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}},"name":"aws-acm-certificate-java","description":"Creates a simple ACM certificate resource","runtime":"java"}
{"runtime":"nodejs","description":"ICB CDN","name":"aws"}
{"description":"A minimal Go Pulumi program","name":"kubernetes-go-exposed-deployment","runtime":"go"}
{"image":{"properties":{"platform":"linux/amd64","context":"./app","repositoryUrl":"${repository.url}"},"type":"awsx:ecr:Image"},"runtime":"yaml","name":"awsx-ecr-image-yaml","resources":{"repository":{"properties":{"forceDelete":"1"},"type":"awsx:ecr:Repository"}},"outputs":{"url":"${repository.url}"}}
{"name":"aws-go-assume-role","runtime":"go","description":"Demonstrate use of AWS AssumeRole Functionality"}
{"name":"azure-native-storage-account-blob-typescript","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-typescript"}}},"description":"An example that deploys a blob into a blob storage account on Azure.","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"}}
{"runtime":"python","name":"aliases_retype_component","description":"A program that replaces a resource with a new name and alias."}
{"runtime":"yaml","name":"firestore-field","resources":{"db":{"properties":{"type":"FIRESTORE_NATIVE","locationId":"us-central1","project":"${gcpProj}","deletionPolicy":"DELETE"},"type":"gcp:firestore:Database"},"noidx":{"type":"gcp:firestore:Field","properties":{"project":"${gcpProj}","collection":"my-collection","database":"${db.name}","field":"field","indexConfig":{}}}},"config":{"gcpProj":"string"}}
{"resources":{"mySecret":{"type":"aws:secretsmanager/secret:Secret"},"mySecretVersion":{"properties":{"secretId":"${mySecret.id}","secretString":"MySecretVersionValue"},"type":"aws:secretsmanager/secretVersion:SecretVersion"}},"name":"secretversion","runtime":"yaml"}
{"description":"A minimal AWS TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"name":"aws_wrong_type","runtime":"nodejs"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"project"}
{"runtime":"dotnet","description":"An example that deploys an API Gateway REST API with a single endpoint backed by AWS Lambda.","name":"awsx-apigateway-lambda-csharp"}
{"runtime":"yaml","name":"l2-failed-create-continue-on-error"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal AWS Python Pulumi program", "config": {"aws-native:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"keyvault","description":"KeyVault resources"}
{"variables":{"blobAccessToken":{"fn::invoke":{"function":"azure-native:storage:listStorageAccountServiceSAS","Return":"serviceSasToken","arguments":{"cacheControl":"max-age=5","sharedAccessStartTime":"2022-01-01","contentDisposition":"inline","canonicalizedResource":"/blob/${sa.name}/${container.name}","permissions":"r","resourceGroupName":"${appservicegroup.name}","contentType":"application/json","accountName":"${sa.name}","contentEncoding":"deflate","sharedAccessExpiryTime":"2030-01-01","protocols":"https","resource":"c"}}}},"config":{"sqlAdmin":{"default":"pulumi","type":"string"}},"resources":{"blob":{"properties":{"source":{"Fn::FileArchive":"./www"},"accountName":"${sa.name}","resourceGroupName":"${appservicegroup.name}","type":"Block","containerName":"${container.name}"},"type":"azure-native:storage:Blob"},"sqlPassword":{"type":"random:RandomPassword","properties":{"length":"16","special":"1"}},"appserviceplan":{"type":"azure-native:web:AppServicePlan","properties":{"resourceGroupName":"${appservicegroup.name}","sku":{"tier":"Basic","name":"B1"},"kind":"App"}},"appInsights":{"type":"azure-native:insights:Component","properties":{"kind":"web","resourceGroupName":"${appservicegroup.name}","applicationType":"web"}},"container":{"type":"azure-native:storage:BlobContainer","properties":{"publicAccess":"None","resourceGroupName":"${appservicegroup.name}","accountName":"${sa.name}"}},"db":{"type":"azure-native:sql:Database","properties":{"resourceGroupName":"${appservicegroup.name}","sku":{"name":"S0"},"serverName":"${sqlServer.name}"}},"sqlServer":{"properties":{"version":"12.0","administratorLoginPassword":"${sqlPassword.result}","administratorLogin":"${sqlAdmin}","resourceGroupName":"${appservicegroup.name}"},"type":"azure-native:sql:Server"},"sa":{"type":"azure-native:storage:StorageAccount","properties":{"kind":"StorageV2","sku":{"name":"Standard_LRS"},"resourceGroupName":"${appservicegroup.name}"}},"app":{"type":"azure-native:web:WebApp","properties":{"siteConfig":{"connectionStrings":[{"connectionString":"Server= tcp:${sqlServer.name}.database.windows.net;initial catalog=${db.name};userID=${sqlAdmin};password=${sqlPassword.result};Min Pool Size=0;Max Pool Size=30;Persist Security Info=true;","type":"SQLAzure","name":"db"}],"appSettings":[{"value":"https://${sa.name}.blob.core.windows.net/${container.name}/${blob.name}?${blobAccessToken}","name":"WEBSITE_RUN_FROM_PACKAGE"},{"value":"${appInsights.instrumentationKey}","name":"APPINSIGHTS_INSTRUMENTATIONKEY"},{"name":"APPLICATIONINSIGHTS_CONNECTION_STRING","value":"InstrumentationKey=${appInsights.instrumentationKey}"},{"value":"~2","name":"ApplicationInsightsAgent_EXTENSION_VERSION"}]},"resourceGroupName":"${appservicegroup.name}","serverFarmId":"${appserviceplan}"}},"appservicegroup":{"type":"azure-native:resources:ResourceGroup"}},"name":"azure-app-service","runtime":"yaml","outputs":{"endpoint":"${app.defaultHostName}"},"description":"A static website hosted on AWS S3"}
{"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"IaC bindings for keyclolak","name":"keycloak"}
{"description":"Basic example creating a keeypair","runtime":"nodejs","name":"keypair"}
{"description":"Basic example of nginx deployed in Azure VM Scale Sets written in Python","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"azure-py-vm-scaleset","template":{"config":{"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"azure:location":{"description":"The Azure location to use","default":"WestUS"},"azure:environment":{"default":"public","description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)"}}}}
{"name":"staged-rollout","description":"Staged application rollout gated by Prometheus checks","template":null,"runtime":"nodejs"}
{"name":"aliases_retype_component","runtime":"nodejs","description":"A program that replaces a resource with a new name and alias."}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"description":"Setup permanent s3 bucket for this project","runtime":"go","name":"setup-s3-permanent"}
{"name":"l1-stack-reference","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"description":"A minimal Go Pulumi program","name":"nginx-go","runtime":"go","template":{"description":"A minimal Go Pulumi program"}}
{"description":"A Pulumi program that demonstrates creating various AWS resources in Golang","name":"go-resources","runtime":"go","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}}}
{"description":"A minimal TypeScript Pulumi program with the classic Azure provider","name":"frontdoor","runtime":"nodejs"}
{"description":"An example that deploys an API Gateway REST API with an Amazon Cognito authorizer.","name":"awsx-apigateway-auth-cognito-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"regress-4128"}
{"name": "create-role", "runtime": "dotnet", "description": "Demonstrate use of AWS AssumeRole Functionality in C#"}
{"description":"Gitcoin production environment","runtime":"nodejs","name":"production"}
{"description":"Basic example of an AWS web server accessible over HTTP (in Python!)","name":"webserver-py","runtime":"python"}
{"description":"Initial deployment without tags\n","name":"test-aws-1655-sdkv2","runtime":"yaml","outputs":{"actual":"${res.tags}"},"resources":{"aws-provider":{"type":"pulumi:providers:aws"},"res":{"properties":{"aliasAttributes":["email"]},"options":{"provider":"${aws-provider}"},"type":"aws:cognito:UserPool"}}}
{"description":"A minimal AWS Python Pulumi program","name":"aws-py-apigateway-lambda-serverless","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"resources":{"res":{"options":{"provider":"${aws-provider}"},"type":"aws:s3:BucketV2"},"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}}},"description":"Change tag `foo` value to `quux`\n","outputs":{"actual":"${res.tags}"},"runtime":"yaml","name":"test-aws-1655-bucket"}
{"name":"azure-cs-aks-cosmos-helm","runtime":"dotnet","description":"A Helm chart deployed to AKS that stores TODOs in an Azure Cosmos DB MongoDB API"}
{"name":"validate_python_resource","runtime":"python","description":"A test Python program."}
{"runtime":"dotnet","description":"Creates Azure Container Instance with a public IP","name":"azure-cs-aci"}
{"runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"name":"aws-simulated-dbserver-database-typescript","description":"An example that deploys a simulated database server and database resource"}
{"name":"construct_component_provider_propagation_nodejs","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"description":"A program that constructs remote component resources with first class provider.","runtime":"nodejs"}
{"runtime":"yaml","description":"A minimal Pulumi program to create a Keycloak role","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/c018ddd7-4f68-44ed-a9a2-3bc72bdf55c4.zip"}}},"resources":{"keycloak-realm":{"properties":{"enabled":"1","realm":"my-realm"},"type":"keycloak:Realm"},"keycloak-role":{"type":"keycloak:Role","properties":{"realmId":"${keycloak-realm.id}"}}},"name":"index_roleYSrXc8ghkf2h"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"A minimal AWS TypeScript Pulumi program","name":"sample"}
{"description":"Demonstration of API Gateway routes","runtime":"go","name":"aws-apigateway-go-routes","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"}}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"name":"aws-s3bucket-bucketobject-interpolate-javascript","description":"An example that creates an S3 bucket and bucket object","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l2-resource-parent-inheritance"}
{"runtime":"yaml","name":"keyvault-accesspolicy","resources":{"vault":{"type":"azure-native:keyvault:Vault","properties":{"resourceGroupName":"${rg.name}","properties":{"enabledForDeployment":"","tenantId":"${config.tenantId}","sku":{"family":"A","name":"standard"}},"location":"${rg.location}"}},"rg":{"type":"azure-native:resources:ResourceGroup"},"ap1":{"type":"azure-native:keyvault:AccessPolicy","properties":{"vaultName":"${vault.name}","resourceGroupName":"${rg.name}","policy":{"permissions":{"secrets":["get","list","set","delete"],"keys":["get","create","delete","list"]},"objectId":"${config.objectId}","tenantId":"${config.tenantId}"}}}},"description":"API-related resources","variables":{"config":{"fn::invoke":{"function":"azure-native:authorization:getClientConfig"}}},"outputs":{"ap1ObjectId":"${ap1.policy.objectId}","ap1Id":"${ap1.id}"}}
{"runtime":"nodejs","name":"ts-error"}
{"variables":{"snsTopicPolicy":{"fn::invoke":{"Arguments":{"statements":[{"principals":[{"identifiers":["events.amazonaws.com"],"type":"Service"}],"effect":"Allow","resources":["${aws_logins.arn}"],"actions":["SNS:Publish"]}]},"Function":"aws:iam:getPolicyDocument"}}},"name":"aws_cloudwatch_eventRule_EventRule_1","runtime":"yaml","resources":{"sns":{"type":"aws:cloudwatch:EventTarget","properties":{"targetId":"SendToSNS","rule":"${console.name}","arn":"${aws_logins.arn}"}},"console":{"properties":{"description":"Capture each AWS Console Sign In","eventPattern":{"fn::toJSON":{"detail-type":["AWS Console Sign In via CloudTrail"]}},"name":"capture-aws-sign-in"},"type":"aws:cloudwatch:EventRule"},"aws_logins":{"properties":{"name":"aws-console-logins"},"type":"aws:sns:Topic"},"default":{"type":"aws:sns:TopicPolicy","properties":{"policy":"${snsTopicPolicy.json}","arn":"${aws_logins.arn}"}}}}
{"runtime":"python","name":"helm-local-unconfigured-provider","description":"A program that tests Helm chart creation from a local directory with an unconfigured provider"}
{"name": "refract-cms", "runtime": "nodejs", "description": "refract-cms website"}
{"resources":{"tested-resource":{"options":{"provider":"${provider}"},"properties":{"location":"us-central1","launchStage":"BETA","template":{"template":{"volumes":[{"name":"empty-dir-volume","emptyDir":{"medium":"MEMORY","sizeLimit":"128Mi"}}],"containers":[{"image":"us-docker.pkg.dev/cloudrun/container/hello","volumeMounts":[{"name":"empty-dir-volume","mountPath":"/mnt"}]}]}}},"type":"gcp:cloudrunv2:Job"},"provider":{"properties":{"project":"${gcp:project}"},"type":"pulumi:providers:gcp","options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]}}},"runtime":{"name":"yaml"},"name":"test"}
{"description":"An example stack encrypted with AWS KMS","runtime":"go","name":"awskms-encrypted-stack"}
{"name":"infra","runtime":{"name":"python"},"description":"A minimal AWS Python Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":""}}}}
{"description":"OpenPipe infra","runtime":"nodejs","name":"openpipe"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal Google Cloud Python Pulumi program","name":"project"}
{"runtime":"nodejs","name":"regression-12301","description":"Check that 'require' doesn't pick up JSON files."}
{"description":"An example that deploys multiple load-balanced VMs in Amazon EC2.","name":"awsx-load-balanced-ec2-instances-csharp","runtime":"dotnet"}
{"description":"A minimal AWS Go Pulumi program","runtime":"go","name":"aws-go-workshop"}
{"name":"l2-failed-create-continue-on-error","runtime":"mock"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-plain"}
{"name":"kms","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":"yaml","description":"Drop resource specific tags\n","outputs":{"actual":"${res.tags}"},"name":"test-aws-1655-legacy","resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}},"res":{"type":"aws:s3:Bucket","options":{"provider":"${aws-provider}"}}}}
{"runtime":"go","description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A Go program to deploy a containerized service on AWS","config":{"memory":{"default":"128","description":"The amount of memory to allocate for the container"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"cpu":{"default":"512","description":"The amount of CPU to allocate for the container"},"containerPort":{"default":"80","description":"The port to expose on the container"}}}}
{"name":"test-install","runtime":{"name":"python","options":{"virtualenv":"venv","toolchain":"pip"}},"description":"Run pulumi install via automation api"}
{"runtime":{"name":"yaml"},"name":"test","resources":{"provider":{"options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]},"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"}},"exampleTopic":{"options":{"provider":"${provider}"},"type":"gcp:pubsub:Topic"},"tested-resource":{"properties":{"topic":"${exampleTopic.name}","ackDeadlineSeconds":"20","pushConfig":{"pushEndpoint":"https://example.com/push","attributes":{"x-goog-version":"v1"}},"labels":{"foo":"bar"}},"type":"gcp:pubsub:Subscription","options":{"provider":"${provider}"}}}}
{"description":"A program that replaces a resource with a new name and alias.","name":"aliases_rename_component_and_child","runtime":"nodejs"}
{"description":"EKS cluster without default node group but with instance role","runtime":"nodejs","name":"default-instance-role"}
{"runtime":"nodejs","description":"Minimal config which shows how AWS encryption support works","name":"pulumi-aws-kms"}
{"runtime":"go","name":"alb-lambda-pulumi-go","description":"A minimal AWS Pulumi YAML program"}
{"description":"Initial deployment without tags\n","name":"test-aws-1655-bucket","resources":{"aws-provider":{"type":"pulumi:providers:aws"},"res":{"type":"aws:s3:BucketV2","options":{"provider":"${aws-provider}"}}},"outputs":{"actual":"${res.tags}"},"runtime":"yaml"}
{"runtime":"nodejs","description":"Deploys a simple Helm chart with .Capabilities.ApiVersions conditional","name":"helm-api-versions"}
{"runtime":{"options":{"toolchain":"poetry"},"name":"python"},"name":"pulumi-python-poetry-parent","description":"A simple Python Pulumi program that uses Poetry, with the pyproject.toml file in a parent folder"}
{"description":"Tests that we await cert-manager's webhook's readiness.","name":"await-custom-resource-status","runtime":"nodejs"}
{"runtime":"nodejs","name":"parameterized"}
{"name":"awsx-apigateway-custom-domain-csharp","description":"An example that deploys an API Gateway REST API with a custom domain from Route53.","runtime":"dotnet"}
{"name":"ol-infrastructure-redash-application","description":"Pulumi project for deploying the stack of services needed by the Redash business intelligence platform","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python"}
{"runtime":"nodejs","name":"video-thumbnailer-lambda","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"description":"A video thumbnail extractor using serverless functions packaged with containers"}
{"description":"A program that constructs a remote component resource with a child resource that takes a long time to be created.","runtime":"python","name":"construct_component_slow_py"}
{"description":"A program that tests the engine's ability to do delete-before-create replacement.","runtime":"nodejs","name":"delete_before_create"}
{"name":"l2-invoke-variants","runtime":"nodejs"}
{"name": "go-webserver", "runtime": "go", "description": "Basic example of an AWS web server accessible over HTTP", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A program that ensures we can set tags on a stack.","runtime":"nodejs","name":"simple_tags","config":{"pulumi:tags":{"value":{"tagB":"true","tagN":"42","tagS":"hello"}}}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"awsx-elb-multi-listener-redirect-python","description":"An example of an ApplicationLoadBalancer with multiple listeners and a custom redirect action."}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getEncryptionByDefault Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Create ingress resources using Kubernetes provider for Pulumi.","runtime":"nodejs","name":"ingress"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal AWS Python Pulumi program","name":"python_assume_role"}
{"runtime":"nodejs","description":"A simple containers demo.","name":"containers-fargate"}
{"name":"trail","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":"nodejs","name":"cbp-aws-ts","description":"A minimal AWS TypeScript Pulumi program"}
{"name":"aws-cs-s3-folder","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"runtime":"dotnet","description":"A static website hosted on AWS S3"}
{"description":"Basic example of a creating an AWS lambda layer.","name":"lambda-layer-new","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getOutposts C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Shadow the default tag with a resource specific tag\n","outputs":{"actual":"${res.tags}"},"resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}},"res":{"type":"aws:s3:BucketV2","options":{"provider":"${aws-provider}"},"properties":{"tags":{"foo":"bar","fizz":"buzz"}}}},"runtime":"yaml","name":"test-aws-1655-bucket"}
{"runtime":"nodejs","name":"main-overrides-package-json","main":"entrypoint.js","description":"The main option from Pulumi.yaml overrides the main setting from package.json"}
{"runtime":"yaml","name":"l1-empty"}
{"name":"webserver-cs","runtime":"dotnet","description":"Basic C# example of an AWS web server accessible over HTTP."}
{"name":"consume-random-login","outputs":{"rawPassword":"${provider.password}","password":"${user.password}","helloworld":"${helloworld}","user":"${user.name}"},"plugins":{"providers":[{"name":"credentials","path":".."}]},"variables":{"helloworld":{"fn::invoke":{"options":{"provider":"${provider}"},"arguments":{"message":"Hello, World!"},"return":"out","function":"credentials:sign"}}},"runtime":"yaml","resources":{"provider":{"type":"pulumi:providers:credentials","properties":{"password":"123456","user":"PlantRoot","hash":"Adler32"}},"user":{"options":{"provider":"${provider}"},"type":"credentials:User"}}}
{"name":"awsx-apigateway-openapi-full-yaml","resources":{"api":{"type":"aws-apigateway:RestAPI","properties":{"swaggerString":"{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"title\": \"example\",\n    \"version\": \"1.0\"\n  },\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"x-amazon-apigateway-integration\": {\n          \"httpMethod\": \"GET\",\n          \"passthroughBehavior\": \"when_no_match\",\n          \"type\": \"http_proxy\",\n          \"uri\": \"https://httpbin.org/uuid\"\n        }\n      }\n    }\n  },\n  \"x-amazon-apigateway-binary-media-types\": [\"*/*\"]\n}\n"}}},"runtime":"yaml","description":"An example of configuring an API Gateway instance with an OpenAPI/Swagger JSON definition.","outputs":{"url":"${api.url}"}}
{"description":"An example that applies unit testing to C# and Azure resources.","name":"test-unit-cs","runtime":"dotnet"}
{"description":"Example of Deploying a Kubernetes Cluster via GitHub Actions and Workloads with Pulumi Kubernetes Operator","name":"cicd-with-gha-and-pulumi-operator","runtime":"nodejs"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"description":"Pulumi project for managing Route53 DNS zones","name":"ol-infrastructure-aws-dns","runtime":"python"}
{"description":"Setup ECS Cluster for this project","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"runtime":"go","name":"setup-ecs-cluster"}
{"runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"description":"A minimal Google Cloud TypeScript Pulumi program","name":"explicit-provider-with-config"}
{"name":"aws-iam-user-group-grouppolicy-python","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"An example that deploys an IAM user, group, and group policy on AWS.","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"main":"subdir","name":"l2-resource-asset-archive","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name":"l2-invoke-options","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"resources":{"examplesubnetwork":{"properties":{"name":"pulumi-subnetwork2","ipCidrRange":"10.2.0.0/16","network":"${exampleNetwork.id}","region":"us-central1"},"type":"gcp:compute/subnetwork:Subnetwork"},"exampleNetwork":{"type":"gcp:compute/network:Network","properties":{"name":"mynetwork2","autoCreateSubnetworks":""}},"exampleRouter":{"type":"gcp:compute/router:Router","properties":{"region":"us-central1","network":"${exampleNetwork.id}","name":"pulumi-router2","bgp":{"asn":"64514"}}}},"runtime":"yaml","description":"A minimal Google Cloud Pulumi YAML program","name":"network"}
{"runtime":"yaml","configuration":{"foo":{"type":"bool","default":"1"}},"name":"mismatched-config-type","config":{"foo":"3"}}
{"name":"l2-resource-asset-archive","main":"subdir","runtime":"nodejs"}
{"name":"transit_gateway_multi_account","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"name": "vunk.dev", "runtime": {"name": "python"}, "main": "infrastructure", "description": "Infrastructure for vunk.dev"}
{"description":"A minimal AWS Python Pulumi program","name":"delete_old_lambda_versions","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"description":"A Go Pulumi program with AWS Cloud Control provider","name":"aws-simple-go","runtime":"go"}
{"name":"awsx-elb-web-listener-go","description":"An example that deploys an ApplicationLoadBalancer listening on port 80.","runtime":"go"}
{"description":"A minimal Go Pulumi program","runtime":{"name":"go","options":{"buildTarget":"./a.out"}},"name":"go-build"}
{"runtime":"dotnet","description":"A minimal C# Pulumi program","name":"pulumi-scaleway-example-csharp-server"}
{"name":"construct_component_provider_go","runtime":"go","description":"A program that constructs remote component resources with first class provider."}
{"name": "neuronek", "runtime": "nodejs", "description": "\ud83e\uddec Intelligent dosage tracker application with purpose to monitor supplements, nootropics and psychoactive substances along with their long-term influence on one's mind and body.", "main": "infrastructure/", "stackConfigDir": "infrastructure/stacks"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that deploys an ApplicationLoadBalancer listening on a private subnet.","name":"awsx-elb-private-subnet-javascript"}
{"description":"Google Cloud Run example","name":"cloud_run","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":"yaml","description":"An example of fetching the default AWS VPC for the current region.","outputs":{"privateSubnetIds":"${default-vpc.privateSubnetIds}","vpcId":"${default-vpc.vpcId}","publicSubnetIds":"${default-vpc.publicSubnetIds}"},"resources":{"default-vpc":{"type":"awsx:ec2:DefaultVpc"}},"name":"awsx-vpc-default-yaml"}
{"description":"Static website example","template":{"config":{"includeWWW":{"description":"If true create an A record for the www subdomain of targetDomain pointing to the generated cloudfront distribution. If a certificate was generated it will support this subdomain.","default":"1"},"certificateArn":{"description":"(Optional) ACM certificate ARN for the target domain; must be in the us-east-1 region. If omitted, a certificate will be created."},"pathToWebsiteContents":{"default":"./www","description":"Relative path to the website's contents"},"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"},"targetDomain":{"description":"The domain to serve the website at (e.g. www.example.com)"}}},"name":"aws-ts-static-website","runtime":"nodejs"}
{"runtime":"python","template":{"description":"A Python program to deploy a static website on AWS","config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"path":{"description":"The path to the folder containing the website","default":"./www"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"}}},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnGatewayAttachment TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l1-empty","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"name":"l2-failed-create-continue-on-error","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}}}
{"name":"awsguard-test-compute","description":"Tests for policy rules related to AWS Compute.","runtime":"nodejs"}
{"name":"cloudrun","description":"Eventuous sample application deployment to Google Cloud Run","runtime":"nodejs"}
{"runtime":"nodejs","description":"Tests SSA previews with restricted auth.","name":"preview-auth-tests"}
{"name": "database-layer", "runtime": "nodejs", "description": "Database layer for the aws-stackreference-architecture", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-west-2"}, "dbUsername": {"description": "(Required) The username to use for the database"}, "dbPassword": {"description": "(Required) The password to use for the database- stored as a secret"}, "dbName": {"description": "(Required) The name of the database to create when the DB instance is created"}, "networkingStack": {"description": "(Required) The reference to the networking stack on which the database will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)"}}}}
{"name":"compilation_error","runtime":"nodejs","description":"A minimal TypeScript Pulumi program"}
{"name":"aws-go-fargate","runtime":"go","description":"An end-to-end AWS ECS Fargate infrastructure as code project."}
{"name":"awsx-apigateway-auth-cognito-typescript","runtime":"nodejs","description":"An example that deploys an API Gateway REST API with an Amazon Cognito authorizer."}
{"name":"l2-resource-parent-inheritance","runtime":"nodejs"}
{"runtime":"go","description":"Generate testdata from the random provider","name":"genradom"}
{"name": "s3", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name": "azure-linux-virtual-machine", "runtime": "nodejs", "description": "Create a linux virtual machine resource"}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"pulumi-aws-cdk-ec2-instance"}
{"name":"printfgo","runtime":"go","description":"A Pulumi program that printfs some stuff."}
{"runtime":"python","name":"construct_component_provider_propagation_py","description":"A program that constructs remote component resources with first class provider.","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]}}
{"name":"esc-training-k8s-infra","runtime":"nodejs"}
{"runtime":"go","description":"Talos on Azure","name":"azure"}
{"runtime":"dotnet","description":"A Portal Dashboard.","name":"cs-dashboard"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"name":"aws-s3websitebucket-oai-bucketpolicy-csharp","runtime":"dotnet","description":"An example that creates a website S3 bucket, a CloudFront Origin Access Identity, and a bucket policy."}
{"name":"l2-resource-simple","runtime":"java"}
{"description":"An AWS Python Pulumi program demonstrating sharing configuration via StackReference resources","template":{"config":{"departmentStack":{"description":"The stack to reference department properties from"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"companyStack":{"description":"The stack to reference company properties from"},"teamName":{"description":"The team name to use"}}},"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-py-stackreference-team"}
{"description":"A minimal Talos program in Pulumi YAML","runtime":"dotnet","name":"talos"}
{"name":"${PROJECT}","outputs":{"domainName":"${domain.name}"},"resources":{"domain":{"properties":{"name":"my-domain.io"},"type":"digitalocean:Domain"}},"description":"${DESCRIPTION}","runtime":"yaml","template":{"description":"A minimal DigitalOcean Pulumi YAML program"}}
{"name": "random", "runtime": "yaml", "resources": {"randomPassword": {"type": "random:RandomPassword", "properties": {"length": 16, "special": true, "overrideSpecial": "_%@"}}}, "outputs": {"password": "${randomPassword.result}"}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcEndpointServiceAllowedPrinciple TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"go","name":"compilation_error","description":"A minimal Go Pulumi program"}
{"runtime":"yaml","name":"l2-map-keys"}
{"name":"${PROJECT}","runtime":"python","description":"${DESCRIPTION}","template":{"description":"A Python program to deploy a virtual machine on Google Cloud","config":{"machineType":{"description":"The GCP machine type to use for the VM","default":"f1-micro"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:zone":{"description":"The Google Cloud availability zone to deploy into","default":"us-central1-a"},"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"},"servicePort":{"default":"80","description":"The HTTP service port to expose on the VM"},"instanceTag":{"description":"The tag to apply to the VM instance","default":"webserver"},"osImage":{"description":"The OS image type to use for the VM","default":"debian-11"}}}}
{"name":"aws-s3bucket-bucketpolicy-python","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"An example that deploys an S3 bucket and bucket policy on AWS.","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"description":"A minimal AWS Python Pulumi program","runtime":{"name":"python"},"name":"infra","config":{"pulumi:tags":{"value":{"pulumi:template":""}}}}
{"description":"n example of configuring an API Gateway route with an OpenAPI/Swagger definition.","runtime":"dotnet","name":"awsx-apigateway-openapi-route-csharp"}
{"name":"k8s-apps-pod-sidecar","runtime":"nodejs","description":"Create a Pod with a Sidecar container."}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"description":"An example that deploys an IAM user, group, and group policy on AWS.","runtime":"nodejs","name":"aws-iam-user-group-grouppolicy-typescript"}
{"name": "<%= layerName %>", "runtime": "nodejs", "description": "<%= layerDescription %>", "main": "src/index.ts"}
{"runtime":"scala","name":"gcp-gke","description":"A Google Kubernetes Engine (GKE) example"}
{"name":"eks_kubelet_config","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"name":"aws-s3-bucketpolicy-jsonstringify-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"An example that uses JSON helpers to define an S3 bucket policy."}
{"description":"A minimal AWS TypeScript Pulumi SaaS Setup","runtime":"nodejs","name":"serverless-aws-react-saas"}
{"name":"custom_timeouts","runtime":"python","description":"A program that instantiates a resource with a custom timeout"}
{"name": "dpopp", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","name":"regress-554"}
{"name":"sourcegraph-deploy-kubernetes-helper","runtime":"nodejs","description":"A small helper program to aid in creating a test cluster for https://github.com/sourcegraph/deploy-sourcegraph."}
{"runtime":{"name":"nodejs","options":{"typescript":"","packagemanager":"npm"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-javascript"}}},"name":"k8s-deployment-service-for-minikube-javascript","description":"An example that deploys a Deployment and Service for Minikube on Kubernetes."}
{"name":"alb-lambda-pulumi-cs","runtime":"dotnet","description":"A minimal AWS Pulumi YAML program"}
{"description":"Demonstrate use of AWS AssumeRole Functionality","name":"assume-role","runtime":"nodejs"}
{"runtime":"nodejs","description":"A simple command example","name":"command-stderr"}
{"description":"A Python Pulumi program","name":"oidc-test","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name":"l2-resource-simple","runtime":"mock"}
{"name":"${PROJECT}","template":{"description":"A minimal OCI TypeScript Pulumi program"},"description":"${DESCRIPTION}","runtime":"nodejs"}
{"runtime":"nodejs","description":"A Deployment that mounts a ConfigMap; updating the data in the ConfigMap triggers a rollout of the Deployment","name":"k8s-apps-configmap-rollout"}
{"name":"pulumi-main","runtime":"nodejs","main":"src","description":"Set the program directory using the main property"}
{"template":{"description":"A minimal OpenStack TypeScript Pulumi program"},"name":"${PROJECT}","runtime":"nodejs","description":"${DESCRIPTION}"}
{"template":{"config":{"azure:location":{"description":"The Azure location to deploy to (e.g., `eastus` or `westeurope`)"},"azure:environment":{"default":"public","description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}},"name":"azure-ts-stream-analytics","runtime":"nodejs","description":"Uses an Azure Stream Analytics job to transform data in an Event Hub."}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"testing_infrastructure","description":"Small program to test with automation api"}
{"runtime":"nodejs","name":"awsx-apigateway-openapi-full-typescript","description":"An example of configuring an API Gateway instance with an OpenAPI/Swagger JSON definition."}
{"runtime":"go","description":"An integration test for the about command","name":"about-go"}
{"template":{"config":{"azure:location":{"description":"The Azure location to use (e.g., `eastus` or `westeurope`)"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"azure:environment":{"default":"public","description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)"}}},"runtime":"nodejs","description":"Example of managing the secrets and permissions via services and features like KeyVault, AD Managed Identity, AD RBAC","name":"azure-msi-keyvault-rbac"}
{"runtime":"nodejs","description":"A simple application load balancer example using ec2 instances.","name":"alb-ec2-instance"}
{"description":"An example that creates a new VPC with a custom security group.","name":"awsx-vpc-security-groups-csharp","runtime":"dotnet"}
{"runtime":"nodejs","name":"api-bmpi-dev","description":"API for BMPI.dev"}
{"description":"A minimal Azure Native Go Pulumi program","runtime":"go","name":"aks-namespace.go"}
{"name":"stack_outputs_py","description":"A simple Python program that has stack outputs.","runtime":"python"}
{"name":"esc-workshop-aws-secrets-setup","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"A minimal TypeScript Pulumi program"}
{"name":"azure-eventhub","runtime":"nodejs","description":"Work with Azure Event Hubs"}
{"template":{"description":"A Pulumi YAML program to deploy a static website on Azure","config":{"azure-native:location":{"default":"WestUS","description":"The Azure region to deploy into"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"path":{"default":"./www","description":"The path to the folder containing the website"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"}}},"outputs":{"cdnURL":"https://${endpoint.hostName}","cdnHostname":"${endpoint.hostName}","originHostname":"${originHostname}","originURL":"${account.primaryEndpoints.web}"},"name":"${PROJECT}","runtime":"yaml","config":{"path":{"default":"./www","type":"string"},"indexDocument":{"type":"string","default":"index.html"},"errorDocument":{"type":"string","default":"error.html"}},"resources":{"resource-group":{"type":"azure-native:resources:ResourceGroup"},"profile":{"properties":{"sku":{"name":"Standard_Microsoft"},"resourceGroupName":"${resource-group.name}"},"type":"azure-native:cdn:Profile"},"account":{"type":"azure-native:storage:StorageAccount","properties":{"kind":"StorageV2","sku":{"name":"Standard_LRS"},"resourceGroupName":"${resource-group.name}"}},"synced-folder":{"type":"synced-folder:index:AzureBlobFolder","properties":{"storageAccountName":"${account.name}","resourceGroupName":"${resource-group.name}","containerName":"${website.containerName}","path":"${path}"}},"website":{"properties":{"error404Document":"${errorDocument}","resourceGroupName":"${resource-group.name}","indexDocument":"${indexDocument}","accountName":"${account.name}"},"type":"azure-native:storage:StorageAccountStaticWebsite"},"endpoint":{"properties":{"profileName":"${profile.name}","originHostHeader":"${originHostname}","isCompressionEnabled":"1","resourceGroupName":"${resource-group.name}","isHttpAllowed":"","contentTypesToCompress":["text/html","text/css","application/javascript","application/json","image/svg+xml","font/woff","font/woff2"],"origins":[{"name":"${account.name}","hostName":"${originHostname}"}],"isHttpsAllowed":"1"},"type":"azure-native:cdn:Endpoint"}},"description":"${DESCRIPTION}","variables":{"originHostname":{"fn::select":["2",{"fn::split":["/","${account.primaryEndpoints.web}"]}]}}}
{"description":"A minimal Kubernetes Go Pulumi program","runtime":"go","name":"yaml.go"}
{"runtime":"python","name":"log_debug_py"}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"tailscale-workshop-subnet-router"}
{"name":"assume_role","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"config":{"aws:region":{"value":"us-west-2"}},"runtime":"python","name":"tf"}
{"description":"Integration test for Stack Reference","runtime":{"options":{"v":"0","logtostderr":""},"name":"java"},"name":"stack-reference"}
{"runtime":"go","description":"An example of configuring an API Gateway instance with an OpenAPI/Swagger JSON definition.","name":"awsx-apigateway-openapi-full-go"}
{"description":"An example demonstrating the Terraform Remote State resource","runtime":"nodejs","name":"localstate-ts"}
{"runtime":"nodejs","description":"misc integration test","name":"pulumi-aws-misc"}
{"description":"A program that replaces a resource with a new name and alias.","name":"aliases_retype_component","runtime":"nodejs"}
{"runtime":"go","name":"bucket-go","description":"Basic example of a creating a google cloud storage bucket in Go."}
{"name":"l1-output-bool","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"testing-unit-go","runtime":"go","description":"An example that applies unit testing to Go and AWS resources."}
{"name":"aws-simulated-dbserver-database-java","description":"An example that deploys a simulated database server and database resource","runtime":"java","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}}}
{"runtime":"nodejs","name":"stack_dependencies","description":"A program that has dependent resources that are saved in the checkpoint file.\n"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"l2-invoke-simple"}
{"runtime":"nodejs","description":"A minimal TypeScript Pulumi program","name":"infrastructure"}
{"runtime":"nodejs","name":"large_resource_js","description":"A Node.js program with a >4mb string resource"}
{"description":"An example that deploys an S3 bucket, S3 bucket objects, and a Pulumi random resource.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"runtime":{"options":{"packagemanager":"npm","typescript":""},"name":"nodejs"},"name":"aws-s3bucket-s3objects-random-javascript"}
{"template":{"config":{"aws:region":{"description":"AWS Region","default":"us-west-2"}},"description":"Deploy a Slack webhook Lambda function."},"description":"${DESCRIPTION}","runtime":"nodejs","name":"${PROJECT}"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-py-apigatewayv2-http-api-quickstart","description":"Quickstart example of using AWS API Gateway v2 HTTP API"}
{"name":"pulumi-k8s-test","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs"}
{"name":"eks_patch_coredns","description":"A minimal AWS Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-iampolicy-jsonparse-python","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"An example that deploys an IAM policy and manipulates it using JSON parsing."}
{"runtime":{"name":"nodejs"},"name":"sourcemap"}
{"name": "stack-advanced-topics", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Pulumi Workshop - AWS Python stack advanced topics"}
{"name":"pulumi-azure-logic-apps","runtime":"go","description":"A minimal Azure Native Go Pulumi program"}
{"runtime":"nodejs","description":"ec2 integration test","name":"pulumi-aws-ec2"}
{"name":"ec2instance","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"runtime":"nodejs","description":"Basic example of an AWS EC2 instance"}
{"runtime":"go","name":"patch-resources"}
{"runtime":"java","description":"An example that creates a Kubernetes Deployment","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-java"}}},"name":"kubernetes-deployments-java"}
{"runtime":"nodejs","name":"bytes","description":"Test the RandomBytes resource."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "By Identifier", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"config":{"google-native:region":{"description":"The Google Cloud region"},"google-native:project":{"description":"The Google Cloud project to deploy into"}}},"description":"Google Cloud Functions example","runtime":"nodejs","name":"google-cloud-ts-functions"}
{"runtime":"go","name":"l2-provider-grpc-config"}
{"description":"A program that replaces a resource with a new name and alias.","runtime":"go","name":"transformations_simple"}
{"name":"${PROJECT}","template":{"description":"A TypeScript program to deploy a static website on Google Cloud","config":{"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"path":{"default":"./www","description":"The path to the folder containing the website"}}},"runtime":"nodejs","description":"${DESCRIPTION}"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RegexMatchSet Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"go_helm_import_deployment","runtime":"go","description":"Test import support for Kubernetes resources deployed by a Helm chart externally."}
{"name":"s3-browser-demo","description":"S3 Browser demo","runtime":"nodejs","backend":{"url":"s3://pulumi.linhart.tech"},"options":{"refresh":"always"}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Conditional Trigger", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal Python Pulumi program","name":"oci-k8s-py","config":{"pulumi:tags":{"value":{"pulumi:template":"python"}}},"runtime":{"options":{"virtualenv":"venv","toolchain":"pip"},"name":"python"}}
{"runtime":"dotnet","description":"Local setup for PeakLimsIdp","name":"PeakLimsIdp"}
{"runtime":"nodejs","description":"Deploys common EKS app services.","name":"k8s-aws-apps-svcs"}
{"description":"A minimal DotNet Pulumi program","runtime":"dotnet","name":"dotnet"}
{"description":"An example that creates an API Gateway instance and configures a route as an HTTP proxy.","runtime":"java","name":"awsx-apigateway-http-proxy-java"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "dotnet", "template": {"description": "A minimal VB.NET Pulumi program"}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "JDBC Target", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Application TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"pulumi-python-duplicate-output","runtime":"python","description":"A Python program that tests returning the same output twice."}
{"name":"azure-ts-vm-provisioners","runtime":"nodejs","description":"An example of an Azure VM webserver instance with post-provision configuration."}
{"config":{"version":{"type":"string","description":"the chart version"},"repo":{"description":"the chart repository URL","default":"","type":"string"},"values":{"description":"the chart values","type":"string"},"namespace":{"description":"the release namespace","type":"string"},"chart":{"type":"string","description":"the chart specification"},"import-id":{"default":"","type":"string","description":"an existing Helm release to import"},"name":{"description":"the release name","type":"string"}},"runtime":"go","description":"Test import support for Kubernetes Helm Release resource.","name":"go_helm_release_import"}
{"description":"A minimal Go Pulumi program","runtime":"go","name":"testproj"}
{"runtime":"python","name":"talos","description":"A minimal Talos program in Pulumi YAML"}
{"name":"cue","description":"CUE Example","runtime":{"name":"yaml","options":{"compiler":"cue export"}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS UserLoginProfile Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"A minimal TypeScript Pulumi program","name":"scaleway-ts"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"minimal","description":"A minimal Pulumi program."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS NetworkAclRule Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"aws-ec2-sg-nginx-server-javascript","runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An examples that deploys a simple public facing Nginx server"}
{"runtime":"dotnet","template":{"config":{"alicloud:region":{"default":"cn-beijing","description":"The AliCloud region to deploy into"}},"description":"A minimal AliCloud VB.NET Pulumi program"},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"main":"pulumi/","name":"pinterestClone","runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application."}
{"description":"An example that deploys an S3 bucket, S3 bucket objects, and a Pulumi random resource.","name":"aws-s3bucket-s3objects-random-typescript","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"resources":{"demo-image":{"type":"docker:Image","properties":{"skipPush":"1","buildOnPreview":"1","build":{"args":{"RANDOM_ARG":"${extraArg.stdout}"}},"imageName":"docker.io/pulumibot/test-unknowns-build-on-preview-fail:yaml"}},"extraArg":{"type":"command:local:Command","properties":{"create":"echo extra-argument"}}},"runtime":"yaml","name":"unknowns-build-on-preview-fail-yaml"}
{"name":"command-ec2-remote","description":"A simple command example","runtime":"nodejs"}
{"description":"Azure Synapse example","name":"azure-synapse","runtime":"scala"}
{"description":"Simple apache application","name":"apache","runtime":"nodejs"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"holochain-infra"}
{"name":"labels-combinations-go","description":"Testing provider capability to label resources correctly","runtime":"go"}
{"runtime":"nodejs","name":"pulumi-aws-cdk-apigateway","description":"apigateway integration test"}
{"name":"aws-ec2-vpc-resources-python","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"An example that deploys a VPC with an internet gateway, public subnet, route table, and security group, and launches an Amazon Linux EC2 instance with Nginx."}
{"name":"test-provider-url-python","plugins":{"providers":[{"name":"testprovider","path":"../../../testprovider"}]},"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal Python Pulumi program"}
{"description":"Test Kubernetes YAML package.","runtime":"go","name":"go_yaml_kubernetes"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSnapshotIds Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"uninstallable","runtime":"go","description":"A project that cannot be installed because it lacks a go.mod"}
{"name":"novops-test-infra-azure","config":{"azure-native:subscriptionId":"2d58c223-b709-4e70-ae8e-43ac15fec51a","azure-native:location":"francecentral"},"description":"Setup Azure infra for Novops tests","runtime":"nodejs"}
{"runtime":"nodejs","description":"A minimal TypeScript Pulumi program","name":"pulumi-stack-provider"}
{"description":"A minimal AWS Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"fargate_awsx_vpc"}
{"name":"simple-yaml","outputs":{"bucketEndpoint":"http://${my-bucket.websiteEndpoint}"},"resources":{"my-bucket":{"properties":{"website":{"indexDocument":"index.html"}},"type":"aws:s3:Bucket"},"index.html":{"type":"aws:s3:BucketObject","options":{"dependsOn":["${ownershipControls}"]},"properties":{"contentType":"text/html","acl":"public-read","source":{"fn::stringAsset":"<h1>Hello, world!</h1>"},"bucket":"${my-bucket}"}},"ownershipControls":{"type":"aws:s3:BucketOwnershipControls","properties":{"bucket":"${my-bucket}","rule":{"objectOwnership":"ObjectWriter"}}},"publicAccessBlock":{"type":"aws:s3:BucketPublicAccessBlock","properties":{"bucket":"${my-bucket}","blockPublicAcls":""}}},"runtime":"yaml"}
{"runtime":"nodejs","description":"Creates an Azure cluster using best-practices.","name":"k8s-az-cluster"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS OrganizationManagedRule C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"description":"An example that creates an S3 bucket and bucket object","runtime":"dotnet","name":"aws-s3bucket-bucketobject-interpolate-csharp"}
{"runtime":"dotnet","name":"aws-fs-s3-folder","description":"A static website hosted on AWS S3","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}}}
{"resources":{"myDistribution":{"type":"aws:cloudfront:Distribution","properties":{"orderedCacheBehaviors":[],"staging":"","viewerCertificate":{"cloudfrontDefaultCertificate":"1"},"defaultCacheBehavior":{"allowedMethods":["GET","HEAD","OPTIONS"],"cachedMethods":["GET","HEAD","OPTIONS"],"forwardedValues":{"queryString":"","cookies":{"forward":"none"}},"targetOriginId":"myS3Origin","viewerProtocolPolicy":"allow-all"},"enabled":"1","origins":[{"originId":"myS3Origin","domainName":"mybucket.s3.amazonaws.com"}],"defaultRootObject":"index.html","restrictions":{"geoRestriction":{"restrictionType":"none"}}}}},"name":"cloudfront-distribution","runtime":"yaml"}
{"name": "infrastructure", "runtime": "go", "description": "A minimal Packet.net Go Pulumi program", "main": "src/main.go"}
{"runtime":"dotnet","description":"A minimal dotnet Pulumi program","name":"testproj_dotnet"}
{"runtime":"yaml","name":"vm","outputs":{"bucketName":"${my-bucket.url}"},"description":"A minimal Google Cloud Pulumi YAML program","resources":{"my-bucket":{"type":"gcp:storage:Bucket","properties":{"location":"US"}}}}
{"runtime":"nodejs","description":"KeyVault resources","name":"keyvault"}
{"name":"helm-chart-local","runtime":"nodejs","description":"Deploys a simple Helm chart to Kubernetes, from local disk."}
{"description":"${DESCRIPTION}","config":{"k8sNamespace":{"default":"nginx-ingress","type":"string"}},"name":"${PROJECT}","runtime":"yaml","template":{"config":{"k8sNamespace":{"default":"nginx-ingress","description":"The Kubernetes namespace to deploy into"}},"description":"A Pulumi YAML program to deploy a Helm chart onto a Kubernetes cluster"},"outputs":{"name":"${ingresscontroller.name}"},"resources":{"ingresscontroller":{"properties":{"chart":"nginx-ingress","skipCrds":"1","version":"0.14.1","values":{"controller":{"service":{"extraLabels":"${appLabels}"},"enableCustomResources":"","appprotectdos":{"enable":""},"appprotect":{"enable":""}}},"repositoryOpts":{"repo":"https://helm.nginx.com/stable"},"namespace":"${ingressns.metadata.name}"},"type":"kubernetes:helm.sh/v3:Release"},"ingressns":{"properties":{"metadata":{"name":"${k8sNamespace}","labels":"${appLabels}"}},"type":"kubernetes:core/v1:Namespace"}},"variables":{"appLabels":{"app":"nginx-ingress"}}}
{"description":"Pulumi Codebase for my AWS-based homelab","runtime":{"name":"nodejs"},"name":"homelab"}
{"name":"esm-js-main","description":"Use ECMAScript modules for a plain JS program.","runtime":"nodejs"}
{"name":"job-queue","runtime":"nodejs","description":"Job Queue"}
{"resources":{"api":{"properties":{"routes":[{"localPath":"www","path":"/"}]},"type":"aws-apigateway:RestAPI"}},"outputs":{"url":"${api.url}"},"runtime":"yaml","name":"awsx-apigateway-s3-yaml","description":"An example that uses API Gateway to serve static content from Amazon S3."}
{"description":"A minimal Langserve AWS Go Pulumi program","name":"aws-go-langserve","runtime":"go"}
{"description":"Basic example of an AWS web server accessible over HTTP","runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"name":"aws-ts-webserver"}
{"runtime":"nodejs","name":"get_created","description":"A program that uses an explicit provider."}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-resource-alpha"}
{"name":"selfhosted-02-networking","description":"Used to create networking resources for the eks selfhosted installer.","runtime":"nodejs"}
{"name": "bastion", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Logging Individual S3 Bucket Events", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS Key TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getQueue Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A simple application load balancer example.","name":"alb","runtime":"nodejs"}
{"name":"printfpy","runtime":"python","description":"A Pulumi program that printfs some stuff."}
{"runtime":"nodejs","name":"ignore-scaling-changes","description":"Tests ignoring changes to the desired size of node groups"}
{"description":"GCP Functions example","name":"gcp-functions","runtime":"scala"}
{"name":"gcp-instance-nginx","runtime":"scala","description":"Deploy a Nginx Server in a GCP instance"}
{"name":"awsx-vpc-cidr-csharp","runtime":"dotnet","description":"An example that creates a new VPC and configuring a custom CIDR block."}
{"name":"localai-flowise-example","runtime":"nodejs","description":"A TypeScript program to deploy a Kubernetes cluster on AWS","config":{"eksNodeInstanceType":"m4.4xlarge","publicSubnetCIDRs":["10.0.0.0/27","10.0.0.32/27"],"maxClusterSize":"6","availabilityZones":["eu-central-1a","eu-central-1b"],"desiredClusterSize":"3","minClusterSize":"3","aws:region":"eu-central-1","vpcNetworkCidr":"10.0.0.0/24"}}
{"runtime":"python","name":"realm-python","description":"A minimal Python Pulumi program to create KeyCloak Realm"}
{"runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"description":"An example that deploys an IAM user, group, and group policy on AWS.","name":"aws-iam-user-group-grouppolicy-go"}
{"name":"awsx-vpc-typescript","description":"An example that creates a new VPC using the default settings.","runtime":"nodejs"}
{"name":"simple-random","description":"A simple example of using various random resources.","runtime":"nodejs"}
{"runtime":"go","description":"An example of building/publishing a Docker container image to Google Cloud GCR","name":"cbp-gcp-go"}
{"description":"EKS cluster example of tagging subnets created with Pulumi","name":"example-subnet-tags","runtime":"nodejs"}
{"description":"Fetch the default VPC details","name":"ts-vpc-get-default-vpc","runtime":"nodejs"}
{"name":"l1-empty","runtime":"go"}
{"name":"dotnet_helm","runtime":"dotnet","description":"A test of a Helm charts in .NET."}
{"name":"minimal","description":"A minimal Pulumi program using a JAR.","runtime":{"name":"java","options":{"binary":"target/minimal-1.0-SNAPSHOT-jar-with-dependencies.jar"}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS HostedPublicVirtualInterface Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"An empty program","runtime":"yaml","name":"about"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-substructure-vault-setup","description":"Mange initial setup of a new Vault cluster so that it is ready to be used with Pulumi","runtime":"python"}
{"name": "getting-started-pulumi-aws-csharp", "runtime": "dotnet", "description": "A minimal AWS C# Pulumi program"}
{"name":"undefined_stack_output","description":"Check that undefined stack output warn the user.","runtime":"nodejs"}
{"description":"Test for service account token.","runtime":"nodejs","name":"service-account-token-secret"}
{"runtime":"python","description":"A minimal Google Cloud Python Pulumi program","name":"pythonfordevops-gke-pulumi"}
{"name": "databricks_cluster", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal AWS Python Pulumi program","name":"get_vpc_subnets_rt"}
{"name":"l2-invoke-simple","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getRegion Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"redis-cloud-aws-ts","runtime":"nodejs","description":"A minimal TypeScript Pulumi program"}
{"description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","main":"pulumi/","runtime":"nodejs","name":"pinterestClone"}
{"description":"Build and push image to private registry and create a Deployment from it.","runtime":"nodejs","name":"k8s-apps-deploy-container"}
{"resources":{"crd":{"properties":{"metadata":{"name":"crontabs.previewtest.pulumi.com"},"spec":{"scope":"Namespaced","names":{"listKind":"CronTabList","singular":"crontab","kind":"CronTab","plural":"crontabs"},"versions":[{"name":"v1","storage":"1","schema":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"cronSpec":{"type":"string"},"image":{"type":"string"}},"type":"object"}},"type":"object"}},"served":"1"}],"conversion":{"strategy":"None"},"group":"previewtest.pulumi.com"}},"options":{"provider":"${provider}"},"type":"kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition"},"provider":{"type":"pulumi:providers:kubernetes"}},"runtime":"yaml","name":"crd-previews"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS CustomerGateway Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"java","name":"l1-empty"}
{"name":"aws-s3bucket-bucketpolicy-yaml","description":"An example that deploys an S3 bucket and bucket policy on AWS.","outputs":{"bucket_arn":"${myBucket.arn}","bucket_name":"${myBucket.id}"},"resources":{"myBucketPolicy":{"type":"aws:s3/bucketPolicy:BucketPolicy","properties":{"bucket":"${myBucket.id}","policy":{"fn::toJSON":{"Statement":[{"Resource":"${myBucket.arn}/*","Principal":{"Service":"lambda.amazonaws.com"},"Action":["s3:PutObject","s3:PutObjectAcl"],"Effect":"Allow"}],"Version":"2012-10-17"}}}},"myBucket":{"type":"aws:s3:BucketV2"}},"runtime":"yaml"}
{"name":"aws-s3-bucket-resources-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"description":"An example that deploys S3 bucket, metric, notification, object, and policy resources.","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"stepfunctions","runtime":"nodejs","description":"Basic example of AWS Step Functions with AWS Cloud Control"}
{"description":"${DESCRIPTION}","template":{"config":{"path":{"default":"./www","description":"The path to the folder containing the website"},"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}},"description":"A Go program to deploy a static website on AWS"},"runtime":"go","name":"${PROJECT}"}
{"resources":{"randomPassword":{"properties":{"overrideSpecial":"_%@","length":"16","special":"1"},"type":"random:RandomPassword"}},"name":"random","outputs":{"password":"${randomPassword.result}"},"runtime":"yaml"}
{"runtime":"nodejs","name":"aws-simple-ts","description":"A TypeScript Pulumi program with AWS Cloud Control provider"}
{"name": "localstack-ecs-test", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"runtime":"nodejs","description":"Use an explicit Pulumi Kubernetes provider.","name":"provider"}
{"description":"Sample Deployment for Azure Container Apps","runtime":"go","name":"009-deploy-aca-with-pulumi"}
{"description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","name":"pinterestClone","runtime":"nodejs","main":"pulumi/"}
{"description":"${DESCRIPTION}","template":{"description":"A Python program to deploy a Kubernetes cluster on Azure","config":{"sshPubKey":{"description":"Contents of the public key for SSH access to cluster nodes"},"mgmtGroupId":{"description":"The object ID (from az ad group list) of a group to make cluster admins"},"azure-native:location":{"default":"westus2","description":"The Azure location (region) in which to create the cluster"},"prefixForDns":{"description":"DNS prefix for the cluster","default":"pulumi"},"kubernetesVersion":{"description":"Kubernetes version to deploy in the cluster","default":"1.26.3"},"nodeVmSize":{"description":"VM size to use for worker nodes in the cluster","default":"Standard_DS2_v2"},"numWorkerNodes":{"description":"Number of worker nodes in the cluster","default":"3"}}},"name":"${PROJECT}","runtime":"python"}
{"runtime":"yaml","name":"l2-large-string"}
{"runtime":"nodejs","description":"An example of building/publishing a Docker container image to Azure ACR","name":"cbp-azure-ts"}
{"description":"${DESCRIPTION}","runtime":"go","name":"${PROJECT}","template":{"description":"A Go program to deploy a Kubernetes cluster on OVHcloud","config":{"nodePoolDesiredNodes":{"description":"Number of desired nodes in the cluster","default":"1"},"nodePoolMaxNodes":{"description":"Number of max nodes in the cluster","default":"3"},"ovhRegion":{"default":"GRA9","description":"The OVHcloud region to deploy into"},"clusterName":{"description":"Name of the cluster","default":"my_desired_cluster"},"nodePoolName":{"description":"Name of the node pool","default":"my-desired-pool"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"nodePoolMinNodes":{"default":"1","description":"Number of min nodes in the cluster"},"flavorName":{"description":"Name of the flavor/type of the machine","default":"b3-8"}}}}
{"description":"Provision a DigitalOcean Kubernetes cluster and deploy to it in Python","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"digitalocean-py-k8s"}
{"runtime":"go","name":"go-lambda-gateway","description":"Basic example of an AWS lambda With API Gateway","template":{"config":{"go-lambda:accountid":{"description":"The AWS account ID to use"},"aws:region":{"description":"The AWS region to deploy into","default":"us-east-2"},"go-lambda:gateway-region":{"default":"us-east-2","description":"The AWS region to deploy the AWS API Gateway to"}}}}
{"description":"An example that deploys a Deployment and Service for Minikube on Kubernetes.","runtime":{"options":{"toolchain":"pip","virtualenv":"venv"},"name":"python"},"name":"k8s-deployment-service-for-minikube-python","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-python"}}}}
{"runtime":{"name":"yaml","options":{"compiler":"pwsh -file ./powershell_complete.ps1 -noninteractive"}},"name":"psyamlpulumi"}
{"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"A TypeScript program to deploy a VPC and EC2 instance on AWS.","name":"pulumi-cdk-interop"}
{"name":"aws-ec2-sg-nginx-server-csharp","runtime":"dotnet","description":"An examples that deploys a simple public facing Nginx server"}
{"runtime":"nodejs","description":"Minimal LoadBalancer Typescript component test","name":"ts-lb-simple"}
{"name":"pulumi-python-resource-args","description":"A Python program that uses a generated library from schema to test resource args","runtime":"python"}
{"name":"import","runtime":"nodejs"}
{"name":"go_helm_local_kubernetes","runtime":"go","description":"Test Kubernetes Helm package with local Chart."}
{"name":"webserver-py","description":"Basic example of an Azure web server accessible over HTTP.","runtime":"python"}
{"name":"aws-s3bucket-bucketobject-interpolate-python","description":"An example that creates an S3 bucket and bucket object","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"aws-go-console-slack-notification","runtime":"go","description":"Deploy necessary resources to notify Slack when an operation is performed via the AWS Console."}
{"runtime":"nodejs","description":"Show how to create a StatefulSet","name":"k8s-apps-statefulset"}
{"description":"Creates an managed infrastructure stack for an GCP GKE cluster.","runtime":"nodejs","name":"k8s-gcp-infra"}
{"main":"src/index.ts","description":"Klustered","runtime":"nodejs","name":"klustered"}
{"runtime":"go","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","name":"kubernetes-go-guestbook"}
{"runtime":{"name":"scala"},"name":"source-stack-test","description":"Besom cross stack references source stack"}
{"name": "folio", "runtime": "nodejs", "description": "FOLIO deployment"}
{"description":"A program that smoke-tests the Kubernetes SDK, specifying inputs with dicts","runtime":"python","name":"smoke-test"}
{"runtime":"nodejs","name":"example-storage-classes","description":"Creates an EKS cluster with storage classes, and showcases how to use them."}
{"name":"go_helm_release","description":"Test Kubernetes Helm Release resource with remote Chart.","runtime":"go"}
{"name": "grpc-test", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"name":"cbp-docker-go","description":"A minimal Go Pulumi program","runtime":"go"}
{"runtime":"java","description":"An example that creates a new VPC with a custom subnet specification.","name":"awsx-vpc-subnets-java"}
{"runtime":"yaml","variables":{"secret":{"fn::secret":{"SECRET_ARG":"supersecret"}},"secretName":{"fn::secret":"pulumibot/test-secrets:yaml"}},"outputs":{"imageName":"${demo-image.imageName}"},"resources":{"demo-image":{"properties":{"imageName":"${secretName}","build":{"args":"${secret}"},"skipPush":"1"},"type":"docker:Image","options":{"version":"v4.1.0"}}},"name":"dockerfile-secret"}
{"template":{"config":{"azure-k8s:app-name":{"description":"The app name to use for the Service Principal"},"azure-k8s:vm-sku":{"description":"The vm sku to use for the VMs."},"azure-k8s:aks-cluster-name":{"description":"The Azure AKS Cluster name to use"},"azure-k8s:node-count":{"description":"The Azure AKS node count to use"},"azure-k8s:network-policy":{"description":"The Azure AKS network policy to use (`azure`, `calico`)","default":"calico"},"azure-k8s:kubernetes-version":{"description":"The kubernetes version to use.","default":"1.18.4"},"azure-k8s:dns-prefix":{"description":"The dns prefix to use for the k8s."},"azure-k8s:username":{"default":"ubuntu","description":"The username to use for the VMs."},"azure-k8s:project-name":{"description":"The project name for tagging purporses.","default":"orch-dev"},"azure-k8s:sp-name":{"description":"The Azure Service Principal name to use","default":"wallaroo-dev_sp"},"azure-k8s:resourcegroup-name":{"description":"The Azure Resource Group name to use","default":"wallaroo-dev_rg"},"azure-k8s:node-pool-name":{"description":"The Azure AKS node pool name to use","default":"default"},"azure-k8s:ssh-key-data":{"description":"The ssh key data to use"},"azure-k8s:location":{"description":"The Azure location to use (`eastus`, `eastus2`,`centralus`, `westus2`)","default":"eastus"}}},"runtime":"nodejs","name":"azure-k8s","description":"Azure k8s AKS Cluster and related Resources creation and management"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"l2-explicit-parameterized-provider"}
{"runtime":"nodejs","name":"aws-dbc-done","config":{"pulumi:tags":{"value":{"pulumi:template":"https://github.com/pulumi/examples/tree/master/aws-ts-containers-dockerbuildcloud"}}},"description":"An example that builds a Docker image in DBC and deploys a container to AWS Fargate."}
{"name": "frontdoor", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program with the classic Azure provider"}
{"runtime":"go","name":"extra-sg-go","description":"Example of using extra user-specific security groups in Go."}
{"name":"network","description":"Basic example of an Azure networking.","runtime":"nodejs"}
{"description":"Basic example of a serverless AWS application.","runtime":"nodejs","name":"serverless"}
{"name": "ubuntu-s3", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"main":"pulumi/","name":"pinterestClone","runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API."}
{"runtime":"nodejs","name":"pulumi-k8s","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"description":"The development cluster for NativeLink.","organization":{"pulumi:tags":{"company":"Trace Machina, Inc."}},"runtime":"go","org":"TraceMachina","backend":{"url":"file://~"},"name":"nativelink"}
{"name":"aws-ec2-instance-with-sg-csharp","description":"An example that shows how to create an EC2 instance and security group.","runtime":"dotnet"}
{"runtime":"yaml","resources":{"alert":{"properties":{"description":"Action will be triggered when Transactions count is greater than 50.","resourceGroupName":"${exampleResourceGroup.name}","scopes":["${toMonitor.id}"],"actions":[{"actionGroupId":"${main.id}"}],"criterias":[{"aggregation":"Total","metricName":"Transactions","metricNamespace":"Microsoft.Storage/storageAccounts","operator":"GreaterThan","threshold":"50","dimensions":[{"values":["*"],"operator":"Include","name":"ApiName"}]}]},"type":"azure:monitoring:MetricAlert"},"main":{"properties":{"shortName":"exampleact","webhookReceivers":[{"name":"callmyapi","serviceUri":"http://example.com/alert"}],"resourceGroupName":"${exampleResourceGroup.name}"},"type":"azure:monitoring:ActionGroup"},"toMonitor":{"type":"azure:storage:Account","properties":{"accountReplicationType":"LRS","resourceGroupName":"${exampleResourceGroup.name}","accountTier":"Standard","location":"${exampleResourceGroup.location}"}},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"North Central US"}}},"name":"monitoring"}
{"description":"A simple Python Pulumi program that uses Poetry.","runtime":{"name":"python","options":{"toolchain":"poetry"}},"name":"pulumi-python-poetry"}
{"runtime":"yaml","outputs":{"imageName":"${image.imageName}"},"config":{},"resources":{"image":{"properties":{"build":{"dockerfile":"Dockerfile","context":"."},"imageName":"pulumi.example.com/test-yaml:tag1","skipPush":"1"},"type":"docker:Image"},"docker-provider":{"options":{"version":"4.0.0-alpha.0"},"type":"pulumi:providers:docker","defaultProvider":"1"}},"description":"A minimal Pulumi YAML program","variables":{},"name":"image-yaml"}
{"name":"${PROJECT}","template":{"description":"A minimal OpenStack Go Pulumi program"},"description":"${DESCRIPTION}","runtime":"go"}
{"name":"l1-output-string","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"name": "qs-gke", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"description":"A program that exercises all possible Pulumi resource steps.","name":"steps","runtime":"nodejs"}
{"name":"l2-invoke-options-depends-on","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"name":"lambda-authorizer","runtime":"nodejs","description":"A sample AWS API Gateway example that uses Custom Authorizers"}
{"resources":{"cluster":{"type":"eks:Cluster","properties":{"subnetIds":"${subnetIds}","maxSize":"2","desiredCapacity":"2","vpcId":"${vpcId}","instanceType":"t2.medium","minSize":"1"}}},"name":"aws-eks","outputs":{"kubeconfig":"${cluster.kubeconfig}"},"runtime":"yaml","description":"An EKS cluster","variables":{"vpcId":{"Fn::Invoke":{"Arguments":{"default":"1"},"Return":"id","Function":"aws:ec2:getVpc"}},"subnetIds":{"Fn::Invoke":{"Arguments":{"vpcId":"${vpcId}"},"Return":"ids","Function":"aws:ec2:getSubnetIds"}}}}
{"description":"A program that exports some outputs and then errors in a later step.","runtime":"go","name":"stack_outputs_program_error_go"}
{"outputs":{"service":"${service.metadata.name}","deployment":"${deployment.metadata.name}"},"resources":{"service":{"type":"kubernetes:core/v1:Service","properties":{"spec":{"selector":"${appLabels}","ports":[{"targetPort":"4040","port":"80"}]}}},"deployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"spec":{"template":{"spec":{"containers":[{"args":["http","webhook-receiver.flux-system:80"],"name":"ngrok","image":"ngrok/ngrok:2.3.40-alpine"}]},"metadata":{"labels":"${appLabels}"}},"replicas":"1","selector":{"matchLabels":"${appLabels}"}}}}},"runtime":"yaml","name":"ngrok","description":"Run ngrok to tunnel webhooks to Flux","variables":{"appLabels":{"app":"ngrok"}}}
{"name":"stack-readme-yaml","variables":{"readme":{"Fn::ReadFile":"./Pulumi.README.md"}},"description":"A minimal Pulumi YAML program demonstrating stack readme feature","outputs":{"readme":"${readme}","strVar":"foo","arrVar":["fizz","buzz"]},"runtime":"yaml"}
{"name": "web-app", "runtime": "nodejs", "description": "A Lambda quick deployment project", "template": {"config": {"kubernetes:context": {"description": "On which context will it run", "default": "lambda"}, "namespace": {"description": "The k8s namespace used for every resource"}, "project": {"description": "The project name used in metadata"}, "component": {"description": "The component name used in metadata"}, "container-image": {"description": "The full image path containing the web-app setup without version"}, "registry-secret": {"description": "The credentials used to connect to the container registry", "secret": true}, "environment": {"description": "The environment of the project", "default": "dev"}, "version": {"description": "The version used for the container image", "default": "latest"}, "url": {"description": "The url used for the deployment, default: ({project}.app.lambda-it.ch)"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "CloudWatch Alarm Check", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS UserPolicyAttachment C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"aws-parallel-ts","description":"A lot of simple resources created in parallel"}
{"runtime":"nodejs","description":"EKS cluster example with a Kubernetes Service IPv4 Range","name":"example-cluster-with-serviceiprange"}
{"name": "pulumi-challenge-august-22", "description": "Pulumi Challenge August 2022", "runtime": "nodejs"}
{"description":"An end-to-end AWS ECS Fargate infrastructure as code project.","runtime":"go","name":"fargate"}
{"description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","runtime":"nodejs","name":"pinterestClone","main":"pulumi/"}
{"name":"basic-ts","description":"A basic typescript program for integration testing","runtime":"nodejs"}
{"name":"pulumi-emacs-lisp","runtime":{"name":"yaml","options":{"compiler":"emacs -batch -l ./pulumi.el --eval '(pulumi-emacs)'"}}}
{"runtime":"nodejs","description":"Tests Server-side Apply support with proper handling of empty map fields","name":"server-side-apply-empty-maps-tests"}
{"name":"awsx-apigateway-s3-csharp","runtime":"dotnet","description":"An example that uses API Gateway to serve static content from Amazon S3."}
{"runtime":"nodejs","template":{"description":"A minimal DigitalOcean TypeScript Pulumi program"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "test-aws-1655-legacy", "runtime": "yaml", "description": "Add a resource specific tag: `foo: buzz`\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux"}}}}, "res": {"type": "aws:s3:Bucket", "properties": {"tags": {"fizz": "buzz"}}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"description":"An ASP.NET application running in AWS ECS Fargate, using C# infrastructure as code","runtime":"dotnet","main":"Infra","name":"aws-cs-fargate"}
{"name": "browserhack-demo", "description": "Website for hosting BrowserHack, NetHack in your browser!", "runtime": "nodejs"}
{"description":"An empty Go Pulumi program to test passphrase rotation.","name":"rotate_passphrase","runtime":"go"}
{"runtime":"go","description":"A program that constructs remote component resources with a method that returns an error.","name":"construct_component_methods_errors_go"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS NetworkInterfaceSecurityGroupAttachment TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"runtime_error","description":"A minimal C# Pulumi program","runtime":"dotnet"}
{"description":"A minimal TypeScript Pulumi program","name":"compilation_error","runtime":"nodejs"}
{"name":"azure-arm-template","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example of deploying an Azure Resource Manager (ARM) template using Pulumi."}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"cloudtrail-python","description":"A minimal AWS Python Pulumi program to create an AWSX Cloudtrail"}
{"name":"base","runtime":"nodejs","description":"coin stack"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Error Handling Configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"keplr-contract-registry-aws-lambda"}
{"description":"EKS nodegroup with IAM examples","name":"example-nodegroup-py","runtime":"python"}
{"description":"Demonstrate use of AWS AssumeRole Functionality","runtime":"nodejs","name":"aws-ts-create-role"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"description":"Manage infrastructure required by the Open Discussions application","runtime":"python","name":"ol-infrastructure-open_discussions-application"}
{"description":"An example that demonstrates a few interesting things you can do at runtime with Pulumi.","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"aws-static-website-with-runtime-logic-python"}
{"name":"aws-acm-certificate-csharp","runtime":"dotnet","description":"Creates a simple ACM certificate resource","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}}}
{"name": "aws-js-containers", "description": "NGINX container example", "runtime": "nodejs", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}}}}
{"name":"helm-no-default-provider","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":"dotnet","description":"${DESCRIPTION}","template":{"config":{"azure:location":{"default":"WestUS2","description":"The Azure location to use"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}},"description":"A minimal F# Pulumi program with the classic Azure provider"},"name":"${PROJECT}"}
{"runtime":"dotnet","description":"Test kustomize support.","name":"dotnet_kustomize"}
{"name": "python-fargate-example", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"runtime":"java","name":"awsx-apigateway-openapi-route-java","description":"n example of configuring an API Gateway route with an OpenAPI/Swagger definition."}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": {"name": "nodejs", "options": {"typescript": false}}, "template": {"description": "A minimal RedisCloud JavaScript Pulumi program", "config": {"cardType": {"description": "Credit card type (Visa, Mastercard) of the card on file with Rediscloud"}, "lastFourNumbers": {"description": "Last four numbers of the card on file with RedisCloud"}, "rediscloud:apiKey": {"description": "RedisCloud access key", "secret": true}, "rediscloud:secretKey": {"description": "RedisCloud secret key", "secret": true}}}}
{"description":"An example of creating a CosmosDB container through a Azure's Cosmos SDK and deploying a Logic App and an API Connection","runtime":"scala","name":"azure-cosmosdb-logicapp"}
{"name":"${PROJECT}","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"path":{"default":"./www","description":"The path to the folder containing the website"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"}},"description":"A Pulumi YAML program to deploy a static website on AWS"},"outputs":{"cdnURL":"https://${cdn.domainName}","originHostname":"${bucketWebsite.websiteEndpoint}","cdnHostname":"${cdn.domainName}","originURL":"http://${bucketWebsite.websiteEndpoint}"},"resources":{"bucket":{"type":"aws:s3:BucketV2"},"public-access-block":{"properties":{"blockPublicAcls":"","bucket":"${bucket.id}"},"type":"aws:s3:BucketPublicAccessBlock"},"bucketWebsite":{"properties":{"bucket":"${bucket.bucket}","errorDocument":{"suffix":"${errorDocument}"},"indexDocument":{"key":"${indexDocument}"}},"type":"aws:s3:BucketWebsiteConfigurationV2"},"cdn":{"type":"aws:cloudfront:Distribution","properties":{"defaultCacheBehavior":{"minTtl":"600","maxTtl":"600","allowedMethods":["GET","HEAD","OPTIONS"],"targetOriginId":"${bucket.arn}","compress":"1","cachedMethods":["GET","HEAD","OPTIONS"],"defaultTtl":"600","viewerProtocolPolicy":"redirect-to-https","forwardedValues":{"cookies":{"forward":"all"},"queryString":"1"}},"viewerCertificate":{"cloudfrontDefaultCertificate":"1"},"origins":[{"customOriginConfig":{"originSslProtocols":["TLSv1.2"],"httpsPort":"443","httpPort":"80","originProtocolPolicy":"http-only"},"originId":"${bucket.arn}","domainName":"${bucketWebsite.websiteEndpoint}"}],"priceClass":"PriceClass_100","restrictions":{"geoRestriction":{"restrictionType":"none"}},"customErrorResponses":[{"responseCode":"404","responsePagePath":"/${errorDocument}","errorCode":"404"}],"enabled":"1"}},"ownership-controls":{"properties":{"bucket":"${bucket.id}","rule":{"objectOwnership":"ObjectWriter"}},"type":"aws:s3:BucketOwnershipControls"},"bucket-folder":{"type":"synced-folder:index:S3BucketFolder","properties":{"path":"${path}","acl":"public-read","bucketName":"${bucket.bucket}"},"options":{"dependsOn":["${ownership-controls}","${public-access-block}"]}}},"description":"${DESCRIPTION}","config":{"path":{"type":"string","default":"./www"},"errorDocument":{"type":"string","default":"error.html"},"indexDocument":{"type":"string","default":"index.html"}},"runtime":"yaml"}
{"description":"Integration test for Aliases (rename scenario)","name":"aliases-rename","runtime":{"options":{"logtostderr":"","v":"0"},"name":"java"}}
{"runtime":"nodejs","description":"Basic example of load balanced droplets on DigitalOcean","name":"digitalocean-ts-loadbalanced-droplets"}
{"name": "base-builderimage-python", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"name":"aws-native-static-website","outputs":{"bucketName":"${site-bucket.bucketName}","websiteUrl":"${site-bucket.websiteURL}"},"runtime":"yaml","resources":{"index.html":{"type":"aws:s3:BucketObject","properties":{"contentType":"text/html","source":{"Fn::FileAsset":"./www/index.html"},"bucket":"${site-bucket}","acl":"public-read"}},"site-bucket":{"type":"aws-native:s3:Bucket","properties":{"websiteConfiguration":{"indexDocument":"index.html"}}},"bucketPolicy":{"type":"aws:s3:BucketPolicy","properties":{"bucket":"${site-bucket}","policy":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": \"*\",\n      \"Action\": [\"s3:GetObject\"],\n      \"Resource\": [\"${site-bucket.arn}/*\"]\n    }\n  ]\n}\n"}},"favicon.png":{"properties":{"contentType":"image/png","acl":"public-read","source":{"Fn::FileAsset":"./www/favicon.png"},"bucket":"${site-bucket}"},"type":"aws:s3:BucketObject"}},"description":"A static website hosted on AWS S3"}
{"name": "equinix-networkedge-device-link", "runtime": "yaml", "description": "An Equinix Network Edge virtual network device link resource", "config": {"accountName": {"type": "string"}, "accountMetro": {"type": "string"}, "device1Id": {"type": "string"}, "device2Id": {"type": "string"}}, "variables": {"accountfNum": {"fn::invoke": {"function": "equinix:networkedge:getAccount", "arguments": {"name": "${accountName}", "metroCode": "${accountMetro}"}, "return": "number"}}, "device1Metro": {"fn::invoke": {"function": "equinix:networkedge:getDevice", "arguments": {"uuid": "${device1Id}"}, "return": "metroCode"}}, "device2Metro": {"fn::invoke": {"function": "equinix:networkedge:getDevice", "arguments": {"uuid": "${device2Id}"}, "return": "metroCode"}}}, "resources": {"deviceLink": {"type": "equinix:networkedge:DeviceLink", "properties": {"name": "test-link", "subnet": "192.168.40.64/27", "devices": [{"id": "device1Id", "asn": 22111, "interfaceId": 6}, {"id": "device2Id", "asn": 22333, "interfaceId": 7}], "links": [{"accountNumber": "${accountfNum}", "srcMetroCode": "${device1Metro}", "dstMetroCode": "${device2Metro}", "throughput": "50", "throughputUnit": "Mbps"}]}}}, "outputs": {"status": "${deviceLink.status}", "devices": "${deviceLink.devices}"}}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"alb-ingress-controller"}
{"template":{"config":{"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"},"azure:location":{"default":"WestUS2","description":"The Azure location to use"}},"description":"A minimal TypeScript Pulumi program with the classic Azure provider"},"runtime":"nodejs","description":"${DESCRIPTION}","name":"${PROJECT}"}
{"runtime":"yaml","resources":{"MyDemoResource":{"properties":{"pathPart":"mydemoresource","restApi":"${MyDemoAPI.id}","parentId":"${MyDemoAPI.rootResourceId}"},"type":"aws:apigateway:Resource"},"MyDemoAPI":{"properties":{"description":"This is my API for demonstration purposes","name":"MyDemoAPI"},"type":"aws:apigateway:RestApi"}},"name":"aws_apigateway_resource_Resource_1"}
{"description":"An example of configuring request validators for an API Gateway instance.","name":"awsx-apigateway-validation-types-python","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"regress-3887"}
{"resources":{"res":{"type":"aws:s3:BucketV2","options":{"provider":"${aws-provider}"}},"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"quux"}}}}},"runtime":"yaml","outputs":{"actual":"${res.tags}"},"name":"test-aws-1655-bucket","description":"Drop resource specific tags\n"}
{"name":"novops-test-infra-gcp","description":"Setup Google Cloud infra for Novops tests","config":{"gcp:project":"398497848942"},"runtime":"nodejs"}
{"runtime":"python","description":"A Python Pulumi program that creates a Load Balancer with relative resource IDs","name":"py-loadbalancer"}
{"runtime":"nodejs","description":"Minimal config to check gcloud encryption support","name":"pulumi-gcloud-kms"}
{"resources":{"vpc":{"type":"awsx:ec2:Vpc","properties":{"cidrBlock":"172.16.8.0/24"}}},"name":"awsx-vpc-cidr-yaml","runtime":"yaml","description":"An example that creates a new VPC and configuring a custom CIDR block.","outputs":{"vpcId":"${vpc.vpcId}"}}
{"runtime":"nodejs","description":"Pulumi Kubernetes sample","name":"sample"}
{"description":"An example that shows how to create an EC2 instance and security group.","name":"aws-ec2-instance-with-sg-go","runtime":"go"}
{"variables":{"amiId":{"fn::invoke":{"arguments":{"mostRecent":"1","filters":[{"name":"name","values":["amzn2-ami-hvm-*"]}],"owners":["amazon"]},"return":"id","function":"aws:ec2:getAmi"}}},"runtime":"yaml","resources":{"vpc":{"type":"awsx:ec2:Vpc","properties":{"natGateways":{"strategy":"Single"}}},"instance":{"type":"aws:ec2:Instance","properties":{"vpcSecurityGroupIds":["${securityGroup.id}"],"instanceType":"t2.micro","ami":"${amiId}","subnetId":"${vpc.publicSubnetIds[0]}"}},"securityGroup":{"properties":{"vpcId":"${vpc.vpcId}"},"type":"aws:ec2:SecurityGroup"}},"outputs":{"vpcId":"${vpc.vpcId}"},"description":"An example that deploys an EC2 instance using a VPC and security group with Crosswalk for AWS.","name":"awsx-vpc-sg-ec2-yaml"}
{"runtime":"python","name":"aliases_rename_component_child","description":"A program that renames a component child with an alias."}
{"runtime":"yaml","name":"l1-output-bool"}
{"main":"subdir","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l2-resource-asset-archive"}
{"runtime":"nodejs","name":"provider-secret-config","description":"A minimal TypeScript Pulumi program"}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"pulumi-scaleway-quickstart"}
{"name":"stepfunctions-py","description":"Basic example of AWS Step Functions in Python","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l2-primitive-ref"}
{"name":"bookinfo","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"eks_teleport"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Gateway C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Storage Autoscaling", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"AWS Passport Scorer Infra","name":"passport-scorer","runtime":"nodejs"}
{"description":"An example demonstrating the Terraform Remote State resource","runtime":"python","name":"localstate-py"}
{"name": "go-lambda-gateway", "runtime": "go", "description": "Basic example of an AWS lambda With API Gateway", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-2"}, "go-lambda:accountid": {"description": "The AWS account ID to use"}, "go-lambda:gateway-region": {"description": "The AWS region to deploy the AWS API Gateway to", "default": "us-east-2"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "A Pulumi program for Kafka on EKS", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-west-2"}, "desiredCapacity": {"description": "The desired number of worker nodes", "default": 10}, "instanceType": {"description": "The type of EC2 instance for your worker nodes", "default": "t2.medium"}, "maxSize": {"description": "The max number of woker nodes", "default": 10}, "minSize": {"description": "The minimum number of worker nodes", "default": 10}, "numOfAvailZones": {"description": "The number of availability zones for the VPC", "default": 3}, "eksClusterName": {"description": "Name for the eks cluster", "default": "kafka-cluster"}, "vpcName": {"description": "Name for the vpc", "default": "kafka-vpc"}, "ownerTag": {"description": "Owner tag to be applied to all created resources. Should be your name or team name"}}}}
{"runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"description":"An example that deploys an IAM role and a policy attachment with an AWS managed policy on AWS.","name":"aws-iam-role-policyattachment-managedpolicy-go"}
{"description":"Azure Native Python Pulumi example featuring Helm chart deployment to AKS","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"azure-py-aks-helm"}
{"runtime":{"name":"python","options":{"toolchain":"pip","virtualenv":"venv"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}},"description":"A example that deploys the resources for a simple web server on Google Cloud.","name":"gcp-simple-webserver-python"}
{"description":"A simple server on Equinix.","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"equinix-py-webserver"}
{"description":"A minimal Google Cloud TypeScript Pulumi program","name":"pulimi-test","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"runtime":"nodejs"}
{"description":"A minimal AWS Go Pulumi program","runtime":"go","name":"application-go"}
{"runtime":"go","name":"kubernetes-go-crontabs","description":"A minimal Kubernetes Go Pulumi program"}
{"description":"A show case of how to use the Python Foundation SDK in Pulumi","name":"foundation-sdk-python","config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "azure-go-appservice-docker", "runtime": "go", "description": "Creates Azure App Service and Deploys Docker images to it"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"A minimal Langserve AWS JavaScript Pulumi program","name":"aws-js-langserve"}
{"runtime":"nodejs","name":"l2-resource-secret"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"awsx-vpc-fargate-service-javascript"}
{"description":"A program that smoke-tests .get support","name":"get","runtime":"python"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"codepaths-workspaces-tsc","main":"bin/index.js","description":"A project that uses npm and yarn workspaces and tsc. CodePaths computation should discover dependencies across the workspaces."}
{"name": "test-aws-1655-sdkv2", "runtime": "yaml", "description": "Add first default tag: `foo: bar``\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "bar"}}}}, "res": {"type": "aws:cognito:UserPool", "properties": {"aliasAttributes": ["email"]}, "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"runtime":"python","template":{"description":"A minimal Azure DevOps Python Pulumi program to create an AzureDevOps Project"},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"runtime":"python","description":"A minimal Python Pulumi program","name":"volume-py"}
{"name": "networking", "runtime": "nodejs", "description": "Define the VPC for this project"}
{"name":"kustomizev2","outputs":{"remote":"${remote.resources}","helm":"${helm.resources}","helloWorld":"${helloWorld.resources}","plugin":"${plugin.resources}"},"description":"Demonstrates the kustomize.Directory resource.\n","resources":{"remote":{"type":"kubernetes:kustomize/v2:Directory","properties":{"directory":"https://github.com/kubernetes-sigs/kustomize//examples/helloWorld/?ref=v3.3.1","skipAwait":"1","namespace":"${ns.metadata.name}"}},"ns":{"type":"kubernetes:core/v1:Namespace"},"helm":{"properties":{"directory":"./helmExample","namespace":"${ns.metadata.name}"},"type":"kubernetes:kustomize/v2:Directory"},"helloWorld":{"properties":{"namespace":"${ns.metadata.name}","skipAwait":"1","directory":"./helloWorld/staging"},"type":"kubernetes:kustomize/v2:Directory"},"plugin":{"properties":{"namespace":"${ns.metadata.name}","directory":"./pluginExample"},"type":"kubernetes:kustomize/v2:Directory"}},"runtime":"yaml"}
{"name":"${PROJECT}","description":"${DESCRIPTION}","template":{"description":"A TypeScript program to deploy a Kubernetes cluster on Google Cloud","config":{"nodesPerZone":{"description":"The desired number of nodes PER ZONE in the nodepool","default":"1"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"gcp:project":{"description":"The Google Cloud project to deploy into"}}},"runtime":"nodejs"}
{"name": "azure-py-appservice-docker", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Creates Azure App Service running Docker containers on Linux in Python", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}, "azure:location": {"description": "The Azure location to use", "default": "WestUS"}}}}
{"name":"pascal","runtime":{"options":{"compiler":"./pulumipascal.sh"},"name":"yaml"},"description":"Pulumi Pascal Example"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","description":"Provision and maintain the infrastructure required to run the Apache Superset business intelligence application","name":"ol-infrastructure-superset-application"}
{"description":"An example that deploys an S3 bucket, S3 bucket objects, and a Pulumi random resource.","runtime":"yaml","name":"aws-s3bucket-s3objects-random-yaml","resources":{"pet-name":{"type":"random:RandomPet"},"random-site":{"options":{"parent":"${my-bucket}"},"properties":{"bucket":"${my-bucket.bucket}","content":"${pet-name.id}"},"type":"aws:s3:BucketObject"},"my-bucket":{"type":"aws:s3:Bucket"},"index":{"options":{"parent":"${my-bucket}"},"type":"aws:s3:BucketObject","properties":{"content":"Thanks for using Pulumi!","bucket":"${my-bucket.bucket}"}}},"outputs":{"PetName":"${pet-name.id}"}}
{"template":{"description":"A minimal Random TypeScript Pulumi program."},"runtime":"nodejs","name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Repository C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"changing-region","description":"A test program to try changing AWS region","runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"description":"A minimal AWS Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"lbriggs_webserver_component"}
{"name":"conference-helm-pulumi","runtime":"go","description":"helm chart deployment with pulumi"}
{"name":"l2-failed-create-continue-on-error","runtime":"go"}
{"name":"autonaming","description":"A program with autonamed resources.","runtime":"nodejs"}
{"name":"aws-simulated-dbserver-database-yaml","outputs":{"databaseName":"${database.name}","sqlServerName":"${sqlServer.name}"},"variables":{"sqlServer":{"name":"myDbServer","ipAddress":"10.0.0.0/24"},"database":{"engine":"sql-db","name":"myExampleDatabase"}},"runtime":"yaml"}
{"runtime":"yaml","description":"${DESCRIPTION}","template":{"config":{"memory":{"default":"128","description":"The amount of memory to allocate for the container"},"cpu":{"default":"512","description":"The amount of CPU to allocate for the container"},"containerPort":{"description":"The port to expose on the container","default":"80"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}},"description":"A Pulumi YAML program to deploy a containerized service on AWS"},"name":"${PROJECT}","config":{"containerPort":{"default":"80"},"cpu":{"default":"512"},"memory":{"default":"128"}},"resources":{"image":{"properties":{"context":"./app","repositoryUrl":"${repo.url}","platform":"linux/amd64"},"type":"awsx:ecr:Image"},"cluster":{"type":"aws:ecs:Cluster"},"service":{"properties":{"assignPublicIp":"1","taskDefinitionArgs":{"container":{"memory":"${memory}","cpu":"${cpu}","essential":"1","portMappings":[{"targetGroup":"${loadbalancer.defaultTargetGroup}","containerPort":"${containerPort}"}],"image":"${image.imageUri}","name":"app"}},"cluster":"${cluster.arn}"},"type":"awsx:ecs:FargateService"},"repo":{"type":"awsx:ecr:Repository","properties":{"forceDelete":"1"}},"loadbalancer":{"type":"awsx:lb:ApplicationLoadBalancer"}},"outputs":{"url":"http://${loadbalancer.loadBalancer.dnsName}"}}
{"description":"Manage deployment of Consul server clusters","runtime":"python","name":"ol-infrastructure-consul","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name": "boris-site", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"main":"subdir","name":"l1-main","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"runtime":{"name":"yaml"},"name":"test","resources":{"provider":{"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"},"options":{"version":"6.67.0","ignoreChanges":["project","region","zone"]}},"tested-resource":{"properties":{"template":{"containers":[{"livenessProbe":{"httpGet":{"path":"/"}},"image":"us-docker.pkg.dev/cloudrun/container/hello","startupProbe":{"periodSeconds":"3","initialDelaySeconds":"0","timeoutSeconds":"1","failureThreshold":"1","tcpSocket":{"port":"8080"}}}]},"location":"us-central1"},"options":{"provider":"${provider}"},"type":"gcp:cloudrunv2:Service"}}}
{"name":"aws-py-ec2-provisioners","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example of manually configuring an AWS EC2 virtual machine"}
{"description":"EKS cluster with network policies","name":"network-policies","runtime":"nodejs"}
{"name":"l2-explicit-provider","runtime":"nodejs"}
{"config":{"localProviderBuild":{"type":"string"},"pulumi:tags":{"value":{"pulumi:template":"aws-yaml"}}},"variables":{"ec2ami":{"fn::invoke":{"arguments":{"filters":[{"values":["al2023-ami-2023*x86_64*"],"name":"name"}],"owners":["amazon"],"mostRecent":"1"},"function":"aws:ec2:getAmi","return":"id"}},"policyArn":"arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess","instanceType":"t2.medium"},"backend":{"url":"file://./pulumi-state"},"runtime":"yaml","description":"Test the ability of pulumi-aws to authenticate on an EC2 instance with IMDSv2 enabled","outputs":{"publicIp":"${inst.publicIp}","commandOut":"${init-cmd.stdout}","bucket":"${upload-bucket.id}","instanceId":"${inst.id}"},"name":"imds-v2","resources":{"init-cmd":{"properties":{"create":"# Install pulumi and pulumi-resource-aws into PATH\nexport PATH=\"/home/ec2-user/.pulumi/bin:$PATH\"\ncp /tmp/pulumi-resource-aws /home/ec2-user/.pulumi/bin/\nchmod a+x /home/ec2-user/.pulumi/bin/pulumi-resource-aws\necho \"pulumi version:\"\npulumi version\necho \"pulumi-resource-aws version:\"\npulumi-resource-aws -version\nmkdir /home/ec2-user/repro\ncp /tmp/Pulumi.yaml /home/ec2-user/repro/Pulumi.yaml\ncd /home/ec2-user/repro\nmkdir ./pulumi-state\nexport PULUMI_CONFIG_PASSPHRASE=123456\npulumi stack init dev\npulumi stack select dev\npulumi config\npulumi preview\n","connection":{"host":"${inst.publicIp}","user":"ec2-user","privateKey":"${priv-key.privateKeyOpenssh}"}},"type":"command:remote:Command","options":{"ignoreChanges":["connection"],"dependsOn":["${install-cmd}"]}},"inst":{"options":{"dependsOn":["${upload-provider}"]},"type":"aws:ec2/instance:Instance","properties":{"ami":"${ec2ami}","metadataOptions":{"httpEndpoint":"enabled","httpTokens":"required","httpPutResponseHopLimit":"1"},"keyName":"${key-pair.keyName}","iamInstanceProfile":"${my-instance-profile.name}","instanceType":"${instanceType}","rootBlockDevice":{"volumeSize":"20"},"vpcSecurityGroupIds":["${segroup}"],"userData":"#!/bin/bash\n# Reconfigure SSHD - workaround for pulumi Command issues\ncat /etc/ssh/ssh_config >/tmp/sshd_config\necho \"AcceptEnv PULUMI_COMMAND_STDOUT\" >> /tmp/sshd_config\necho \"AcceptEnv PULUMI_COMMAND_STDERR\" >> /tmp/sshd_config\nsudo cp /tmp/sshd_config /etc/ssh/sshd_config || echo \"FAILED to set sshd_config\"\nrm /tmp/sshd_config\n# copy the file as part of instance startup is much faster than\n# using command:remote\ncd /tmp && aws s3 cp s3://${upload-bucket.id}/pulumi-resource-aws ./\n"}},"key-pair":{"type":"aws:ec2/keyPair:KeyPair","properties":{"publicKey":"${priv-key.publicKeyOpenssh}"}},"priv-key":{"properties":{"rsaBits":"2048","algorithm":"RSA"},"type":"tls:PrivateKey"},"my-role":{"properties":{"assumeRolePolicy":"{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\"Service\": \"ec2.amazonaws.com\"},\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"},"type":"aws:iam/role:Role"},"install-cmd":{"options":{"dependsOn":["${file-copy}"],"ignoreChanges":["connection"]},"type":"command:remote:Command","properties":{"connection":{"user":"ec2-user","host":"${inst.publicIp}","privateKey":"${priv-key.privateKeyOpenssh}"},"create":"echo \"========\"\ncurl -fsSL https://get.pulumi.com | sh\nexport PATH=\"/home/ec2-user/.pulumi/bin:$PATH\"\necho \"========\"\npulumi version\necho \"========\"\n"}},"my-role-policy-attachment":{"type":"aws:iam/rolePolicyAttachment:RolePolicyAttachment","properties":{"role":"${my-role.name}","policyArn":"${policyArn}"}},"upload-provider":{"properties":{"bucket":"${upload-bucket.id}","key":"pulumi-resource-aws","source":{"fn::fileAsset":"${localProviderBuild}"}},"type":"aws:s3:BucketObjectv2"},"my-instance-profile":{"type":"aws:iam/instanceProfile:InstanceProfile","properties":{"role":"${my-role.name}"}},"upload-bucket":{"type":"aws:s3/bucketV2:BucketV2"},"file-copy":{"properties":{"remotePath":"/tmp/Pulumi.yaml","localPath":"remote-program/Pulumi.yaml","connection":{"user":"ec2-user","host":"${inst.publicIp}","privateKey":"${priv-key.privateKeyOpenssh}"}},"type":"command:remote:CopyFile","options":{"ignoreChanges":["connection"]}},"segroup":{"type":"aws:ec2:SecurityGroup","properties":{"egress":[{"toPort":"0","fromPort":"0","protocol":"-1","ipv6CidrBlocks":["::/0"],"cidrBlocks":["0.0.0.0/0"]}],"ingress":[{"toPort":"80","fromPort":"80","protocol":"tcp","cidrBlocks":["0.0.0.0/0"]},{"protocol":"tcp","fromPort":"22","toPort":"22","cidrBlocks":["0.0.0.0/0"]}]}}}}
{"name":"construct_component_methods_provider_go","runtime":"go","description":"A program that constructs remote component resources with methods and an explicit provider set for another package."}
{"template":{"description":"A minimal AWS Pulumi YAML program","config":{"aws-native:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"name":"${PROJECT}","resources":{"bucket":{"type":"aws-native:s3:Bucket"}},"runtime":"yaml","outputs":{"bucketName":"${bucket.id}"},"description":"${DESCRIPTION}"}
{"name":"private_rds","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"name":"pulumi-vault-kms","runtime":"nodejs","description":"Minimal config which shows how Vault encryption support works"}
{"description":null,"runtime":"nodejs","name":"transforms_single"}
{"runtime":"yaml","name":"aws_apigateway_response_Response_1","resources":{"test":{"properties":{"statusCode":"401","responseTemplates":{"application/json":"{\"message\":$context.error.messageString}"},"responseType":"UNAUTHORIZED","responseParameters":{"gatewayresponse.header.Authorization":"'Basic'"},"restApiId":"${main.id}"},"type":"aws:apigateway:Response"},"main":{"properties":{"name":"MyDemoAPI"},"type":"aws:apigateway:RestApi"}}}
{"name": "pulumi-demo", "runtime": "dotnet", "description": "A minimal Azure Native C# Pulumi program"}
{"name":"${PROJECT}","resources":{},"variables":{},"config":{},"outputs":{},"template":{"description":"A minimal Pulumi YAML program"},"description":"${DESCRIPTION}","runtime":"yaml"}
{"name":"yata-kubernetes","runtime":"nodejs","description":"Yata on Kubernetes"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"docker-cachefrom"}
{"resources":{"provider":{"type":"pulumi:providers:kubernetes"},"job":{"properties":{"metadata":{"namespace":"${ns.metadata.name}","name":"test-job-previews","annotations":{"pulumi.com/skipAwait":"true"}},"spec":{"template":{"spec":{"restartPolicy":"Never","containers":[{"command":["sh","-c","exit 0"],"name":"test-job-unreachable-container-step2","image":"busybox"}]},"metadata":{"name":"test-job-unreachable"}}}},"type":"kubernetes:batch/v1:Job","options":{"provider":"${provider}"}},"ns":{"type":"kubernetes:core/v1:Namespace","options":{"provider":"${provider}"}}},"runtime":"yaml","name":"job-unreachable"}
{"runtime":"nodejs","name":"network-policy-tests","description":"Tests NetworkPolicy egress/ingress rules"}
{"runtime":"go","name":"awsx-apigateway-auth-lambda-go","description":"An example that deploys an API Gateway REST API with an AWS Lambda authorizer."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getCipherText Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A simple Python program that tests secret outputs","runtime":"python","name":"secret-outputs-py"}
{"description":"An example that provides the code to import an existing resource group from Azure.","name":"azure-native-import-resource-group-python","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-python"}}},"runtime":{"options":{"virtualenv":"venv","toolchain":"pip"},"name":"python"}}
{"name":"l2-destroy","runtime":"mock"}
{"outputs":{"currentNumberScheduled":"${ds.status.currentNumberScheduled}","numberReady":"${ds.status.numberReady}","numberMisscheduled":"${ds.status.numberMisscheduled}","desiredNumberScheduled":"${ds.status.desiredNumberScheduled}"},"resources":{"ds":{"type":"kubernetes:apps/v1:DaemonSet","options":{"customTimeouts":{"delete":"30s","create":"30s","update":"30s"}},"properties":{"spec":{"selector":{"matchLabels":{"foo":"bar"}},"template":{"metadata":{"labels":{"foo":"bar"}},"spec":{"containers":[{"image":"nginx:invalid-tag","name":"nginx"}]}},"minReadySeconds":"5"},"metadata":{"name":"await-daemonset"}}}},"runtime":"yaml","name":"await-daemonset"}
{"description":"Create AWS S3 Buckets","runtime":"nodejs","name":"aws-s3"}
{"name":"${PROJECT}","runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"memory":{"description":"The amount of memory to allocate for the container","default":"128"},"containerPort":{"description":"The port to expose on the container","default":"80"},"cpu":{"default":"512","description":"The amount of CPU to allocate for the container"}},"description":"A TypeScript program to deploy a containerized service on AWS"},"description":"${DESCRIPTION}"}
{"name":"ol-infrastructure-sign-and-verify-application","backend":{"url":"s3://mitol-pulumi-state/"},"description":"Pulumi project for deploying the digital credentials Sign and Verify service on AWS Fargate","runtime":"python"}
{"runtime":"go","description":"A program that replaces a resource with a new name and alias.","name":"aliases_adopt_into_component"}
{"name":"example-tags","runtime":"nodejs","description":"EKS cluster and nodegroups example with various types of AWS resource tagging"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS LocalGatewayRoute Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"aws-iampolicy-jsonparse-typescript","description":"An example that deploys an IAM policy and manipulates it using JSON parsing.","runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSubnet Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"dotnet","description":"Demo Code Part 2 of the Tutorial around Helm in Kubernetes","name":"helm-kubernetes-part-two-csharp","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-csharp"}}}}
{"description":"Besom TLS test with ZIO","name":"zio-tls-besom-test","runtime":"scala"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/04ffe1e3-edd6-40a1-b7d2-f26d20360b75.zip"}}},"resources":{"sshKey":{"properties":{"publicKey":"${private_key.publicKeyOpenssh}"},"type":"digitalocean:SshKey"},"private_key":{"properties":{"algorithm":"ED25519"},"type":"tls:PrivateKey"},"vpc":{"type":"digitalocean:Vpc","properties":{"region":"nyc3"}},"myDroplet":{"type":"digitalocean:Droplet","properties":{"vpcUuid":"${vpc.id}","monitoring":"1","image":"ubuntu-20-04-x64","region":"nyc3","sshKeys":["${sshKey.fingerprint}"],"size":"s-1vcpu-1gb"}}},"runtime":"yaml","name":"index_dropletlfjSjjnhVI1a","description":""}
{"runtime":"dotnet","name":"dotnet-helm-kubeversions","description":"Deploys a simple Helm chart that manually specifies the helm --kube-version argument to work."}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ReceiptRuleSet Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"pulumi-k8s","runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"name":"${PROJECT}","description":"${DESCRIPTION}","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"machineType":{"default":"f1-micro","description":"The GCP machine type to use for the VM"},"instanceTag":{"default":"webserver","description":"The tag to apply to the VM instance"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"servicePort":{"description":"The HTTP service port to expose on the VM","default":"80"},"gcp:zone":{"default":"us-central1-a","description":"The Google Cloud availability zone to deploy into"},"osImage":{"default":"debian-11","description":"The OS image type to use for the VM"}},"description":"A Go program to deploy a virtual machine on Google Cloud"},"runtime":"go"}
{"name":"02-kubernetes-selfhosted-gke","runtime":"nodejs","description":"Kubernetes cluster for Pulumi GKE self-hosted installation."}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "go", "template": {"description": "A minimal Civo Go Pulumi program", "config": {"civo:token": {"description": "The token that allows you access your CIVO account", "secret": true}}}}
{"name": "pulumi-ansible-wordpress-py", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Deploy an EC2 Wordpress server using Pulumi and Ansible."}
{"name":"runtime_error","description":"A minimal JavaScript Pulumi program","runtime":"nodejs"}
{"runtime":"go","description":"Check servicebus auto-recreates on duplicate detection change","name":"go-servicebus-recreate"}
{"runtime":"nodejs","description":"Example of importing existing resources","name":"import"}
{"name": "twingate-example-ts", "runtime": "nodejs", "description": "Typescript example for twingate"}
{"runtime":"nodejs","name":"complex_transformation","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"runtime":"go","name":"${PROJECT}","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}},"description":"A Go program to deploy a serverless application on AWS"},"description":"${DESCRIPTION}"}
{"resources":{"example":{"type":"aws:secretsmanager:Secret","properties":{"name":"example"}}},"runtime":"yaml","name":"aws_secretsmanager_secret_Secret_1"}
{"runtime":"nodejs","name":"storagetransfer-ts","description":"A minimal Google Cloud TypeScript Pulumi program"}
{"name": "aws-js-apigateway-gatsby", "runtime": "nodejs", "description": "Using API Gateway to host a Gatsby Blog"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"ec2_docdb","description":"A minimal AWS Python Pulumi program"}
{"description":"Minimal config which shows how Azure encryption support works","name":"pulumi-azure-keyvault","runtime":"nodejs"}
{"variables":{"project":{"fn::invoke":{"arguments":{"filter":"name:${gcp:project}"},"function":"gcp:projects/getProject:getProject"}},"functionCode":{"fn::fileArchive":"src/"},"region":"europe-west2"},"resources":{"cloudFunctionBucket":{"properties":{"project":"${project.projects[0].projectId}","location":"${region}","forceDestroy":"1","uniformBucketLevelAccess":"1","name":"cloud-function-${project.projects[0].projectId}"},"type":"gcp:storage:Bucket"},"eventReceiving":{"options":{"dependsOn":["${account}"]},"type":"gcp:projects:IAMMember","properties":{"role":"roles/eventarc.eventReceiver","member":"serviceAccount:${account.email}","project":"${project.projects[0].projectId}"}},"cloudFunction":{"type":"gcp:cloudfunctionsv2:Function","options":{"dependsOn":["${inputBucket}","${functionSourceZip}","${account}","${invoking}","${eventReceiving}"]},"properties":{"serviceConfig":{"ingressSettings":"ALLOW_INTERNAL_ONLY","minInstanceCount":"1","availableMemory":"256M","maxInstanceCount":"3","timeoutSeconds":"60","environmentVariables":{"SERVICE_CONFIG_TEST":"config_test"},"allTrafficOnLatestRevision":"1","serviceAccountEmail":"${account.email}"},"description":"Cloud function gen2 trigger using Pulumi","name":"cloud-function-trigger-using-pulumi-gen2","eventTrigger":{"retryPolicy":"RETRY_POLICY_RETRY","eventType":"google.cloud.storage.object.v1.finalized","triggerRegion":"${region}","eventFilters":[{"attribute":"bucket","value":"${inputBucket.name}"}],"serviceAccountEmail":"${account.email}"},"project":"${project.projects[0].projectId}","buildConfig":{"environmentVariables":{"BUILD_CONFIG_TEST":"build_test"},"entryPoint":"fileUpload","runtime":"python39","source":{"storageSource":{"bucket":"${cloudFunctionBucket.name}","object":"${functionSourceZip.name}"}}},"location":"${region}"}},"account":{"properties":{"project":"${project.projects[0].projectId}","accountId":"pulumi-workshop","displayName":"Test Service Account"},"type":"gcp:serviceaccount:Account"},"functionSourceZip":{"type":"gcp:storage:BucketObject","options":{"dependsOn":["${cloudFunctionBucket}"]},"properties":{"contentType":"application/zip","bucket":"${cloudFunctionBucket.name}","source":"${functionCode}","name":"src-code.zip"}},"invoking":{"properties":{"project":"${project.projects[0].projectId}","member":"serviceAccount:${account.email}","role":"roles/run.invoker"},"options":{"dependsOn":["${account}"]},"type":"gcp:projects:IAMMember"},"inputBucket":{"type":"gcp:storage:Bucket","properties":{"project":"${project.projects[0].projectId}","location":"${region}","forceDestroy":"1","uniformBucketLevelAccess":"1","name":"input-${project.projects[0].projectId}"}}},"description":"Example of deploying a Cloud Function on GCP with Pulumi","runtime":"yaml","name":"deploy-cloud-functions-on-gcp-with-pulumi","outputs":{"function_url":"${cloudFunction.url}"}}
{"name":"job-unreachable","resources":{"job":{"type":"kubernetes:batch/v1:Job","options":{"provider":"${provider}"},"properties":{"metadata":{"annotations":{"pulumi.com/skipAwait":"true"},"name":"test-job-previews","namespace":"${ns.metadata.name}"},"spec":{"template":{"spec":{"restartPolicy":"Never","containers":[{"command":["sh","-c","exit 0"],"name":"test-job-unreachable-container","image":"busybox"}]},"metadata":{"name":"test-job-unreachable"}}}}},"provider":{"type":"pulumi:providers:kubernetes"},"ns":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Namespace"}},"runtime":"yaml"}
{"runtime":"nodejs","description":"A minimal JavaScript Pulumi program","name":"runtime_error"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Using replication configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"awsx-apigateway-openapi-full-javascript","description":"An example of configuring an API Gateway instance with an OpenAPI/Swagger JSON definition."}
{"name":"awsx-vpc-azs-typescript","runtime":"nodejs","description":"An example that creates a new VPC and configuring availability zones."}
{"name":"azure-native-static-website-yaml","resources":{"staticWebsite":{"properties":{"resourceGroupName":"${resourceGroup.name}","error404Document":"404.html","indexDocument":"index.html","accountName":"${storageAccount.name}"},"type":"azure-native:storage:StorageAccountStaticWebsite"},"resourceGroup":{"properties":{"location":"eastus"},"type":"azure-native:resources:ResourceGroup"},"error.html":{"type":"azure-native:storage:Blob","properties":{"accountName":"${storageAccount.name}","source":{"fn::fileAsset":"./wwwroot/error.html"},"type":"Block","contentType":"text/html","containerName":"${staticWebsite.containerName}","resourceGroupName":"${resourceGroup.name}"}},"index.html":{"type":"azure-native:storage:Blob","properties":{"type":"Block","accountName":"${storageAccount.name}","source":{"fn::fileAsset":"./wwwroot/index.html"},"resourceGroupName":"${resourceGroup.name}","contentType":"text/html","containerName":"${staticWebsite.containerName}"}},"storageAccount":{"properties":{"sku":{"name":"Standard_LRS"},"kind":"StorageV2","resourceGroupName":"${resourceGroup.name}"},"type":"azure-native:storage:StorageAccount"}},"runtime":"yaml","description":"An example that deploys all of the resources for a static website on Azure.","outputs":{"staticEndpoint":"${storageAccount.primaryEndpoints.web}"}}
{"name":"aws-ec2-instance-with-sg-javascript","description":"An example that shows how to create an EC2 instance and security group.","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"name":"provider-xyz-native","runtime":"python","plugins":{"providers":[{"path":"../../bin","name":"xyz"}]}}
{"backend":{"url":"s3://mitol-pulumi-state/"},"description":"Deploy and manage EKS clusters","name":"ol-infrastructure-eks","runtime":"python"}
{"name":"sql_managed","runtime":"yaml","resources":{"subnetNetworkSecurityGroupAssociation2":{"properties":{"networkSecurityGroupId":"${nsg2.id}","subnetId":"${exampleSubnet2.id}"},"type":"azure:network:SubnetNetworkSecurityGroupAssociation"},"exampleSubnet":{"properties":{"virtualNetworkName":"${exampleVirtualNetwork.name}","addressPrefixes":["10.0.2.0/24"],"delegations":[{"name":"d1","serviceDelegation":{"name":"Microsoft.Sql/managedInstances","actions":["Microsoft.Network/virtualNetworks/subnets/join/action","Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action","Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"]}}],"resourceGroupName":"${rg.name}"},"type":"azure:network:Subnet"},"db":{"properties":{"sqlManagedInstanceId":"${primary.id}","location":"${rg.location}"},"type":"azure:mssql:ManagedDatabase"},"exampleSubnet2":{"properties":{"virtualNetworkName":"${exampleVirtualNetwork2.name}","addressPrefixes":["10.0.3.0/24"],"delegations":[{"name":"d2","serviceDelegation":{"actions":["Microsoft.Network/virtualNetworks/subnets/join/action","Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action","Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"],"name":"Microsoft.Sql/managedInstances"}}],"resourceGroupName":"${rg.name}"},"type":"azure:network:Subnet"},"routeTable":{"type":"azure:network:RouteTable","properties":{"bgpRoutePropagationEnabled":"1","location":"${rg.location}","resourceGroupName":"${rg.name}"}},"primary":{"type":"azure:mssql:ManagedInstance","properties":{"skuName":"GP_Gen5","administratorLoginPassword":"thisIsDog11","location":"${rg.location}","licenseType":"BasePrice","storageSizeInGb":"32","vcores":"4","subnetId":"${exampleSubnet.id}","resourceGroupName":"${rg.name}","administratorLogin":"mradministrator"}},"exampleVirtualNetwork2":{"type":"azure:network:VirtualNetwork","properties":{"resourceGroupName":"${rg.name}","location":"West US 2","addressSpaces":["10.0.0.0/16"]}},"exampleVirtualNetwork":{"properties":{"location":"${rg.location}","addressSpaces":["10.0.0.0/16"],"resourceGroupName":"${rg.name}"},"type":"azure:network:VirtualNetwork"},"nsg2":{"type":"azure:network:NetworkSecurityGroup","properties":{"resourceGroupName":"${rg.name}","location":"West US 2"}},"routeTableAssoc2":{"type":"azure:network:SubnetRouteTableAssociation","properties":{"routeTableId":"${routeTable2.id}","subnetId":"${exampleSubnet2.id}"}},"subnetNetworkSecurityGroupAssociation1":{"type":"azure:network:SubnetNetworkSecurityGroupAssociation","properties":{"subnetId":"${exampleSubnet.id}","networkSecurityGroupId":"${nsg1.id}"}},"secondary":{"properties":{"vcores":"4","name":"example-secondary","resourceGroupName":"${rg.name}","administratorLogin":"mradministrator","subnetId":"${exampleSubnet2.id}","location":"West US 2","administratorLoginPassword":"thisIsDog11","skuName":"GP_Gen5","storageSizeInGb":"32","licenseType":"BasePrice"},"type":"azure:mssql:ManagedInstance"},"routeTableAssoc1":{"properties":{"routeTableId":"${routeTable.id}","subnetId":"${exampleSubnet.id}"},"type":"azure:network:SubnetRouteTableAssociation"},"failoverGroup":{"type":"azure:mssql:ManagedInstanceFailoverGroup","properties":{"managedInstanceName":"${primary.name}","partnerManagedInstanceId":"${secondary.id}","location":"${primary.location}","readWriteEndpointFailoverPolicy":{"mode":"Automatic","graceMinutes":"60"},"resourceGroupName":"${rg.name}"},"name":"failovergroup"},"rg":{"properties":{"location":"West US"},"type":"azure:core:ResourceGroup"},"routeTable2":{"type":"azure:network:RouteTable","properties":{"resourceGroupName":"${rg.name}","bgpRoutePropagationEnabled":"1","location":"West US 2"}},"nsg1":{"type":"azure:network:NetworkSecurityGroup","properties":{"location":"${rg.location}","resourceGroupName":"${rg.name}"}}}}
{"runtime":"nodejs","template":{"config":{"namespace":{"description":"The Kubernetes namespace to deploy into","default":"default"},"replicas":{"default":"1","description":"The number of replicas to deploy"}},"description":"A TypeScript program to deploy a web application onto a Kubernetes cluster"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "loadbalancing-layer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "IaC for load balancing layer and some security group and network cleanup in ml-workflows", "template": {"config": {"aws:region": {"description": "The AWS region to deploy into.", "default": "us-east-2"}, "network-layer-stack": {"description": "(Required) The reference to the networking stack defining the staffolding on which the project will be deployed (in the form <organization_or_user>/<projectName>/<stackName> e.g. myUsername/multicloud/dev)", "default": "dev"}, "user-account": {"description": "(Required) The user account name you are using for Pulumi.", "default": "Brontomerus"}}}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"macos_quickstart","description":"A minimal AWS Python Pulumi program"}
{"name": "serverless", "description": "Basic example of a serverless AWS application.", "runtime": "nodejs"}
{"runtime":"nodejs","name":"aws-native-stable-outputs-preview","description":"An example program to test stable outputs during preview"}
{"resources":{"project":{"type":"metal:Project","properties":{"name":"My Test Project"}}},"runtime":"yaml","template":{"description":"A minimal Equinix Metal Pulumi YAML program"},"outputs":{"projectName":"${project.name}"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "python_explicit_provider", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Python Pulumi program"}
{"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"runtime":"go","name":"hybridS3Project","description":"A static website hosted on AWS S3"}
{"runtime":"yaml","outputs":{"realmEventsId":"${myRealmEvents.id}","realmId":"${myRealm.id}"},"description":"A minimal Pulumi program to enable Keycloak realm events","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/1bc4a2d0-59f6-4cac-8b1b-29fed5aabb3c.zip"}}},"name":"index_realmeventsYyMO1eEl68Os","resources":{"myRealm":{"properties":{"displayName":"My Keycloak Realm","enabled":"1","realm":"my-realm"},"type":"keycloak:Realm"},"myRealmEvents":{"type":"keycloak:RealmEvents","properties":{"eventsEnabled":"1","adminEventsEnabled":"1","realmId":"${myRealm.id}","eventsListeners":["jboss-logging"],"adminEventsDetailsEnabled":"1"}}}}
{"outputs":{"actual":"${res.tags}"},"name":"test-aws-1655-sdkv2","description":"Remove foo tag (foo and thwomp)\n","runtime":"yaml","resources":{"res":{"properties":{"aliasAttributes":["email"]},"options":{"provider":"${aws-provider}"},"type":"aws:cognito:UserPool"},"aws-provider":{"properties":{"defaultTags":{"tags":{"thwomp":"pow"}}},"type":"pulumi:providers:aws"}}}
{"runtime":"go","name":"l2-resource-config"}
{"outputs":{"secret":"${provider.s}","config":"${get.config}"},"runtime":"yaml","name":"test","plugins":{"providers":[{"name":"config","path":".."}]},"resources":{"get":{"options":{"provider":"${provider}"},"type":"config:Get"},"provider":{"type":"pulumi:providers:config","properties":{"b":"1","n":{"m":{"fizz":"buzz"},"s":{"fn::secret":"foo"},"b":"1","a":["one","two"],"i":"42"},"i":"42","m":{"fizz":"buzz"},"s":{"fn::secret":"foo"},"a":[{"fn::secret":"one"},"two"]}}}}
{"name": "Reeplace_Project_Name_to_Create", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Reeplace_Description_for_the_Project_to_Create"}
{"name": "datadog-alerts", "runtime": "nodejs", "description": "for creating and maintaining datadog alerts"}
{"description":"","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/549cbd81-6b60-4857-922b-6a3a4ed2b0a3.zip"}}},"name":"index_realmBhv8NwUTBL6H","resources":{"my_keycloak_realm":{"properties":{"realm":"my-test-realm","enabled":"1"},"type":"keycloak:Realm"}},"runtime":"yaml"}
{"runtime":"python","description":"Pulumi project for deploying the stack of services needed by the semantic api framework","name":"ol-infrastructure-semantic-application","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name":"l1-builtin-info","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}}}
{"description":"A project that uses yarn workspaces with the nohoist option. `pulumi install` should successfully install dependencies.","name":"yarn-workspaces-nohoist","runtime":"nodejs"}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"pulumi-aws-typescript"}
{"outputs":{"selector":"${service.spec.selector}","replicas":"${deployment.spec.replicas}","label":"${deployment.spec.template.metadata.labels[\"app\"]}"},"name":"await-deployment","runtime":"yaml","description":"Test await logic with services.","resources":{"deployment":{"options":{"provider":"${provider}"},"properties":{"spec":{"selector":{"matchLabels":{"app":"nginx"}},"replicas":"1","template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx:stable-alpine3.17-slim","name":"nginx","ports":[{"containerPort":"80"}]}]}}}},"type":"kubernetes:apps/v1:Deployment"},"ns":{"type":"kubernetes:core/v1:Namespace"},"service":{"type":"kubernetes:core/v1:Service","properties":{"spec":{"ports":[{"port":"80","targetPort":"80","protocol":"TCP"}]}},"options":{"provider":"${provider}","dependsOn":["${deployment}"]}},"endpoints":{"type":"kubernetes:core/v1:Endpoints","properties":{"subsets":[{"addresses":[{"ip":"100.123.100.123"}],"ports":[{"port":"12345","name":"foo"}]}],"metadata":{"name":"${service.metadata.name}"}}},"provider":{"properties":{"namespace":"${ns.metadata.name}"},"type":"pulumi:providers:kubernetes"}}}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program to create an AWSX ECS service","name":"ecs-python"}
{"variables":{},"name":"plugin-framework-test","resources":{"cidrcollection-example":{"type":"aws:route53/cidrCollection:CidrCollection"},"bucket-example":{"type":"aws:s3:Bucket"}},"description":"Check that Plugin Framework based resources can deploy alongside SDKv2 based resources.","outputs":{},"runtime":"yaml"}
{"name": "My.Hr.Infra", "runtime": "dotnet", "description": "Infrastructure for CoreEx sample application", "template": {"config": {"azure-native:location": {"description": "The Azure region to deploy into", "default": "EastUs"}, "My.Hr.Infra:isAppsDeploymentEnabled": {"description": "Whether Application code should be deployed", "default": true}, "My.Hr.Infra:isDBSchemaDeploymentEnabled": {"description": "Whether Database schema should be deployed", "default": true}}}}
{"runtime":"nodejs","name":"vpc_tailscale_vpn","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","name":"l2-primitive-ref"}
{"description":"This is a description","runtime":"nodejs","name":"correct_project"}
{"template":{"config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"}}},"description":"A static website hosted on AWS S3","runtime":"go","name":"hybridS3Project"}
{"runtime":"yaml","resources":{"exampleKubernetesCluster":{"properties":{"networkProfile":{"networkPlugin":"azure","loadBalancerSku":"Basic"},"name":"example-aks1","dnsPrefix":"exampleakstest","resourceGroupName":"${rg.name}","defaultNodePool":{"vmSize":"Standard_D2_v2","nodeCount":"1","name":"default"},"location":"${rg.location}","identity":{"type":"SystemAssigned"},"tags":{"Environment":"Production"}},"type":"azure:containerservice:KubernetesCluster"},"rg":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}}},"name":"dns"}
{"runtime":"nodejs","name":"syntax-error"}
{"name":"aws-iampolicy-jsonparse-go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"description":"An example that deploys an IAM policy and manipulates it using JSON parsing.","runtime":"go"}
{"description":"A program that replaces a resource with a new name and alias.","runtime":"python","name":"aliases_adopt_into_component"}
{"name":"azure-yaml-aks-managed-identity","description":"A minimal Azure Native Pulumi Typescript program","runtime":"nodejs"}
{"name":"testing-aws-fifo-ts","description":"A simple example of using autonaming Fifo queues in TypeScript","runtime":"nodejs"}
{"description":"A program that exports some outputs and then errors in a later step.","name":"stack_outputs_resource_error_go","runtime":"go"}
{"runtime":"nodejs","name":"azure-timer","description":"Work with a Timer-triggered Azure Function"}
{"name":"cbp-gcp-py","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example of building/publishing a Docker container image to Google Cloud GCR"}
{"runtime":"nodejs","name":"aws-js-sqs-slack","template":{"config":{"slackToken":{"description":"The Slack access token"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"slackChannel":{"description":"The Slack channel","default":"#general"}}},"description":"Post to Slack for each SQS message!"}
{"runtime":"yaml","main":"subdir","name":"l1-main"}
{"runtime":"nodejs","description":"A simple program that gets an existing resource from the engine.","name":"get_resource"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS Alias C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l1-output-bool","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"runtime":"go","name":"fargate","description":"An end-to-end AWS ECS Fargate infrastructure as code project."}
{"description":"An example that uses JSON helpers to define an S3 bucket policy.","runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"name":"aws-s3-bucketpolicy-jsonstringify-go"}
{"runtime":{"name":"python","options":{"toolchain":"poetry"}},"name":"dynamic-provider-poetry"}
{"runtime":"java","description":"An example that creates a new VPC with a custom security group.","name":"awsx-vpc-security-groups-java"}
{"name": "iac", "runtime": "dotnet", "description": "A minimal Azure C# Pulumi program"}
{"description":"Tests Server-side Apply support","name":"server-side-apply-tests","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcEndpointSubnetAssociation Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"mock","name":"l2-resource-asset-archive","main":"subdir"}
{"name": "command-test", "description": "A Command Test.", "runtime": "nodejs", "backend": {"url": "file://."}}
{"description":"A TypeScript program to deploy a Kubernetes cluster on AWS","runtime":"nodejs","name":"aws-getting-started-k8s"}
{"description":"Manage deployment of a tika server","runtime":"python","name":"ol-infrastructure-tika-server","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Redis Instance", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"An example demonstrating the Terraform Remote State resource","runtime":"dotnet","name":"localstate-dotnet"}
{"description":"An example of creating a CosmosDB container through a Azure's Cosmos SDK and deploying a Logic App and an API Connection","runtime":"dotnet","name":"azure-cosmosdb-logicapp"}
{"outputs":{"testSingleNestedAttr__actual":"${singleNestedAttrRes.singleNestedAttrJsonCopy}","setElementRevAttrRes__actual":"${setElementRevAttrRes.setOptionals}","testBool__actual":"${boolRes.optionalInputBoolCopy}","testBool__expect":"1","testSingleNestedAttr__expect":{"fn::toJSON":{"description":"pi","quantity":"3.14159"}},"testListNestedAttributes__actual":"${listNestedAttrRes.servicesJsonCopy}","testNumber__expect":"3","testComputedNull__expect":"null","testMinimal__expect":"input1","testStringList__actual":{"fn::toJSON":"${stringListRes.optionalInputStringListCopies}"},"setElementRevAttrRes__expect":["bye","hi"],"testStringList__expect":"[\"a\",\"b\",\"c\"]","testMinimal__actual":"${minimalRes.requiredInputStringCopy}","testString__expect":"y","testListNestedAttributes__expect":{"fn::toJSON":[{"ports":[{"port":"80","handlers":["httpHandler","jsonPHandler"]},{"handlers":["httpsHandler"],"port":"443"}],"protocol":"http","intport":"8080"},{"ports":[{"handlers":["sshd"],"port":"22"}],"protocol":"ssh","intport":"22"}]},"testString__actual":"${strRes.optionalInputStringCopy}","setElementAttrRes__expect":["bye","hi"],"setElementAttrRes__actual":"${setElementAttrRes.setOptionals}","testChained__expect":"input1","testChained__actual":"${chainedRes.requiredInputStringCopy}","testComputedNull__actual":"null","testNumber__actual":"${numRes.optionalInputNumberCopy}","testStringMap__actual":{"fn::toJSON":"${stringMapRes.optionalInputStringMapCopy}"},"testStringMap__expect":"{\"a\":\"a1\",\"b\":\"b1\"}","testEcho__actual":{"fn::invoke":{"function":"testbridge:index/echo:Echo","arguments":{"input":"Hello"}}},"testSecret__secret":"${secretRes.requiredInputString}","testEcho__expect":{"output":"Hello","sensitive":"Hello","input":"Hello"}},"name":"basicprogram","runtime":"yaml","resources":{"minimalRes":{"properties":{"requiredInputString":"input1","statedir":"state"},"type":"testbridge:index/testres:Testres"},"chainedRes":{"type":"testbridge:index/testres:Testres","properties":{"statedir":"state","requiredInputString":"${minimalRes.requiredInputStringCopy}"}},"boolRes":{"type":"testbridge:index/testres:Testres","properties":{"requiredInputString":"x","statedir":"state","optionalInputBool":"1"}},"stringMapRes":{"properties":{"requiredInputString":"x","statedir":"state","optionalInputStringMap":{"b":"b1","a":"a1"}},"type":"testbridge:index/testres:Testres"},"singleNestedAttrRes":{"properties":{"requiredInputString":"x","statedir":"state","singleNestedAttr":{"quantity":"3.14159","description":"pi"}},"type":"testbridge:index/testres:Testres"},"setElementRevAttrRes":{"properties":{"statedir":"state","requiredInputString":"x","setOptionals":["bye","hi"]},"type":"testbridge:index:Testres"},"numRes":{"type":"testbridge:index/testres:Testres","properties":{"optionalInputNumber":"3","statedir":"state","requiredInputString":"x"}},"stringListRes":{"type":"testbridge:index/testres:Testres","properties":{"requiredInputString":"x","statedir":"state","optionalInputStringLists":["a","b","c"]}},"secretRes":{"properties":{"statedir":"state","requiredInputString":{"fn::secret":"secretInput"}},"type":"testbridge:index/testres:Testres"},"strRes":{"type":"testbridge:index/testres:Testres","properties":{"optionalInputString":"y","requiredInputString":"x","statedir":"state"}},"tupleElementAttrRes":{"properties":{"statedir":"state","tuplesOptionals":[{"t1":"no","t0":""},{"t1":"yes","t0":"1"}],"requiredInputString":"x"},"type":"testbridge:index:Testres"},"setElementAttrRes":{"type":"testbridge:index:Testres","properties":{"statedir":"state","requiredInputString":"x","setOptionals":["hi","bye"]}},"listNestedAttrRes":{"properties":{"services":[{"intport":"8080","protocol":"http","ports":[{"port":"80","handlers":["httpHandler","jsonPHandler"]},{"handlers":["httpsHandler"],"port":"443"}]},{"protocol":"ssh","ports":[{"port":"22","handlers":["sshd"]}],"intport":"22"}],"requiredInputString":"x","statedir":"state"},"type":"testbridge:index/testres:Testres"}}}
{"description":"Tests object metadata handling.","runtime":"nodejs","name":"metadata"}
{"runtime":"nodejs","name":"validate_resource","description":"A program that creates some dynamic resources for testing."}
{"variables":{"current":{"fn::invoke":{"function":"azure:core:getClientConfig","arguments":{}}}},"resources":{"exampleSecret":{"properties":{"keyVaultId":"${exampleKeyVault.id}","value":"szechuan"},"options":{"dependsOn":["${exampleAccessPolicy}"]},"type":"azure:keyvault:Secret"},"exampleAccessPolicy":{"type":"azure:keyvault:AccessPolicy","properties":{"tenantId":"${current.tenantId}","secretPermissions":["Get","Set","Delete","Purge","Recover"],"objectId":"${current.objectId}","keyPermissions":["Get","Create","Delete"],"keyVaultId":"${exampleKeyVault.id}"}},"exampleResourceGroup":{"properties":{"location":"East US"},"type":"azure:core:ResourceGroup"},"exampleKeyVault":{"type":"azure:keyvault:KeyVault","properties":{"tenantId":"${current.tenantId}","skuName":"premium","resourceGroupName":"${exampleResourceGroup.name}","location":"${exampleResourceGroup.location}"}}},"name":"keyvault","runtime":"yaml"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"name":"aws-s3bucket-bucketobject-interpolate-go","description":"An example that creates an S3 bucket and bucket object","runtime":"go"}
{"name":"l2-target-up-with-new-dependency","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"runtime":{"options":{"toolchain":"uv"},"name":"python"},"name":"dynamic-provider-uv"}
{"description":"Manage infrastructure required by the MIT Learn application","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","name":"ol-infrastructure-mitlearn-application"}
{"outputs":{"containerAppEnvName":"${containerAppEnvName}","certificateId":"${certificateId}","containerAppRevisionImage":"${containerAppRevisionImage}","containerAppCustomerDomainName":"${containerAppCustomerDomainName}","resourceGroupName":"${resourceGroupName}"},"config":{"sqlAdmin":{"default":"pulumi","type":"string"}},"variables":{"containerAppName":null,"certificateId":"/subscriptions/0e111515-3d91-4650-bd92-dfca52077d62/resourceGroups/containerapps-shesha-#{role}#-#{env}#-rg/providers/Microsoft.App/managedEnvironments/shesha-#{role}#-#{env}#-env/certificates/shesha.dev","resourceGroupName":"containerapps-shesha-#{role}#-#{env}#-rg","adminPasswords":null,"containerAppEnvName":"shesha-#{role}#-#{env}#-env","adminUsername":null,"containerAppRevisionImage":"boxfusionregistry.azurecr.io/shesha-adminportal-rev1-images:latest","registryLoginServer":null,"containerAppCustomerDomainName":null},"description":"Shesha","runtime":"yaml","resources":{"containerApp":{"properties":{"template":{"containers":[{"env":[{"name":"BACKEND_URL","value":"https://#{projectName}#-api-#{env}#.shesha.dev"}],"image":"${containerAppRevisionImage}","name":null,"resources":{"memory":"2Gi","cpu":"1.0"}}],"scale":{"maxReplicas":"5","rules":[{"custom":{"type":"http","metadata":{"concurrentRequests":"250"}},"name":"httpscalingrule"}],"minReplicas":"0"}},"resourceGroupName":"${resourceGroupName}","configuration":{"ingress":{"customDomains":[{"name":"${containerAppCustomerDomainName}","certificateId":"${certificateId}","bindingType":"SniEnabled"}],"external":"1","transport":"auto","traffic":[{"latestRevision":"1","label":"firstrevision-01","weight":"100"}],"targetPort":"80"},"registries":[{"server":"${registryLoginServer}","passwordSecretRef":"pwd","username":"${adminUsername}"}],"secrets":[{"value":"${adminPasswords}","name":"pwd"}]},"tags":{"shesha":null},"containerAppName":"${containerAppName}","location":"southafricanorth","managedEnvironmentId":"/subscriptions/0e111515-3d91-4650-bd92-dfca52077d62/resourceGroups/containerapps-shesha-#{role}#-#{env}#-rg/providers/Microsoft.App/managedEnvironments/shesha-#{role}#-#{env}#-env"},"type":"azure-native:app:ContainerApp"}},"name":"shesha-#{role}#-#{env}#"}
{"description":"A minimal AWS TypeScript Pulumi program","name":"database","runtime":"nodejs"}
{"resources":{"managedFile":{"type":"file:File","properties":{"path":"${pulumi.cwd}/managed.txt","content":"An important piece of information\n"}}},"plugins":{"providers":[{"name":"file","path":".."}]},"runtime":"yaml","name":"consume-file"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS MainRouteTableAssociation C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"job-unreachable","resources":{"job":{"properties":{"spec":{"template":{"metadata":{"name":"test-job-unreachable"},"spec":{"containers":[{"command":["sh","-c","exit 1"],"name":"test-job-unreachable-container","image":"busybox"}],"restartPolicy":"Never"}}},"metadata":{"name":"test-job-unreachable","annotations":{"pulumi.com/replaceUnready":"true"}}},"options":{"customTimeouts":{"create":"15s","update":"15s","delete":"15s"},"provider":"${provider}"},"type":"kubernetes:batch/v1:Job"},"provider":{"type":"pulumi:providers:kubernetes"}},"runtime":"yaml"}
{"description":"An example that deploys multiple load-balanced VMs in Amazon EC2.","runtime":"java","name":"awsx-load-balanced-ec2-instances-java"}
{"template":{"config":{"isMinikube":{"default":"1","description":"Whether you are deploying to minikube"}}},"name":"guestbook-csharp","runtime":"dotnet","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/"}
{"name":"awsx-apigateway-validation-types-go","description":"An example of configuring request validators for an API Gateway instance.","runtime":"go"}
{"runtime":"go","description":"A Go Pulumi program with AWS Cloud Control provider","name":"aws-simple-go"}
{"name":"00-aws-infrastructure","description":"A Go program to deploy a Kubernetes cluster on AWS","runtime":"go"}
{"name": "mms-flex-chat", "runtime": "nodejs", "description": "Adds agent to agent outbound call and external number transfer to Twilio Flex native dialpad", "main": "src/resources"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Redshift Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "01-iam-roles", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Create and Assume Roles in AWS"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Guest Authentication", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "ss-dotnet-api", "runtime": "dotnet", "description": "A minimal Azure Native C# Pulumi program"}
{"name":"eks_subnet_tags","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"name":"recreate_resource_check","description":"A program that tests the engine use of Check on re-created resources","runtime":"nodejs"}
{"runtime":"nodejs","name":"vpc-ignoreSubnetChanges","description":"A simple vpc demo."}
{"description":"A Deployment that mounts a ConfigMap; updating the data in the ConfigMap triggers a rollout of the Deployment","name":"configmap-rollout","template":{"config":{"isMinikube":{"description":"Whether you are deploying to minikube","default":"1"}}},"runtime":"nodejs"}
{"description":"A program that constructs remote component resources with methods and an explicit provider set for another package.","name":"construct_component_methods_provider_py","runtime":"python"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A Python program to deploy a serverless application on Azure", "config": {"azure-native:location": {"description": "The Azure region to deploy into", "default": "WestUS"}, "sitePath": {"description": "The path to the folder containing the website", "default": "./www"}, "appPath": {"description": "The path to the folder containing the functions to be deployed", "default": "./app"}, "indexDocument": {"description": "The file to use for top-level pages", "default": "index.html"}, "errorDocument": {"description": "The file to use for error pages", "default": "error.html"}}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-hub-and-spoke-with-inspection-vpc-python","description":"A minimal Python Pulumi program"}
{"description":"AWS examples highighting `ignoreChanges`","runtime":"nodejs","name":"ignorechanges"}
{"resources":{"sampleRandomBytes":{"properties":{"length":"64"},"type":"random:RandomBytes"}},"runtime":"yaml","name":"resource-without-id"}
{"name":"empty-label-cluster","resources":{"primary":{"properties":{"removeDefaultNodePool":"1","location":"us-central1","resourceLabels":{"environment":"dev","test":""},"deletionProtection":"","initialNodeCount":"1"},"type":"gcp:container:Cluster"},"serviceAccount":{"type":"gcp:serviceaccount:Account","properties":{"accountId":"${random-account-id.result}"}},"random-account-id":{"type":"random:RandomString","properties":{"upper":"","number":"","special":"","length":"10"}}},"runtime":"yaml","outputs":{"effectiveLabels":"${primary.effectiveLabels}","pulumiLabels":"${primary.pulumiLabels}","labels":"${primary.resourceLabels}"}}
{"resources":{"aws-provider":{"type":"pulumi:providers:aws"},"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}},"res":{"options":{"provider":"${aws-provider}"},"type":"aws:appconfig:Environment","properties":{"applicationId":"${app.id}","name":"pf-tags-test"}}},"outputs":{"actual":"${res.tags}"},"name":"test-aws-1655-pf","description":"Don't specify any default tags (should be empty)\n","runtime":"yaml"}
{"runtime":"nodejs","description":"A program that tests the replaceUnready annotation.","name":"replace-unready"}
{"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"name":"cluster-input-validations","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"description":"A minimal AWS TypeScript Pulumi program"}
{"name":"serverless-bucket","description":"Simple bucket examples","runtime":"nodejs"}
{"runtime":"nodejs","name":"selfhosted-30-esc","description":"Used to create the resources needed for ECS."}
{"name": "example-one", "runtime": {"name": "python"}, "description": "Example of Unit Testing"}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-east-1"}}},"description":"A static website hosted on AWS S3","runtime":"scala","name":"aws-s3-folder"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Mixed Instances Policy", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "cloud-native-turkiye", "description": "A minimal AWS Go Pulumi program", "runtime": "go"}
{"name":"command-curl","runtime":"nodejs","description":"A simple command example"}
{"description":"A minimal Google Cloud Python Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}},"name":"packageadd_uv","runtime":{"options":{"toolchain":"uv"},"name":"python"}}
{"name":"l2-map-keys","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}}}
{"description":"A NodeJS program that uses dynamic providers to trigger serialization of programs containing identifiers that shadow reserved identifiers (in this case, \"exports\").","name":"nodejs_reserved_identifier_shadowing","runtime":"nodejs"}
{"description":"a yaml test","variables":{"backendImageName":"backend","frontendImageName":"frontend"},"name":"fundamentals","resources":{"network":{"properties":{"name":"services-${pulumi.stack}"},"type":"docker:index:Network"},"frontend-container":{"properties":{"name":"frontend-${pulumi.stack}","image":"${frontend-image.repoDigest}","ports":[{"internal":"${frontendPort}","external":"${frontendPort}"}],"networksAdvanced":[{"aliases":["frontend-${pulumi.stack}"],"name":"${network.name}"}],"envs":["LISTEN_PORT=${frontendPort}","HTTP_PROXY=backend-${pulumi.stack}:${backendPort}","PROXY_PROTOCOL=http://"]},"type":"docker:index:Container"},"backend-container":{"properties":{"networksAdvanced":[{"aliases":["backend-${pulumi.stack}"],"name":"${network.name}"}],"envs":["DATABASE_HOST=${mongoHost}","DATABASE_NAME=${database}","NODE_ENV=${nodeEnvironment}"],"ports":[{"external":"${backendPort}","internal":"${backendPort}"}],"image":"${backend-image.repoDigest}","name":"backend-${pulumi.stack}"},"options":{"dependsOn":["${mongo-container}"]},"type":"docker:index:Container"},"frontend-image":{"properties":{"name":"pulumi/tutorial-pulumi-fundamentals-frontend:latest"},"type":"docker:index:RemoteImage"},"mongo-image":{"properties":{"name":"pulumi/tutorial-pulumi-fundamentals-database-local:latest"},"type":"docker:index:RemoteImage"},"backend-image":{"type":"docker:index:RemoteImage","properties":{"name":"pulumi/tutorial-pulumi-fundamentals-backend:latest"}},"mongo-container":{"type":"docker:index:Container","properties":{"name":"mongo-${pulumi.stack}","networksAdvanced":[{"aliases":["mongo"],"name":"${network.name}"}],"ports":[{"external":"${mongoPort}","internal":"${mongoPort}"}],"image":"${mongo-image.repoDigest}"}}},"runtime":"yaml","configuration":{"protocol":{"type":"String"},"mongoHost":{"type":"String"},"nodeEnvironment":{"type":"String"},"mongoPort":{"type":"Number"},"database":{"type":"String"},"frontendPort":{"type":"Number"},"backendPort":{"type":"Number"}}}
{"description":"Check that the RuleGroup resource works fine after refactoring of Statement types to recursive.","name":"WafV2","runtime":"nodejs"}
{"resources":{"randomPet":{"type":"random:RandomPet","properties":{"separator":"-","length":"3"}}},"description":"","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/7b52bb30-f2bb-4d50-9ff3-d07fb84e19b2.zip"}}},"runtime":"yaml","name":"index_randompeto4wezh6hqPUZ"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"s3_bucket"}
{"runtime":"nodejs","name":"pulumi-aws-replaceOnChanges","description":"replaceOnChanges integration test"}
{"description":"An example that creates a new VPC using the default settings.","name":"awsx-vpc-java","runtime":"java"}
{"runtime":"nodejs","name":"l2-invoke-dependencies"}
{"description":"${DESCRIPTION}","runtime":"go","template":{"config":{"alicloud:region":{"default":"cn-beijing","description":"The AliCloud region to deploy into"}},"description":"A minimal AliCloud Go Pulumi program"},"name":"${PROJECT}"}
{"runtime":"go","description":"A minimal Stack Readme Go Example program","name":"stack-readme-go"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"An example that deploys an S3 bucket and bucket policy on AWS.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}}},"name":"aws-s3bucket-bucketpolicy-javascript"}
{"name":"l2-invoke-variants","runtime":"go"}
{"name": "gcp-typescript-cloudrun", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name":"pulumi-ansible-wordpress-java","runtime":"java","description":"Deploy an EC2 Wordpress server using Pulumi and Ansible."}
{"name":"l2-invoke-variants","runtime":"yaml"}
{"organization":{"pulumi:tags":{"company":"eomii"}},"name":"nativelink","runtime":"go","org":"eomii","backend":{"url":"file://~"},"description":"NativeLink development cluster for rules_ll."}
{"name":"regress-444","runtime":"nodejs"}
{"runtime":"nodejs","description":"Work with Azure IoT Hubs","name":"azure-iot"}
{"name":"${PROJECT}","runtime":"go","description":"${DESCRIPTION}","template":{"description":"A minimal Go Pulumi program with the classic Azure provider","config":{"azure:location":{"description":"The Azure location to use","default":"WestUS2"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}}}
{"name": "core-pipeline", "runtime": "nodejs", "description": "Core pipeline to deploy GCP components"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"dotnet","template":{"description":"A C# program to deploy a serverless application on Google Cloud","config":{"sitePath":{"default":"./www","description":"The path to the folder containing the website"},"appPath":{"description":"The path to the folder containing the functions to be deployed","default":"./app"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"},"indexDocument":{"default":"index.html","description":"The file to use for top-level pages"}}}}
{"config":{"gcpProj":"string"},"resources":{"entitlementId":{"type":"random:index/randomString:RandomString","properties":{"number":"","special":"","length":"10","upper":""}},"entitlement":{"type":"gcp:privilegedaccessmanager:entitlement","properties":{"entitlementId":"${entitlementId.result}","parent":"projects/${gcpProj}","location":"global","requesterJustificationConfig":{"unstructured":{}},"eligibleUsers":[{"principals":["domain:pulumi.com"]}],"maxRequestDuration":"7200s","privilegedAccess":{"gcpIamAccess":{"roleBindings":[{"role":"roles/storage.admin"}],"resource":"//cloudresourcemanager.googleapis.com/projects/${gcpProj}","resourceType":"cloudresourcemanager.googleapis.com/Project"}}}}},"name":"gcp_2167","runtime":{"name":"yaml"}}
{"runtime":"yaml","name":"l2-destroy"}
{"name":"python_await","description":"A python program to test if non-exported outputs are awaited","runtime":"python"}
{"name":"DiceDB Standalone","description":"Pulumi project to deploy DiceDB standalone EC2 instance","runtime":{"name":"python"},"backend":{"url":"s3://ddb-temp-1729?region=us-east-1&awssdk=v2"}}
{"runtime":"python","name":"ol-infrastructure-networking","backend":{"url":"s3://mitol-pulumi-state/"},"description":"Pulumi project for managing foundational network infrastructure used by Open Learning managed services."}
{"name":"LambdaWebServer","runtime":"dotnet","description":"Basic example of an AWS serverless website using F#"}
{"description":"Infrastructure (compute, storage, networking) for production Kubernetes infrastructure","runtime":"nodejs","name":"infrastructure"}
{"description":"An example that deploys an IAM user, group, and group policy on AWS.","runtime":"dotnet","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"name":"aws-iam-user-group-grouppolicy-csharp"}
{"main":"/infrastructure/aws/pulumi/","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"name":"myfinances","description":"MyFinances infrastructure","stackConfigDir":"/infrastructure/aws/pulumi/","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"A Pulumi program that produces output with Go format elements.","name":"formattable","runtime":"nodejs"}
{"name": "builder", "runtime": "go", "description": "An awesome Pulumi infrastructure-as-code Stack"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A minimal Pinecone JavaScript Pulumi program"},"runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name": "aws_ec2", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A simple AWS EC2 instance"}
{"name":"crd-example","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"description":"A minimal TypeScript Pulumi program"}
{"runtime":"python","description":"A minimal AWS Python Pulumi program","name":"proj1"}
{"resources":{"my-bucket":{"type":"aws:s3:Bucket"}},"backend":{"url":"file://./pulumi-state"},"name":"remote-program","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-yaml"}}},"outputs":{"bucketName":"${my-bucket.id}"},"description":"A minimal AWS Pulumi YAML program","runtime":"yaml"}
{"runtime":"nodejs","name":"skip-update-unreachable-tests","description":"Tests skipUpdateUnreachable flag"}
{"template":{"description":"AWS OIDC setup for Pulumi ESC","config":{"escEnvironmentName":{"description":"The name of the ESC environment to generate.","default":"aws-oidc-admin"},"escProject":{"description":"The name of the ESC project in which to place a generated environment.","default":"aws"},"aws:region":{"default":"us-west-2","description":"AWS Region"}}},"name":"${PROJECT}","description":"${DESCRIPTION}","runtime":"nodejs"}
{"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"A minimal TypeScript Pulumi program","name":"project-infra"}
{"runtime":"nodejs","name":"thorchain-v1","description":"thorchain-v1 coin stack"}
{"name":"l2-invoke-dependencies","runtime":"go"}
{"runtime":"mock","name":"l2-destroy"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal AliCloud Python Pulumi program", "config": {"alicloud:region": {"description": "The AliCloud region to deploy into", "default": "cn-beijing"}}}}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"awsx-apigateway-lambda-javascript","description":"An example that deploys an API Gateway REST API with a single endpoint backed by AWS Lambda."}
{"description":"Deploy resources that first require a running eks cluster","name":"ol-substructure-eks","runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"}}
{"config":{"aws:region":"us-west-2"},"name":"ec2-networking","resources":{"MyInternetGateway":{"type":"aws:ec2/internetGateway:InternetGateway"},"MySubnet":{"type":"aws:ec2:Subnet","properties":{"cidrBlock":"10.0.1.0/24","vpcId":"${MyVPC.id}"}},"MyVPC":{"type":"aws:ec2:Vpc","properties":{"cidrBlock":"10.0.0.0/16"}},"MyNatGateway":{"properties":{"subnetId":"${MySubnet.id}","allocationId":"${MyEIP.id}"},"type":"aws:ec2:NatGateway"},"MyGatewayAttachment":{"properties":{"vpcId":"${MyVPC.id}","internetGatewayId":"${MyInternetGateway.id}"},"type":"aws:ec2:InternetGatewayAttachment"},"MyRoute":{"type":"aws:ec2:Route","properties":{"destinationCidrBlock":"0.0.0.0/0","natGatewayId":"${MyNatGateway.id}","routeTableId":"${MyRouteTable.id}"}},"MyRouteTable":{"properties":{"vpcId":"${MyVPC.id}"},"type":"aws:ec2:RouteTable"},"MyRouteTableAssociation":{"type":"aws:ec2:RouteTableAssociation","properties":{"routeTableId":"${MyRouteTable.id}","subnetId":"${MySubnet.id}"}},"MyEIP":{"type":"aws:ec2:Eip"}},"runtime":"yaml","outputs":{"subnetId":"${MySubnet.id}","routeTableId":"${MyRouteTable.id}","routeId":"${MyRoute.id}","natGatewayId":"${MyNatGateway.id}","vpcId":"${MyVPC.id}","internetGatewayId":"${MyInternetGateway.id}","eipId":"${MyEIP.id}","routeTableAssociationId":"${MyRouteTableAssociation.id}"}}
{"name": "wait-for-loadbalancer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"runtime":"nodejs","name":"minimal","description":"An empty Lumi script."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Add metrics configuration for entire S3 bucket", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","description":"A program that uses input/output types.","name":"types_python"}
{"name": "s3", "description": "Create S3 Bucket", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}}
{"runtime":"go","name":"${PROJECT}","template":{"description":"A Go program to deploy a containerized service on Google Cloud","config":{"concurrency":{"description":"The maximum number of concurrent requests to serve per container instance","default":"50"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"cpu":{"description":"The number of virtual CPUs to allocate per container instance","default":"1"},"memory":{"description":"The amount of memory to allocate per container instance","default":"1Gi"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"appPath":{"description":"The path to the container application to deploy","default":"app"},"containerPort":{"description":"The port to expose on the container","default":"8080"}}},"description":"${DESCRIPTION}"}
{"runtime":"go","name":"l2-provider-grpc-config-secret"}
{"name":"aws-native-refresh-changes","description":"An example program to test refresh","runtime":"nodejs"}
{"name":"packageadd","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"runtime":{"name":"nodejs","options":{"packagemanager":"yarn"}},"description":"A minimal Google Cloud TypeScript Pulumi program"}
{"runtime":"nodejs","description":"${DESCRIPTION}","name":"${PROJECT}","template":{"config":{"google-native:project":{"description":"The Google Cloud project to deploy into"}},"description":"A minimal Google Cloud TypeScript Pulumi program"}}
{"description":"A Google Kubernetes Engine (GKE) cluster, with canary deployment","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"gcp-py-gke"}
{"name":"talos-em","description":"Talos Cluster on Equinix Metal","runtime":"go"}
{"description":"A minimal AWS TypeScript Pulumi program","name":"infrastructure","runtime":"nodejs"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal DigitalOcean Pulumi YAML program"}, "resources": {"domain": {"type": "digitalocean:Domain", "properties": {"name": "my-domain.io"}}}, "outputs": {"domainName": "${domain.name}"}}
{"name":"awsx-apigateway-openapi-full-java","runtime":"java","description":"An example of configuring an API Gateway instance with an OpenAPI/Swagger JSON definition."}
{"name":"adhoc-app","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"name": "aws-eks-pulumi", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"l1-empty","runtime":{"options":{"number_option":"42","string_option":"hello","bool_option":"1","list_option":["a","b","c"]},"name":"mock"}}
{"name": "test-aws-1655-legacy", "runtime": "yaml", "description": "Add new tag: `thwomp: pow`\n", "resources": {"aws-provider": {"type": "pulumi:providers:aws", "properties": {"defaultTags": {"tags": {"foo": "quux", "thwomp": "pow"}}}}, "res": {"type": "aws:s3:Bucket", "options": {"provider": "${aws-provider}"}}}, "outputs": {"actual": "${res.tagsAll}"}}
{"description":"GCP Functions example","name":"gcp-functions","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:region":{"description":"The Google Cloud region"}}},"runtime":"nodejs"}
{"name":"lambda-layer-old","runtime":"nodejs","description":"Basic example of a creating an AWS lambda layer."}
{"runtime":"yaml","resources":{"ingress":{"type":"kubernetes:networking.k8s.io/v1:Ingress","properties":{"metadata":{"namespace":"${nginx-demo.metadata.name}"},"spec":{"rules":[{"http":{"paths":[{"path":"/","pathType":"Prefix","backend":{"service":{"name":"${service.metadata.name}","port":{"number":"80"}}}}]},"host":"${hostname}"}]}}},"service":{"type":"kubernetes:core/v1:Service","properties":{"metadata":{"namespace":"${nginx-demo.metadata.name}","labels":{"app.kubernetes.io/name":"nginx-demo"}},"spec":{"type":"ClusterIP","ports":[{"port":"80","protocol":"TCP","targetPort":"80"}],"selector":{"app.kubernetes.io/name":"nginx-demo"}}}},"nginx-demo":{"type":"kubernetes:core/v1:Namespace"},"app":{"properties":{"spec":{"selector":{"matchLabels":{"app.kubernetes.io/name":"nginx-demo"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"nginx-demo"}},"spec":{"containers":[{"name":"app","image":"nginx:1.15-alpine"}]}},"replicas":"1"},"metadata":{"namespace":"${nginx-demo.metadata.name}"}},"type":"kubernetes:apps/v1:Deployment"}},"name":"simple-kubernetes","config":{"hostname":{"type":"string","default":"example.com"}}}
{"name":"identity","runtime":"nodejs","description":"Identity definitions for production Kubernetes infrastructure"}
{"runtime":"yaml","outputs":{"actual":"${res.tags}"},"resources":{"res":{"type":"aws:cognito:UserPool","properties":{"aliasAttributes":["email"]},"options":{"provider":"${aws-provider}"}},"aws-provider":{"type":"pulumi:providers:aws"}},"name":"test-aws-1655-sdkv2","description":"Don't specify any default tags (should be empty)\n"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"kubeconfig-py","description":"Test getKubeconfig method support"}
{"template":{"config":{"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"nodesPerZone":{"description":"The desired number of nodes PER ZONE in the nodepool","default":"1"}},"description":"A Pulumi YAML program to deploy a Kubernetes cluster on Google Cloud"},"variables":{"clusterKubeconfig":{"fn::secret":"apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: ${gke-cluster.masterAuth[\"clusterCaCertificate\"]}\n    server: https://${gke-cluster.endpoint}\n  name: ${gke-cluster.name}\ncontexts:\n- context:\n    cluster: ${gke-cluster.name}\n    user: ${gke-cluster.name}\n  name: ${gke-cluster.name}\ncurrent-context: ${gke-cluster.name}\nkind: Config\npreferences: {}\nusers:\n- name: ${gke-cluster.name}\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1beta1\n      command: gke-gcloud-auth-plugin\n      installHint: Install gke-gcloud-auth-plugin for use with kubectl by following\n        https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke\n      provideClusterInfo: true\n"}},"runtime":"yaml","resources":{"gke-cluster":{"type":"gcp:container:Cluster","properties":{"description":"A GKE cluster","privateClusterConfig":{"masterIpv4CidrBlock":"10.100.0.0/28","enablePrivateNodes":"1","enablePrivateEndpoint":""},"initialNodeCount":"1","workloadIdentityConfig":{"workloadPool":"${gcp:project}.svc.id.goog"},"datapathProvider":"ADVANCED_DATAPATH","masterAuthorizedNetworksConfig":{"cidrBlocks":[{"displayName":"All networks","cidrBlock":"0.0.0.0/0"}]},"subnetwork":"${gke-subnet.name}","location":"${gcp:region}","network":"${gke-network.name}","ipAllocationPolicy":{"servicesIpv4CidrBlock":"/20","clusterIpv4CidrBlock":"/14"},"releaseChannel":{"channel":"STABLE"},"addonsConfig":{"dnsCacheConfig":{"enabled":"1"}},"removeDefaultNodePool":"1","binaryAuthorization":{"evaluationMode":"PROJECT_SINGLETON_POLICY_ENFORCE"},"networkingMode":"VPC_NATIVE"}},"gke-subnet":{"type":"gcp:compute:Subnetwork","properties":{"privateIpGoogleAccess":"1","ipCidrRange":"10.128.0.0/12","network":"${gke-network.id}"}},"gke-network":{"type":"gcp:compute:Network","properties":{"description":"A virtual network for your GKE cluster(s)","autoCreateSubnetworks":""}},"gke-nodepool-sa":{"properties":{"accountId":"${gke-cluster.name}-np-1-sa","displayName":"Nodepool 1 Service Account"},"type":"gcp:serviceaccount:Account"},"gke-nodepool":{"properties":{"nodeCount":"${nodesPerZone}","nodeConfig":{"oauthScopes":["https://www.googleapis.com/auth/cloud-platform"],"serviceAccount":"${gke-nodepool-sa.email}"},"cluster":"${gke-cluster.id}"},"type":"gcp:container:NodePool"}},"name":"${PROJECT}","outputs":{"clusterId":"${gke-cluster.id}","kubeconfig":"${clusterKubeconfig}","networkName":"${gke-network.name}","networkId":"${gke-network.id}","clusterName":"${gke-cluster.name}"},"description":"${DESCRIPTION}","config":{"nodesPerZone":{"type":"integer","default":"1"}}}
{"description":"A minimal C# Pulumi program using Pulumi.Random.","name":"simple-cs","runtime":"dotnet"}
{"name":"flexible_server","description":"A minimal Azure Native Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"l2-invoke-options-depends-on","runtime":"yaml"}
{"description":"EKS + Kubernetes Hello World example","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"name":"aws-ts-eks-hello-world","runtime":"nodejs"}
{"description":"Infrastructure for daily-api","runtime":"nodejs","name":"api"}
{"runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"},"name":"l2-provider-grpc-config-secret"}
{"runtime":"yaml","outputs":{"bucketName":"${bucket.id}"},"template":{"config":{"alicloud:region":{"default":"cn-beijing","description":"The AliCloud region to deploy into"}},"description":"A minimal AliCloud Pulumi YAML program"},"resources":{"bucket":{"type":"alicloud:oss:Bucket"}},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name": "auto-deploy-demo", "runtime": "python", "description": "A simple auto-deploy example"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"runtime":"dotnet","description":"An example that creates a Lambda function and Step Function to demonstrate the JSON stringify helper","name":"aws-lambda-stepfunctions-jsonhelper-csharp"}
{"name":"pulumi-scaleway-examples-go-server","runtime":"go","description":"A minimal Go Pulumi program"}
{"runtime":"nodejs","description":"Eventuous sample application deployment to Google Cloud Run","name":"cloudrun"}
{"name":"authentication-mode-go","runtime":"go","description":"Example Cluster with API authentication mode"}
{"name":"${PROJECT}","template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}},"description":"A minimal AWS Scala Pulumi program"},"description":"${DESCRIPTION}","runtime":"java"}
{"runtime":"yaml","name":"sql_managed","resources":{"exampleSubnet":{"properties":{"virtualNetworkName":"${exampleVirtualNetwork.name}","delegations":[{"name":"d1","serviceDelegation":{"actions":["Microsoft.Network/virtualNetworks/subnets/join/action","Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action","Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"],"name":"Microsoft.Sql/managedInstances"}}],"resourceGroupName":"${rg.name}","addressPrefixes":["10.0.2.0/24"]},"type":"azure:network:Subnet"},"failoverGroup":{"type":"azure:sql:ManagedInstanceFailoverGroup","properties":{"managedInstanceName":"${primary.name}","resourceGroupName":"${rg.name}","partnerManagedInstanceId":"${secondary.id}","readWriteEndpointFailoverPolicy":{"graceMinutes":"60","mode":"Automatic"},"location":"${primary.location}"},"name":"failovergroup"},"routeTableAssoc1":{"type":"azure:network:SubnetRouteTableAssociation","properties":{"routeTableId":"${routeTable.id}","subnetId":"${exampleSubnet.id}"}},"db":{"type":"azure:sql:ManagedDatabase","properties":{"location":"${rg.location}","sqlManagedInstanceId":"${primary.id}"}},"nsg1":{"properties":{"resourceGroupName":"${rg.name}","location":"${rg.location}"},"type":"azure:network:NetworkSecurityGroup"},"nsg2":{"type":"azure:network:NetworkSecurityGroup","properties":{"location":"West US 2","resourceGroupName":"${rg.name}"}},"exampleVirtualNetwork":{"type":"azure:network:VirtualNetwork","properties":{"location":"${rg.location}","resourceGroupName":"${rg.name}","addressSpaces":["10.0.0.0/16"]}},"exampleVirtualNetwork2":{"type":"azure:network:VirtualNetwork","properties":{"resourceGroupName":"${rg.name}","location":"West US 2","addressSpaces":["10.0.0.0/16"]}},"subnetNetworkSecurityGroupAssociation1":{"type":"azure:network:SubnetNetworkSecurityGroupAssociation","properties":{"networkSecurityGroupId":"${nsg1.id}","subnetId":"${exampleSubnet.id}"}},"routeTable2":{"type":"azure:network:RouteTable","properties":{"resourceGroupName":"${rg.name}","location":"West US 2","disableBgpRoutePropagation":""}},"primary":{"properties":{"storageSizeInGb":"32","licenseType":"BasePrice","administratorLoginPassword":"thisIsDog11","location":"${rg.location}","skuName":"GP_Gen5","resourceGroupName":"${rg.name}","administratorLogin":"mradministrator","vcores":"4","subnetId":"${exampleSubnet.id}"},"type":"azure:sql:ManagedInstance"},"routeTable":{"properties":{"disableBgpRoutePropagation":"","resourceGroupName":"${rg.name}","location":"${rg.location}"},"type":"azure:network:RouteTable"},"subnetNetworkSecurityGroupAssociation2":{"type":"azure:network:SubnetNetworkSecurityGroupAssociation","properties":{"subnetId":"${exampleSubnet2.id}","networkSecurityGroupId":"${nsg2.id}"}},"secondary":{"type":"azure:sql:ManagedInstance","properties":{"administratorLogin":"mradministrator","vcores":"4","subnetId":"${exampleSubnet2.id}","name":"example-secondary","location":"West US 2","skuName":"GP_Gen5","resourceGroupName":"${rg.name}","storageSizeInGb":"32","administratorLoginPassword":"thisIsDog11","licenseType":"BasePrice"}},"exampleSubnet2":{"type":"azure:network:Subnet","properties":{"addressPrefixes":["10.0.3.0/24"],"resourceGroupName":"${rg.name}","delegations":[{"serviceDelegation":{"actions":["Microsoft.Network/virtualNetworks/subnets/join/action","Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action","Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action"],"name":"Microsoft.Sql/managedInstances"},"name":"d2"}],"virtualNetworkName":"${exampleVirtualNetwork2.name}"}},"rg":{"type":"azure:core:ResourceGroup","properties":{"location":"West US"}},"routeTableAssoc2":{"type":"azure:network:SubnetRouteTableAssociation","properties":{"subnetId":"${exampleSubnet2.id}","routeTableId":"${routeTable2.id}"}}}}
{"name": "component-deps-multi-lang", "description": "Dependencies on multi-language Component Resources", "runtime": {"name": "python", "options": {"virtualenv": ".venv"}}}
{"runtime":"go","main":"subdir","name":"l1-main"}
{"name": "ok-site", "runtime": "nodejs", "description": "Website for the OK? programming language"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}},"name":"project","runtime":{"name":"python","options":{"toolchain":"pip","virtualenv":"venv"}},"description":"test bucket create"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcAttachment C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"A program that tests the query API.","name":"query-test"}
{"name":"awsx-vpc-fargate-service-go","runtime":"go"}
{"name":"l2-invoke-simple","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"name":"l2-resource-simple","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"name": "sourcegraph-deploy-kubernetes-helper", "runtime": "nodejs", "description": "A small helper program to aid in creating a test cluster for https://github.com/sourcegraph/deploy-sourcegraph."}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"description":"An example that retrieves and exports a Pulumi config value","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-import-export-pulumi-config-python"}
{"name": "kubernetes-go-crontabs", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name":"eks-from-scratch","runtime":"go","description":"A Pulumi Go program to stand up an EKS cluster"}
{"runtime":"dotnet","description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A minimal F# Pulumi program"}}
{"name":"azure-cs-call-azure-api","runtime":"dotnet","description":"An example of integrating an Azure SDK call to a Pulumi program."}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "S3 Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"java","description":"An example that deploys an EC2 instance using a VPC and security group with Crosswalk for AWS.","name":"awsx-vpc-sg-ec2-java"}
{"runtime":"dotnet","name":"azure-cs-aks","description":"A C# Pulumi program to provision an Azure Kubernetes Service (AKS) cluster"}
{"runtime":"go","name":"l2-explicit-parameterized-provider"}
{"runtime":"nodejs","name":"l2-invoke-options"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"dotnet","template":{"description":"A C# program to deploy a virtual machine on Azure","config":{"vmSize":{"description":"The machine size to use for the VM","default":"Standard_A1_v2"},"adminUsername":{"default":"pulumiuser","description":"The user account to create on the VM"},"vmName":{"default":"my-server","description":"The DNS hostname prefix to use for the VM"},"azure-native:location":{"default":"WestUS2","description":"The Azure location to deploy into"},"servicePort":{"default":"80","description":"The HTTP service port to expose on the VM"},"osImage":{"description":"The Azure URN of the base image to use for the VM","default":"Debian:debian-11:11:latest"}}}}
{"name": "ciem-aws-public-ecr-repository", "runtime": "go", "description": "Creates a public ECR repository. It is recommended to alert on the creation of public ECR repositories, and only allow public repositories when necessary.", "cnappgoat-params": {"module": "ciem", "platform": "aws", "id": "ciem-aws-public-ecr-repository", "friendlyName": "Public ECR Repository", "description": "Creates a public ECR repository. It is recommended to alert on the creation of public ECR repositories, and only allow public repositories when necessary.", "scenarioType": "native"}}
{"name": "pk8syaml-guestbook-aws-elasticache", "description": "The standard Kubernetes Guestbook, provisioned using Pulumi, using AWS ElastiCache for Redis.", "runtime": "nodejs"}
{"name":"dogecoin","description":"coin stack indexer, ingestion and interface","runtime":"nodejs"}
{"runtime":"nodejs","name":"pulumi-eks-vpc-cni-network-policies","description":"A minimal AWS TypeScript Pulumi program"}
{"name":"l2-target-up-with-new-dependency","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"call_consumer","runtime":"python","plugins":{"providers":[{"path":".","name":"test"}]}}
{"description":"A minimal Google Cloud TypeScript Pulumi program","runtime":"nodejs","name":"gke"}
{"name":"aws-ts-hello-fargate","runtime":"nodejs","description":"A minimal \"Hello, World\" container in Fargate."}
{"runtime":"go","description":"Pulumi Go program to manage my repositories IaC","name":"pulumi-github"}
{"runtime":"python","description":"${DESCRIPTION}","template":{"description":"A minimal OpenStack Python Pulumi program"},"name":"${PROJECT}"}
{"name": "port-go", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"name":"pulumi-tutorial","runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","name":"proxy","description":"unchained proxy api"}
{"description":"${DESCRIPTION}","template":{"description":"A minimal JavaScript Pulumi program with the classic Azure provider","config":{"azure:location":{"default":"WestUS2","description":"The Azure location to use"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}},"name":"${PROJECT}","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"cluster","resources":{"primary":{"properties":{"deletionProtection":"","location":"us-central1","initialNodeCount":"1","removeDefaultNodePool":"1"},"type":"gcp:container:Cluster"},"random-account-id":{"properties":{"number":"","length":"10","upper":"","special":""},"type":"random:RandomString"},"serviceAccount":{"type":"gcp:serviceaccount:Account","properties":{"accountId":"${random-account-id.result}"}},"primarypreemptiblenodes":{"type":"gcp:container/nodePool:NodePool","properties":{"cluster":"${primary.name}","location":"us-central1","nodeCount":"1","nodeConfig":{"preemptible":"1","machineType":"e2-medium","oauthScopes":["https://www.googleapis.com/auth/cloud-platform"],"serviceAccount":"${serviceAccount.email}"}}}},"runtime":"yaml","description":"A minimal Google Cloud Pulumi YAML program"}
{"name":"cbp-do-ts","description":"An example of building/publishing a Docker container image to DigitalOcean Container Registry","runtime":"nodejs"}
{"name":"nx-monorepo","main":"dist/index.js","runtime":{"name":"nodejs","options":{"typescript":""}},"description":"A project using an Nx monorepo."}
{"name":"azure-native-static-website-csharp","description":"An example that deploys all of the resources for a static website on Azure.","runtime":"dotnet","config":{"pulumi:tags":{"value":{"pulumi:template":"azure-csharp"}}}}
{"name":"l1-output-string","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"name":"regress-2555","runtime":"nodejs","description":"Regress pulumi/pulumi-aws#2555"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnGatewayAttachment Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-k8s-runner", "runtime": "nodejs", "description": "A Pulumi program to deploy dusty deck Kubernetes YAML", "template": {"config": {"path": {"description": "A relative path to the Kubernetes YAML files to deploy.", "default": "."}, "glob": {"description": "A glob pattern for the Kubernetes YAML files to deploy.", "default": "*.yaml"}}}}
{"name": "muehlbachler-io_global-dns", "description": "muehlbachler.io: Global DNS", "runtime": {"name": "nodejs", "options": {"typescript": false}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv","toolchain":"pip"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-python"}}},"description":"Kubernetes Operator","name":"helm-kubernetes-python"}
{"runtime":"nodejs","name":"google-rails","description":"A containerized Ruby on Rails app using managed Kubernetes and PostgreSQL"}
{"runtime":"nodejs","name":"test-local-repo-digest-ts","template":{"description":"A minimal TypeScript Pulumi program"},"description":"A minimal TypeScript Pulumi program"}
{"runtime":"python","name":"awsx-load-balanced-fargate-nginx-python"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "python", "template": {"description": "A minimal RedisCloud Python Pulumi program", "config": {"cardType": {"description": "Credit card type (Visa, Mastercard) of the card on file with Rediscloud"}, "lastFourNumbers": {"description": "Last four numbers of the card on file with RedisCloud"}, "rediscloud:apiKey": {"description": "RedisCloud access key", "secret": true}, "rediscloud:secretKey": {"description": "RedisCloud secret key", "secret": true}}}}
{"description":"Creates Azure Cluster Services for an AKS cluster.","runtime":"nodejs","name":"k8s-az-cl-svcs"}
{"name":"testproj","description":"A minimal Go Pulumi program","runtime":"go"}
{"name":"hdinsight","resources":{"storageContainer":{"type":"azure:storage:Container","properties":{"containerAccessType":"private","storageAccountName":"${storageAccount.name}"}},"kafkaCluster":{"properties":{"gateway":{"password":"Password123!","username":"acctestusrgw"},"clusterVersion":"4.0","tier":"Standard","location":"${rg.location}","componentVersion":{"kafka":"2.1"},"roles":{"zookeeperNode":{"username":"acctestusrvm","vmSize":"Standard_D3_V2","password":"AccTestvdSC4daf986!"},"workerNode":{"password":"AccTestvdSC4daf986!","targetInstanceCount":"3","numberOfDisksPerNode":"3","username":"acctestusrvm","vmSize":"Standard_D3_V2"},"headNode":{"vmSize":"Standard_D3_V2","username":"acctestusrvm","password":"AccTestvdSC4daf986!"}},"storageAccounts":[{"storageAccountKey":"${storageAccount.primaryAccessKey}","isDefault":"1","storageContainerId":"${storageContainer.id}"}],"resourceGroupName":"${rg.name}"},"type":"azure:hdinsight:KafkaCluster"},"rg":{"type":"azure:core:ResourceGroup","properties":{"location":"West Europe"}},"storageAccount":{"properties":{"resourceGroupName":"${rg.name}","accountTier":"Standard","accountReplicationType":"LRS","location":"${rg.location}"},"type":"azure:storage:Account"}},"runtime":"yaml"}
{"name": "pulumi-external-dns", "runtime": "nodejs", "description": "A minimal Google Cloud TypeScript Pulumi program"}
{"name":"l2-provider-grpc-config-secret","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"${DESCRIPTION}","template":{"description":"A minimal JavaScript Pulumi program"},"name":"${PROJECT}"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS EmailChannel Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"l2-resource-alpha","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"name": "example-cluster-cs", "description": "EKS cluster example", "runtime": "dotnet"}
{"runtime":"nodejs","name":"example-cluster","description":"EKS cluster example"}
{"description":"A minimal AWS Python Pulumi program","runtime":"python","name":"simple-py"}
{"runtime":"yaml","name":"random_yaml","resources":{"pet":{"type":"random:RandomPet","options":{}}},"outputs":{"name":"${pet.id}"}}
{"resources":{"tested-resource":{"properties":{"bucket":"testbucket-${pulumi.stack}"},"type":"aws:s3/bucket:Bucket","options":{"provider":"${provider}"}},"provider":{"options":{"version":"5.42.0"},"type":"pulumi:providers:aws"}},"name":"test","runtime":{"name":"yaml"}}
{"resources":{"defaultTable":{"properties":{"labels":{"env":"default"},"deletionProtection":"","tableId":"bar","datasetId":"${default.datasetId}","schema":"[\n  {\n    \"name\": \"permalink\",\n    \"type\": \"STRING\",\n    \"mode\": \"NULLABLE\",\n    \"description\": \"The Permalink\"\n  },\n  {\n    \"name\": \"state\",\n    \"type\": \"STRING\",\n    \"mode\": \"NULLABLE\",\n    \"description\": \"State where the head office is located\"\n  }\n]        \n","timePartitioning":{"type":"DAY"}},"type":"gcp:bigquery:Table"},"randomName":{"type":"random:RandomString","properties":{"number":"","special":"","upper":"","length":"16"}},"default":{"type":"gcp:bigquery:Dataset","properties":{"description":"This is a test description","location":"EU","datasetId":"${randomName.id}","friendlyName":"test","defaultTableExpirationMs":"3.6e+06","labels":{"env":"default"}}},"sheet":{"properties":{"materializedView":{"query":"<QUERY>"},"tableId":"sheet","datasetId":"${default.datasetId}","deletionProtection":""},"type":"gcp:bigquery:Table"}},"runtime":"yaml","name":"bigquery-table-materialized-view"}
{"name":"server","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"name":"gcp-simple-webserver-javascript","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-javascript"}}},"runtime":{"name":"nodejs","options":{"typescript":"","packagemanager":"npm"}},"description":"A example that deploys the resources for a simple web server on Google Cloud."}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-go"}}},"description":"Agent for troubleshooting and operating software","runtime":"go","name":"foyle"}
{"runtime":"python","description":"${DESCRIPTION}","template":{"description":"A minimal OCI Python Pulumi program"},"name":"${PROJECT}"}
{"name":"aws-go-secrets-manager","runtime":"go","description":"A minimal AWS Go Pulumi program"}
{"resources":{"demo-image":{"type":"docker:Image","options":{"version":"v4.0.0"},"properties":{"build":{"dockerfile":"./Dockerfile","context":"./app"},"imageName":"pulumibot/test-image:tag3","skipPush":"1"}}},"outputs":{"out-dockerfile":"${demo-image.dockerfile}","imageName":"${demo-image.imageName}"},"name":"dockerfile-external","runtime":"yaml"}
{"description":"${DESCRIPTION}","template":{"description":"A C# program to deploy a containerized service on AWS","config":{"memory":{"description":"The amount of memory to allocate for the container","default":"128"},"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"cpu":{"description":"The amount of CPU to allocate for the container","default":"512"},"containerPort":{"description":"The port to expose on the container","default":"80"}}},"name":"${PROJECT}","runtime":"dotnet"}
{"description":"A basic of pattern for creating a serverless API or web service.","runtime":"nodejs","name":"simple-web-service"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","runtime":"python","template":{"description":"A minimal OVHcloud Python Pulumi program","config":{"registryName":{"description":"Name of the private registry","default":"my-registry"},"registryUserName":{"default":"user","description":"Name of the user"},"planName":{"description":"Name of the plan","default":"SMALL"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA"},"registryUserEmail":{"description":"Email of the user","default":"myuser@ovh.com"},"registryUserLogin":{"description":"Login of the user","default":"myuser"}}}}
{"description":"An example that deploys an S3 bucket and bucket policy on AWS.","runtime":"dotnet","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"name":"aws-s3bucket-bucketpolicy-csharp"}
{"runtime":"nodejs","description":"Validates codepath computation even with an invalid version in the package.json file.","name":"invalid_package_json"}
{"name": "demo-site", "runtime": "go", "description": "Prometheus Kubernetes Demo Site"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"helm-resource-prefix.py","description":"A minimal Python Pulumi program"}
{"name":"smoke-test","description":"A program that smoke-tests the Kubernetes SDK, specifying inputs with dicts","runtime":"python"}
{"runtime":"yaml","resources":{"vpc":{"properties":{"subnetSpecs":[{"type":"Public","cidrMask":"22"},{"cidrMask":"20","type":"Private"}]},"type":"awsx:ec2:Vpc"}},"name":"awsx-vpc-subnets-yaml","outputs":{"vpcId":"${vpc.vpcId}"},"description":"An example that creates a new VPC with a custom subnet specification."}
{"name":"skip-default-security-groups","description":"EKS cluster without default security groups","runtime":"nodejs"}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-edx-notes-application","runtime":"python","description":"Create and manage resources for running the edx_notes add on"}
{"name":"correct_project","runtime":"python","description":"This is a description"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"pulumi-random-provider"}
{"name": "yaml_kubernetes_tailscalebastion", "runtime": "yaml", "resources": {"bastion": {"type": "tailscale-bastion:kubernetes:Bastion", "properties": {"createNamespace": true, "routes": ["10.100.0.0/16", "172.16.0.0/24"]}}}, "outputs": {"name": "${bastion.deploymentName}"}}
{"name":"dev","runtime":"yaml","resources":{"my-bucket":{"properties":{"location":"EU","labels":{"good":"morning","bad":"things"}},"type":"gcp:storage:Bucket","options":{"provider":"${gcp-provider}"}},"gcp-provider":{"type":"pulumi:providers:gcp","properties":{"defaultLabels":{"new":"defaultlabel","hello":"goodbye"}}}},"description":"A minimal Google Cloud Pulumi YAML program"}
{"name":"config_secrets_node","description":"A simple Node.js program that uses configuration secrets.","runtime":"nodejs"}
{"name":"fargate","description":"A minimal AWS Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "pulumi-github-test", "runtime": "dotnet", "description": "A minimal GitHub C# Pulumi program"}
{"description":"A minimal Langserve AWS C# Pulumi program","name":"aws-csharp-langserve","runtime":"dotnet"}
{"name": "espresso-chronicle", "runtime": "go", "description": "Espresso Chronicle"}
{"runtime":"nodejs","name":"k8s-azure-02-kubernetes-cluster","description":"Set up kubernetes cluster"}
{"description":"A minimal Go Pulumi program","runtime":"go","name":"conflict_error"}
{"runtime":"go","name":"l1-output-bool"}
{"runtime":"nodejs","name":"LawKnowledge","description":"A deployment for the LawKnowledge project"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Testing Glacier Vault Lock Policy", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"test-aws-1655-bucket","outputs":{"actual":"${res.tags}"},"resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"thwomp":"pow"}}}},"res":{"type":"aws:s3:BucketV2","options":{"provider":"${aws-provider}"}}},"runtime":"yaml","description":"Remove foo tag (foo and thwomp)\n"}
{"runtime":"nodejs","name":"l2-large-string"}
{"runtime":"nodejs","description":"muil","name":"muil"}
{"name": "pulumi_demo", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal Google Cloud Python Pulumi program"}
{"description":"A minimal Azure Native C# Pulumi program","runtime":"dotnet","name":"CH13_Pulumi"}
{"name":"opni","template":{"config":{"opni:cluster.nodeGroupDesiredSize":{"description":"Desired number of nodes in the cluster","default":"3"},"opni:cluster.nodeInstanceType":{"description":"Instance type for worker nodes","default":"r6a.xlarge"},"opni:namePrefix":{"default":"opni","description":"Deployment Name"},"aws:skipCredentialsValidation":{"default":"true","description":"Skip AWS Credentials Validation (set to true when using an IAM account)"},"opni:cluster.nodeGroupMaxSize":{"default":"3","description":"Maximum number of nodes in the cluster"},"aws:region":{"description":"AWS Region","default":"us-east-2"},"aws:skipRequestingAccountId":{"description":"Skip Requesting AWS Account ID (set to true when using an IAM account)","default":"true"},"opni:cluster.nodeGroupMinSize":{"default":"3","description":"Minimum number of nodes in the cluster"},"opni:zoneID":{"description":"AWS Route53 Zone ID"}}},"stackConfigDir":"infra/","description":"Deploy Opni on AWS","main":"infra/","runtime":"go"}
{"name":"runtime_error","description":"A minimal Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"aws-ec2-sg-nginx-server-yaml","runtime":"yaml","resources":{"webserver-www":{"properties":{"userData":"#!/bin/bash\nsudo yum update -y\nsudo yum upgrade -y\nsudo amazon-linux-extras install nginx1 -y\nsudo systemctl enable nginx\nsudo systemctl start nginx\n","instanceType":"t2.micro","ami":"ami-09538990a0c4fe9be","vpcSecurityGroupIds":["${webserver-secgrp.id}"]},"type":"aws:ec2:Instance"},"webserver-secgrp":{"type":"aws:ec2:SecurityGroup","properties":{"ingress":[{"fromPort":"80","cidrBlocks":["0.0.0.0/0"],"toPort":"80","protocol":"tcp"}],"description":"Enable HTTP access"}}},"description":"A program to create an Nginx server on AWS","outputs":{"publicIp":"${webserver-www.publicIp}"}}
{"description":"Tests that modifying aws-auth with roleMappings does not break managed node groups cluster access","name":"managed-ng-aws-auth","runtime":"nodejs"}
{"name":"cicd-workshop","description":"A TypeScript program to deploy a static website on AWS","config":{"pulumi:tags":{"value":{"pulumi:template":"static-website-aws-typescript"}}},"runtime":"nodejs"}
{"description":"${DESCRIPTION}","template":{"config":{"azure:location":{"default":"WestUS2","description":"The Azure location to use"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}},"description":"A minimal Python Pulumi program with the classic Azure provider"},"runtime":"python","name":"${PROJECT}"}
{"name": "factorio-sites", "runtime": "nodejs", "description": "Factorio blueprints mono repo"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Subnets In Secondary VPC CIDR Blocks", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"resources":{"myWorkerScript":{"properties":{"content":"addEventListener('fetch', event => {\n  event.respondWith(handleRequest(event.request))\n})\n\nasync function handleRequest(request) {\n  return new Response('Hello worker!', {\n    headers: { 'content-type': 'text/plain' },\n  })\n}\n","name":"script${randomName.result}","accountId":"${cloudflare-account-id}"},"type":"cloudflare:WorkerScript"},"randomName":{"properties":{"length":"10","upper":"","numeric":"","special":""},"type":"random:RandomString"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/f0297e00-7bf2-4b80-92e9-f7338375bd26.zip"}},"cloudflare-account-id":{"default":"ACCOUNT_ID","type":"string"},"cloudflare-zone-id":{"default":"ZONE_ID","type":"string"}},"description":"","runtime":"yaml","name":"index_workerscriptielSrtchSkfd"}
{"runtime":"go","description":"A minimal Go Pulumi program","name":"pulumi-eks-velero"}
{"description":"An integration test for the about command","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"about-python"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS EmailIdentity Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Builds a remote Dockerfile using Docker Build Cloud and pushes to DockerHub.","config":{"pulumi:tags":{"value":{"pulumi:template":"https://github.com/desteves/pulumi-docker/tree/main/template"}}},"runtime":"nodejs","name":"ci-done"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS TransitGateway TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal AWS Python Pulumi program","name":"AWS_EKS_Creation_Deployments","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "ol-infrastructure-keycloak-application", "runtime": "python", "description": "A project to manage the resources and deployment of Keycloak", "backend": {"url": "s3://mitol-pulumi-state/"}}
{"name": "repo-ts", "runtime": "nodejs", "description": "Creating a GitHub Repository in TypeScript"}
{"name": "MagicBus.Deploy", "runtime": "dotnet", "description": "deploy magicBus to azure with pulumi"}
{"name": "lambda_api_gateway", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"name":"appservice-yaml","outputs":{"endpoint":"${app.defaultHostName}"},"runtime":"yaml","configuration":{"sqlAdmin":{"default":"pulumi","type":"String"}},"description":"Azure app services","variables":{"blobAccessToken":{"Fn::Invoke":{"Return":"serviceSasToken","Function":"azure-native:storage:listStorageAccountServiceSAS","Arguments":{"protocols":"https","resource":"c","sharedAccessStartTime":"2022-01-01","contentType":"application/json","canonicalizedResource":"/blob/${sa.name}/${container.name}","accountName":"${sa.name}","contentDisposition":"inline","cacheControl":"max-age=5","sharedAccessExpiryTime":"2030-01-01","resourceGroupName":"${appservicegroup.name}","permissions":"r","contentEncoding":"deflate"}}}},"resources":{"app":{"type":"azure-native:web:WebApp","properties":{"siteConfig":{"connectionStrings":[{"type":"SQLAzure","connectionString":"Server= tcp:${sqlServer.name}.database.windows.net;initial catalog=${db.name};userID=${sqlAdmin};password=${sqlPassword.result};Min Pool Size=0;Max Pool Size=30;Persist Security Info=true;","name":"db"}],"appSettings":[{"value":"https://${sa.name}.blob.core.windows.net/${container.name}/${blob.name}?${blobAccessToken}","name":"WEBSITE_RUN_FROM_PACKAGE"},{"name":"APPINSIGHTS_INSTRUMENTATIONKEY","value":"${appInsights.instrumentationKey}"},{"value":"InstrumentationKey=${appInsights.instrumentationKey}","name":"APPLICATIONINSIGHTS_CONNECTION_STRING"},{"name":"ApplicationInsightsAgent_EXTENSION_VERSION","value":"~2"}]},"serverFarmId":"${appserviceplan}","resourceGroupName":"${appservicegroup.name}"}},"appserviceplan":{"properties":{"kind":"App","resourceGroupName":"${appservicegroup.name}","sku":{"tier":"Basic","name":"B1"}},"type":"azure-native:web:AppServicePlan"},"sa":{"properties":{"sku":{"name":"Standard_LRS"},"resourceGroupName":"${appservicegroup.name}","kind":"StorageV2"},"type":"azure-native:storage:StorageAccount"},"db":{"properties":{"serverName":"${sqlServer.name}","sku":{"name":"S0"},"resourceGroupName":"${appservicegroup.name}"},"type":"azure-native:sql:Database"},"appInsights":{"properties":{"kind":"web","resourceGroupName":"${appservicegroup.name}","applicationType":"web"},"type":"azure-native:insights:Component"},"blob":{"properties":{"type":"Block","source":{"Fn::FileArchive":"./www"},"accountName":"${sa.name}","containerName":"${container.name}","resourceGroupName":"${appservicegroup.name}"},"type":"azure-native:storage:Blob"},"appservicegroup":{"type":"azure-native:resources:ResourceGroup"},"sqlServer":{"properties":{"resourceGroupName":"${appservicegroup.name}","administratorLoginPassword":"${sqlPassword.result}","version":"12.0","administratorLogin":"${sqlAdmin}"},"type":"azure-native:sql:Server"},"sqlPassword":{"type":"random:RandomPassword","properties":{"length":"16","special":"1"}},"container":{"properties":{"accountName":"${sa.name}","resourceGroupName":"${appservicegroup.name}","publicAccess":"None"},"type":"azure-native:storage:BlobContainer"}}}
{"runtime":"go","name":"go_helm_release","description":"Test Kubernetes Helm Release resource with local Chart."}
{"name":"pnpm-workspaces","runtime":"nodejs","description":"Use pnpm workspaces and import a workspace package in the pulumi program."}
{"description":"my playground aks cluster","runtime":"nodejs","name":"sample-aks-cluster"}
{"template":{"description":"A TypeScript program to deploy a static website on Azure","config":{"path":{"default":"./www","description":"The path to the folder containing the website"},"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"azure-native:location":{"description":"The Azure region to deploy into","default":"WestUS"}}},"description":"${DESCRIPTION}","runtime":"nodejs","name":"${PROJECT}"}
{"name":"l1-output-array","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}}}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"dns"}
{"description":"Integration test for Aliases (rename scenario)","name":"aliases-rename","runtime":{"name":"java","options":{"logtostderr":"","v":"0"}}}
{"name":"cbp-do-py","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example of building/publishing a Docker container image to DigitalOcean Container Registry"}
{"runtime":"nodejs","description":"Basic example of a serverless AWS application","name":"serverless","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}}}
{"description":"A minimal TypeScript Pulumi program","name":"pulumi-validating-admission-policy","config":{"cluster:version":"1.27","scaleway:region":"fr-par","node:auto_scale":"","node:node_type":"PLAY2-NANO","node:node_count":"1","cluster:auto_upgrade":"1","node:auto_heal":"1","scaleway:zone":"fr-par-1"},"runtime":"nodejs"}
{"config":{"foo":"hello world"},"variables":{"valid1":"${foo}","valid2":"${project-config-ref:foo}","invalid":"${wrong-namespace:foo}"},"runtime":"yaml","name":"project-config-ref"}
{"name": "quickstart", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"template":{"description":"A minimal Java Pulumi program with Maven builds"},"description":"${DESCRIPTION}","runtime":"java","name":"${PROJECT}"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal Python Pulumi program","name":"runtime_error"}
{"runtime":"nodejs","name":"aws-eks-cluster-typescript","description":"An example that deploys a Kubernetes cluster on AWS."}
{"name":"ai-chat-demo","description":"A pulumi program","runtime":"python"}
{"name": "spark_emr_serverless", "description": "Spark in AWS using EMR Serverless", "runtime": {"name": "python"}}
{"description":"Tests retrieving the scalar properties of EKS clusters","name":"scalar-types","runtime":"nodejs"}
{"runtime":"nodejs","name":"${PROJECT}","template":{"description":"A minimal AliCloud TypeScript Pulumi program","config":{"alicloud:region":{"default":"cn-beijing","description":"The AliCloud region to deploy into"}}},"description":"${DESCRIPTION}"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal Python Pulumi program","name":"py-structured-config"}
{"description":"An example that deploys an API Gateway REST API with an AWS Lambda authorizer.","name":"awsx-apigateway-auth-lambda-java","runtime":"java"}
{"name":"aws-ts-apigateway-eventbridge","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"resources":{"lambdaPermission":{"properties":{"sourceArn":"${targetGroup.arn}","function":"${fn.arn}","principal":"elasticloadbalancing.amazonaws.com","action":"lambda:InvokeFunction"},"type":"aws:lambda:Permission"},"fn":{"properties":{"code":{"fn::fileArchive":"./lambda"},"role":"${lambdaRole.arn}","handler":"index.handler","runtime":"nodejs18.x"},"type":"aws:lambda:Function"},"lambdaRole":{"properties":{"assumeRolePolicy":{"fn::toJSON":{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"},"Action":"sts:AssumeRole"}]}},"managedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]},"type":"aws:iam:Role"},"vpc":{"type":"awsx:ec2:Vpc","properties":{"cidrBlock":"10.0.0.0/16","numberOfAvailabilityZones":"2","subnetSpecs":[{"name":"public-lb-subnet","type":"Public"}],"natGateways":{"strategy":"None"}}},"securityGroup":{"type":"aws:ec2:SecurityGroup","properties":{"vpcId":"${vpc.vpcId}","ingress":[{"cidrBlocks":["0.0.0.0/0"],"toPort":"80","protocol":"tcp","fromPort":"80"}]}},"targetGroup":{"properties":{"vpcId":"${vpc.vpcId}","targetType":"lambda"},"type":"aws:lb:TargetGroup"},"loadBalancer":{"properties":{"subnets":"${vpc.publicSubnetIds}","securityGroups":["${securityGroup.id}"]},"type":"aws:lb:LoadBalancer"},"targetGroupAttachment":{"type":"aws:lb:TargetGroupAttachment","options":{"dependsOn":["${lambdaPermission}"]},"properties":{"targetId":"${fn.arn}","targetGroupArn":"${targetGroup.arn}"}},"listener":{"type":"aws:lb:Listener","properties":{"loadBalancerArn":"${loadBalancer.arn}","port":"80","defaultActions":[{"type":"forward","targetGroupArn":"${targetGroup.arn}"}]}}},"runtime":"yaml","name":"alb-lambda-pulumi-yaml","outputs":{"url":"${loadBalancer.dnsName}"},"description":"A minimal AWS Pulumi YAML program"}
{"description":"A project to manage the resources and deployment of Keycloak","runtime":"python","name":"ol-infrastructure-keycloak-application","backend":{"url":"s3://mitol-pulumi-state/"}}
{"name":"${PROJECT}","template":{"description":"A minimal Equinix Metal Go Pulumi program"},"description":"${DESCRIPTION}","runtime":"go"}
{"name": "equinix-metal-device", "runtime": "go", "description": "An Equinix Metal device resource", "config": {"projectId": {"type": "string"}}}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Example IAM Role for EKS Cluster", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"azure-py-aci","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Creates Azure Container Instance with a public IP"}
{"name":"aws-go-eks","runtime":"go","description":"Deploys a container into an EKS cluster with a Managed Node Group."}
{"runtime":"nodejs","name":"serverless","description":"Basic example of a serverless AWS application."}
{"name":"l2-resource-asset-archive","main":"subdir","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"config":{"snsTopicName":{"type":"string","default":"test-topic"}},"resources":{"topic2":{"type":"aws:sns:Topic","properties":{"name":"${snsTopicName}"}},"topic1":{"properties":{"name":"${snsTopicName}"},"type":"aws:sns:Topic"}},"name":"aws_sns_topic_Topic_1","runtime":"yaml"}
{"name": "hlidac-shopu", "runtime": "nodejs", "description": "Hl\u00edda\u010d shop\u016f AWS infrastructure"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalGatewayVirtualInterfaceGroup Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"parameterized","runtime":"python"}
{"name":"l2-provider-grpc-config-secret","runtime":{"options":{"typechecker":"mypy","virtualenv":"venv"},"name":"python"}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS HostedPublicVirtualInterfaceAccepter Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"config":{"rgId":{"type":"string"},"azure-native:location":"northeurope","objectId":{"type":"string"}},"description":"A minimal Azure Native Pulumi YAML program","outputs":{"keyVaultUri":"${keyVault.properties.vaultUri}","secretId":"${secret.id}"},"name":"yaml-simple","resources":{"keyVault":{"properties":{"resourceGroupName":"${resourceGroup.name}","properties":{"accessPolicies":[{"tenantId":"${azure-native:tenantId}","permissions":{"secrets":["get","list","set","delete"]},"objectId":"${objectId}"}],"tenantId":"${azure-native:tenantId}","sku":{"name":"standard","family":"A"}},"location":"${resourceGroup.location}"},"type":"azure-native:keyvault:Vault"},"secret":{"properties":{"resourceGroupName":"${resourceGroup.name}","vaultName":"${keyVault.name}","properties":{"value":"MySecretValue"}},"type":"azure-native:keyvault:Secret"},"resourceGroup":{"get":{"id":"${rgId}"},"type":"azure-native:resources:ResourceGroup"}},"runtime":"yaml"}
{"resources":{"unfairRandomNumber":{"type":"muxedrandom:RandomHumanNumber","properties":{"suggestion":"${randomNumber.result}"}},"randomNumber":{"type":"muxedrandom:RandomInteger","properties":{"max":"2","min":"2"}},"pseudoRandomNumber":{"properties":{"suggestion":"${randomNumber.result}"},"type":"muxedrandom:RandomHumanNumber"},"set":{"type":"testbridge:index/testres:Testres","properties":{"statedir":"state","setOptionals":["a","b","c","b"],"requiredInputString":"input1"}},"r":{"properties":{"optionalInputString":"input2-updated","requiredInputString":"input1-updated","statedir":"state"},"type":"testbridge:index/testres:Testres"}},"outputs":{"pseudoRandomNumberFair__actual":"${pseudoRandomNumber.fair}","randomNumber__expect":"2","testSetOptionals__actual":"${set.setOptionals}","pseudoRandomNumber__actual":"${pseudoRandomNumber.number}","pseudoRandomNumber__expect":"4","testRequiredStringAfterUpdate__expect":"input1-updated","unfairRandomNumberFair__actual":"${unfairRandomNumber.fair}","testOptionalStringAfterUpdate__expect":"input2-updated","pseudoRandomNumberUpdated__expect":"1","randomNumber__actual":"${randomNumber.result}","testSetOptionals__expect":["a","b","c","b"],"testRequiredStringAfterUpdate__actual":"${r.requiredInputStringCopy}","pseudoRandomNumberUpdated__actual":"${pseudoRandomNumber.suggestionUpdated}","pseudoRandomNumberFair__expect":"1","testOptionalStringAfterUpdate__actual":"${r.optionalInputStringCopy}","unfairRandomNumberFair__expect":""},"name":"updateprogram","runtime":"yaml"}
{"runtime":{"name":"python"},"description":"A minimal AWS Python Pulumi program","name":"infra","config":{"pulumi:tags":{"value":{"pulumi:template":""}}}}
{"template":{"config":{"companyName":{"description":"The company name to use"}}},"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"aws-py-stackreference-company","description":"An AWS Python Pulumi program demonstrating sharing configuration via StackReference resources"}
{"name": "azure-go-aks", "description": "Creates an Azure Kubernetes Service (AKS) cluster", "runtime": "go", "template": {"config": {"azure:location": {"description": "The Azure location to use", "default": "westus"}, "kubernetesVersion": {"description": "The Kubernetes version to deploy", "default": "1.16.9"}}}}
{"runtime":"nodejs","name":"aks","description":"Create an MSI Resource and show it has been aliased correctly"}
{"resources":{"provider":{"type":"pulumi:providers:tpsdkv2","properties":{"strConfigProp":{"fn::secret":"SECRET strConfigProp value"},"secretStrConfigProp":"SECRET secretStrConfigProp value","secretObjectProp":{"strNestedSecretProp":"SECRET secretObjectProp.strNestedSecretProp value"},"objectProp":{"strNestedProp":{"fn::secret":"SECRET objectProp.strNestedProp value"}}}}},"runtime":"yaml","name":"provider-secrets"}
{"name": "test-manager", "runtime": {"name": "python"}, "description": "Deploy EC2 Instance running Test Manager"}
{"description":"Add first default tag: `foo: bar``\n","name":"test-aws-1655-sdkv2","outputs":{"actual":"${res.tags}"},"resources":{"aws-provider":{"type":"pulumi:providers:aws","properties":{"defaultTags":{"tags":{"foo":"bar"}}}},"res":{"properties":{"aliasAttributes":["email"]},"options":{"provider":"${aws-provider}"},"type":"aws:cognito:UserPool"}},"runtime":"yaml"}
{"name":"random","outputs":{"arrVar":["fizz","buzz"],"strVar":"foo","readme":{"fn::readFile":"./Pulumi.README.md"}},"runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "HTTP Routing", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"outputs":{"actual":"${res.tags}"},"description":"Initial deployment without tags\n","resources":{"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}},"res":{"type":"aws:appconfig:Environment","options":{"provider":"${aws-provider}"},"properties":{"name":"pf-tags-test","applicationId":"${app.id}"}},"aws-provider":{"type":"pulumi:providers:aws"}},"runtime":"yaml","name":"test-aws-1655-pf"}
{"description":"An example that deploys an ApplicationLoadBalancer listening on port 80.","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"awsx-elb-web-listener-python"}
{"name": "confluentcloud-ts-patch", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"description":"Tests whether Pulumi successfully retries failed create operations.","runtime":"nodejs","name":"retry-tests"}
{"runtime":"python","name":"construct_component_output_values_py","description":"A program that constructs remote component resources with output values."}
{"template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}},"runtime":"go","description":"A static website hosted on AWS S3","name":"aws-go-s3-folder"}
{"name": "heroku", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program. Used to create a heroku clone to provision new VMs with flexibility and deploy static websites."}
{"runtime":"java","description":"An example that deploys an API Gateway REST API with a custom domain from Route53.","name":"awsx-apigateway-custom-domain-java"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "yaml", "template": {"description": "A minimal Pulumi YAML program with the classic Azure provider", "config": {"azure:location": {"description": "The Azure location to use", "default": "WestUS2"}}}, "resources": {"resourceGroup": {"type": "azure:core:ResourceGroup"}, "account": {"type": "azure:storage:Account", "properties": {"resourceGroupName": "${resourceGroup.name}", "accountTier": "Standard", "accountReplicationType": "LRS"}}}, "outputs": {"connectionString": "${account.primaryConnectionString}"}}
{"name":"kubernetes-go-helm-release-wordpress","runtime":"go","description":"A minimal Go Pulumi program"}
{"name":"gcp-simple-webserver-typescript","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"description":"A example that deploys the resources for a simple web server on Google Cloud.","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"}}
{"description":"A simple Node.js program that uses environments.","name":"environments_basic","runtime":"nodejs"}
{"template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}}},"name":"webserver","description":"Basic example of an AWS web server accessible over HTTP","runtime":"nodejs"}
{"name": "equinix-metal-project-api-key", "runtime": "nodejs", "description": "An Equinix Metal Project API Key resource", "config": {"projectId": {"type": "string"}, "readOnly": {"type": "boolean", "default": false}}}
{"description":"A minimal Kubernetes TypeScript Pulumi program","name":"qcon-k8s-step2","runtime":"nodejs"}
{"name":"digitalocean-python","description":"A minimal DigitalOcean Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"awsx-vpc-nat-gateways-javascript","runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"An example that creates a new VPC with a custom NAT gateway strategy."}
{"name":"authentication_executionconfige7oBrvJ1p51V","runtime":"yaml","resources":{"keycloakAuthenticationFlow":{"properties":{"description":"My Authentication Flow","realmId":"${keycloakRealm.realm}","providerId":"basic-flow","alias":"myflow"},"type":"keycloak:authentication:Flow"},"keycloakAuthenticationExecutionConfig":{"properties":{"config":{"user_attribute":"username"},"executionId":"${keycloakAuthenticationExecution.id}","realmId":"${keycloakRealm.realm}","alias":"execution-config"},"type":"keycloak:authentication:ExecutionConfig"},"keycloakRealm":{"properties":{"realm":"myrealm","enabled":"1","displayName":"My Realm"},"type":"keycloak:Realm"},"keycloakAuthenticationExecution":{"type":"keycloak:authentication:Execution","properties":{"parentFlowAlias":"${keycloakAuthenticationFlow.alias}","authenticator":"auth-cookie","realmId":"${keycloakRealm.realm}"}}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/f5185d25-5cc4-482d-b8f9-9b7f0db546e5.zip"}}},"description":""}
{"name":"disappearing-bucket-object","runtime":"nodejs"}
{"description":"An example that deploys a Kubernetes cluster on AWS.","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-eks-cluster-python"}
{"runtime":"nodejs","description":"Creates an managed infrastructure stack for an AWS EKS cluster.","name":"k8s-aws-infra"}
{"description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","runtime":"nodejs","template":{"config":{"isMinikube":{"description":"Whether you are deploying to minikube","default":"1"}}},"name":"guestbook"}
{"runtime":"nodejs","name":"eks_harness","description":"A minimal AWS TypeScript Pulumi program"}
{"name": "pulumi-k8s-scaffold--app-httpbin", "runtime": "nodejs", "description": "A base construction for pulumi k8s projects."}
{"name":"talos","runtime":"nodejs","description":"A minimal Talos program in Pulumi YAML"}
{"runtime":"dotnet","name":"aws-cs-secrets-manager","description":"A minimal AWS C# Pulumi program"}
{"description":"An example that creates a new VPC and configuring a custom CIDR block.","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"awsx-vpc-cidr-python"}
{"resources":{"test-bucket":{"options":{"provider":"${provider}"},"type":"gcp:storage:Bucket","properties":{"cors":[{"origins":["http://image-store.com"],"methods":["GET","HEAD","PUT","POST","DELETE"],"responseHeaders":["*"],"maxAgeSeconds":"3600"}],"location":"EU","forceDestroy":"1","uniformBucketLevelAccess":"1","website":{"mainPageSuffix":"index.html","notFoundPage":"404.html"}}},"provider":{"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"},"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"}},"tested-resource":{"options":{"provider":"${provider}"},"type":"gcp:storage:BucketObject","properties":{"bucket":"${test-bucket.id}","source":{"fn::fileAsset":"Pulumi.yaml"}}}},"name":"test","runtime":{"name":"yaml"}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS Model Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"config":{"pulumi:disable-default-providers":["kubernetes"]},"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Test options propagation with component resources.","name":"options-test"}
{"description":"Azure Function subscribed to Cosmos DB Change Feed","name":"azure-cosmosdb-changefeed","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS RolePolicy C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"pulumi-scaleway-examples-py-server","description":"A minimal Python Pulumi program"}
{"runtime":"go","name":"construct_component_unknown_go","description":"A program that constructs remote component resources with unknowns during preview.","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]}}
{"name":"${PROJECT}","runtime":"nodejs","description":"${DESCRIPTION}","template":{"description":"An example that builds a Dockerfile in Docker Build Cloud.","config":{"builder":{"description":"Your existing (and configured) cloud builder. (e.g., cloud-pulumi-my-cool-builder)"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS getProduct Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "platform-api-java", "runtime": "java", "description": "A minimal Kubernetes Java Pulumi program"}
{"description":"A program that extracts a component child with an alias.","name":"extract_component_child","runtime":"go"}
{"description":"The infrastructure for the netlify-cms-oauth app","name":"netlify-cms-oauth-provider-infrastructure","runtime":"nodejs"}
{"description":"A minimal Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-hub-and-spoke-with-inspection-vpc-python"}
{"runtime":"java","name":"aws-ec2-sg-nginx-server-java","description":"An examples that deploys a simple public facing Nginx server"}
{"name":"azure-cs-aks-managed-identity","description":"A minimal Azure Native Pulumi C# program","runtime":"dotnet"}
{"name":"fresh-test","description":"A program that tests that the basic Sourcegraph deployment is runnable.","runtime":"nodejs"}
{"runtime":"nodejs","description":"EKS nodegroup with IAM examples","name":"example-nodegroup"}
{"runtime":{"name":"java","options":{"v":"0","logtostderr":""}},"name":"aliases-rename","description":"Integration test for Aliases (rename scenario)"}
{"description":"An example that creates a website S3 bucket, a CloudFront Origin Access Identity, and a bucket policy.","name":"aws-s3websitebucket-oai-bucketpolicy-python","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"Minimal Network LoadBalancer Typescript component test","runtime":"nodejs","name":"ts-nlb-with-security-group"}
{"description":"A minimal Google Cloud TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-typescript"}}},"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"name":"cloudfunction-wrong-type"}
{"name":"ts_oke","runtime":"nodejs","description":"A minimal TypeScript Pulumi program"}
{"name":"l1-builtin-info","runtime":"nodejs"}
{"name":"s3-website","description":"A static website in AWS S3.","runtime":"nodejs"}
{"name":"pulumi-aws-secretstore-csi","runtime":{"options":{"typescript":"1"},"name":"nodejs"},"description":"A minimal AWS JavaScript Pulumi program"}
{"runtime":"dotnet","name":"dotnet-helm-skip-crd-rendering","description":"Deploys a simple Helm chart with skipping crd rendering option set"}
{"name":"nodejs","description":"AWSX VPC - default args","runtime":"nodejs"}
{"name": "equinix-metal-virtual-circuit", "runtime": "dotnet", "description": "An Equinix Metal Virtual Circuit resource", "config": {"connectionId": {"type": "string"}, "projectId": {"type": "string"}, "vlanId": {"type": "string"}}}
{"name":"paas_data_ingestion","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"Ingesting data with AWS lambdas and Snowflake in a scalable, fully replayable manner"}
{"runtime":"go","name":"vpc_ekg_go_cluster","description":"A minimal AWS Go Pulumi program"}
{"name":"bedrock","runtime":{"name":"nodejs","options":{"nodeargs":"--import=tsx"}},"main":"pulumi/index.ts"}
{"name":"aws-s3bucket-bucketpolicy-typescript","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"description":"An example that deploys an S3 bucket and bucket policy on AWS.","runtime":"nodejs"}
{"name":"ossstate-py","description":"An example demonstrating the Terraform Remote State resource","runtime":"python"}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"snyk-policy-scanning-infra","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}}}
{"description":"A simple example of using the `Table` APIs.","name":"Table","runtime":"nodejs"}
{"resources":{"instance":{"properties":{"imageName":"Ubuntu 22.04","flavorName":"s1-2"},"type":"openstack:compute:Instance"}},"description":"${DESCRIPTION}","template":{"description":"A minimal OpenStack Pulumi YAML program"},"name":"${PROJECT}","outputs":{"instanceIP":"${instance.accessIpV4}"},"runtime":"yaml"}
{"name":"sigstore-github-sync","description":"Sync GitHub users, collaborators and repositories for an organization","runtime":"go"}
{"description":"An example that deploys the configuration necessary to import a Service Account resource in Google Cloud.","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-javascript"}}},"runtime":{"options":{"typescript":"","packagemanager":"npm"},"name":"nodejs"},"name":"gcp-import-service-account-javascript"}
{"name": "module-metallb", "runtime": "nodejs", "description": "Module: MetalLB"}
{"name":"l2-destroy","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"description":"An example that deploys a storage bucket and uploads a file on Google Cloud.","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-csharp"}}},"name":"gcp-storage-bucket-object-csharp","runtime":"dotnet"}
{"description":"A Python program that errors out due to implicitly created dependency cycles","runtime":"python","name":"complex_implicit_parent_child_dependencies"}
{"name":"go-build","description":"A minimal Go Pulumi program","runtime":"go"}
{"runtime":"nodejs","name":"secret_nested_yaml","description":"A minimal Kubernetes TypeScript Pulumi program"}
{"name":"aks_aad_nginx","description":"A minimal Azure Native TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":"python","name":"aliases_rename_component","description":"A program that replaces a resource with a new name and alias."}
{"name":"helm-chart-dotnet","runtime":"dotnet","description":"A helm chart in C#"}
{"runtime":"dotnet","description":"An example demonstrating the Terraform Remote State resource","name":"s3state-dotnet"}
{"runtime":"dotnet","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"description":"An example that deploys an IAM role and instance profile on AWS.","name":"aws-iam-role-instanceprofile-csharp"}
{"name":"l2-primitive-ref","runtime":"yaml"}
{"runtime":"python","description":"Manage deployment of MongoDB Atlas for AWS environments","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-mongodb-atlas"}
{"description":"Creates an Azure Container App and deploys a custom Docker image to it","name":"azure-go-containerapps","runtime":"go"}
{"description":"Azure web server example","runtime":"scala","name":"azure-webserver"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getRegions Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"cloud-run-deploy","runtime":"nodejs","description":"A minimal Google Cloud TypeScript Pulumi program"}
{"runtime":"go","name":"goaks","description":"An minimal Azure Kubernetes Service Go Pulumi program"}
{"description":"A minimal Python Pulumi program","name":"pulumi-automationapi-workshop-infra","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"l2-provider-grpc-config","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"runtime":"dotnet","description":"EKS cluster example","name":"example-cluster-cs"}
{"description":"Use ECMAScript modules for a TS program.","main":"src/index.ts","runtime":{"options":{"nodeargs":"--loader ts-node/esm --no-warnings"},"name":"nodejs"},"name":"esm-ts"}
{"name":"awsx-elb-vpc-go","description":"An example that deploys an ApplicationLoadBalancer in a VPC.","runtime":"go"}
{"description":"Example application for building a slack bot with Pulumi and Go","runtime":"go","name":"aws-go-slackbot"}
{"description":"A minimal Python Pulumi program","name":"hack-pulumi-command-examples","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"runtime":"dotnet","name":"aws-iam-role-policyattachment-managedpolicy-csharp","description":"An example that deploys an IAM role and a policy attachment with an AWS managed policy on AWS.","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}}}
{"name":"logging-besom-test","runtime":{"options":{"logtostderr":"","v":"0"},"name":"scala"},"description":"Besom logging test"}
{"description":"Review environment for PR","name":"review","runtime":"nodejs"}
{"name":"hcl","description":"HCL Example","runtime":{"name":"yaml","options":{"compiler":"hcl2json Pulumi.hcl"}}}
{"name":"l2-map-keys","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalDisk TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "azure-reference-architecture", "runtime": "dotnet", "description": "Reference architecture for azure in csharp"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS CatalogDatabase TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"alb-lambda-pulumi-ts"}
{"runtime":"nodejs","description":"Infrastructure for daily-monetization","name":"monetization"}
{"name":"swc","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getLocalDisk C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"basic_go_kubernetes","description":"A simple Go Kubernetes program.","runtime":"go"}
{"name":"pulumi-automationapi-workshop-infra","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal Python Pulumi program"}
{"name": "pulumi-scaleway-examples-go-server", "runtime": "go", "description": "A minimal Go Pulumi program"}
{"runtime":"dotnet","template":{"config":{"isMinikube":{"description":"Whether you are deploying to minikube","default":"1"}}},"name":"guestbook-csharp-components","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/"}
{"name":"cm_from_file","description":"A minimal Kubernetes Go Pulumi program","runtime":"go"}
{"name":"ol-infrastructure-substructure-vault-auth","runtime":"python","description":"Mount and configure authentication backends to use for connecting to Vault","backend":{"url":"s3://mitol-pulumi-state/"}}
{"runtime":"nodejs","description":"A simple command example","name":"command-simple"}
{"description":"Fargate with crosswalk vpc","name":"fargate-with-crosswalk-vpc","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "3-namespace-init", "runtime": "nodejs", "description": "A minimal Kubernetes Pulumi YAML program"}
{"name": "lambda-at-edge", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"${PROJECT}","description":"${DESCRIPTION}","runtime":"nodejs","template":{"config":{"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}},"description":"An example that builds a Docker image and deploys a container to AWS Fargate."}}
{"runtime":"nodejs","name":"server-ts","description":"A minimal TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS getOrganizationalUnits Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "pulumi-ecs-example", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"l2-explicit-provider","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"runtime":"python","description":"An AWS Python Pulumi program exercising the ExtensionResource","name":"untyped-py"}
{"resources":{"provider":{"type":"pulumi:providers:kubernetes","properties":{"namespace":"${ns.metadata.name}"}},"deployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${provider}"},"properties":{"spec":{"template":{"spec":{"volumes":[{"name":"local","persistentVolumeClaim":{"claimName":"${pvc.metadata.name}"}}],"containers":[{"image":"nginx:stable-alpine3.17-slim","name":"nginx","volumeMounts":[{"mountPath":"/usr/share/nginx/html","name":"local"}]}]},"metadata":{"labels":{"app":"nginx"}}},"replicas":"1","selector":{"matchLabels":{"app":"nginx"}}}}},"sc":{"options":{"provider":"${provider}"},"properties":{"volumeBindingMode":"WaitForFirstConsumer","provisioner":"kubernetes.io/no-provisioner","reclaimPolicy":"Delete"},"type":"kubernetes:storage.k8s.io/v1:StorageClass"},"pvc":{"options":{"provider":"${provider}"},"properties":{"spec":{"resources":{"requests":{"storage":"1Mi"}},"accessModes":["ReadWriteOnce"],"storageClassName":"${sc.metadata.name}"}},"type":"kubernetes:core/v1:PersistentVolumeClaim"},"pv":{"options":{"provider":"${provider}"},"properties":{"spec":{"storageClassName":"${sc.metadata.name}","persistentVolumeReclaimPolicy":"Delete","volumeMode":"Filesystem","hostPath":{"path":"/tmp/foo","type":"DirectoryOrCreate"},"capacity":{"storage":"1Mi"},"accessModes":["ReadWriteOnce"]}},"type":"kubernetes:core/v1:PersistentVolume"},"ns":{"type":"kubernetes:core/v1:Namespace"}},"description":"Tests PVC with WaitForFirstConsumer (https://github.com/pulumi/pulumi-kubernetes/issues/895)\n","outputs":{"status":"${pvc.status.phase}"},"name":"pvc","runtime":"yaml"}
{"description":"A program that ensures invoking 'pulumi:pulumi:getResource' returns resource refs","runtime":"python","name":"resource_refs_get_resource_py"}
{"description":"A program that smoke-tests .get support, specifying inputs with dicts","runtime":"python","name":"get"}
{"config":{"appPath":{"default":"./app","type":"string"},"indexDocument":{"default":"index.html","type":"string"},"errorDocument":{"type":"string","default":"error.html"},"sitePath":{"default":"./www","type":"string"}},"variables":{"configFile":{"fn::stringAsset":"${configJSON}"},"signature":{"fn::azure-native:storage:listStorageAccountServiceSAS":{"contentEncoding":"deflate","contentDisposition":"inline","permissions":"r","protocols":"https","resource":"c","cacheControl":"max-age=5","contentType":"application/json","canonicalizedResource":"/blob/${account.name}/${app-container.name}","accountName":"${account.name}","sharedAccessExpiryTime":"2030-01-01","sharedAccessStartTime":"2022-01-01","resourceGroupName":"${resource-group.name}"}},"appArchive":{"fn::fileArchive":"${appPath}"},"configJSON":{"fn::toJSON":{"api":"https://${app.defaultHostName}/api"}}},"runtime":"yaml","outputs":{"apiURL":"https://${app.defaultHostName}/api","originURL":"${account.primaryEndpoints.web}"},"resources":{"app-blob":{"type":"azure-native:storage:Blob","properties":{"resourceGroupName":"${resource-group.name}","accountName":"${account.name}","containerName":"${app-container.name}","type":"Block","source":"${appArchive}"}},"plan":{"type":"azure-native:web:AppServicePlan","properties":{"kind":"Linux","reserved":"1","sku":{"tier":"Dynamic","name":"Y1"},"resourceGroupName":"${resource-group.name}"}},"app-container":{"type":"azure-native:storage:BlobContainer","properties":{"publicAccess":"None","resourceGroupName":"${resource-group.name}","accountName":"${account.name}"}},"account":{"properties":{"resourceGroupName":"${resource-group.name}","kind":"StorageV2","sku":{"name":"Standard_LRS"}},"type":"azure-native:storage:StorageAccount"},"synced-folder":{"type":"synced-folder:index:AzureBlobFolder","properties":{"resourceGroupName":"${resource-group.name}","storageAccountName":"${account.name}","containerName":"${website.containerName}","path":"${sitePath}"}},"app":{"type":"azure-native:web:WebApp","properties":{"serverFarmId":"${plan.id}","resourceGroupName":"${resource-group.name}","siteConfig":{"cors":{"allowedOrigins":["*"]},"appSettings":[{"value":"python","name":"FUNCTIONS_WORKER_RUNTIME"},{"value":"~3","name":"FUNCTIONS_EXTENSION_VERSION"},{"value":"https://${account.name}.blob.core.windows.net/${app-container.name}/${app-blob.name}?${signature.serviceSasToken}","name":"WEBSITE_RUN_FROM_PACKAGE"}]},"kind":"FunctionApp"}},"config.json":{"type":"azure-native:storage:Blob","properties":{"resourceGroupName":"${resource-group.name}","containerName":"${website.containerName}","accountName":"${account.name}","contentType":"application/json","source":"${configFile}","type":"Block"}},"website":{"properties":{"accountName":"${account.name}","indexDocument":"${indexDocument}","resourceGroupName":"${resource-group.name}","error404Document":"${errorDocument}"},"type":"azure-native:storage:StorageAccountStaticWebsite"},"resource-group":{"type":"azure-native:resources:ResourceGroup"}},"template":{"config":{"sitePath":{"default":"./www","description":"The path to the folder containing the website"},"azure-native:location":{"default":"WestUS","description":"The Azure region to deploy into"},"appPath":{"default":"./app","description":"The path to the folder containing the functions to be deployed"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"}},"description":"A Pulumi YAML program to deploy a serverless application on Azure"},"description":"${DESCRIPTION}","name":"${PROJECT}"}
{"name": "equinix-networkedge-device-cisco-C8KV", "runtime": "nodejs", "description": "An Equinix Network Edge virtual network device - Cisco Catalyst 8000V Router", "config": {"accountName": {"type": "string"}, "aclTemplateId": {"type": "string"}, "additionalBandwidth": {"type": "integer", "default": 5}, "devicePackageCode": {"type": "string", "default": "network-essentials"}, "deviceVersion": {"type": "string", "default": "17.06.01a"}, "licenseToken": {"type": "string"}, "metro": {"type": "string", "default": "SV"}, "sizeInCores": {"type": "integer", "default": 2}, "sshKeyName": {"type": "string"}, "sshUserName": {"type": "string"}, "termLength": {"type": "integer", "default": 6}}}
{"description":"Example on how to deploy the Pulumi ESC CSI Provider","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-go"}}},"runtime":"go","name":"kubernetes-csi-driver-go"}
{"runtime":"nodejs","description":"An example that deploys a Lambda function and container task to extract a video thumbnail.","name":"aws-lambda-container-thumbnailer-typescript"}
{"name": "metabase-yaml", "runtime": "yaml", "resources": {"metabaseService": {"type": "metabase:index:Metabase"}}, "outputs": {"url": "${metabaseService.dnsName}"}}
{"name": "aws-classic-py-vpc-msk-kafka-client-part2", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A minimal AWS Python Pulumi program"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"name":"makima","runtime":{"name":"python"},"description":"A minimal AWS Python Pulumi program"}
{"description":"A Python project that uses the uv toolchain, without specifing the location for the virtualenv.","name":"pulumi-python-uv-no-venv-option","runtime":{"name":"python","options":{"toolchain":"uv"}}}
{"description":"Tests secrets support with newline at end of data","name":"secrets-new-line","runtime":"nodejs"}
{"runtime":"dotnet","template":{"config":{"alicloud:region":{"description":"The AliCloud region to deploy into","default":"cn-beijing"}},"description":"A minimal AliCloud C# Pulumi program"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "hls-lpdaac-orchestration", "runtime": "nodejs", "description": "A minimal AWS JavaScript Pulumi program"}
{"runtime":"nodejs","name":"bnbsmartchain","description":"coin stack"}
{"name": "data", "runtime": "nodejs", "description": "Data layer", "config": {"aws:region": "eu-west-2"}}
{"outputs":{"actual":"${res.tags}"},"description":"Change tag `foo` value to `quux`\n","resources":{"res":{"options":{"provider":"${aws-provider}"},"properties":{"aliasAttributes":["email"]},"type":"aws:cognito:UserPool"},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux"}}},"type":"pulumi:providers:aws"}},"name":"test-aws-1655-sdkv2","runtime":"yaml"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A command example copying a directory via sFTP","name":"copy-remote","runtime":"nodejs"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-python"}}},"name":"aws-s3bucket-lambda-eventbridge-python","description":"A example that deploys an S3 bucket, lambda function resources, and an eventbridge trigger permission.","runtime":{"options":{"toolchain":"pip","virtualenv":"venv"},"name":"python"}}
{"runtime":"go","name":"01-kubernetes","description":"A minimal Kubernetes Go Pulumi program"}
{"name":"awsx-load-balanced-ec2-instances-go","runtime":"go","description":"An example that deploys multiple load-balanced VMs in Amazon EC2."}
{"name":"server-side-apply","description":"Tests Server-side Apply support","runtime":"python"}
{"description":"Setup local Hashicorp Vault for Novops tests","runtime":"nodejs","config":{"aws:skipRequestingAccountId":"true","aws:endpoints":[{"accessanalyzer":"http://localhost:4566"},{"account":"http://localhost:4566"},{"acm":"http://localhost:4566"},{"acmpca":"http://localhost:4566"},{"amg":"http://localhost:4566"},{"amp":"http://localhost:4566"},{"amplify":"http://localhost:4566"},{"apigateway":"http://localhost:4566"},{"apigatewayv2":"http://localhost:4566"},{"appautoscaling":"http://localhost:4566"},{"appconfig":"http://localhost:4566"},{"appfabric":"http://localhost:4566"},{"appflow":"http://localhost:4566"},{"appintegrations":"http://localhost:4566"},{"appintegrationsservice":"http://localhost:4566"},{"applicationautoscaling":"http://localhost:4566"},{"applicationinsights":"http://localhost:4566"},{"appmesh":"http://localhost:4566"},{"appregistry":"http://localhost:4566"},{"apprunner":"http://localhost:4566"},{"appstream":"http://localhost:4566"},{"appsync":"http://localhost:4566"},{"athena":"http://localhost:4566"},{"auditmanager":"http://localhost:4566"},{"autoscaling":"http://localhost:4566"},{"autoscalingplans":"http://localhost:4566"},{"backup":"http://localhost:4566"},{"batch":"http://localhost:4566"},{"beanstalk":"http://localhost:4566"},{"bedrock":"http://localhost:4566"},{"bedrockagent":"http://localhost:4566"},{"budgets":"http://localhost:4566"},{"ce":"http://localhost:4566"},{"chime":"http://localhost:4566"},{"chimesdkmediapipelines":"http://localhost:4566"},{"chimesdkvoice":"http://localhost:4566"},{"cleanrooms":"http://localhost:4566"},{"cloud9":"http://localhost:4566"},{"cloudcontrol":"http://localhost:4566"},{"cloudcontrolapi":"http://localhost:4566"},{"cloudformation":"http://localhost:4566"},{"cloudfront":"http://localhost:4566"},{"cloudfrontkeyvaluestore":"http://localhost:4566"},{"cloudhsm":"http://localhost:4566"},{"cloudhsmv2":"http://localhost:4566"},{"cloudsearch":"http://localhost:4566"},{"cloudtrail":"http://localhost:4566"},{"cloudwatch":"http://localhost:4566"},{"cloudwatchevents":"http://localhost:4566"},{"cloudwatchevidently":"http://localhost:4566"},{"cloudwatchlog":"http://localhost:4566"},{"cloudwatchlogs":"http://localhost:4566"},{"cloudwatchobservabilityaccessmanager":"http://localhost:4566"},{"cloudwatchrum":"http://localhost:4566"},{"codeartifact":"http://localhost:4566"},{"codebuild":"http://localhost:4566"},{"codecatalyst":"http://localhost:4566"},{"codecommit":"http://localhost:4566"},{"codedeploy":"http://localhost:4566"},{"codeguruprofiler":"http://localhost:4566"},{"codegurureviewer":"http://localhost:4566"},{"codepipeline":"http://localhost:4566"},{"codestarconnections":"http://localhost:4566"},{"codestarnotifications":"http://localhost:4566"},{"cognitoidentity":"http://localhost:4566"},{"cognitoidentityprovider":"http://localhost:4566"},{"cognitoidp":"http://localhost:4566"},{"comprehend":"http://localhost:4566"},{"computeoptimizer":"http://localhost:4566"},{"config":"http://localhost:4566"},{"configservice":"http://localhost:4566"},{"connect":"http://localhost:4566"},{"connectcases":"http://localhost:4566"},{"controltower":"http://localhost:4566"},{"costandusagereportservice":"http://localhost:4566"},{"costexplorer":"http://localhost:4566"},{"costoptimizationhub":"http://localhost:4566"},{"cur":"http://localhost:4566"},{"customerprofiles":"http://localhost:4566"},{"databasemigration":"http://localhost:4566"},{"databasemigrationservice":"http://localhost:4566"},{"dataexchange":"http://localhost:4566"},{"datapipeline":"http://localhost:4566"},{"datasync":"http://localhost:4566"},{"dax":"http://localhost:4566"},{"deploy":"http://localhost:4566"},{"detective":"http://localhost:4566"},{"devicefarm":"http://localhost:4566"},{"directconnect":"http://localhost:4566"},{"directoryservice":"http://localhost:4566"},{"dlm":"http://localhost:4566"},{"dms":"http://localhost:4566"},{"docdb":"http://localhost:4566"},{"docdbelastic":"http://localhost:4566"},{"ds":"http://localhost:4566"},{"dynamodb":"http://localhost:4566"},{"ec2":"http://localhost:4566"},{"ecr":"http://localhost:4566"},{"ecrpublic":"http://localhost:4566"},{"ecs":"http://localhost:4566"},{"efs":"http://localhost:4566"},{"eks":"http://localhost:4566"},{"elasticache":"http://localhost:4566"},{"elasticbeanstalk":"http://localhost:4566"},{"elasticloadbalancing":"http://localhost:4566"},{"elasticloadbalancingv2":"http://localhost:4566"},{"elasticsearch":"http://localhost:4566"},{"elasticsearchservice":"http://localhost:4566"},{"elastictranscoder":"http://localhost:4566"},{"elb":"http://localhost:4566"},{"elbv2":"http://localhost:4566"},{"emr":"http://localhost:4566"},{"emrcontainers":"http://localhost:4566"},{"emrserverless":"http://localhost:4566"},{"es":"http://localhost:4566"},{"eventbridge":"http://localhost:4566"},{"events":"http://localhost:4566"},{"evidently":"http://localhost:4566"},{"finspace":"http://localhost:4566"},{"firehose":"http://localhost:4566"},{"fis":"http://localhost:4566"},{"fms":"http://localhost:4566"},{"fsx":"http://localhost:4566"},{"gamelift":"http://localhost:4566"},{"glacier":"http://localhost:4566"},{"globalaccelerator":"http://localhost:4566"},{"glue":"http://localhost:4566"},{"grafana":"http://localhost:4566"},{"greengrass":"http://localhost:4566"},{"groundstation":"http://localhost:4566"},{"guardduty":"http://localhost:4566"},{"healthlake":"http://localhost:4566"},{"iam":"http://localhost:4566"},{"identitystore":"http://localhost:4566"},{"imagebuilder":"http://localhost:4566"},{"inspector":"http://localhost:4566"},{"inspector2":"http://localhost:4566"},{"inspectorv2":"http://localhost:4566"},{"internetmonitor":"http://localhost:4566"},{"iot":"http://localhost:4566"},{"iotanalytics":"http://localhost:4566"},{"iotevents":"http://localhost:4566"},{"ivs":"http://localhost:4566"},{"ivschat":"http://localhost:4566"},{"kafka":"http://localhost:4566"},{"kafkaconnect":"http://localhost:4566"},{"kendra":"http://localhost:4566"},{"keyspaces":"http://localhost:4566"},{"kinesis":"http://localhost:4566"},{"kinesisanalytics":"http://localhost:4566"},{"kinesisanalyticsv2":"http://localhost:4566"},{"kinesisvideo":"http://localhost:4566"},{"kms":"http://localhost:4566"},{"lakeformation":"http://localhost:4566"},{"lambda":"http://localhost:4566"},{"launchwizard":"http://localhost:4566"},{"lex":"http://localhost:4566"},{"lexmodelbuilding":"http://localhost:4566"},{"lexmodelbuildingservice":"http://localhost:4566"},{"lexmodels":"http://localhost:4566"},{"lexmodelsv2":"http://localhost:4566"},{"lexv2models":"http://localhost:4566"},{"licensemanager":"http://localhost:4566"},{"lightsail":"http://localhost:4566"},{"location":"http://localhost:4566"},{"locationservice":"http://localhost:4566"},{"logs":"http://localhost:4566"},{"lookoutmetrics":"http://localhost:4566"},{"m2":"http://localhost:4566"},{"macie2":"http://localhost:4566"},{"managedgrafana":"http://localhost:4566"},{"mediaconnect":"http://localhost:4566"},{"mediaconvert":"http://localhost:4566"},{"medialive":"http://localhost:4566"},{"mediapackage":"http://localhost:4566"},{"mediapackagev2":"http://localhost:4566"},{"mediastore":"http://localhost:4566"},{"memorydb":"http://localhost:4566"},{"mq":"http://localhost:4566"},{"msk":"http://localhost:4566"},{"mwaa":"http://localhost:4566"},{"neptune":"http://localhost:4566"},{"networkfirewall":"http://localhost:4566"},{"networkmanager":"http://localhost:4566"},{"oam":"http://localhost:4566"},{"opensearch":"http://localhost:4566"},{"opensearchingestion":"http://localhost:4566"},{"opensearchserverless":"http://localhost:4566"},{"opensearchservice":"http://localhost:4566"},{"opsworks":"http://localhost:4566"},{"organizations":"http://localhost:4566"},{"osis":"http://localhost:4566"},{"outposts":"http://localhost:4566"},{"pcaconnectorad":"http://localhost:4566"},{"pinpoint":"http://localhost:4566"},{"pipes":"http://localhost:4566"},{"polly":"http://localhost:4566"},{"pricing":"http://localhost:4566"},{"prometheus":"http://localhost:4566"},{"prometheusservice":"http://localhost:4566"},{"qbusiness":"http://localhost:4566"},{"qldb":"http://localhost:4566"},{"quicksight":"http://localhost:4566"},{"ram":"http://localhost:4566"},{"rbin":"http://localhost:4566"},{"rds":"http://localhost:4566"},{"recyclebin":"http://localhost:4566"},{"redshift":"http://localhost:4566"},{"redshiftdata":"http://localhost:4566"},{"redshiftdataapiservice":"http://localhost:4566"},{"redshiftserverless":"http://localhost:4566"},{"rekognition":"http://localhost:4566"},{"resourceexplorer2":"http://localhost:4566"},{"resourcegroups":"http://localhost:4566"},{"resourcegroupstagging":"http://localhost:4566"},{"resourcegroupstaggingapi":"http://localhost:4566"},{"rolesanywhere":"http://localhost:4566"},{"route53":"http://localhost:4566"},{"route53domains":"http://localhost:4566"},{"route53recoverycontrolconfig":"http://localhost:4566"},{"route53recoveryreadiness":"http://localhost:4566"},{"route53resolver":"http://localhost:4566"},{"rum":"http://localhost:4566"},{"s3":"http://localhost:4566"},{"s3api":"http://localhost:4566"},{"s3control":"http://localhost:4566"},{"s3outposts":"http://localhost:4566"},{"sagemaker":"http://localhost:4566"},{"scheduler":"http://localhost:4566"},{"schemas":"http://localhost:4566"},{"sdb":"http://localhost:4566"},{"secretsmanager":"http://localhost:4566"},{"securityhub":"http://localhost:4566"},{"securitylake":"http://localhost:4566"},{"serverlessapplicationrepository":"http://localhost:4566"},{"serverlessapprepo":"http://localhost:4566"},{"serverlessrepo":"http://localhost:4566"},{"servicecatalog":"http://localhost:4566"},{"servicecatalogappregistry":"http://localhost:4566"},{"servicediscovery":"http://localhost:4566"},{"servicequotas":"http://localhost:4566"},{"ses":"http://localhost:4566"},{"sesv2":"http://localhost:4566"},{"sfn":"http://localhost:4566"},{"shield":"http://localhost:4566"},{"signer":"http://localhost:4566"},{"simpledb":"http://localhost:4566"},{"sns":"http://localhost:4566"},{"sqs":"http://localhost:4566"},{"ssm":"http://localhost:4566"},{"ssmcontacts":"http://localhost:4566"},{"ssmincidents":"http://localhost:4566"},{"ssmsap":"http://localhost:4566"},{"sso":"http://localhost:4566"},{"ssoadmin":"http://localhost:4566"},{"stepfunctions":"http://localhost:4566"},{"storagegateway":"http://localhost:4566"},{"sts":"http://localhost:4566"},{"swf":"http://localhost:4566"},{"synthetics":"http://localhost:4566"},{"timestreamwrite":"http://localhost:4566"},{"transcribe":"http://localhost:4566"},{"transcribeservice":"http://localhost:4566"},{"transfer":"http://localhost:4566"},{"verifiedpermissions":"http://localhost:4566"},{"vpclattice":"http://localhost:4566"},{"waf":"http://localhost:4566"},{"wafregional":"http://localhost:4566"},{"wafv2":"http://localhost:4566"},{"wellarchitected":"http://localhost:4566"},{"worklink":"http://localhost:4566"},{"workspaces":"http://localhost:4566"},{"xray":"http://localhost:4566"}],"vault:token":"novops","aws:secretKey":"test","vault:address":"http://localhost:8200","aws:skipCredentialsValidation":"true","aws:accessKey":"000000000000","aws:s3UsePathStyle":"true"},"name":"novops-test-infra-vault"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "TCP Routing", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"outputs":{"serviceIp":"${frontendService.status.loadBalancer.ingress[0].ip}"},"runtime":"yaml","name":"az-getting-started-aks-yaml","variables":{"kubeconfig":{"fn::invoke":{"function":"azure-native:containerservice/v20240102preview:listManagedClusterUserCredentials","arguments":{"resourceGroupName":"${myAKSClusterResourceGroup.name}","resourceName":"${myAKSCluster.name}"}}}},"description":"A minimal Pulumi YAML program","resources":{"rabbitmqDeployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${myk8sProvider}"},"properties":{"metadata":{"name":"rabbitmq"},"spec":{"replicas":"1","selector":{"matchLabels":{"app":"rabbitmq"}},"template":{"metadata":{"labels":{"app":"rabbitmq"}},"spec":{"containers":[{"resources":{"requests":{"memory":"128Mi","cpu":"10m"},"limits":{"memory":"256Mi","cpu":"250m"}},"volumeMounts":[{"subPath":"enabled_plugins","name":"rabbitmq-enabled-plugins","mountPath":"/etc/rabbitmq/enabled_plugins"}],"ports":[{"name":"rabbitmq-amqp","containerPort":"5672"},{"name":"rabbitmq-http","containerPort":"15672"}],"image":"mcr.microsoft.com/mirror/docker/library/rabbitmq:3.10-management-alpine","env":[{"value":"username","name":"RABBITMQ_DEFAULT_USER"},{"value":"password","name":"RABBITMQ_DEFAULT_PASS"}],"name":"rabbitmq"}],"nodeSelector":{"kubernetes.io/os":"linux"},"volumes":[{"configMap":{"items":[{"path":"enabled_plugins","key":"rabbitmq_enabled_plugins"}],"name":"rabbitmq-enabled-plugins"},"name":"rabbitmq-enabled-plugins"}]}}}}},"myk8sProvider":{"type":"pulumi:providers:kubernetes","properties":{"kubeconfig":{"fn::fromBase64":"${kubeconfig.kubeconfigs[0].value}"},"enableServerSideApply":"1"}},"orderServiceService":{"type":"kubernetes:core/v1:Service","options":{"provider":"${myk8sProvider}"},"properties":{"spec":{"type":"ClusterIP","ports":[{"name":"http","port":"3000","targetPort":"3000"}],"selector":{"app":"order-service"}},"metadata":{"name":"order-service"}}},"rabbitmqService":{"type":"kubernetes:core/v1:Service","options":{"provider":"${myk8sProvider}"},"properties":{"spec":{"type":"ClusterIP","ports":[{"port":"5672","name":"rabbitmq-amqp","targetPort":"5672"},{"port":"15672","name":"rabbitmq-http","targetPort":"15672"}],"selector":{"app":"rabbitmq"}},"metadata":{"name":"rabbitmq"}}},"productServiceService":{"properties":{"spec":{"selector":{"app":"product-service"},"type":"ClusterIP","ports":[{"targetPort":"3002","port":"3002","name":"http"}]},"metadata":{"name":"product-service"}},"type":"kubernetes:core/v1:Service","options":{"provider":"${myk8sProvider}"}},"myAKSClusterResourceGroup":{"properties":{"resourceGroupName":"my-aks-cluster-rg"},"type":"azure-native:resources:ResourceGroup"},"frontendService":{"type":"kubernetes:core/v1:Service","options":{"provider":"${myk8sProvider}"},"properties":{"metadata":{"name":"store-front"},"spec":{"selector":{"app":"store-front"},"ports":[{"port":"80","targetPort":"8080"}],"type":"LoadBalancer"}}},"rabbitmqConfigMap":{"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${myk8sProvider}"},"properties":{"metadata":{"name":"rabbitmq-enabled-plugins"},"data":{"rabbitmq_enabled_plugins":"[rabbitmq_management,rabbitmq_prometheus,rabbitmq_amqp1_0].\n"}}},"productServiceDeployment":{"properties":{"metadata":{"name":"product-service"},"spec":{"replicas":"1","template":{"metadata":{"labels":{"app":"product-service"}},"spec":{"nodeSelector":{"kubernetes.io/os":"linux"},"containers":[{"ports":[{"containerPort":"3002"}],"resources":{"requests":{"memory":"1Mi","cpu":"1m"},"limits":{"memory":"7Mi","cpu":"1m"}},"name":"product-service","image":"ghcr.io/azure-samples/aks-store-demo/product-service:latest"}]}},"selector":{"matchLabels":{"app":"product-service"}}}},"options":{"provider":"${myk8sProvider}"},"type":"kubernetes:apps/v1:Deployment"},"orderServiceDeployment":{"properties":{"metadata":{"name":"order-service"},"spec":{"selector":{"matchLabels":{"app":"order-service"}},"template":{"metadata":{"labels":{"app":"order-service"}},"spec":{"nodeSelector":{"kubernetes.io/os":"linux"},"containers":[{"image":"ghcr.io/azure-samples/aks-store-demo/order-service:latest","name":"order-service","env":[{"value":"rabbitmq","name":"ORDER_QUEUE_HOSTNAME"},{"value":"5672","name":"ORDER_QUEUE_PORT"},{"value":"username","name":"ORDER_QUEUE_USERNAME"},{"value":"password","name":"ORDER_QUEUE_PASSWORD"},{"name":"FASTIFY_ADDRESS","value":"0.0.0.0"}],"resources":{"requests":{"cpu":"1m","memory":"50Mi"},"limits":{"memory":"128Mi","cpu":"75m"}},"ports":[{"containerPort":"3000"}]}],"initContainers":[{"resources":{"limits":{"cpu":"75m","memory":"128Mi"},"requests":{"cpu":"1m","memory":"50Mi"}},"name":"wait-for-rabbitmq","image":"busybox","command":["sh","-c","until nc -zv rabbitmq 5672; do echo waiting for rabbitmq; sleep 2; done;"]}]}},"replicas":"1"}},"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${myk8sProvider}"}},"myAKSCluster":{"properties":{"nodeResourceGroup":"${myAKSClusterResourceGroup.name}-nodes","agentPoolProfiles":[{"count":"3","mode":"System","type":"VirtualMachineScaleSets","name":"agentpool","osType":"Linux","vmSize":"Standard_B2ms","osDiskSizeGB":"30"}],"dnsPrefix":"${myAKSClusterResourceGroup.name}","kubernetesVersion":"1.29.0","networkProfile":{"networkPluginMode":"overlay","networkPolicy":"cilium","podCidr":"192.168.0.0/16","networkPlugin":"azure","networkDataplane":"cilium"},"identity":{"type":"SystemAssigned"},"resourceName":"my-aks-cluster","servicePrincipalProfile":null,"resourceGroupName":"${myAKSClusterResourceGroup.name}"},"type":"azure-native:containerservice/v20240102preview:ManagedCluster"},"frontendDeployment":{"properties":{"metadata":{"name":"store-front"},"spec":{"selector":{"matchLabels":{"app":"store-front"}},"template":{"metadata":{"labels":{"app":"store-front"}},"spec":{"containers":[{"env":[{"name":"VUE_APP_ORDER_SERVICE_URL","value":"http://order-service:3000/"},{"value":"http://product-service:3002/","name":"VUE_APP_PRODUCT_SERVICE_URL"}],"name":"store-front","image":"ghcr.io/azure-samples/aks-store-demo/store-front:latest","ports":[{"name":"store-front","containerPort":"8080"}],"resources":{"limits":{"cpu":"1000m","memory":"512Mi"},"requests":{"cpu":"1m","memory":"200Mi"}}}],"nodeSelector":{"kubernetes.io/os":"linux"}}},"replicas":"1"}},"options":{"provider":"${myk8sProvider}"},"type":"kubernetes:apps/v1:Deployment"}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l2-ref-ref"}
{"name": "azure-py-functions-raw", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Azure Functions created from raw deployment packages in C# (written in Python)", "template": {"config": {"azure:environment": {"description": "The Azure environment to use (`public`, `usgovernment`, `german`, `china`)", "default": "public"}, "azure:location": {"description": "The Azure location to deploy resources to (e.g., `eastus` or `westeurope`)"}}}}
{"resources":{"internal":{"properties":{"addressPrefixes":["10.0.2.0/24"],"resourceGroupName":"${example.name}","virtualNetworkName":"${main.name}"},"type":"azure:network:Subnet"},"main":{"properties":{"addressSpaces":["10.0.0.0/16"],"location":"${example.location}","resourceGroupName":"${example.name}"},"type":"azure:network:VirtualNetwork"},"exampleDisk":{"type":"azure:compute:ManagedDisk","properties":{"storageAccountType":"Standard_LRS","diskSizeGb":"10","resourceGroupName":"${example.name}","location":"${example.location}","createOption":"Empty"}},"example":{"type":"azure:core:ResourceGroup","properties":{"location":"West Europe"}},"mainNetworkInterface":{"properties":{"ipConfigurations":[{"subnetId":"${internal.id}","name":"internal","privateIpAddressAllocation":"Dynamic"}],"location":"${example.location}","resourceGroupName":"${example.name}"},"type":"azure:network:NetworkInterface"},"exampleVirtualMachine":{"properties":{"storageImageReference":{"offer":"0001-com-ubuntu-server-jammy","sku":"22_04-lts","publisher":"Canonical","version":"latest"},"storageOsDisk":{"caching":"ReadWrite","createOption":"FromImage","name":"myosdisk1","managedDiskType":"Standard_LRS"},"resourceGroupName":"${example.name}","vmSize":"Standard_F2","osProfile":{"adminPassword":"Password1234!","adminUsername":"testadmin","computerName":"example-vm"},"osProfileLinuxConfig":{"disablePasswordAuthentication":""},"networkInterfaceIds":["${mainNetworkInterface.id}"],"location":"${example.location}"},"type":"azure:compute:VirtualMachine"},"exampleDataDiskAttachment":{"type":"azure:compute:DataDiskAttachment","properties":{"virtualMachineId":"${exampleVirtualMachine.id}","createOption":"attach","managedDiskId":"${exampleDisk.id}","caching":"ReadWrite","lun":"10"}}},"name":"compute_datadiskattachment","runtime":"yaml"}
{"resources":{"my-bucket":{"type":"scaleway:ObjectBucket"}},"name":"${PROJECT}","runtime":"yaml","template":{"config":{"scaleway:region":{"default":"fr-par","description":"The Scaleway region to deploy into"},"scaleway:project_id":{"description":"The Scaleway project ID"}},"description":"A minimal Scaleway Pulumi YAML program"},"outputs":{"bucketName":"${my-bucket.id}"},"description":"${DESCRIPTION}"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS UsagePlan C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Creates a simple ACM certificate resource","name":"aws-acm-certificate-typescript","runtime":"nodejs","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"runtime":"go","name":"testproj","description":"A minimal Go Pulumi program"}
{"name":"fargate_awsx","description":"A minimal AWS Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "service-koyeb", "runtime": "nodejs", "description": "A simple service on Koyeb."}
{"name": "ecs-component", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"A minimal TypeScript Pulumi program","name":"deploy-b","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A show case of how to use the Typescript Foundation SDK in Pulumi","runtime":"nodejs","name":"foundation-sdk-typescript"}
{"name":"pulumi-aws-cdk-lookups-azs","runtime":"nodejs","description":"lookup azs example for CDK"}
{"name":"dashboard","description":"A simple example of how to hook up to CloudWatch dashboards.","runtime":"nodejs"}
{"name":"guestbook","runtime":"nodejs","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"mypy"}},"name":"l1-builtin-info"}
{"runtime":"nodejs","name":"istio","description":"A simple installation of Istio on GKE."}
{"runtime":"nodejs","name":"aws-ts-stackreference-team","description":"An AWS TypeScript Pulumi program demonstrating sharing configuration via StackReference resources","template":{"description":"A minimal AWS TypeScript Pulumi program","config":{"companyStack":{"description":"The stack to reference company properties from"},"departmentStack":{"description":"The stack to reference department properties from"},"teamName":{"description":"The team name to use"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"}}}}
{"description":"An example that shows how to create an EC2 instance and security group.","outputs":{"publicIp":"${server.publicIp}","publicDns":"${server.publicDns}"},"resources":{"server":{"type":"aws:ec2:Instance","properties":{"instanceType":"t2.micro","vpcSecurityGroupIds":["${group.id}"],"ami":"ami-0319ef1a70c93d5c8"}},"group":{"properties":{"description":"Enable HTTP access","ingress":[{"protocol":"tcp","cidrBlocks":["0.0.0.0/0"],"toPort":"80","fromPort":"80"}]},"type":"aws:ec2:SecurityGroup"}},"name":"aws-ec2-instance-with-sg-yaml","runtime":"yaml"}
{"name": "03-health-checker-kms", "runtime": "nodejs", "description": "A simple HTTP health checker."}
{"name": "k8s-autoscaling-nodes", "runtime": "nodejs", "description": "A minimal Kubernetes TypeScript Pulumi program"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-javascript"}},"aws-native:region":"us-west-2"},"runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example that creates a Lambda function and Step Function to demonstrate the JSON stringify helper","name":"aws-lambda-stepfunctions-jsonhelper-javascript"}
{"runtime":"yaml","description":"GCP services using a Go based component Service Identity","name":"gcp-services-with-workload-identity"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "Enable Logging", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs","name":"encrypted_eks"}
{"runtime":"java","name":"awsx-apigateway-s3-java","description":"An example that uses API Gateway to serve static content from Amazon S3."}
{"description":"A minimal Python Pulumi program","name":"terraform-local-state","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"description":"Manage deployment of a xqueue server","backend":{"url":"s3://mitol-pulumi-state/"},"runtime":"python","name":"ol-infrastructure-xqueue-server"}
{"name":"vpc-ipam-ipv4-auto-cidrblock-with-specs","runtime":{"name":"nodejs"},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"description":"Test inheriting the cidrBlock from an IPv4 IPAM pool and constraining the subnet specs"}
{"name": "conference", "runtime": "go", "description": "conference platform pulumi app"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpcEndpointConnectionNotification Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"construct_component_provider_py","description":"A program that constructs remote component resources with first class provider.","runtime":"python"}
{"description":"Example on how to deploy the Pulumi ESC CSI Provider","runtime":"dotnet","name":"kubernetes-csi-driver-csharp","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-csharp"}}}}
{"name":"pulumi-azure-secretstore-csi","description":"A minimal Azure Native TypeScript Pulumi program","runtime":{"name":"nodejs","options":{"typescript":"1"}}}
{"name":"aws-import-export-pulumi-config-csharp","description":"An example that retrieves and exports a Pulumi config value","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}},"runtime":"dotnet"}
{"name":"test","resources":{"provider":{"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"},"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"}},"tested-resource":{"properties":{"name":"MyUser","password":"MyPassword","instance":"${instance.name}"},"type":"gcp:sql:User","options":{"provider":"${provider}"}},"instance":{"properties":{"databaseVersion":"MYSQL_8_0","region":"us-central1","deletionProtection":"","settings":{"tier":"db-f1-micro"}},"type":"gcp:sql:DatabaseInstance","options":{"provider":"${provider}"}}},"runtime":{"name":"yaml"}}
{"resources":{"deployment":{"type":"kubernetes:apps/v1:Deployment","properties":{"spec":{"template":{"metadata":{"labels":"${appLabels}"},"spec":{"containers":[{"name":"nginx","image":"nginx"}]}},"replicas":"1","selector":{"matchLabels":"${appLabels}"}}}},"service":{"type":"kubernetes:core/v1:Service","properties":{"metadata":{"labels":"${appLabels}"},"spec":{"type":"ClusterIP","selector":"${appLabels}","ports":[{"port":"80","targetPort":"80","protocol":"TCP"}]}}}},"variables":{"appLabels":{"app":"nginx"}},"description":"An example that deploys a Deployment and Service for Minikube on Kubernetes.","runtime":"yaml","name":"k8s-deployment-service-for-minikube-yaml"}
{"description":"A simple example of using the `Queue` APIs.","runtime":"nodejs","name":"queue"}
{"name": "api-bmpi-dev", "runtime": "nodejs", "description": "API for BMPI.dev"}
{"name": "dagger-pulumi-demo-ecr", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program"}
{"name":"index_randomidLiYNTxNn2mMD","resources":{"randomId":{"properties":{"byteLength":"8"},"type":"random:RandomId"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/6c6dc4bc-ab09-4f96-9cca-e8725fab2622.zip"}}},"description":"","runtime":"yaml"}
{"runtime":"scala","description":"Experimental playground for Besom","name":"besom"}
{"name":"patch-resources","resources":{"patch-rsc-namespace-patching":{"properties":{"metadata":{"name":"${patch-rsc-namespace.metadata.name}","annotations":{"pulumi.com/testPatchAnnotation":"patched"}}},"type":"kubernetes:core/v1:NamespacePatch"},"deployment":{"properties":{"metadata":{"namespace":"${patch-rsc-namespace.metadata.name}","labels":{"app":"nginx"}},"spec":{"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"ports":[{"containerPort":"80"}],"name":"nginx","image":"nginx:1.14.2"}]}},"replicas":"1","selector":{"matchLabels":{"app":"nginx"}}}},"options":{"provider":"${provider}"},"type":"kubernetes:apps/v1:Deployment"},"patch-rsc-namespace":{"type":"kubernetes:core/v1:Namespace","options":{"provider":"${provider}"}},"provider":{"type":"pulumi:providers:kubernetes"},"deployment-patching":{"properties":{"metadata":{"name":"${deployment.metadata.name}","namespace":"${patch-rsc-namespace.metadata.name}","annotations":{"pulumi.com/testPatchAnnotation":"patched"}}},"type":"kubernetes:apps/v1:DeploymentPatch"}},"runtime":"yaml"}
{"name": "aws-go-fargate", "runtime": "go", "description": "An end-to-end AWS ECS Fargate infrastructure as code project."}
{"resources":{"webmasterUser":{"properties":{"path":"/system/","name":"webmaster"},"type":"aws:iam/user:User"},"webmasterAccessKey":{"type":"aws:iam/accessKey:AccessKey","name":"webmaster","properties":{"user":"${webmasterUser.name}"}},"webmasterPolicy":{"properties":{"user":"${webmasterUser.name}","policy":{"fn::toJSON":{"Statement":[{"Action":["ec2:Describe*"],"Resource":"*","Effect":"Allow"}],"Version":"2012-10-17"}}},"type":"aws:iam/userPolicy:UserPolicy"}},"runtime":"yaml","name":"aws-iam-user-userpolicy-yaml","description":"An example that deploys an IAM user and user policy on AWS."}
{"name":"l2-failed-create-continue-on-error","runtime":"nodejs"}
{"description":"A minimal TypeScript Pulumi program","name":"cdk-cron-lambda","runtime":"nodejs"}
{"runtime":"go","name":"2-cs-go","description":"A minimal Go Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Add inventory configuration", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"yaml","resources":{"planKey":{"type":"aws:apigateway:UsagePlanKey","properties":{"keyType":"API_KEY","keyId":"${key.id}","usagePlanId":"${plan.id}"}},"api":{"properties":{"routes":[{"localPath":"data","path":"/","index":"index.json","contentType":"application/json","apiKeyRequired":"1"}]},"type":"aws-apigateway:RestAPI"},"plan":{"type":"aws:apigateway:UsagePlan","properties":{"apiStages":[{"apiId":"${api.api.id}","stage":"${api.stage.stageName}"}]}},"key":{"type":"aws:apigateway:ApiKey"}},"name":"awsx-apigateway-api-keys-yaml","outputs":{"url":"${api.url}","apiKey":"${key.value}"},"description":"An example that deploys an API Gateway instance with support for API keys."}
{"description":"","name":"authentication_executionh1UGP0Fkk0eT","resources":{"keycloakRealm":{"type":"keycloak:Realm","properties":{"realm":"example-realm","enabled":"1"}},"keycloakAuthExecution":{"type":"keycloak:authentication:Execution","properties":{"requirement":"REQUIRED","realmId":"${keycloakRealm.realm}","parentFlowAlias":"${keycloakAuthFlow.alias}","authenticator":"auth-cookie"}},"keycloakAuthFlow":{"type":"keycloak:authentication:Flow","properties":{"realmId":"${keycloakRealm.realm}","description":"A custom authentication flow","alias":"custom-auth-flow"}}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/78b9933c-6dd9-4b72-946e-68edc38eae64.zip"}}},"runtime":"yaml"}
{"description":"Simple serverless examples","runtime":"nodejs","name":"serverless-gcp"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"description":"A pre-compiled TypeScript program","name":"sourcemap"}
{"runtime":"yaml","name":"l2-invoke-dependencies"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS PeeringAttachment TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"aws-esc-oidc","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"},"name":"l2-resource-primitives"}
{"template":{"config":{"azure:environment":{"default":"public","description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}},"runtime":"nodejs","name":"azure-ts-aks-keda","description":"Create an Azure Kubernetes Service (AKS) cluster and deploy an Azure Function App with KEDA (Kubernetes-based Event Driven Autoscaling)"}
{"name":"l2-plain","runtime":{"options":{"virtualenv":"venv","typechecker":"mypy"},"name":"python"}}
{"description":"A Python program to deploy a Kubernetes cluster on AWS","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"aws-getting-started-k8s-py"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"awsx-apigateway-auth-lambda-python","description":"An example that deploys an API Gateway REST API with an AWS Lambda authorizer."}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnConnectionRoute Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"pulumi-python-pyright","description":"A simple Python Pulumi program that type checks with pyright."}
{"description":"A minimal AWS Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"databricks"}
{"name":"arbitrum","description":"coin stack","runtime":"nodejs"}
{"template":{"description":"A minimal DigitalOcean JavaScript Pulumi program"},"description":"${DESCRIPTION}","runtime":{"name":"nodejs","options":{"typescript":""}},"name":"${PROJECT}"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Conditional Trigger with Crawler Action", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"1-functions-go","description":"A minimal Go Pulumi program","runtime":"go"}
{"name": "phac-garden-cloudrun", "runtime": "nodejs", "description": "Provision Custom Domains for CloudRun"}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "Search By Allocation ID (VPC only)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-ecr-image-java","runtime":"java"}
{"runtime":"yaml","resources":{"exampleProfile":{"properties":{"resourceGroupName":"${resourceGroup.name}","tags":{"cost_center":"MSFT","environment":"Production"},"location":"${resourceGroup.location}","sku":"Standard_Verizon"},"type":"azure:cdn:Profile"},"resourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"West Europe"}}},"name":"cdn_profile"}
{"description":"An example that deploys an API Gateway REST API with a single endpoint backed by AWS Lambda.","runtime":{"name":"python","options":{"virtualenv":"venv"}},"name":"awsx-apigateway-lambda-python"}
{"name":"aws-py-s3-folder","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A minimal AWS Python Pulumi program"}
{"description":"Changing a provider's kubeconfig with a fixed `clusterIdentifier` should\ntrigger an update and not a replacement.\n","resources":{"provider":{"type":"pulumi:providers:kubernetes","properties":{"clusterIdentifier":"unchanged","kubeconfig":"apiVersion: v1\nclusters:\n  - cluster:\n      certificate-authority-data: Zm9vYmFyCg==\n      server: https://127.0.0.1:1\n    name: fake-cluster\ncontexts:\n  - context:\n      cluster: fake-cluster\n      user: fake-user\n    name: fake\ncurrent-context: fake\nkind: Config\npreferences: {}\nusers:\n  - name: fake-user\n    user:\n      client-certificate-data: Zm9vYmFyCg==\n      client-key-data: Zm9vYmFyCg==\n"}}},"name":"cluster-identifier","runtime":"yaml"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program","name":"macos_quickstart"}
{"runtime":{"options":{"typescript":""},"name":"nodejs"},"name":"l2-provider-grpc-config-schema-secret"}
{"variables":{"assumeRole":{"fn::invoke":{"Function":"aws:iam:getPolicyDocument","Arguments":{"statements":[{"effect":"Allow","principals":[{"type":"Service","identifiers":["ec2.amazonaws.com"]}],"actions":["sts:AssumeRole"]}]}}}},"resources":{"role":{"properties":{"assumeRolePolicy":"${assumeRole.json}"},"type":"aws:iam:Role","name":"my-role"},"instanceProfile":{"type":"aws:iam:InstanceProfile","name":"instance-profile","properties":{"name":"instance-profile","role":"${role.name}"}}},"description":"An example that deploys an IAM role and instance profile on AWS.","runtime":"yaml","name":"aws-iam-role-instanceprofile-yaml"}
{"runtime":"nodejs","description":"The CoreOS Prometheus Operator","name":"prometheus-operator"}
{"name": "metrics", "runtime": "nodejs", "description": "A simple example of how to hook up to CloudWatch metrics."}
{"resources":{"r":{"properties":{"requiredInputString":"input1-updated","optionalInputString":"input2-updated","statedir":"state"},"type":"testbridge:index/testres:Testres"},"randomNumber":{"type":"muxedrandom:RandomInteger","properties":{"max":"2","min":"2"}},"pseudoRandomNumber":{"properties":{"suggestion":"${randomNumber.result}"},"type":"muxedrandom:RandomHumanNumber"},"set":{"type":"testbridge:index/testres:Testres","properties":{"setOptionals":["a","b","c"],"requiredInputString":"input1","statedir":"state"}}},"outputs":{"testRequiredStringAfterUpdate__expect":"input1-updated","pseudoRandomNumber__expect":"4","pseudoRandomNumberUpdated__expect":"1","testSetOptionals__expect":["a","b","c"],"pseudoRandomNumberFair__expect":"1","pseudoRandomNumberUpdated__actual":"${pseudoRandomNumber.suggestionUpdated}","testOptionalStringAfterUpdate__actual":"${r.optionalInputStringCopy}","testOptionalStringAfterUpdate__expect":"input2-updated","randomNumber__actual":"${randomNumber.result}","testSetOptionals__actual":"${set.setOptionals}","testRequiredStringAfterUpdate__actual":"${r.requiredInputStringCopy}","pseudoRandomNumber__actual":"${pseudoRandomNumber.number}","pseudoRandomNumberFair__actual":"${pseudoRandomNumber.fair}","randomNumber__expect":"2"},"runtime":"yaml","name":"updateprogram"}
{"name":"debian-pulumi-azure","runtime":"go","description":"An Azure Native Go program to stand up a Debian VM"}
{"runtime":"python","description":"A program that replaces a resource with a new name and alias.","name":"aliases_rename_component_and_child"}
{"name":"aws-ts-organizations","description":"A TypeScript app to manage member accounts in AWS Organizations","runtime":"nodejs"}
{"name":"pulumi-reference-tf-state-file","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"name":"network-py","description":"A minimal Python Pulumi program","runtime":"python"}
{"description":"Pulumi stack for managing Cloudflare configuration","name":"arpa-home-cloudflare","runtime":"nodejs"}
{"name":"aliases-rename","description":"Integration test for Aliases (rename scenario)","runtime":{"name":"java","options":{"logtostderr":"","v":"0"}}}
{"name":"awsx-ecr-eks-deployment-service-java","runtime":"java"}
{"runtime":"nodejs","name":"read_dbr","description":"A program that has a DBR resource depending on a read resource"}
{"runtime":"nodejs","name":"untargeted_create","description":"description"}
{"runtime":"nodejs","name":"callbackfunction","description":"Test capturing secrets in callback functions."}
{"config":{"foo":"hello world"},"runtime":{"options":{"compiler":"sh -c \"cat Pulumi.yaml;\necho \\\"\\\";\necho \\\"outputs:\\\";\necho \\\"  TEST_ENV_VAR: $TEST_ENV_VAR\\\";\necho \\\"  PULUMI_STACK: $PULUMI_STACK\\\";\necho \\\"  PULUMI_PROJECT: $PULUMI_PROJECT\\\";\necho \\\"  PULUMI_ORGANIZATION: $PULUMI_ORGANIZATION\\\";\necho \\\"  PULUMI_CONFIG: $PULUMI_CONFIG\\\";\necho \\\"\\\";\"\n"},"name":"yaml"},"name":"project-env-vars"}
{"name":"eks_cluster_python","runtime":"python","description":"An EKS cluster"}
{"name": "s3-op-project", "runtime": "nodejs", "description": "A simple S3 bucket to deploy"}
{"runtime":"nodejs","name":"import_node","description":"A minimal NodeJS program to test import generation."}
{"description":"A GCP C# Pulumi program with Kubernetes","name":"gcp-cs-gke","runtime":"dotnet"}
{"name":"argocd","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs"}
{"name": "iac-demo", "runtime": "python", "description": "A Demo for DigitalOcean"}
{"name":"azure-go-call-azure-sdk","description":"An example of integrating an Azure SDK call to a Pulumi program.","runtime":"go"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"description":"A Python program to deploy a Kubernetes cluster on Google Cloud","config":{"nodesPerZone":{"description":"The desired number of nodes PER ZONE in the nodepool","default":"1"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"}}},"runtime":"python"}
{"name":"l1-builtin-info","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"description":"A program that replaces a resource with a new name and alias.","runtime":"go","name":"aliases_rename_component_and_child"}
{"name": "api", "runtime": "nodejs", "description": "API-related resources"}
{"description":"Beginworld can not simply be described","runtime":"python","name":"beginworld"}
{"name":"l2-explicit-provider","runtime":"java"}
{"description":"An example that deploys an API Gateway instance with support for API keys.","runtime":"go","name":"awsx-apigateway-api-keys-go"}
{"runtime":"nodejs","description":"A minimal Kubernetes TypeScript Pulumi program","name":"istio"}
{"description":"A minimal Go Pulumi program","name":"state_rename_parent","runtime":"go"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Microsoft Active Directory (MicrosoftAD)", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "An AWS getSites TypeScript Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"template":{"description":"A TypeScript program to deploy a Kubernetes cluster on OVHcloud","config":{"clusterName":{"default":"my_desired_cluster","description":"Name of the cluster"},"flavorName":{"description":"Name of the flavor/type of the machine","default":"b3-8"},"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA9"},"nodePoolMinNodes":{"default":"1","description":"Number of min nodes in the cluster"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"nodePoolName":{"default":"my-desired-pool","description":"Name of the node pool"},"nodePoolDesiredNodes":{"default":"1","description":"Number of desired nodes in the cluster"},"nodePoolMaxNodes":{"default":"3","description":"Number of max nodes in the cluster"}}},"name":"${PROJECT}","runtime":"nodejs","description":"${DESCRIPTION}"}
{"name":"props","runtime":"nodejs","description":"A program that exercises Pulumi property names."}
{"outputs":{"selector":"${service.spec.selector[\"app\"]}","replicas":"${deployment.spec.replicas}","label":"${deployment.spec.template.metadata.labels[\"app\"]}"},"description":"Test await logic with services.","resources":{"deployment":{"type":"kubernetes:apps/v1:Deployment","options":{"provider":"${provider}"},"properties":{"spec":{"replicas":"0","selector":{"matchLabels":{"app":"nginx"}},"template":{"metadata":{"labels":{"app":"nginx"}},"spec":{"containers":[{"image":"nginx:stable-alpine3.17-slim","name":"nginx","ports":[{"containerPort":"80"}]}]}}}}},"service":{"type":"kubernetes:core/v1:Service","options":{"provider":"${provider}","dependsOn":["${deployment}"]},"properties":{"spec":{"ports":[{"port":"80","protocol":"TCP","targetPort":"80"}],"selector":{"app":"nginx"}}}},"provider":{"type":"pulumi:providers:kubernetes","properties":{"namespace":"${ns.metadata.name}"}},"ns":{"type":"kubernetes:core/v1:Namespace"}},"runtime":"yaml","name":"await-deployment"}
{"description":"Basic example creating a compute instance","runtime":"nodejs","name":"instance"}
{"runtime":"java","name":"${PROJECT}","description":"${DESCRIPTION}","template":{"config":{"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA"},"registryUserLogin":{"default":"myuser","description":"Login of the user"},"registryName":{"description":"Name of the private registry","default":"my-registry"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"},"planName":{"description":"Name of the plan","default":"SMALL"},"registryUserName":{"default":"user","description":"Name of the user"},"registryUserEmail":{"default":"myuser@ovh.com","description":"Email of the user"}},"description":"A minimal OVHcloud Java Pulumi program"}}
{"name": "next-openai", "runtime": "nodejs", "main": "infra", "template": {"description": "Vercel AI SDK, Next.js, and OpenAI Chat Example", "config": {"openAIKey": {"description": "OpenAI API Key (https://platform.openai.com/account/api-keys)", "requried": true, "secret": true}, "aws:region": {"description": "The AWS region to deploy into", "requried": true, "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"minimal-gcp","description":"An empty Pulumi Google Cloud Test Script."}
{"resources":{"yada":{"type":"aws:cloudwatch:LogGroup","properties":{"name":"Yada","tags":{"environment":"production","application":"serviceA"}}}},"runtime":"yaml","name":"aws_cloudwatch_logGroup_LogGroup_1"}
{"name":"pinterestClone","main":"pulumi/","runtime":"nodejs","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API."}
{"name":"herocool2","description":"A minimal AWS Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"description":"CDK custom resource example","runtime":"nodejs","name":"nested-stacks"}
{"description":"${DESCRIPTION}","runtime":"python","name":"${PROJECT}","template":{"description":"A minimal Random Python Pulumi program."}}
{"name": "nginx", "runtime": "nodejs", "description": "A minimal Azure Native TypeScript Pulumi program"}
{"name":"multiple-regions","runtime":"nodejs","description":"Basic example of AWS web servers in multiple regions accessible over HTTP."}
{"description":"Besom Purrl test with Cats","name":"purrl-besom-test","runtime":"scala"}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"l2-invoke-simple"}
{"description":"Creates a GKE cluster using best-practices.","runtime":"nodejs","name":"k8s-gke-cluster"}
{"description":"A test of the kustomize resoures with an uninitialized provider","runtime":"dotnet","name":"dotnet_kustomize_uninitialized_provider"}
{"description":"EKS managed nodegroups with IAM examples","runtime":"python","name":"example-managed-nodegroups-py"}
{"description":"Ledger deployment","runtime":"go","name":"ledger","config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-go"}}}}
{"runtime":"python","description":"A program that smoke-tests Kubernetes first-class providers","name":"provider"}
{"runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}},"name":"l1-empty"}
{"description":"","config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/c6cefd93-a498-4283-b8d4-cceb467b03f3.zip"}}},"resources":{"myRandomString":{"properties":{"number":"1","upper":"1","lower":"1","special":"","length":"16"},"type":"random:RandomString"}},"runtime":"yaml","name":"index_randomstringTu2iX3Vq02G9","outputs":{"randomStringResult":"${myRandomString.result}"}}
{"name": "cowweb-helidon", "runtime": "nodejs", "description": "A Kubernetes TypeScript Pulumi program for cowweb-helidon"}
{"name":"awsx-apigateway-validation-types-javascript","runtime":{"name":"nodejs","options":{"typescript":""}},"description":"An example of configuring request validators for an API Gateway instance."}
{"name": "bjerk-bot", "runtime": "nodejs", "description": "The Bjerk Bot", "config": {"pulumi:disable-default-providers": ["*"]}}
{"name":"dev-yaml","runtime":"yaml","outputs":{"labels":"${b.labels}","effectiveLabels":"${b.effectiveLabels}","pulumiLabels":"${b.pulumiLabels}"},"resources":{"set-empty-label":{"properties":{"create":"gcloud storage buckets update ${b.url} --update-labels=unmanaged=value,unmanaged_empty=\n"},"type":"command:local:Command","options":{"retainOnDelete":"1"}},"b":{"type":"gcp:storage:Bucket","properties":{"location":"us-east1"}}}}
{"description":"A python program with a >4mb string resource","runtime":"python","name":"large_resource_python"}
{"runtime":"nodejs","description":"EKS managed nodegroups with AL2023 and Bottlerocket OS","name":"managed-ng-os"}
{"runtime":"dotnet","name":"awsx-apigateway-http-proxy-csharp","description":"An example that creates an API Gateway instance and configures a route as an HTTP proxy."}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"},"name":"aws-import-iac-iam-role-typescript","description":"An example that deploys the resource definition for an imported IAM role on AWS."}
{"name":"dynamic_py","description":"A simple Python program that uses dynamic providers.","runtime":"python"}
{"runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"awsx-elb-private-subnet-python","description":"An example that deploys an ApplicationLoadBalancer listening on a private subnet."}
{"name":"project-iam-policy-ts","description":"A simple example to show how to update project IAM policies","runtime":"nodejs"}
{"name":"${PROJECT}","runtime":"dotnet","description":"${DESCRIPTION}","template":{"description":"A C# program to deploy a containerized service on Azure","config":{"containerPort":{"description":"The port to expose on the container","default":"80"},"cpu":{"default":"1","description":"The number of CPU cores to allocate on the container"},"memory":{"description":"The amount of memory, in GB, to allocate on the container","default":"2"},"azure-native:location":{"description":"The Azure region to deploy into","default":"WestUS"},"appPath":{"default":"app","description":"The path to the container application to deploy"}}}}
{"name":"test","runtime":{"name":"yaml"},"resources":{"provider":{"options":{"version":"6.67.0"},"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}","region":"us-central1"}},"archive":{"properties":{"bucket":"${bucket.name}","source":{"fn::fileArchive":"./src"}},"type":"gcp:storage:BucketObject","options":{"ignoreChanges":["project","region","zone"],"provider":"${provider}"}},"bucket":{"type":"gcp:storage:Bucket","options":{"provider":"${provider}"},"properties":{"location":"US"}},"tested-resource":{"properties":{"sourceArchiveObject":"${archive.name}","runtime":"nodejs16","triggerHttp":"1","sourceArchiveBucket":"${bucket.name}","description":"My function","entryPoint":"helloGET","availableMemoryMb":"128"},"type":"gcp:cloudfunctions:Function","options":{"provider":"${provider}"}}}}
{"backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-open_metadata-application","runtime":"python","description":"MIT OL Open Metadata Service"}
{"name":"gcloud-intro-kubernetes","description":"A TypeScript program to deploy a Kubernetes cluster on Google Cloud","runtime":"nodejs"}
{"name": "job-nodejs-1", "runtime": "nodejs", "description": "Creating a job with Pulumi"}
{"runtime":"go","name":"l1-output-map"}
{"runtime":"python","backend":{"url":"s3://mitol-pulumi-state/"},"name":"ol-infrastructure-concourse-application","description":"A project to manage the resources and deployment for the Concourse CI/CD system"}
{"runtime":"dotnet","description":"A minimal C# Pulumi program","name":"compilation_error"}
{"runtime":"nodejs","description":"A minimal AWS TypeScript Pulumi program","name":"fanout.io-lambda-demo"}
{"runtime":"nodejs","description":"A program that produces multiple pending deletes for the same URN","name":"double_pending_delete"}
{"runtime":"nodejs","name":"eks-platform-infra","description":"A minimal TypeScript Pulumi program"}
{"description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","name":"kubernetes-py-guestbook","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name":"l2-target-up-with-new-dependency","runtime":{"name":"python","options":{"typechecker":"mypy","virtualenv":"venv"}}}
{"runtime":"java","description":"An example of fetching the default AWS VPC for the current region.","name":"awsx-vpc-default-java"}
{"runtime":"python","template":{"config":{"projectName":{"description":"Aiven project name"},"cloudName":{"default":"google-europe-west1","description":"Choice of cloud provider and region"},"planName":{"default":"business-4","description":"An Aiven plan to choose compute, storage, and other features"},"serviceName":{"description":"The name of this Aiven service","default":"kafka-gcp-eu"}},"description":"A minimal Aiven Python Pulumi program"},"name":"${PROJECT}","description":"${DESCRIPTION}"}
{"description":"A minimal Google Cloud Python Pulumi program","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"name":"regress-1843","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-python"}}}}
{"name": "alb-lambda-pulumi-yaml", "runtime": "yaml", "description": "A minimal AWS Pulumi YAML program", "outputs": {"url": "${loadBalancer.dnsName}"}, "resources": {"vpc": {"type": "awsx:ec2:Vpc", "properties": {"cidrBlock": "10.0.0.0/16", "numberOfAvailabilityZones": 2, "subnetSpecs": [{"type": "Public", "name": "public-lb-subnet"}], "natGateways": {"strategy": "None"}}}, "securityGroup": {"type": "aws:ec2:SecurityGroup", "properties": {"vpcId": "${vpc.vpcId}", "ingress": [{"protocol": "tcp", "fromPort": 80, "toPort": 80, "cidrBlocks": ["0.0.0.0/0"]}]}}, "loadBalancer": {"type": "aws:lb:LoadBalancer", "properties": {"securityGroups": ["${securityGroup.id}"], "subnets": "${vpc.publicSubnetIds}"}}, "targetGroup": {"type": "aws:lb:TargetGroup", "properties": {"targetType": "lambda", "vpcId": "${vpc.vpcId}"}}, "listener": {"type": "aws:lb:Listener", "properties": {"loadBalancerArn": "${loadBalancer.arn}", "port": 80, "defaultActions": [{"type": "forward", "targetGroupArn": "${targetGroup.arn}"}]}}, "lambdaRole": {"type": "aws:iam:Role", "properties": {"assumeRolePolicy": {"fn::toJSON": {"Version": "2012-10-17", "Statement": [{"Action": "sts:AssumeRole", "Effect": "Allow", "Principal": {"Service": "lambda.amazonaws.com"}}]}}, "managedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]}}, "fn": {"type": "aws:lambda:Function", "properties": {"runtime": "nodejs18.x", "handler": "index.handler", "role": "${lambdaRole.arn}", "code": {"fn::fileArchive": "./lambda"}}}, "lambdaPermission": {"type": "aws:lambda:Permission", "properties": {"action": "lambda:InvokeFunction", "principal": "elasticloadbalancing.amazonaws.com", "function": "${fn.arn}", "sourceArn": "${targetGroup.arn}"}}, "targetGroupAttachment": {"type": "aws:lb:TargetGroupAttachment", "properties": {"targetGroupArn": "${targetGroup.arn}", "targetId": "${fn.arn}"}, "options": {"dependsOn": ["${lambdaPermission}"]}}}}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"description":"Setup ECS task definition for this project","name":"setup-ecs-task-definition","runtime":"go"}
{"runtime":"go","name":"awsx-apigateway-openapi-route-go","description":"n example of configuring an API Gateway route with an OpenAPI/Swagger definition."}
{"runtime":"go","name":"cluster-go","description":"A minimal AWS Go Pulumi Program to create an EKS cluster"}
{"runtime":"python","name":"construct_component_methods_py","description":"A program that constructs remote component resources with methods."}
{"runtime":{"name":"java"},"description":"A minimal sbt Pulumi program.","name":"minimalsbt"}
{"description":"An example of fetching the default AWS VPC for the current region.","runtime":"dotnet","name":"awsx-vpc-default-csharp"}
{"runtime":"nodejs","name":"provider","description":"Tests first-class provider support."}
{"runtime":"nodejs","description":"A minimal Google Cloud TypeScript Pulumi program","name":"iam-ts"}
{"runtime":"nodejs","name":"webserver-ts","description":"Basic example of an Google Cloud web server accessible over HTTP","template":{"config":{"google-native:zone":{"description":"The Google Cloud zone","default":"us-central1-a"},"google-native:project":{"description":"The Google Cloud project to deploy into"}}}}
{"description":"An example that deploys an API Gateway REST API with a custom domain from Route53.","name":"awsx-apigateway-custom-domain-go","runtime":"go"}
{"name": "homelab-apps-kurtflix", "runtime": "go"}
{"name":"pulumi-python-uv-no-venv-option","runtime":{"options":{"toolchain":"uv"},"name":"python"},"description":"A Python project that uses the uv toolchain, without specifing the location for the virtualenv."}
{"name": "eks_cluster_python", "runtime": "python", "description": "An EKS cluster"}
{"runtime":"nodejs","name":"ecs-parallel","description":"An ECS cluster with a Fargate service"}
{"name":"selfhosted-20-database","runtime":"nodejs","description":"Used to create database resources for the eks selfhosted installer."}
{"name":"vpc-csharp","description":"A minimal AliCloud CSharp project for a VPC","runtime":"dotnet"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"l2-resource-primitives"}
{"runtime":"go","name":"l2-provider-grpc-config-schema-secret"}
{"name":"nodejs_resource_type_name","runtime":"nodejs","description":"A simple Nodejs program that uses dynamic providers with custom resource type name."}
{"runtime":"java","name":"l2-resource-alpha"}
{"description":"A minimal TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"runtime":"nodejs","name":"compliance-ready-policies-infra"}
{"name":"construct_component_plain_go","plugins":{"providers":[{"path":"../../../testprovider","name":"testprovider"}]},"description":"A program that constructs a remote component resource with prompt inputs.","runtime":"go"}
{"name": "gcp-py-webserver", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Basic example of a Google Cloud web server accessible over HTTP", "template": {"config": {"gcp:project": {"description": "The Google Cloud project to deploy into"}, "gcp:zone": {"description": "The Google Cloud zone", "default": "us-central1-a"}}}}
{"name":"regress-3094","description":"Reproduce AWS 3094","runtime":"nodejs"}
{"name":"azure-ts-aks-helm","runtime":"nodejs","description":"Azure Native TypeScript Pulumi example featuring Helm chart deployment to AKS"}
{"name":"resource_options","runtime":"nodejs","description":"A program that creates some resources for testing resource options."}
{"name":"awsx-vpc-sg-ec2-javascript","description":"An example that deploys an EC2 instance using a VPC and security group with Crosswalk for AWS.","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"runtime":"java","name":"aws-iam-role-policyattachment-managedpolicy-java","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}},"description":"An example that deploys an IAM role and a policy attachment with an AWS managed policy on AWS."}
{"name":"azure-cs-functions","runtime":"dotnet","description":"Creates Azure Functions on a Linux App Service Plan"}
{"description":"A minimal AWS TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"name":"regress-4446","runtime":"nodejs"}
{"name":"aliases_adopt_component_child","description":"A program that adopts a component child with an alias.","runtime":"python"}
{"name": "template", "runtime": "nodejs", "description": "Deploy from ARM templates"}
{"runtime":"nodejs","name":"pulumi-aws-cdk-fargate","description":"Fargate example for CDK"}
{"config":{"kubernetes:enableServerSideApply":""},"description":"A program that tests support for `.metadata.generateName`.","name":"generatename-test","runtime":"nodejs"}
{"name":"test","runtime":{"name":"yaml"},"resources":{"tested-resource":{"type":"gcp:compute:Firewall","properties":{"sourceTags":["web"],"network":"${defaultNetwork.name}","allows":[{"protocol":"icmp"},{"ports":["80","8080","1000-2000"],"protocol":"tcp"}]},"options":{"provider":"${provider}"}},"provider":{"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"},"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"}},"defaultNetwork":{"type":"gcp:compute:Network","properties":{"name":"dnet${pulumi.stack}"},"options":{"provider":"${provider}"}}}}
{"runtime":"nodejs","description":"A program that creates a resource with an unknown value.","name":"unknown_values"}
{"runtime":"nodejs","name":"azure-ts-api-management","template":{"config":{"azure:environment":{"description":"The Azure environment to use (`public`, `usgovernment`, `german`, `china`)","default":"public"},"azure:location":{"description":"The Azure location to deploy to (e.g., `eastus`, or `westeurope`)"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}},"description":"Example of using Azure API Management"}
{"config":{"pulumi:disable-default-providers":["*"]},"runtime":"nodejs","name":"construct_component_provider_nodejs","description":"A program that constructs remote component resources with first class provider."}
{"name": "pulumi-validating-admission-policy", "runtime": "nodejs", "description": "A minimal TypeScript Pulumi program", "config": {"scaleway:region": "fr-par", "scaleway:zone": "fr-par-1", "cluster:version": "1.27", "cluster:auto_upgrade": true, "node:node_type": "PLAY2-NANO", "node:auto_scale": false, "node:node_count": 1, "node:auto_heal": true}}
{"runtime":"nodejs","name":"l1-output-array"}
{"name": "pulumi-demo", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program", "main": "src/index.ts"}
{"runtime":"nodejs","name":"l1-main","main":"subdir"}
{"name":"azure-cs-sqlserver","description":"An example of a SQLServer on Azure PaaS","runtime":"dotnet"}
{"name":"azure-table","description":"Work with Azure Functions and Storage Table","runtime":"nodejs"}
{"runtime":"dotnet","description":"${DESCRIPTION}","template":{"description":"A minimal Kubernetes F# Pulumi program"},"name":"${PROJECT}"}
{"runtime":"nodejs","description":"A nodejs integration test for the about command","name":"nodejs"}
{"runtime":"nodejs","description":"Test to show that the servicebus resources have been migrated with proper aliases","name":"servicebus-migration"}
{"name": "hackercamp", "runtime": "nodejs", "description": "Infrastructure of HackerCamp.cz"}
{"name":"golang","runtime":"go","description":"A minimal Go Pulumi program"}
{"description":"A minimal AWS TypeScript Pulumi program","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}},"name":"regress-4568","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS VpnGateway Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"python","description":"A program that smoke-tests the Kubernetes SDK","name":"smoke-test"}
{"description":"${DESCRIPTION}","runtime":"yaml","name":"${PROJECT}","config":{"errorDocument":{"type":"string","default":"error.html"},"sitePath":{"type":"string","default":"./www"},"appPath":{"default":"./app","type":"string"},"indexDocument":{"default":"index.html","type":"string"}},"variables":{"appArchive":{"fn::fileArchive":"${appPath}"},"configJSON":{"fn::toJSON":{"api":"${data-function.httpsTriggerUrl}"}},"configFile":{"fn::stringAsset":"${configJSON}"}},"resources":{"synced-folder":{"properties":{"path":"${sitePath}","bucketName":"${site-bucket.name}"},"type":"synced-folder:index:GoogleCloudFolder"},"site-config":{"properties":{"contentType":"application/json","bucket":"${site-bucket.name}","source":"${configFile}","name":"config.json"},"type":"gcp:storage:BucketObject"},"app-bucket":{"properties":{"location":"US"},"type":"gcp:storage:Bucket"},"app-archive":{"properties":{"bucket":"${app-bucket.name}","source":"${appArchive}"},"type":"gcp:storage:BucketObject"},"site-bucket-iam-binding":{"properties":{"bucket":"${site-bucket.name}","role":"roles/storage.objectViewer","members":["allUsers"]},"type":"gcp:storage:BucketIAMBinding"},"data-function":{"properties":{"triggerHttp":"True","sourceArchiveBucket":"${app-bucket.name}","sourceArchiveObject":"${app-archive.name}","runtime":"python310","entryPoint":"data"},"type":"gcp:cloudfunctions:Function"},"site-bucket":{"properties":{"website":{"notFoundPage":"${errorDocument}","mainPageSuffix":"${indexDocument}"},"location":"US"},"type":"gcp:storage:Bucket"},"invoker":{"properties":{"role":"roles/cloudfunctions.invoker","project":"${data-function.project}","region":"${data-function.region}","cloudFunction":"${data-function.name}","member":"allUsers"},"type":"gcp:cloudfunctions:FunctionIamMember"}},"template":{"config":{"appPath":{"description":"The path to the folder containing the functions to be deployed","default":"./app"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"sitePath":{"default":"./www","description":"The path to the folder containing the website"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"gcp:region":{"description":"The Google Cloud region to deploy into","default":"us-central1"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"}},"description":"A Pulumi YAML program to deploy a serverless application on Google Cloud"},"outputs":{"apiURL":"${data-function.httpsTriggerUrl}","siteURL":"https://storage.googleapis.com/${site-bucket.name}/index.html"}}
{"name":"makima","config":{"pulumi:tags":{"value":{"pulumi:template":""}}},"description":"A Python program to deploy a virtual machine on Google Cloud","runtime":{"name":"python"}}
{"resources":{"bucket":{"type":"google-native:storage/v1:Bucket"}},"name":"${PROJECT}","template":{"description":"A minimal Google Cloud Pulumi YAML program","config":{"google-native:project":{"description":"The Google Cloud project to deploy into"}}},"description":"${DESCRIPTION}","runtime":"yaml","outputs":{"bucketSelfLink":"${bucket.selfLink}"}}
{"name":"domain-digitalocean","description":"A simple domain on DigitalOcean.","runtime":"nodejs"}
{"description":"Tests whether Pulumi successfully updates namespace resources.","name":"namespace-tests","runtime":"nodejs"}
{"runtime":"go","name":"${PROJECT}","description":"${DESCRIPTION}","template":{"config":{"azure-native:location":{"default":"WestUS","description":"The Azure region to deploy into"},"sitePath":{"description":"The path to the folder containing the website","default":"./www"},"appPath":{"description":"The path to the folder containing the functions to be deployed","default":"./app"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"errorDocument":{"default":"error.html","description":"The file to use for error pages"}},"description":"A Go program to deploy a serverless application on Azure"}}
{"runtime":"nodejs","description":"Create a VPC","name":"vpc.ts"}
{"name":"awsx-load-balanced-fargate-ecr-typescript","runtime":"nodejs"}
{"name": "bot", "runtime": "nodejs", "main": "src/index.ts", "backend": {"url": "gs://pulumi-backend-ux08"}, "config": {"pulumi:disable-default-providers": ["*"]}}
{"name":"aliases_rename","description":"A program that replaces a resource with a new name and alias.","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS SslNegotiationPolicy Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"coin stack indexer, ingestion and interface","runtime":"nodejs","name":"ethereum"}
{"name": "aws-eks-alb-controller-helm-x509-selfsigned-ts", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"description":"Example of a Kubernetes Stateless Application Deployment, using Nginx","runtime":"nodejs","name":"k8s-nginx","template":null}
{"name":"aws-cs-eks","description":"An ASP.NET application running a simple container in a EKS Cluster","runtime":"dotnet"}
{"name":"python_eks_platform_vpc","description":"A minimal AWS Python Pulumi program","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "<%= projectName %>", "runtime": "nodejs"}
{"runtime":"python","description":"A Python program that errors out\n","name":"pulumi-python-stack-truncate","main":"bar/"}
{"name":"awsx-load-balanced-fargate-ecr-csharp","runtime":"dotnet"}
{"name":"test-aws-1655-legacy","outputs":{"actual":"${res.tags}"},"runtime":"yaml","resources":{"aws-provider":{"type":"pulumi:providers:aws"},"res":{"type":"aws:s3:Bucket","options":{"provider":"${aws-provider}"}}},"description":"Don't specify any default tags (should be empty)\n"}
{"name": "inno-graph", "description": "Innovation graph", "runtime": "nodejs"}
{"runtime":"dotnet","description":"A minimal C# Pulumi program","name":"cbp-docker-csharp"}
{"runtime":"python","name":"webserver-py-old","description":"Basic example of an AWS web server accessible over HTTP (in Python!), specifying inputs with dicts."}
{"description":"cloudfront integration test","runtime":"nodejs","name":"pulumi-aws-cloudfront"}
{"name":"k8s-aws-cluster","runtime":"nodejs","description":"Creates an EKS cluster using best-practices."}
{"name":"server-side-apply-upgrade","description":"Tests Server-side Apply CSA to SSA upgrade","runtime":"nodejs"}
{"name":"secrets_go_kubernetes","description":"Tests secrets support.","runtime":"go"}
{"description":"www.pulumi.com, all things Pulumi!","runtime":"nodejs","name":"www.pulumi.com"}
{"description":"A minimal Go Pulumi program","config":{"serviceName":"c3878ba251b5478181eab758e6b34d6a"},"runtime":"go","name":"pulumi-ovh-kube"}
{"resources":{"exampleTopic":{"properties":{"partitioningEnabled":"1","namespaceId":"${exampleNamespace.id}"},"type":"azure:servicebus:Topic"},"exampleSubsn":{"properties":{"maxDeliveryCount":"1","topicId":"${exampleTopic.id}"},"type":"azure:servicebus:Subscription"},"exampleQueue":{"type":"azure:servicebus:Queue","properties":{"partitioningEnabled":"1","namespaceId":"${exampleNamespace.id}"}},"exampleNamespace":{"type":"azure:servicebus:Namespace","properties":{"location":"${exampleResourceGroup.location}","tags":{"source":"example"},"sku":"Standard","resourceGroupName":"${exampleResourceGroup.name}"}},"exampleSubscnRule":{"properties":{"subscriptionId":"${exampleSubsn.id}","filterType":"SqlFilter","sqlFilter":"colour = 'red'"},"type":"azure:servicebus:SubscriptionRule"},"exampleResourceGroup":{"properties":{"location":"East US"},"type":"azure:core:ResourceGroup"}},"name":"servicebus","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Non-AWS Service", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS Eip Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "bitcoin", "runtime": "nodejs", "description": "coin stack indexer, ingestion and interface"}
{"name":"packageadd","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-go"}}},"description":"A minimal Google Cloud Go Pulumi program","runtime":"go"}
{"name":"secrets_dotnet_kubernetes","runtime":"dotnet","description":"Tests secrets support."}
{"name":"esc-workshop-aws-secrets-demo","config":{"pulumi:tags":{"value":{"pulumi:template":"typescript"}}},"description":"A minimal TypeScript Pulumi program","runtime":{"options":{"packagemanager":"npm"},"name":"nodejs"}}
{"runtime":"python","description":"test for dynamic provider configuration in a separate module from __main__","name":"dynamic-provider-config-main-py"}
{"name":"kraken-ci-aws-ecs","description":"Kraken CI on AWS ECS","runtime":{"options":{"virtualenv":"venv"},"name":"python"}}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "Interface Endpoint Type", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name": "${PROJECT}", "runtime": "go", "description": "${DESCRIPTION}", "template": {"description": "An AWS RecorderStatus Go Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","description":"A simple command example","name":"command-ec2-remote"}
{"outputs":{"actual":"${res.tags}"},"name":"test-aws-1655-pf","resources":{"res":{"type":"aws:appconfig:Environment","options":{"provider":"${aws-provider}"},"properties":{"applicationId":"${app.id}","name":"pf-tags-test"}},"aws-provider":{"properties":{"defaultTags":{"tags":{"foo":"quux","thwomp":"pow"}}},"type":"pulumi:providers:aws"},"app":{"type":"aws:appconfig:Application","properties":{"name":"pf-tags-test-app"}}},"runtime":"yaml","description":"Add new tag: `thwomp: pow`\n"}
{"runtime":{"options":{"nodeargs":"--experimental-specifier-resolution=node --loader ts-node/esm --no-warnings"},"name":"nodejs"},"description":"Use ECMAScript modules for a TS program.","name":"esm-ts-specifier-resolution-node"}
{"name": "go-k8s-apps", "runtime": "go", "description": "A minimal Kubernetes Go Pulumi program"}
{"name":"azure-cs-vm-scaleset","runtime":"dotnet","description":"Basic C# example of an Azure VM Scale Sets accessible over balanced HTTP endpoint."}
{"name": "vpn-layer", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "Pulumi program for setting up vpn resources"}
{"runtime":"nodejs","description":"Single application deployed to multiple Kubernetes clusters","template":{"config":{"gcp:project":{"description":"The GCP project to deploy into"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"azure:location":{"default":"westus2","description":"The Azure location to deploy into"},"gcp:zone":{"description":"The GCP zone to deploy into","default":"us-west1-a"}}},"name":"kubernetes-ts-multicloud"}
{"description":"A test of ConfigGroup parsing YAML files.","name":"dotnet_yaml_local","runtime":"dotnet"}
{"name":"${PROJECT}","runtime":"nodejs","description":"${DESCRIPTION}","template":{"description":"A minimal TypeScript Pulumi program"}}
{"main":"foo.py","runtime":"python","description":"A Python program that errors out\n","name":"pulumi-python-stack-truncate"}
{"name":"aws-static-website-with-runtime-logic-typescript","description":"An example that demonstrates a few interesting things you can do at runtime with Pulumi.","runtime":"nodejs"}
{"description":"A minimal TypeScript Pulumi program","runtime":"nodejs","name":"workshop-confluent"}
{"runtime":"yaml","outputs":{"endpoint":"${alb.loadBalancer.dnsName}"},"description":"An example that deploys an ApplicationLoadBalancer listening on port 80.","resources":{"alb":{"type":"awsx:lb:ApplicationLoadBalancer","properties":{"listener":{"port":"80"}}}},"name":"awsx-elb-web-listener-yaml"}
{"description":"Test Kubernetes Helm package with remote Chart.","runtime":"go","name":"go_helm_kubernetes"}
{"runtime":"nodejs","config":{"project_level_config:foo":"bar","aws:region":"us-west-2"},"description":"A minimal TypeScript Pulumi program","name":"project_level_config"}
{"runtime":"go","name":"awsx-apigateway-http-proxy-go","description":"An example that creates an API Gateway instance and configures a route as an HTTP proxy."}
{"name":"dockerfile-python","runtime":"python","description":"A pulumi application that builds a Dockerfile"}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"l2-invoke-secrets"}
{"name":"awsx-apigateway-auth-cognito-go","description":"An example that deploys an API Gateway REST API with an Amazon Cognito authorizer.","runtime":"go"}
{"outputs":{"bucketName":"${my-bucket.id}"},"name":"regress-3674","runtime":"yaml","resources":{"my-bucket":{"properties":{"tags":{"MyTestTag":"MyTestTag"}},"type":"aws:s3:BucketV2"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"aws-yaml"}}}}
{"runtime":"python","description":"${DESCRIPTION}","template":{"description":"A minimal Scaleway Python program","config":{"scaleway:region":{"default":"fr-par","description":"The Scaleway region to deploy into"},"scaleway:project_id":{"description":"The Scaleway project ID"}}},"name":"${PROJECT}"}
{"runtime":{"name":"nodejs","options":{"typescript":""}},"name":"l2-provider-grpc-config"}
{"name":"ub-boilerplate","description":"A minimal Kubernetes TypeScript Pulumi program","runtime":"nodejs","template":{"config":{"gcp:zone":{"description":"The GCP zone to deploy into","default":"us-west1-a"},"aws:region":{"description":"The AWS region to deploy into","default":"us-west-2"},"azure:location":{"description":"The Azure location to deploy into","default":"westus2"},"gcp:project":{"description":"The GCP project to deploy into"}}}}
{"name": "sparkpost-consumer", "runtime": "nodejs", "description": "Creates a webhook consumer for SparkPost events"}
{"resources":{"exampleDisk":{"properties":{"createOption":"Empty","storageAccountType":"Standard_LRS","location":"${example.location}","resourceGroupName":"${example.name}","diskSizeGb":"10"},"type":"azure:compute:ManagedDisk"},"example":{"properties":{"location":"West Europe"},"type":"azure:core:ResourceGroup"},"exampleVirtualMachine":{"type":"azure:compute:VirtualMachine","properties":{"osProfile":{"computerName":"example-vm","adminPassword":"Password1234!","adminUsername":"testadmin"},"osProfileLinuxConfig":{"disablePasswordAuthentication":""},"location":"${example.location}","storageOsDisk":{"caching":"ReadWrite","createOption":"FromImage","managedDiskType":"Standard_LRS","name":"myosdisk1"},"networkInterfaceIds":["${mainNetworkInterface.id}"],"resourceGroupName":"${example.name}","storageImageReference":{"version":"latest","offer":"0001-com-ubuntu-server-jammy","sku":"22_04-lts","publisher":"Canonical"},"vmSize":"Standard_F2"}},"internal":{"type":"azure:network:Subnet","properties":{"virtualNetworkName":"${main.name}","addressPrefixes":["10.0.2.0/24"],"resourceGroupName":"${example.name}"}},"main":{"type":"azure:network:VirtualNetwork","properties":{"addressSpaces":["10.0.0.0/16"],"resourceGroupName":"${example.name}","location":"${example.location}"}},"mainNetworkInterface":{"type":"azure:network:NetworkInterface","properties":{"ipConfigurations":[{"name":"internal","privateIpAddressAllocation":"Dynamic","subnetId":"${internal.id}"}],"resourceGroupName":"${example.name}","location":"${example.location}"}},"exampleDataDiskAttachment":{"type":"azure:compute:DataDiskAttachment","properties":{"lun":"10","caching":"ReadWrite","createOption":"Attach","virtualMachineId":"${exampleVirtualMachine.id}","managedDiskId":"${exampleDisk.id}"}}},"name":"compute_datadiskattachment","runtime":"yaml"}
{"name":"test","runtime":{"name":"yaml"},"resources":{"default":{"properties":{"name":"website-forwarding-rule","backendService":"${backend.id}","region":"us-central1","portRange":"80"},"type":"gcp:compute:ForwardingRule"},"hc":{"type":"gcp:compute:RegionHealthCheck","properties":{"timeoutSec":"1","checkIntervalSec":"1","name":"check-website-backend","tcpHealthCheck":{"port":"80"},"region":"us-central1"}},"backend":{"properties":{"healthChecks":"${hc.id}","loadBalancingScheme":"EXTERNAL","region":"us-central1","name":"website-backend"},"type":"gcp:compute:RegionBackendService"}}}
{"name": "dogecoin", "runtime": "nodejs", "description": "coin stack indexer, ingestion and interface"}
{"runtime":{"name":"python","options":{"toolchain":"pip","virtualenv":"venv"}},"name":"helm-kubernetes-part-one-python","config":{"pulumi:tags":{"value":{"pulumi:template":"helm-kubernetes-python"}}},"description":"Demo Code Part 1 of the Tutorial around Helm in Kubernetes"}
{"template":{"config":{"adminUsername":{"description":"The user account to create on the VM","default":"pulumiuser"},"vmName":{"description":"The DNS hostname prefix to use for the VM","default":"my-server"},"azure-native:location":{"description":"The Azure location to deploy into","default":"WestUS2"},"osImage":{"default":"Debian:debian-11:11:latest","description":"The Azure URN of the base image to use for the VM"},"vmSize":{"default":"Standard_A1_v2","description":"The machine size to use for the VM"},"servicePort":{"default":"80","description":"The HTTP service port to expose on the VM"}},"description":"A Pulumi YAML program to deploy a virtual machine on Azure"},"variables":{"osImagePublisher":"${osImageArgs[0]}","osImageVersion":"${osImageArgs[3]}","dnsName":"${vmName}-${random-string.result}","initScript":{"fn::toBase64":"#!/bin/bash\necho '<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <title>Hello, world!</title>\n</head>\n<body>\n    <h1>Hello, world! 👋</h1>\n    <p>Deployed with 💜 by <a href=\"https://pulumi.com/\">Pulumi</a>.</p>\n</body>\n</html>' > index.html\nsudo python3 -m http.server ${servicePort} &\n"},"osImageArgs":{"fn::split":[":","${osImage}"]},"osImageOffer":"${osImageArgs[1]}","osImageSku":"${osImageArgs[2]}","address":{"fn::invoke":{"arguments":{"publicIpAddressName":"${public-ip.name}","expand":"${vm.id}","resourceGroupName":"${resource-group.name}"},"function":"azure-native:network:getPublicIPAddress"}}},"config":{"osImage":{"default":"Debian:debian-11:11:latest","type":"string"},"adminUsername":{"type":"string","default":"pulumiuser"},"servicePort":{"default":"80","type":"string"},"vmName":{"type":"string","default":"my-server"},"vmSize":{"default":"Standard_A1_v2","type":"string"}},"resources":{"network-interface":{"properties":{"ipConfigurations":[{"subnet":{"id":"${network.subnets[0].id}"},"name":"${vmName}-ipconfiguration","privateIPAllocationMethod":"Dynamic","publicIPAddress":{"id":"${public-ip.id}"}}],"resourceGroupName":"${resource-group.name}","networkSecurityGroup":{"id":"${security-group.id}"}},"type":"azure-native:network:NetworkInterface"},"random-string":{"type":"random:RandomString","properties":{"upper":"","length":"8","special":""}},"resource-group":{"type":"azure-native:resources:ResourceGroup"},"public-ip":{"type":"azure-native:network:PublicIPAddress","properties":{"publicIPAllocationMethod":"Dynamic","resourceGroupName":"${resource-group.name}","dnsSettings":{"domainNameLabel":"${dnsName}"}}},"network":{"type":"azure-native:network:VirtualNetwork","properties":{"resourceGroupName":"${resource-group.name}","addressSpace":{"addressPrefixes":["10.0.0.0/16"]},"subnets":[{"name":"default","addressPrefix":"10.0.1.0/24"}]}},"security-group":{"type":"azure-native:network:NetworkSecurityGroup","properties":{"resourceGroupName":"${resource-group.name}","securityRules":[{"name":"${vmName}-securityrule","access":"Allow","destinationPortRanges":[{"fn::toJSON":"${servicePort}"},"22"],"direction":"Inbound","destinationAddressPrefix":"*","sourceAddressPrefix":"*","protocol":"Tcp","priority":"1000","sourcePortRange":"*"}]}},"ssh-key":{"properties":{"algorithm":"RSA","rsaBits":"4096"},"type":"tls:PrivateKey"},"vm":{"properties":{"resourceGroupName":"${resource-group.name}","storageProfile":{"osDisk":{"createOption":"FromImage","name":"${vmName}-osdisk"},"imageReference":{"sku":"${osImageSku}","version":"${osImageVersion}","offer":"${osImageOffer}","publisher":"${osImagePublisher}"}},"networkProfile":{"networkInterfaces":[{"id":"${network-interface.id}","primary":"1"}]},"hardwareProfile":{"vmSize":"${vmSize}"},"osProfile":{"computerName":"${vmName}","linuxConfiguration":{"ssh":{"publicKeys":[{"keyData":"${ssh-key.publicKeyOpenssh}","path":"/home/${adminUsername}/.ssh/authorized_keys"}]},"disablePasswordAuthentication":"1"},"customData":"${initScript}","adminUsername":"${adminUsername}"}},"type":"azure-native:compute:VirtualMachine"}},"outputs":{"privatekey":"${ssh-key.privateKeyOpenssh}","ip":"${address.ipAddress}","url":"http://${address.dnsSettings.fqdn}:${servicePort}","hostname":"${address.dnsSettings.fqdn}"},"description":"${DESCRIPTION}","runtime":"yaml","name":"${PROJECT}"}
{"runtime": "nodejs", "name": "example", "description": "example"}
{"description":"Postgres managed database","name":"postgres","runtime":"nodejs"}
{"name": "dev_account", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"name":"l2-invoke-variants","runtime":{"options":{"typechecker":"pyright","virtualenv":"venv"},"name":"python"}}
{"runtime":"nodejs","name":"s3-cloudfront","description":"A minimal AWS TypeScript Pulumi program"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Policy on untagged image", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":{"name":"scala"},"description":"Besom cross stack references source stack","name":"target-stack-test"}
{"resources":{"ssh_key":{"type":"hcloud:index/sshKey:SshKey","properties":{"publicKey":"${private_key.publicKeyOpenssh}"}},"server":{"properties":{"serverType":"cx22","sshKeys":["${ssh_key.id}"],"image":"ubuntu-20.04"},"type":"hcloud:index/server:Server"},"private_key":{"properties":{"algorithm":"ED25519"},"type":"tls:PrivateKey"}},"config":{"pulumi:tags":{"value":{"pulumi:template":"https://www.pulumi.com/ai/api/project/1496c4f3-0aa3-4da6-9d00-c8759e30e614.zip"}}},"runtime":"yaml","outputs":{"server_ip":"${server.ipv4Address}"},"name":"index_serveroT5wmFncT0ZX","description":""}
{"runtime":"nodejs","name":"k8s-apps-deploy-container","description":"Build and push image to private registry and create a Deployment from it."}
{"runtime":"java","description":"An example that deploys an IAM user and user policy on AWS.","name":"aws-iam-user-userpolicy-java"}
{"runtime":"nodejs","name":"aws-ec2-sg-nginx-server-typescript","description":"An examples that deploys a simple public facing Nginx server"}
{"description":"${DESCRIPTION}","name":"${PROJECT}","template":{"config":{"gcp:region":{"default":"us-central1","description":"The Google Cloud region to deploy into"},"memory":{"description":"The amount of memory to allocate per container instance","default":"1Gi"},"gcp:project":{"description":"The Google Cloud project to deploy into"},"appPath":{"default":"app","description":"The path to the container application to deploy"},"containerPort":{"default":"8080","description":"The port to expose on the container"},"cpu":{"description":"The number of virtual CPUs to allocate per container instance","default":"1"},"concurrency":{"default":"50","description":"The maximum number of concurrent requests to serve per container instance"}},"description":"A C# program to deploy a containerized service on Google Cloud"},"runtime":"dotnet"}
{"name":"cloud-secrets-provider","description":"A minimal TypeScript Pulumi program","runtime":"nodejs"}
{"description":"A simple example of Google Cloud Run","name":"google-native-cloudrun-ts","runtime":"nodejs"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"Deploys WordPress in ECS Fargate with RDS backend.","name":"wordpress-ecs-rds"}
{"resources":{"exampleNetworkSecurityRule":{"type":"azure:network:NetworkSecurityRule","properties":{"access":"Allow","networkSecurityGroupName":"${exampleNetworkSecurityGroup.name}","sourcePortRange":"*","protocol":"Tcp","destinationPortRange":"*","direction":"Outbound","destinationAddressPrefix":"*","priority":"100","sourceAddressPrefix":"*","resourceGroupName":"${exampleResourceGroup.name}"}},"exampleNetworkSecurityGroup":{"type":"azure:network:NetworkSecurityGroup","properties":{"resourceGroupName":"${exampleResourceGroup.name}","location":"${exampleResourceGroup.location}"}},"examplePublicIp":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","allocationMethod":"Static","ipVersion":"ipv4","tags":{"environment":"Production"},"sku":"basic","location":"${exampleResourceGroup.location}"},"type":"azure:network:PublicIp"},"exampleNetworkInterface":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","ipConfigurations":[{"subnetId":"${exampleSubnet.id}","privateIpAddressAllocation":"Dynamic","name":"internal"}],"location":"${exampleResourceGroup.location}"},"type":"azure:network:NetworkInterface"},"exampleVirtualNetwork":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","addressSpaces":["10.0.0.0/16"],"location":"${exampleResourceGroup.location}"},"type":"azure:network:VirtualNetwork"},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}},"exampleRouteTable":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","location":"${exampleResourceGroup.location}"},"type":"azure:network:RouteTable"},"exampleSubnet":{"type":"azure:network:Subnet","properties":{"addressPrefixes":["10.0.2.0/24"],"resourceGroupName":"${exampleResourceGroup.name}","virtualNetworkName":"${exampleVirtualNetwork.name}"}},"exampleRoute":{"properties":{"addressPrefix":"10.1.0.0/16","resourceGroupName":"${exampleResourceGroup.name}","routeTableName":"${exampleRouteTable.name}","nextHopType":"VnetLocal"},"type":"azure:network:Route"}},"runtime":"yaml","name":"network"}
{"template":null,"description":"The standard Weaveworks Sock Shop demo based on https://github.com/microservices-demo/microservices-demo","name":"sock-shop","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS ThingType Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"resources":{"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}},"examplePublicIp":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","allocationMethod":"Static","location":"${exampleResourceGroup.location}"},"type":"azure:network:PublicIp"},"exampleLoadBalancer":{"type":"azure:lb:LoadBalancer","properties":{"location":"${exampleResourceGroup.location}","sku":"Basic","frontendIpConfigurations":[{"name":"PublicIPAddress","publicIpAddressId":"${examplePublicIp.id}"}],"resourceGroupName":"${exampleResourceGroup.name}"}}},"name":"loadbalancer","runtime":"yaml"}
{"runtime":"dotnet","name":"docker-640","description":"A minimal C# Pulumi program reproducing pulumi/pulumi-docker/issues/640"}
{"main":"pulumi/","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.","runtime":"nodejs","name":"pinterestClone"}
{"name": "warmup-bootstrap", "runtime": "nodejs", "description": "Bootstrap a self-syncing Pulumi Kubernetes operator"}
{"description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API.","name":"pinterestClone","main":"pulumi/","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "With Schema", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"l2-invoke-options-depends-on"}
{"name":"azure-go-aci","description":"Creates Azure Container Instance with a public IP","runtime":"go"}
{"runtime":"nodejs","name":"fargate_component","description":"A minimal AWS TypeScript Pulumi program"}
{"runtime":"nodejs","name":"aws-import-export-pulumi-config-typescript","description":"An example that retrieves and exports a Pulumi config value","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-typescript"}}}}
{"name": "cloud", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"aws_sns_topic_Topic_1","runtime":"yaml","resources":{"user_updates":{"type":"aws:sns:Topic","properties":{"name":"user-updates-topic"}}}}
{"runtime":"nodejs","description":"Tests SSA previews with apply on status subresource","name":"preview-apply-tests"}
{"runtime":"nodejs","name":"pulumi-aws-removal-policy","description":"removal-policy integration test"}
{"template":{"config":{"useLoadBalancer":{"default":"1","description":"Whether to use a load balancer"}}},"name":"guestbook-easy","description":"Kubernetes Guestbook example based on https://kubernetes.io/docs/tutorials/stateless-application/guestbook/","runtime":"scala"}
{"runtime":"scala","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:zone":{"default":"us-central1-a","description":"The Google Cloud zone"}}},"description":"A minimal Google Cloud Scala Pulumi program","name":"gcp-static-page"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"An example that deploys an API Gateway REST API with a custom domain from Route53.","name":"awsx-apigateway-custom-domain-python"}
{"description":"eks example for CDK","name":"eks","runtime":"nodejs"}
{"name": "pulumi-setup-aws-iam-with-golang", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"resources":{"alb":{"type":"awsx:lb:ApplicationLoadBalancer","properties":{"listener":{"port":"80"},"internal":"1"}}},"outputs":{"endpoint":"${alb.loadBalancer.dnsName}"},"description":"An example that deploys an ApplicationLoadBalancer listening on a private subnet.","runtime":"yaml","name":"awsx-elb-private-subnet-yaml"}
{"name":"pulumi-python-venv","main":"infra","runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"A simple Python Pulumi program that needs a venv to run."}
{"name": "Infrastructure", "runtime": "go", "description": "Deploy kinesis, lambda and put data to an S3"}
{"name":"command-lambda-ts","runtime":"nodejs","template":{"config":{"aws:region":{"default":"us-east-2","description":"The AWS region to deploy into"}}},"description":"Examples of build Lambdas from Typescript"}
{"description":"A Python Pulumi Program","name":"oidc-test","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Add metrics configuration with S3 bucket object filter", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"runtime":"nodejs","name":"vpc","description":"A simple vpc demo."}
{"runtime":"yaml","name":"l2-ref-ref"}
{"name":"l2-failed-create-continue-on-error","runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}}}
{"name": "kubelumi", "runtime": "go", "description": "A minimal AWS Go Pulumi program"}
{"runtime":{"name":"python","options":{"typechecker":"mypy","virtualenv":"venv"}},"name":"l1-stack-reference"}
{"runtime":"nodejs","description":"Ensure getEngineVersionOutput handles nil values","name":"rds"}
{"runtime":"nodejs","name":"npm-workspaces","description":"This project is not part of the npm/yarn workspaces setup in the parent directory's package.json."}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "java", "template": {"description": "A minimal Java Pulumi program with Maven builds"}}
{"config":{"aws:region":{"value":"us-west-2"}},"name":"tf","runtime":"go"}
{"runtime":"nodejs","name":"ship","description":"Infrastructure as Code tool based on Pulumi for Digital Ocean Apps"}
{"name":"pinterestClone","runtime":"nodejs","main":"pulumi/","description":"Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" GraphQL API."}
{"name":"webserver-gcp","description":"Basic example of an Google Cloud web server accessible over HTTP","runtime":"go","template":{"config":{"gcp:project":{"description":"The Google Cloud project to deploy into"},"gcp:zone":{"default":"us-central1-a","description":"The Google Cloud zone"}}}}
{"name":"eks-auto-mode","runtime":"nodejs","description":"EKS Cluster in auto mode"}
{"description":"route53 integration test","name":"pulumi-aws-route53","runtime":"nodejs"}
{"description":"A program that relinquishes a resource without deleting it","name":"read_relinquish","runtime":"nodejs"}
{"name":"storage","runtime":"yaml","resources":{"exampleBlob":{"properties":{"storageAccountName":"${exampleAccount.name}","type":"Block","source":{"fn::stringAsset":"foo"},"storageContainerName":"${exampleContainer.name}"},"type":"azure:storage:Blob"},"exampleContainer":{"type":"azure:storage:Container","properties":{"storageAccountName":"${exampleAccount.name}","containerAccessType":"private"}},"exampleResourceGroup":{"type":"azure:core:ResourceGroup","properties":{"location":"East US"}},"exampleAccount":{"type":"azure:storage:Account","properties":{"location":"${exampleResourceGroup.location}","accountReplicationType":"LRS","resourceGroupName":"${exampleResourceGroup.name}","accountTier":"Standard","tags":{"environment":"staging"}}}}}
{"description":"An example that deploys the resource definition for an imported IAM role on AWS.","runtime":"dotnet","name":"aws-import-iac-iam-role-csharp","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-csharp"}}}}
{"name":"${PROJECT}","template":{"description":"A minimal Pinecone Python Pulumi program"},"description":"${DESCRIPTION}","runtime":{"name":"python","options":{"virtualenv":"venv"}}}
{"name":"pulumi-aws-cdk-apigateway","runtime":"nodejs","description":"apigateway integration test"}
{"config":{"pulumi:tags":{"value":{"pulumi:template":"kubernetes-javascript"}}},"name":"helm-kubernetes-javascript","description":"A minimal Kubernetes JavaScript Pulumi program","runtime":{"options":{"typescript":"","packagemanager":"npm"},"name":"nodejs"}}
{"runtime":"nodejs","name":"awsx-elb-web-listener-typescript","description":"An example that deploys an ApplicationLoadBalancer listening on port 80."}
{"runtime":"nodejs","description":"A program to test policy packs with enforcement levels set on the policy pack and individual policies.","name":"enforcementlevel"}
{"runtime":"python","description":"A program that constructs remote component resources with first class provider.","name":"construct_component_provider_py","config":{"pulumi:disable-default-providers":["*"]}}
{"name":"repo-py","description":"Creating a GitHub Repository in Python","runtime":"python"}
{"plugins":{"providers":[{"name":"xyz","path":"../../bin"}]},"outputs":{"output":{"value":"${myRandomResource.result}"}},"name":"provider-xyz-native","runtime":"yaml","resources":{"myRandomResource":{"properties":{"length":"24"},"type":"xyz:Random"},"myRandomComponent":{"type":"xyz:RandomComponent","properties":{"length":"24"}}}}
{"runtime":"go","description":"An example that deploys a storage bucket and uploads a file on Google Cloud.","name":"gcp-storage-bucket-object-go","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-go"}}}}
{"name": "hexhive-db", "runtime": "nodejs", "description": "A minimal AWS TypeScript Pulumi program"}
{"name":"awsx-vpc-azs-python","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"An example that creates a new VPC and configuring availability zones."}
{"runtime":"yaml","resources":{"random":{"type":"random:RandomString","properties":{"length":"8","upper":"","overrideSpecial":"-","special":"1"}},"examplesql":{"properties":{"administratorLogin":"4dm1n157r470r","version":"12.0","resourceGroupName":"${exampleResourceGroup.name}","location":"${exampleResourceGroup.location}","administratorLoginPassword":"4-v3ry-53cr37-p455w0rd","tags":{"environment":"production"}},"type":"azure:sql:SqlServer"},"exampleDatabase":{"properties":{"serverName":"${examplesql.name}","resourceGroupName":"${exampleResourceGroup.name}","tags":{"environment":"production"},"location":"${exampleResourceGroup.location}"},"type":"azure:sql:Database"},"exampleResourceGroup":{"properties":{"location":"West US"},"type":"azure:core:ResourceGroup"},"exampleAccount":{"properties":{"resourceGroupName":"${exampleResourceGroup.name}","accountReplicationType":"LRS","location":"${exampleResourceGroup.location}","accountTier":"Standard"},"type":"azure:storage:Account"},"exampleFwRule":{"type":"azure:sql:FirewallRule","properties":{"resourceGroupName":"${exampleResourceGroup.name}","startIpAddress":"10.0.17.62","endIpAddress":"10.0.17.62","serverName":"${examplesql.name}"}}},"name":"sql"}
{"description":"A minimal Google Cloud TypeScript Pulumi program","runtime":"nodejs","name":"gcr-build-image"}
{"runtime":"nodejs","description":"A minimal TypeScript Pulumi program","name":"ts-many-resources"}
{"name": "pinterestClone", "runtime": "nodejs", "description": "Represents cloud infrastructure needed for hosting the \"Pinterest Clone\" React application.", "main": "pulumi/"}
{"runtime":"python","name":"construct_component_failures_py","description":"A program that constructs remote component resources with a constructor that returns an error."}
{"description":"A program that tests YAML functionality in the Python SDK","name":"yaml-test","runtime":"python"}
{"name":"test","runtime":{"name":"yaml"},"resources":{"tested-resource":{"options":{"provider":"${provider}"},"properties":{"username":"mydbuser","skipFinalSnapshot":"1","instanceClass":"db.t4g.micro","name":"mydbname","password":"mypassword","engine":"postgres","allocatedStorage":"30"},"type":"aws:rds/instance:Instance"},"provider":{"type":"pulumi:providers:aws","options":{"version":"5.42.0"}}}}
{"name":"l2-invoke-secrets","runtime":"yaml"}
{"name":"${PROJECT}","template":{"description":"A TypeScript program to deploy a static website on AWS","config":{"aws:region":{"default":"us-west-2","description":"The AWS region to deploy into"},"errorDocument":{"description":"The file to use for error pages","default":"error.html"},"indexDocument":{"description":"The file to use for top-level pages","default":"index.html"},"path":{"description":"The path to the folder containing the website","default":"./www"}}},"description":"${DESCRIPTION}","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "nodejs", "description": "${DESCRIPTION}", "template": {"description": "Alias record", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"${DESCRIPTION}","template":{"description":"A minimal Scaleway TypeScript program","config":{"scaleway:project_id":{"description":"The Scaleway project ID"},"scaleway:region":{"default":"fr-par","description":"The Scaleway region to deploy into"}}},"name":"${PROJECT}","runtime":"nodejs"}
{"description":"An example that deploys a simulated database server and database resource","runtime":"go","name":"aws-simulated-dbserver-database-go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}}}
{"description":"A minimal TypeScript Pulumi program","name":"bucket-ts","runtime":"nodejs"}
{"runtime":"nodejs","name":"awsguard-test-compute","description":"Tests for policy rules related to AWS Compute."}
{"runtime":"nodejs","main":"pulumi/","name":"api","description":"Represents cloud infrastructure needed for supporting your project's (GraphQL) API."}
{"name":"l1-output-array","runtime":{"options":{"virtualenv":"venv","typechecker":"pyright"},"name":"python"}}
{"name":"webserver-go","description":"Basic example of an AWS web server accessible over HTTP.","runtime":"go"}
{"name": "${PROJECT}", "description": "${DESCRIPTION}", "runtime": "go", "template": {"description": "A Go program to deploy a containerized service on Google Cloud", "config": {"gcp:region": {"description": "The Google Cloud region to deploy into", "default": "us-central1"}, "gcp:project": {"description": "The Google Cloud project to deploy into"}, "appPath": {"description": "The path to the container application to deploy", "default": "app"}, "containerPort": {"description": "The port to expose on the container", "default": 8080}, "cpu": {"description": "The number of virtual CPUs to allocate per container instance", "default": 1}, "memory": {"description": "The amount of memory to allocate per container instance", "default": "1Gi"}, "concurrency": {"description": "The maximum number of concurrent requests to serve per container instance", "default": 50}}}}
{"runtime":"nodejs","name":"k8s-az-apps-svcs","description":"Creates Application Services for an AKS cluster."}
{"template":{"config":{"aws:region":{"default":"us-east-1","description":"The AWS region to deploy into"}},"description":"A minimal AWS F# Pulumi program"},"runtime":"dotnet","name":"${PROJECT}","description":"${DESCRIPTION}"}
{"name": "kx-k8s-demo", "runtime": "nodejs", "description": "A Kubernetes App - Deployment, Service, Ingress"}
{"runtime":"dotnet","name":"awsx-vpc-csharp","description":"An example that creates a new VPC using the default settings."}
{"name":"s3_bucket_python","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal Python Pulumi program"}
{"name": "localstate-go", "runtime": "go", "description": "An example demonstrating the Terraform Remote State resource in Go"}
{"runtime":"dotnet","name":"${PROJECT}","template":{"description":"A minimal VB.NET Pulumi program with the classic Azure provider","config":{"azure:location":{"default":"WestUS2","description":"The Azure location to use"},"azure:subscriptionId":{"description":"The Azure Subscription to deploy into"}}},"description":"${DESCRIPTION}"}
{"description":"A minimal Azure Native TypeScript Pulumi program","name":"azure-native-2507","runtime":"nodejs"}
{"name": "${PROJECT}", "runtime": "dotnet", "description": "${DESCRIPTION}", "template": {"description": "An AWS getDefaultKmsKey C# Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"A simple Python Pulumi program that needs a venv to run.","name":"pulumi-python-venv","runtime":"python"}
{"name":"l2-invoke-secrets","runtime":{"options":{"typescript":""},"name":"nodejs"}}
{"name":"swarm-service","runtime":"yaml","resources":{"service":{"properties":{"taskSpec":{"containerSpec":{"image":"nginx"}}},"type":"docker:Service"}}}
{"description":"${DESCRIPTION}","runtime":"nodejs","name":"${PROJECT}","template":{"config":{"planName":{"description":"Name of the plan","default":"SMALL"},"registryName":{"description":"Name of the private registry","default":"my-registry"},"registryUserEmail":{"default":"myuser@ovh.com","description":"Email of the user"},"ovhRegion":{"description":"The OVHcloud region to deploy into","default":"GRA"},"registryUserName":{"default":"user","description":"Name of the user"},"registryUserLogin":{"default":"myuser","description":"Login of the user"},"ovhServiceName":{"description":"The OVHcloud Public Cloud Project to deploy into"}},"description":"A minimal OVHcloud TypeScript Pulumi program"}}
{"name":"crd-previews","resources":{"crd":{"type":"kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition","options":{"provider":"${provider}"},"properties":{"spec":{"scope":"Namespaced","group":"previewtest.pulumi.com","versions":[{"schema":{"openAPIV3Schema":{"properties":{"spec":{"properties":{"image":{"type":"string"},"cronSpec":{"type":"string"},"testNewField":{"type":"string"}},"type":"object"}},"type":"object"}},"storage":"1","served":"1","name":"v1"}],"conversion":{"strategy":"None"},"names":{"kind":"CronTab","plural":"crontabs","listKind":"CronTabList","singular":"crontab"}},"metadata":{"name":"crontabs.previewtest.pulumi.com"}}},"provider":{"type":"pulumi:providers:kubernetes"}},"runtime":"yaml"}
{"name":"python_eks_platform_cluster","runtime":{"options":{"virtualenv":"venv"},"name":"python"},"description":"A minimal AWS Python Pulumi program"}
{"resources":{"testedResource":{"properties":{"timeoutSec":"1","checkIntervalSec":"1","requestPath":"/health_check"},"type":"gcp:compute:HttpHealthCheck"}},"name":"test-http-autonaming","runtime":{"name":"yaml"}}
{"runtime":"go","config":{"namespace":{"description":"the release namespace","type":"string"},"version":{"type":"string","description":"the chart version"},"name":{"description":"the release name","type":"string"},"chart":{"description":"the chart specification","type":"string"},"values":{"type":"string","description":"the chart values"},"repo":{"description":"the chart repository URL","default":"","type":"string"}},"name":"go_helm_release_import","description":"Test import support for Kubernetes Helm Release resource."}
{"runtime":"dotnet","name":"runtime_error","description":"A minimal C# Pulumi program"}
{"description":"An example that creates a new VPC with a custom NAT gateway strategy.","runtime":"java","name":"awsx-vpc-nat-gateways-java"}
{"description":"An example that retrieves and exports a Pulumi config value","name":"aws-import-export-pulumi-config-java","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-java"}}},"runtime":"java"}
{"description":"An example that creates a new VPC with a custom security group.","name":"awsx-vpc-security-groups-typescript","runtime":"nodejs"}
{"name":"aks","runtime":"nodejs","description":"Create an Azure Kubernetes Service"}
{"description":"SRC GCP Infrastrucutre","name":"cloudfunctions","runtime":"go"}
{"description":"EKS cluster example","name":"example-cluster","runtime":"nodejs"}
{"runtime":{"name":"python","options":{"typechecker":"pyright","virtualenv":"venv"}},"name":"l1-output-map"}
{"runtime":"nodejs","name":"api-websocket-lambda-dynamodb","description":"api-websocket-lambda-dynamodb CDK example"}
{"name":"aws-iam-role-instanceprofile-go","runtime":"go","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"description":"An example that deploys an IAM role and instance profile on AWS."}
{"name": "hello-pulumi", "runtime": "nodejs", "description": "First example with pulumi"}
{"name":"aws-lambda-stepfunctions-jsonhelper-go","description":"An example that creates a Lambda function and Step Function to demonstrate the JSON stringify helper","config":{"pulumi:tags":{"value":{"pulumi:template":"aws-go"}}},"runtime":"go"}
{"runtime":{"name":"python","options":{"virtualenv":"venv"}},"description":"Basic example of load balanced droplets on DigitalOcean in Python","name":"digitalocean-py-loadbalanced-droplets"}
{"description":"A minimal Python Pulumi program","runtime":{"options":{"virtualenv":"/Users/marcboorshtein/Documents/bookv3/venv"},"name":"python"},"name":"kube-enterprise-3-idp","config":{"pulumi:tags":{"value":{"pulumi:template":"python"}}}}
{"name":"l1-stack-reference","runtime":{"name":"python","options":{"virtualenv":"venv","typechecker":"pyright"}}}
{"name":"cbp-gcp-csharp","runtime":"dotnet","description":"An example of building/publishing a Docker container image to Google Cloud GCR"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "S3 Destination", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"name":"awsx-ecr-image-javascript","runtime":{"name":"nodejs","options":{"typescript":""}}}
{"name": "asterion-wordpress", "runtime": {"name": "python", "options": {"virtualenv": "venv"}}, "description": "A kubernetes pulumi program to deploy wordpress.", "stackConfigDir": "config/"}
{"name":"likecoin-skynet","runtime":"go","main":"cmd/deploy","description":"likecoin-skynet-deployment"}
{"runtime":"nodejs","description":"A simple example to demonstrate retrieving client config used by the provider.","name":"get-client-config"}
{"name":"immutability","resources":{"configmap":{"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${provider}"},"properties":{"immutable":"1","metadata":{"name":"configmap"},"data":{"bar":"bar"}}},"mutable-configmap-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${mutable-configmap.metadata.name}"}}},"autonamed-secret-downstream":{"properties":{"keepers":{"upstream":"${autonamed-secret.metadata.name}"}},"type":"random:RandomPet"},"autonamed-configmap-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${autonamed-configmap.metadata.name}"}}},"mutable-secret-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${mutable-secret.metadata.name}"}}},"autonamed-configmap":{"type":"kubernetes:core/v1:ConfigMap","options":{"provider":"${provider}"},"properties":{"data":{"bar":"bar"},"immutable":"1"}},"configmap-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${configmap.metadata.name}"}}},"ns":{"type":"kubernetes:core/v1:Namespace"},"secret":{"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:Secret","properties":{"metadata":{"name":"secret"},"stringData":{"bar":"bar"},"immutable":"1"}},"secret-downstream":{"type":"random:RandomPet","properties":{"keepers":{"upstream":"${secret.metadata.name}"}}},"autonamed-secret":{"properties":{"stringData":{"bar":"bar"},"immutable":"1"},"type":"kubernetes:core/v1:Secret","options":{"provider":"${provider}"}},"provider":{"type":"pulumi:providers:kubernetes","properties":{"enableSecretMutable":"1","namespace":"${ns.metadata.name}","enableConfigMapMutable":"1"}},"mutable-secret":{"type":"kubernetes:core/v1:Secret","options":{"provider":"${provider}"},"properties":{"stringData":{"bar":"bar"}}},"mutable-configmap":{"properties":{"data":{"bar":"bar"}},"options":{"provider":"${provider}"},"type":"kubernetes:core/v1:ConfigMap"}},"outputs":{"mutableSecret":"${mutable-secret-downstream.id}","autonamedSecret":"${autonamed-secret-downstream.id}","autonamedConfigmap":"${autonamed-configmap-downstream.id}","configmap":"${configmap-downstream.id}","mutableConfigmap":"${mutable-configmap-downstream.id}","secret":"${secret-downstream.id}"},"description":"Test mutability and immutability for Secrets and ConfigMaps, as well as\nreplacement interactions with downstream dependencies.\n","runtime":"yaml"}
{"resources":{"app":{"properties":{"spec":{"replicas":"1","selector":{"matchLabels":{"app.kubernetes.io/name":"nginx-demo"}},"template":{"metadata":{"labels":{"app.kubernetes.io/name":"nginx-demo"}},"spec":{"containers":[{"name":"app","image":"nginx:1.15-alpine"}]}}},"metadata":{"namespace":"${nginx-demo.metadata.name}"}},"type":"kubernetes:apps/v1:Deployment"},"ingress":{"properties":{"metadata":{"namespace":"${nginx-demo.metadata.name}"},"spec":{"rules":[{"host":"${hostname}","http":{"paths":[{"pathType":"Prefix","backend":{"service":{"port":{"number":"80"},"name":"${service.metadata.name}"}},"path":"/"}]}}]}},"type":"kubernetes:networking.k8s.io/v1:Ingress"},"service":{"type":"kubernetes:core/v1:Service","properties":{"spec":{"type":"ClusterIP","ports":[{"port":"80","protocol":"TCP","targetPort":"80"}],"selector":{"app.kubernetes.io/name":"nginx-demo"}},"metadata":{"namespace":"${nginx-demo.metadata.name}","labels":{"app.kubernetes.io/name":"nginx-demo"}}}},"nginx-demo":{"type":"kubernetes:core/v1:Namespace"}},"config":{"hostname":{"type":"string","default":"example.com"}},"name":"simple-kubernetes","runtime":"yaml"}
{"name": "${PROJECT}", "runtime": "python", "description": "${DESCRIPTION}", "template": {"description": "An AWS GlobalTable Python Pulumi program", "config": {"aws:region": {"description": "The AWS region to deploy into", "default": "us-east-1"}}}}
{"description":"Creates Azure App Service with SQL Database and Application Insights","name":"azure-java-appservice-sql","runtime":"java"}
{"name":"intro","description":"A minimal AWS TypeScript Pulumi program","runtime":"nodejs"}
{"name":"test","resources":{"tested-resource":{"type":"gcp:bigquery:Routine","properties":{"datasetId":"${test.datasetId}","language":"JAVASCRIPT","arguments":[{"dataType":"{\"typeKind\" :  \"FLOAT64\"}","name":"x"},{"name":"y","dataType":"{\"typeKind\" :  \"FLOAT64\"}"}],"returnType":"{\"typeKind\" :  \"FLOAT64\"}","routineId":"routine_id","routineType":"SCALAR_FUNCTION","definitionBody":"CREATE FUNCTION multiplyInputs return x*y;"},"options":{"provider":"${provider}"}},"provider":{"type":"pulumi:providers:gcp","properties":{"project":"${gcp:project}"},"options":{"ignoreChanges":["project","region","zone"],"version":"6.67.0"}},"test":{"type":"gcp:bigquery:Dataset","properties":{"datasetId":"dataset_id"},"options":{"provider":"${provider}"}}},"runtime":{"name":"yaml"}}
{"description":"An example that deploys a storage bucket and uploads a file on Google Cloud.","config":{"pulumi:tags":{"value":{"pulumi:template":"gcp-javascript"}}},"runtime":{"options":{"typescript":"","packagemanager":"npm"},"name":"nodejs"},"name":"gcp-storage-bucket-object-javascript"}
{"runtime":"yaml","name":"l1-stack-reference"}
